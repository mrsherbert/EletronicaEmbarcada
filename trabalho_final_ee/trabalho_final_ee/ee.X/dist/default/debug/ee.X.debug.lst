

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Feb 22 18:48:11 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84     0000                     
    85                           ; Generated 07/09/2023 GMT
    86                           ; 
    87                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC16F1827 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119     0000                     	;# 
   120     0001                     	;# 
   121     0002                     	;# 
   122     0003                     	;# 
   123     0004                     	;# 
   124     0005                     	;# 
   125     0006                     	;# 
   126     0007                     	;# 
   127     0008                     	;# 
   128     0009                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000D                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0095                     	;# 
   155     0096                     	;# 
   156     0097                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009A                     	;# 
   160     009B                     	;# 
   161     009B                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     0111                     	;# 
   168     0112                     	;# 
   169     0113                     	;# 
   170     0114                     	;# 
   171     0115                     	;# 
   172     0116                     	;# 
   173     0117                     	;# 
   174     0118                     	;# 
   175     0119                     	;# 
   176     011A                     	;# 
   177     011B                     	;# 
   178     011D                     	;# 
   179     011E                     	;# 
   180     018C                     	;# 
   181     018D                     	;# 
   182     0191                     	;# 
   183     0191                     	;# 
   184     0192                     	;# 
   185     0193                     	;# 
   186     0193                     	;# 
   187     0193                     	;# 
   188     0194                     	;# 
   189     0195                     	;# 
   190     0196                     	;# 
   191     0199                     	;# 
   192     019A                     	;# 
   193     019B                     	;# 
   194     019B                     	;# 
   195     019B                     	;# 
   196     019B                     	;# 
   197     019C                     	;# 
   198     019C                     	;# 
   199     019D                     	;# 
   200     019E                     	;# 
   201     019F                     	;# 
   202     020C                     	;# 
   203     020D                     	;# 
   204     0211                     	;# 
   205     0211                     	;# 
   206     0212                     	;# 
   207     0212                     	;# 
   208     0213                     	;# 
   209     0213                     	;# 
   210     0214                     	;# 
   211     0214                     	;# 
   212     0215                     	;# 
   213     0215                     	;# 
   214     0215                     	;# 
   215     0216                     	;# 
   216     0216                     	;# 
   217     0217                     	;# 
   218     0217                     	;# 
   219     0219                     	;# 
   220     021A                     	;# 
   221     021B                     	;# 
   222     021C                     	;# 
   223     021D                     	;# 
   224     021E                     	;# 
   225     021F                     	;# 
   226     0291                     	;# 
   227     0291                     	;# 
   228     0292                     	;# 
   229     0293                     	;# 
   230     0294                     	;# 
   231     0295                     	;# 
   232     0295                     	;# 
   233     0296                     	;# 
   234     0298                     	;# 
   235     0298                     	;# 
   236     0299                     	;# 
   237     029A                     	;# 
   238     029B                     	;# 
   239     029C                     	;# 
   240     029C                     	;# 
   241     029D                     	;# 
   242     029E                     	;# 
   243     029E                     	;# 
   244     0311                     	;# 
   245     0311                     	;# 
   246     0312                     	;# 
   247     0313                     	;# 
   248     0318                     	;# 
   249     0318                     	;# 
   250     0319                     	;# 
   251     031A                     	;# 
   252     0394                     	;# 
   253     0395                     	;# 
   254     0396                     	;# 
   255     039A                     	;# 
   256     039C                     	;# 
   257     039D                     	;# 
   258     039E                     	;# 
   259     039F                     	;# 
   260     0415                     	;# 
   261     0416                     	;# 
   262     0417                     	;# 
   263     041C                     	;# 
   264     041D                     	;# 
   265     041E                     	;# 
   266     0FE4                     	;# 
   267     0FE5                     	;# 
   268     0FE6                     	;# 
   269     0FE7                     	;# 
   270     0FE8                     	;# 
   271     0FE9                     	;# 
   272     0FEA                     	;# 
   273     0FEB                     	;# 
   274     0FED                     	;# 
   275     0FEE                     	;# 
   276     0FEF                     	;# 
   277     0000                     	;# 
   278     0001                     	;# 
   279     0002                     	;# 
   280     0003                     	;# 
   281     0004                     	;# 
   282     0005                     	;# 
   283     0006                     	;# 
   284     0007                     	;# 
   285     0008                     	;# 
   286     0009                     	;# 
   287     000A                     	;# 
   288     000B                     	;# 
   289     000C                     	;# 
   290     000D                     	;# 
   291     0011                     	;# 
   292     0012                     	;# 
   293     0013                     	;# 
   294     0014                     	;# 
   295     0015                     	;# 
   296     0016                     	;# 
   297     0016                     	;# 
   298     0017                     	;# 
   299     0018                     	;# 
   300     0019                     	;# 
   301     001A                     	;# 
   302     001B                     	;# 
   303     001C                     	;# 
   304     001E                     	;# 
   305     001F                     	;# 
   306     008C                     	;# 
   307     008D                     	;# 
   308     0091                     	;# 
   309     0092                     	;# 
   310     0093                     	;# 
   311     0094                     	;# 
   312     0095                     	;# 
   313     0096                     	;# 
   314     0097                     	;# 
   315     0098                     	;# 
   316     0099                     	;# 
   317     009A                     	;# 
   318     009B                     	;# 
   319     009B                     	;# 
   320     009C                     	;# 
   321     009D                     	;# 
   322     009E                     	;# 
   323     010C                     	;# 
   324     010D                     	;# 
   325     0111                     	;# 
   326     0112                     	;# 
   327     0113                     	;# 
   328     0114                     	;# 
   329     0115                     	;# 
   330     0116                     	;# 
   331     0117                     	;# 
   332     0118                     	;# 
   333     0119                     	;# 
   334     011A                     	;# 
   335     011B                     	;# 
   336     011D                     	;# 
   337     011E                     	;# 
   338     018C                     	;# 
   339     018D                     	;# 
   340     0191                     	;# 
   341     0191                     	;# 
   342     0192                     	;# 
   343     0193                     	;# 
   344     0193                     	;# 
   345     0193                     	;# 
   346     0194                     	;# 
   347     0195                     	;# 
   348     0196                     	;# 
   349     0199                     	;# 
   350     019A                     	;# 
   351     019B                     	;# 
   352     019B                     	;# 
   353     019B                     	;# 
   354     019B                     	;# 
   355     019C                     	;# 
   356     019C                     	;# 
   357     019D                     	;# 
   358     019E                     	;# 
   359     019F                     	;# 
   360     020C                     	;# 
   361     020D                     	;# 
   362     0211                     	;# 
   363     0211                     	;# 
   364     0212                     	;# 
   365     0212                     	;# 
   366     0213                     	;# 
   367     0213                     	;# 
   368     0214                     	;# 
   369     0214                     	;# 
   370     0215                     	;# 
   371     0215                     	;# 
   372     0215                     	;# 
   373     0216                     	;# 
   374     0216                     	;# 
   375     0217                     	;# 
   376     0217                     	;# 
   377     0219                     	;# 
   378     021A                     	;# 
   379     021B                     	;# 
   380     021C                     	;# 
   381     021D                     	;# 
   382     021E                     	;# 
   383     021F                     	;# 
   384     0291                     	;# 
   385     0291                     	;# 
   386     0292                     	;# 
   387     0293                     	;# 
   388     0294                     	;# 
   389     0295                     	;# 
   390     0295                     	;# 
   391     0296                     	;# 
   392     0298                     	;# 
   393     0298                     	;# 
   394     0299                     	;# 
   395     029A                     	;# 
   396     029B                     	;# 
   397     029C                     	;# 
   398     029C                     	;# 
   399     029D                     	;# 
   400     029E                     	;# 
   401     029E                     	;# 
   402     0311                     	;# 
   403     0311                     	;# 
   404     0312                     	;# 
   405     0313                     	;# 
   406     0318                     	;# 
   407     0318                     	;# 
   408     0319                     	;# 
   409     031A                     	;# 
   410     0394                     	;# 
   411     0395                     	;# 
   412     0396                     	;# 
   413     039A                     	;# 
   414     039C                     	;# 
   415     039D                     	;# 
   416     039E                     	;# 
   417     039F                     	;# 
   418     0415                     	;# 
   419     0416                     	;# 
   420     0417                     	;# 
   421     041C                     	;# 
   422     041D                     	;# 
   423     041E                     	;# 
   424     0FE4                     	;# 
   425     0FE5                     	;# 
   426     0FE6                     	;# 
   427     0FE7                     	;# 
   428     0FE8                     	;# 
   429     0FE9                     	;# 
   430     0FEA                     	;# 
   431     0FEB                     	;# 
   432     0FED                     	;# 
   433     0FEE                     	;# 
   434     0FEF                     	;# 
   435     0000                     	;# 
   436     0001                     	;# 
   437     0002                     	;# 
   438     0003                     	;# 
   439     0004                     	;# 
   440     0005                     	;# 
   441     0006                     	;# 
   442     0007                     	;# 
   443     0008                     	;# 
   444     0009                     	;# 
   445     000A                     	;# 
   446     000B                     	;# 
   447     000C                     	;# 
   448     000D                     	;# 
   449     0011                     	;# 
   450     0012                     	;# 
   451     0013                     	;# 
   452     0014                     	;# 
   453     0015                     	;# 
   454     0016                     	;# 
   455     0016                     	;# 
   456     0017                     	;# 
   457     0018                     	;# 
   458     0019                     	;# 
   459     001A                     	;# 
   460     001B                     	;# 
   461     001C                     	;# 
   462     001E                     	;# 
   463     001F                     	;# 
   464     008C                     	;# 
   465     008D                     	;# 
   466     0091                     	;# 
   467     0092                     	;# 
   468     0093                     	;# 
   469     0094                     	;# 
   470     0095                     	;# 
   471     0096                     	;# 
   472     0097                     	;# 
   473     0098                     	;# 
   474     0099                     	;# 
   475     009A                     	;# 
   476     009B                     	;# 
   477     009B                     	;# 
   478     009C                     	;# 
   479     009D                     	;# 
   480     009E                     	;# 
   481     010C                     	;# 
   482     010D                     	;# 
   483     0111                     	;# 
   484     0112                     	;# 
   485     0113                     	;# 
   486     0114                     	;# 
   487     0115                     	;# 
   488     0116                     	;# 
   489     0117                     	;# 
   490     0118                     	;# 
   491     0119                     	;# 
   492     011A                     	;# 
   493     011B                     	;# 
   494     011D                     	;# 
   495     011E                     	;# 
   496     018C                     	;# 
   497     018D                     	;# 
   498     0191                     	;# 
   499     0191                     	;# 
   500     0192                     	;# 
   501     0193                     	;# 
   502     0193                     	;# 
   503     0193                     	;# 
   504     0194                     	;# 
   505     0195                     	;# 
   506     0196                     	;# 
   507     0199                     	;# 
   508     019A                     	;# 
   509     019B                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019B                     	;# 
   513     019C                     	;# 
   514     019C                     	;# 
   515     019D                     	;# 
   516     019E                     	;# 
   517     019F                     	;# 
   518     020C                     	;# 
   519     020D                     	;# 
   520     0211                     	;# 
   521     0211                     	;# 
   522     0212                     	;# 
   523     0212                     	;# 
   524     0213                     	;# 
   525     0213                     	;# 
   526     0214                     	;# 
   527     0214                     	;# 
   528     0215                     	;# 
   529     0215                     	;# 
   530     0215                     	;# 
   531     0216                     	;# 
   532     0216                     	;# 
   533     0217                     	;# 
   534     0217                     	;# 
   535     0219                     	;# 
   536     021A                     	;# 
   537     021B                     	;# 
   538     021C                     	;# 
   539     021D                     	;# 
   540     021E                     	;# 
   541     021F                     	;# 
   542     0291                     	;# 
   543     0291                     	;# 
   544     0292                     	;# 
   545     0293                     	;# 
   546     0294                     	;# 
   547     0295                     	;# 
   548     0295                     	;# 
   549     0296                     	;# 
   550     0298                     	;# 
   551     0298                     	;# 
   552     0299                     	;# 
   553     029A                     	;# 
   554     029B                     	;# 
   555     029C                     	;# 
   556     029C                     	;# 
   557     029D                     	;# 
   558     029E                     	;# 
   559     029E                     	;# 
   560     0311                     	;# 
   561     0311                     	;# 
   562     0312                     	;# 
   563     0313                     	;# 
   564     0318                     	;# 
   565     0318                     	;# 
   566     0319                     	;# 
   567     031A                     	;# 
   568     0394                     	;# 
   569     0395                     	;# 
   570     0396                     	;# 
   571     039A                     	;# 
   572     039C                     	;# 
   573     039D                     	;# 
   574     039E                     	;# 
   575     039F                     	;# 
   576     0415                     	;# 
   577     0416                     	;# 
   578     0417                     	;# 
   579     041C                     	;# 
   580     041D                     	;# 
   581     041E                     	;# 
   582     0FE4                     	;# 
   583     0FE5                     	;# 
   584     0FE6                     	;# 
   585     0FE7                     	;# 
   586     0FE8                     	;# 
   587     0FE9                     	;# 
   588     0FEA                     	;# 
   589     0FEB                     	;# 
   590     0FED                     	;# 
   591     0FEE                     	;# 
   592     0FEF                     	;# 
   593     0000                     	;# 
   594     0001                     	;# 
   595     0002                     	;# 
   596     0003                     	;# 
   597     0004                     	;# 
   598     0005                     	;# 
   599     0006                     	;# 
   600     0007                     	;# 
   601     0008                     	;# 
   602     0009                     	;# 
   603     000A                     	;# 
   604     000B                     	;# 
   605     000C                     	;# 
   606     000D                     	;# 
   607     0011                     	;# 
   608     0012                     	;# 
   609     0013                     	;# 
   610     0014                     	;# 
   611     0015                     	;# 
   612     0016                     	;# 
   613     0016                     	;# 
   614     0017                     	;# 
   615     0018                     	;# 
   616     0019                     	;# 
   617     001A                     	;# 
   618     001B                     	;# 
   619     001C                     	;# 
   620     001E                     	;# 
   621     001F                     	;# 
   622     008C                     	;# 
   623     008D                     	;# 
   624     0091                     	;# 
   625     0092                     	;# 
   626     0093                     	;# 
   627     0094                     	;# 
   628     0095                     	;# 
   629     0096                     	;# 
   630     0097                     	;# 
   631     0098                     	;# 
   632     0099                     	;# 
   633     009A                     	;# 
   634     009B                     	;# 
   635     009B                     	;# 
   636     009C                     	;# 
   637     009D                     	;# 
   638     009E                     	;# 
   639     010C                     	;# 
   640     010D                     	;# 
   641     0111                     	;# 
   642     0112                     	;# 
   643     0113                     	;# 
   644     0114                     	;# 
   645     0115                     	;# 
   646     0116                     	;# 
   647     0117                     	;# 
   648     0118                     	;# 
   649     0119                     	;# 
   650     011A                     	;# 
   651     011B                     	;# 
   652     011D                     	;# 
   653     011E                     	;# 
   654     018C                     	;# 
   655     018D                     	;# 
   656     0191                     	;# 
   657     0191                     	;# 
   658     0192                     	;# 
   659     0193                     	;# 
   660     0193                     	;# 
   661     0193                     	;# 
   662     0194                     	;# 
   663     0195                     	;# 
   664     0196                     	;# 
   665     0199                     	;# 
   666     019A                     	;# 
   667     019B                     	;# 
   668     019B                     	;# 
   669     019B                     	;# 
   670     019B                     	;# 
   671     019C                     	;# 
   672     019C                     	;# 
   673     019D                     	;# 
   674     019E                     	;# 
   675     019F                     	;# 
   676     020C                     	;# 
   677     020D                     	;# 
   678     0211                     	;# 
   679     0211                     	;# 
   680     0212                     	;# 
   681     0212                     	;# 
   682     0213                     	;# 
   683     0213                     	;# 
   684     0214                     	;# 
   685     0214                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0215                     	;# 
   689     0216                     	;# 
   690     0216                     	;# 
   691     0217                     	;# 
   692     0217                     	;# 
   693     0219                     	;# 
   694     021A                     	;# 
   695     021B                     	;# 
   696     021C                     	;# 
   697     021D                     	;# 
   698     021E                     	;# 
   699     021F                     	;# 
   700     0291                     	;# 
   701     0291                     	;# 
   702     0292                     	;# 
   703     0293                     	;# 
   704     0294                     	;# 
   705     0295                     	;# 
   706     0295                     	;# 
   707     0296                     	;# 
   708     0298                     	;# 
   709     0298                     	;# 
   710     0299                     	;# 
   711     029A                     	;# 
   712     029B                     	;# 
   713     029C                     	;# 
   714     029C                     	;# 
   715     029D                     	;# 
   716     029E                     	;# 
   717     029E                     	;# 
   718     0311                     	;# 
   719     0311                     	;# 
   720     0312                     	;# 
   721     0313                     	;# 
   722     0318                     	;# 
   723     0318                     	;# 
   724     0319                     	;# 
   725     031A                     	;# 
   726     0394                     	;# 
   727     0395                     	;# 
   728     0396                     	;# 
   729     039A                     	;# 
   730     039C                     	;# 
   731     039D                     	;# 
   732     039E                     	;# 
   733     039F                     	;# 
   734     0415                     	;# 
   735     0416                     	;# 
   736     0417                     	;# 
   737     041C                     	;# 
   738     041D                     	;# 
   739     041E                     	;# 
   740     0FE4                     	;# 
   741     0FE5                     	;# 
   742     0FE6                     	;# 
   743     0FE7                     	;# 
   744     0FE8                     	;# 
   745     0FE9                     	;# 
   746     0FEA                     	;# 
   747     0FEB                     	;# 
   748     0FED                     	;# 
   749     0FEE                     	;# 
   750     0FEF                     	;# 
   751     0000                     	;# 
   752     0001                     	;# 
   753     0002                     	;# 
   754     0003                     	;# 
   755     0004                     	;# 
   756     0005                     	;# 
   757     0006                     	;# 
   758     0007                     	;# 
   759     0008                     	;# 
   760     0009                     	;# 
   761     000A                     	;# 
   762     000B                     	;# 
   763     000C                     	;# 
   764     000D                     	;# 
   765     0011                     	;# 
   766     0012                     	;# 
   767     0013                     	;# 
   768     0014                     	;# 
   769     0015                     	;# 
   770     0016                     	;# 
   771     0016                     	;# 
   772     0017                     	;# 
   773     0018                     	;# 
   774     0019                     	;# 
   775     001A                     	;# 
   776     001B                     	;# 
   777     001C                     	;# 
   778     001E                     	;# 
   779     001F                     	;# 
   780     008C                     	;# 
   781     008D                     	;# 
   782     0091                     	;# 
   783     0092                     	;# 
   784     0093                     	;# 
   785     0094                     	;# 
   786     0095                     	;# 
   787     0096                     	;# 
   788     0097                     	;# 
   789     0098                     	;# 
   790     0099                     	;# 
   791     009A                     	;# 
   792     009B                     	;# 
   793     009B                     	;# 
   794     009C                     	;# 
   795     009D                     	;# 
   796     009E                     	;# 
   797     010C                     	;# 
   798     010D                     	;# 
   799     0111                     	;# 
   800     0112                     	;# 
   801     0113                     	;# 
   802     0114                     	;# 
   803     0115                     	;# 
   804     0116                     	;# 
   805     0117                     	;# 
   806     0118                     	;# 
   807     0119                     	;# 
   808     011A                     	;# 
   809     011B                     	;# 
   810     011D                     	;# 
   811     011E                     	;# 
   812     018C                     	;# 
   813     018D                     	;# 
   814     0191                     	;# 
   815     0191                     	;# 
   816     0192                     	;# 
   817     0193                     	;# 
   818     0193                     	;# 
   819     0193                     	;# 
   820     0194                     	;# 
   821     0195                     	;# 
   822     0196                     	;# 
   823     0199                     	;# 
   824     019A                     	;# 
   825     019B                     	;# 
   826     019B                     	;# 
   827     019B                     	;# 
   828     019B                     	;# 
   829     019C                     	;# 
   830     019C                     	;# 
   831     019D                     	;# 
   832     019E                     	;# 
   833     019F                     	;# 
   834     020C                     	;# 
   835     020D                     	;# 
   836     0211                     	;# 
   837     0211                     	;# 
   838     0212                     	;# 
   839     0212                     	;# 
   840     0213                     	;# 
   841     0213                     	;# 
   842     0214                     	;# 
   843     0214                     	;# 
   844     0215                     	;# 
   845     0215                     	;# 
   846     0215                     	;# 
   847     0216                     	;# 
   848     0216                     	;# 
   849     0217                     	;# 
   850     0217                     	;# 
   851     0219                     	;# 
   852     021A                     	;# 
   853     021B                     	;# 
   854     021C                     	;# 
   855     021D                     	;# 
   856     021E                     	;# 
   857     021F                     	;# 
   858     0291                     	;# 
   859     0291                     	;# 
   860     0292                     	;# 
   861     0293                     	;# 
   862     0294                     	;# 
   863     0295                     	;# 
   864     0295                     	;# 
   865     0296                     	;# 
   866     0298                     	;# 
   867     0298                     	;# 
   868     0299                     	;# 
   869     029A                     	;# 
   870     029B                     	;# 
   871     029C                     	;# 
   872     029C                     	;# 
   873     029D                     	;# 
   874     029E                     	;# 
   875     029E                     	;# 
   876     0311                     	;# 
   877     0311                     	;# 
   878     0312                     	;# 
   879     0313                     	;# 
   880     0318                     	;# 
   881     0318                     	;# 
   882     0319                     	;# 
   883     031A                     	;# 
   884     0394                     	;# 
   885     0395                     	;# 
   886     0396                     	;# 
   887     039A                     	;# 
   888     039C                     	;# 
   889     039D                     	;# 
   890     039E                     	;# 
   891     039F                     	;# 
   892     0415                     	;# 
   893     0416                     	;# 
   894     0417                     	;# 
   895     041C                     	;# 
   896     041D                     	;# 
   897     041E                     	;# 
   898     0FE4                     	;# 
   899     0FE5                     	;# 
   900     0FE6                     	;# 
   901     0FE7                     	;# 
   902     0FE8                     	;# 
   903     0FE9                     	;# 
   904     0FEA                     	;# 
   905     0FEB                     	;# 
   906     0FED                     	;# 
   907     0FEE                     	;# 
   908     0FEF                     	;# 
   909     0000                     	;# 
   910     0001                     	;# 
   911     0002                     	;# 
   912     0003                     	;# 
   913     0004                     	;# 
   914     0005                     	;# 
   915     0006                     	;# 
   916     0007                     	;# 
   917     0008                     	;# 
   918     0009                     	;# 
   919     000A                     	;# 
   920     000B                     	;# 
   921     000C                     	;# 
   922     000D                     	;# 
   923     0011                     	;# 
   924     0012                     	;# 
   925     0013                     	;# 
   926     0014                     	;# 
   927     0015                     	;# 
   928     0016                     	;# 
   929     0016                     	;# 
   930     0017                     	;# 
   931     0018                     	;# 
   932     0019                     	;# 
   933     001A                     	;# 
   934     001B                     	;# 
   935     001C                     	;# 
   936     001E                     	;# 
   937     001F                     	;# 
   938     008C                     	;# 
   939     008D                     	;# 
   940     0091                     	;# 
   941     0092                     	;# 
   942     0093                     	;# 
   943     0094                     	;# 
   944     0095                     	;# 
   945     0096                     	;# 
   946     0097                     	;# 
   947     0098                     	;# 
   948     0099                     	;# 
   949     009A                     	;# 
   950     009B                     	;# 
   951     009B                     	;# 
   952     009C                     	;# 
   953     009D                     	;# 
   954     009E                     	;# 
   955     010C                     	;# 
   956     010D                     	;# 
   957     0111                     	;# 
   958     0112                     	;# 
   959     0113                     	;# 
   960     0114                     	;# 
   961     0115                     	;# 
   962     0116                     	;# 
   963     0117                     	;# 
   964     0118                     	;# 
   965     0119                     	;# 
   966     011A                     	;# 
   967     011B                     	;# 
   968     011D                     	;# 
   969     011E                     	;# 
   970     018C                     	;# 
   971     018D                     	;# 
   972     0191                     	;# 
   973     0191                     	;# 
   974     0192                     	;# 
   975     0193                     	;# 
   976     0193                     	;# 
   977     0193                     	;# 
   978     0194                     	;# 
   979     0195                     	;# 
   980     0196                     	;# 
   981     0199                     	;# 
   982     019A                     	;# 
   983     019B                     	;# 
   984     019B                     	;# 
   985     019B                     	;# 
   986     019B                     	;# 
   987     019C                     	;# 
   988     019C                     	;# 
   989     019D                     	;# 
   990     019E                     	;# 
   991     019F                     	;# 
   992     020C                     	;# 
   993     020D                     	;# 
   994     0211                     	;# 
   995     0211                     	;# 
   996     0212                     	;# 
   997     0212                     	;# 
   998     0213                     	;# 
   999     0213                     	;# 
  1000     0214                     	;# 
  1001     0214                     	;# 
  1002     0215                     	;# 
  1003     0215                     	;# 
  1004     0215                     	;# 
  1005     0216                     	;# 
  1006     0216                     	;# 
  1007     0217                     	;# 
  1008     0217                     	;# 
  1009     0219                     	;# 
  1010     021A                     	;# 
  1011     021B                     	;# 
  1012     021C                     	;# 
  1013     021D                     	;# 
  1014     021E                     	;# 
  1015     021F                     	;# 
  1016     0291                     	;# 
  1017     0291                     	;# 
  1018     0292                     	;# 
  1019     0293                     	;# 
  1020     0294                     	;# 
  1021     0295                     	;# 
  1022     0295                     	;# 
  1023     0296                     	;# 
  1024     0298                     	;# 
  1025     0298                     	;# 
  1026     0299                     	;# 
  1027     029A                     	;# 
  1028     029B                     	;# 
  1029     029C                     	;# 
  1030     029C                     	;# 
  1031     029D                     	;# 
  1032     029E                     	;# 
  1033     029E                     	;# 
  1034     0311                     	;# 
  1035     0311                     	;# 
  1036     0312                     	;# 
  1037     0313                     	;# 
  1038     0318                     	;# 
  1039     0318                     	;# 
  1040     0319                     	;# 
  1041     031A                     	;# 
  1042     0394                     	;# 
  1043     0395                     	;# 
  1044     0396                     	;# 
  1045     039A                     	;# 
  1046     039C                     	;# 
  1047     039D                     	;# 
  1048     039E                     	;# 
  1049     039F                     	;# 
  1050     0415                     	;# 
  1051     0416                     	;# 
  1052     0417                     	;# 
  1053     041C                     	;# 
  1054     041D                     	;# 
  1055     041E                     	;# 
  1056     0FE4                     	;# 
  1057     0FE5                     	;# 
  1058     0FE6                     	;# 
  1059     0FE7                     	;# 
  1060     0FE8                     	;# 
  1061     0FE9                     	;# 
  1062     0FEA                     	;# 
  1063     0FEB                     	;# 
  1064     0FED                     	;# 
  1065     0FEE                     	;# 
  1066     0FEF                     	;# 
  1067     0000                     	;# 
  1068     0001                     	;# 
  1069     0002                     	;# 
  1070     0003                     	;# 
  1071     0004                     	;# 
  1072     0005                     	;# 
  1073     0006                     	;# 
  1074     0007                     	;# 
  1075     0008                     	;# 
  1076     0009                     	;# 
  1077     000A                     	;# 
  1078     000B                     	;# 
  1079     000C                     	;# 
  1080     000D                     	;# 
  1081     0011                     	;# 
  1082     0012                     	;# 
  1083     0013                     	;# 
  1084     0014                     	;# 
  1085     0015                     	;# 
  1086     0016                     	;# 
  1087     0016                     	;# 
  1088     0017                     	;# 
  1089     0018                     	;# 
  1090     0019                     	;# 
  1091     001A                     	;# 
  1092     001B                     	;# 
  1093     001C                     	;# 
  1094     001E                     	;# 
  1095     001F                     	;# 
  1096     008C                     	;# 
  1097     008D                     	;# 
  1098     0091                     	;# 
  1099     0092                     	;# 
  1100     0093                     	;# 
  1101     0094                     	;# 
  1102     0095                     	;# 
  1103     0096                     	;# 
  1104     0097                     	;# 
  1105     0098                     	;# 
  1106     0099                     	;# 
  1107     009A                     	;# 
  1108     009B                     	;# 
  1109     009B                     	;# 
  1110     009C                     	;# 
  1111     009D                     	;# 
  1112     009E                     	;# 
  1113     010C                     	;# 
  1114     010D                     	;# 
  1115     0111                     	;# 
  1116     0112                     	;# 
  1117     0113                     	;# 
  1118     0114                     	;# 
  1119     0115                     	;# 
  1120     0116                     	;# 
  1121     0117                     	;# 
  1122     0118                     	;# 
  1123     0119                     	;# 
  1124     011A                     	;# 
  1125     011B                     	;# 
  1126     011D                     	;# 
  1127     011E                     	;# 
  1128     018C                     	;# 
  1129     018D                     	;# 
  1130     0191                     	;# 
  1131     0191                     	;# 
  1132     0192                     	;# 
  1133     0193                     	;# 
  1134     0193                     	;# 
  1135     0193                     	;# 
  1136     0194                     	;# 
  1137     0195                     	;# 
  1138     0196                     	;# 
  1139     0199                     	;# 
  1140     019A                     	;# 
  1141     019B                     	;# 
  1142     019B                     	;# 
  1143     019B                     	;# 
  1144     019B                     	;# 
  1145     019C                     	;# 
  1146     019C                     	;# 
  1147     019D                     	;# 
  1148     019E                     	;# 
  1149     019F                     	;# 
  1150     020C                     	;# 
  1151     020D                     	;# 
  1152     0211                     	;# 
  1153     0211                     	;# 
  1154     0212                     	;# 
  1155     0212                     	;# 
  1156     0213                     	;# 
  1157     0213                     	;# 
  1158     0214                     	;# 
  1159     0214                     	;# 
  1160     0215                     	;# 
  1161     0215                     	;# 
  1162     0215                     	;# 
  1163     0216                     	;# 
  1164     0216                     	;# 
  1165     0217                     	;# 
  1166     0217                     	;# 
  1167     0219                     	;# 
  1168     021A                     	;# 
  1169     021B                     	;# 
  1170     021C                     	;# 
  1171     021D                     	;# 
  1172     021E                     	;# 
  1173     021F                     	;# 
  1174     0291                     	;# 
  1175     0291                     	;# 
  1176     0292                     	;# 
  1177     0293                     	;# 
  1178     0294                     	;# 
  1179     0295                     	;# 
  1180     0295                     	;# 
  1181     0296                     	;# 
  1182     0298                     	;# 
  1183     0298                     	;# 
  1184     0299                     	;# 
  1185     029A                     	;# 
  1186     029B                     	;# 
  1187     029C                     	;# 
  1188     029C                     	;# 
  1189     029D                     	;# 
  1190     029E                     	;# 
  1191     029E                     	;# 
  1192     0311                     	;# 
  1193     0311                     	;# 
  1194     0312                     	;# 
  1195     0313                     	;# 
  1196     0318                     	;# 
  1197     0318                     	;# 
  1198     0319                     	;# 
  1199     031A                     	;# 
  1200     0394                     	;# 
  1201     0395                     	;# 
  1202     0396                     	;# 
  1203     039A                     	;# 
  1204     039C                     	;# 
  1205     039D                     	;# 
  1206     039E                     	;# 
  1207     039F                     	;# 
  1208     0415                     	;# 
  1209     0416                     	;# 
  1210     0417                     	;# 
  1211     041C                     	;# 
  1212     041D                     	;# 
  1213     041E                     	;# 
  1214     0FE4                     	;# 
  1215     0FE5                     	;# 
  1216     0FE6                     	;# 
  1217     0FE7                     	;# 
  1218     0FE8                     	;# 
  1219     0FE9                     	;# 
  1220     0FEA                     	;# 
  1221     0FEB                     	;# 
  1222     0FED                     	;# 
  1223     0FEE                     	;# 
  1224     0FEF                     	;# 
  1225     0000                     	;# 
  1226     0001                     	;# 
  1227     0002                     	;# 
  1228     0003                     	;# 
  1229     0004                     	;# 
  1230     0005                     	;# 
  1231     0006                     	;# 
  1232     0007                     	;# 
  1233     0008                     	;# 
  1234     0009                     	;# 
  1235     000A                     	;# 
  1236     000B                     	;# 
  1237     000C                     	;# 
  1238     000D                     	;# 
  1239     0011                     	;# 
  1240     0012                     	;# 
  1241     0013                     	;# 
  1242     0014                     	;# 
  1243     0015                     	;# 
  1244     0016                     	;# 
  1245     0016                     	;# 
  1246     0017                     	;# 
  1247     0018                     	;# 
  1248     0019                     	;# 
  1249     001A                     	;# 
  1250     001B                     	;# 
  1251     001C                     	;# 
  1252     001E                     	;# 
  1253     001F                     	;# 
  1254     008C                     	;# 
  1255     008D                     	;# 
  1256     0091                     	;# 
  1257     0092                     	;# 
  1258     0093                     	;# 
  1259     0094                     	;# 
  1260     0095                     	;# 
  1261     0096                     	;# 
  1262     0097                     	;# 
  1263     0098                     	;# 
  1264     0099                     	;# 
  1265     009A                     	;# 
  1266     009B                     	;# 
  1267     009B                     	;# 
  1268     009C                     	;# 
  1269     009D                     	;# 
  1270     009E                     	;# 
  1271     010C                     	;# 
  1272     010D                     	;# 
  1273     0111                     	;# 
  1274     0112                     	;# 
  1275     0113                     	;# 
  1276     0114                     	;# 
  1277     0115                     	;# 
  1278     0116                     	;# 
  1279     0117                     	;# 
  1280     0118                     	;# 
  1281     0119                     	;# 
  1282     011A                     	;# 
  1283     011B                     	;# 
  1284     011D                     	;# 
  1285     011E                     	;# 
  1286     018C                     	;# 
  1287     018D                     	;# 
  1288     0191                     	;# 
  1289     0191                     	;# 
  1290     0192                     	;# 
  1291     0193                     	;# 
  1292     0193                     	;# 
  1293     0193                     	;# 
  1294     0194                     	;# 
  1295     0195                     	;# 
  1296     0196                     	;# 
  1297     0199                     	;# 
  1298     019A                     	;# 
  1299     019B                     	;# 
  1300     019B                     	;# 
  1301     019B                     	;# 
  1302     019B                     	;# 
  1303     019C                     	;# 
  1304     019C                     	;# 
  1305     019D                     	;# 
  1306     019E                     	;# 
  1307     019F                     	;# 
  1308     020C                     	;# 
  1309     020D                     	;# 
  1310     0211                     	;# 
  1311     0211                     	;# 
  1312     0212                     	;# 
  1313     0212                     	;# 
  1314     0213                     	;# 
  1315     0213                     	;# 
  1316     0214                     	;# 
  1317     0214                     	;# 
  1318     0215                     	;# 
  1319     0215                     	;# 
  1320     0215                     	;# 
  1321     0216                     	;# 
  1322     0216                     	;# 
  1323     0217                     	;# 
  1324     0217                     	;# 
  1325     0219                     	;# 
  1326     021A                     	;# 
  1327     021B                     	;# 
  1328     021C                     	;# 
  1329     021D                     	;# 
  1330     021E                     	;# 
  1331     021F                     	;# 
  1332     0291                     	;# 
  1333     0291                     	;# 
  1334     0292                     	;# 
  1335     0293                     	;# 
  1336     0294                     	;# 
  1337     0295                     	;# 
  1338     0295                     	;# 
  1339     0296                     	;# 
  1340     0298                     	;# 
  1341     0298                     	;# 
  1342     0299                     	;# 
  1343     029A                     	;# 
  1344     029B                     	;# 
  1345     029C                     	;# 
  1346     029C                     	;# 
  1347     029D                     	;# 
  1348     029E                     	;# 
  1349     029E                     	;# 
  1350     0311                     	;# 
  1351     0311                     	;# 
  1352     0312                     	;# 
  1353     0313                     	;# 
  1354     0318                     	;# 
  1355     0318                     	;# 
  1356     0319                     	;# 
  1357     031A                     	;# 
  1358     0394                     	;# 
  1359     0395                     	;# 
  1360     0396                     	;# 
  1361     039A                     	;# 
  1362     039C                     	;# 
  1363     039D                     	;# 
  1364     039E                     	;# 
  1365     039F                     	;# 
  1366     0415                     	;# 
  1367     0416                     	;# 
  1368     0417                     	;# 
  1369     041C                     	;# 
  1370     041D                     	;# 
  1371     041E                     	;# 
  1372     0FE4                     	;# 
  1373     0FE5                     	;# 
  1374     0FE6                     	;# 
  1375     0FE7                     	;# 
  1376     0FE8                     	;# 
  1377     0FE9                     	;# 
  1378     0FEA                     	;# 
  1379     0FEB                     	;# 
  1380     0FED                     	;# 
  1381     0FEE                     	;# 
  1382     0FEF                     	;# 
  1383     0000                     	;# 
  1384     0001                     	;# 
  1385     0002                     	;# 
  1386     0003                     	;# 
  1387     0004                     	;# 
  1388     0005                     	;# 
  1389     0006                     	;# 
  1390     0007                     	;# 
  1391     0008                     	;# 
  1392     0009                     	;# 
  1393     000A                     	;# 
  1394     000B                     	;# 
  1395     000C                     	;# 
  1396     000D                     	;# 
  1397     0011                     	;# 
  1398     0012                     	;# 
  1399     0013                     	;# 
  1400     0014                     	;# 
  1401     0015                     	;# 
  1402     0016                     	;# 
  1403     0016                     	;# 
  1404     0017                     	;# 
  1405     0018                     	;# 
  1406     0019                     	;# 
  1407     001A                     	;# 
  1408     001B                     	;# 
  1409     001C                     	;# 
  1410     001E                     	;# 
  1411     001F                     	;# 
  1412     008C                     	;# 
  1413     008D                     	;# 
  1414     0091                     	;# 
  1415     0092                     	;# 
  1416     0093                     	;# 
  1417     0094                     	;# 
  1418     0095                     	;# 
  1419     0096                     	;# 
  1420     0097                     	;# 
  1421     0098                     	;# 
  1422     0099                     	;# 
  1423     009A                     	;# 
  1424     009B                     	;# 
  1425     009B                     	;# 
  1426     009C                     	;# 
  1427     009D                     	;# 
  1428     009E                     	;# 
  1429     010C                     	;# 
  1430     010D                     	;# 
  1431     0111                     	;# 
  1432     0112                     	;# 
  1433     0113                     	;# 
  1434     0114                     	;# 
  1435     0115                     	;# 
  1436     0116                     	;# 
  1437     0117                     	;# 
  1438     0118                     	;# 
  1439     0119                     	;# 
  1440     011A                     	;# 
  1441     011B                     	;# 
  1442     011D                     	;# 
  1443     011E                     	;# 
  1444     018C                     	;# 
  1445     018D                     	;# 
  1446     0191                     	;# 
  1447     0191                     	;# 
  1448     0192                     	;# 
  1449     0193                     	;# 
  1450     0193                     	;# 
  1451     0193                     	;# 
  1452     0194                     	;# 
  1453     0195                     	;# 
  1454     0196                     	;# 
  1455     0199                     	;# 
  1456     019A                     	;# 
  1457     019B                     	;# 
  1458     019B                     	;# 
  1459     019B                     	;# 
  1460     019B                     	;# 
  1461     019C                     	;# 
  1462     019C                     	;# 
  1463     019D                     	;# 
  1464     019E                     	;# 
  1465     019F                     	;# 
  1466     020C                     	;# 
  1467     020D                     	;# 
  1468     0211                     	;# 
  1469     0211                     	;# 
  1470     0212                     	;# 
  1471     0212                     	;# 
  1472     0213                     	;# 
  1473     0213                     	;# 
  1474     0214                     	;# 
  1475     0214                     	;# 
  1476     0215                     	;# 
  1477     0215                     	;# 
  1478     0215                     	;# 
  1479     0216                     	;# 
  1480     0216                     	;# 
  1481     0217                     	;# 
  1482     0217                     	;# 
  1483     0219                     	;# 
  1484     021A                     	;# 
  1485     021B                     	;# 
  1486     021C                     	;# 
  1487     021D                     	;# 
  1488     021E                     	;# 
  1489     021F                     	;# 
  1490     0291                     	;# 
  1491     0291                     	;# 
  1492     0292                     	;# 
  1493     0293                     	;# 
  1494     0294                     	;# 
  1495     0295                     	;# 
  1496     0295                     	;# 
  1497     0296                     	;# 
  1498     0298                     	;# 
  1499     0298                     	;# 
  1500     0299                     	;# 
  1501     029A                     	;# 
  1502     029B                     	;# 
  1503     029C                     	;# 
  1504     029C                     	;# 
  1505     029D                     	;# 
  1506     029E                     	;# 
  1507     029E                     	;# 
  1508     0311                     	;# 
  1509     0311                     	;# 
  1510     0312                     	;# 
  1511     0313                     	;# 
  1512     0318                     	;# 
  1513     0318                     	;# 
  1514     0319                     	;# 
  1515     031A                     	;# 
  1516     0394                     	;# 
  1517     0395                     	;# 
  1518     0396                     	;# 
  1519     039A                     	;# 
  1520     039C                     	;# 
  1521     039D                     	;# 
  1522     039E                     	;# 
  1523     039F                     	;# 
  1524     0415                     	;# 
  1525     0416                     	;# 
  1526     0417                     	;# 
  1527     041C                     	;# 
  1528     041D                     	;# 
  1529     041E                     	;# 
  1530     0FE4                     	;# 
  1531     0FE5                     	;# 
  1532     0FE6                     	;# 
  1533     0FE7                     	;# 
  1534     0FE8                     	;# 
  1535     0FE9                     	;# 
  1536     0FEA                     	;# 
  1537     0FEB                     	;# 
  1538     0FED                     	;# 
  1539     0FEE                     	;# 
  1540     0FEF                     	;# 
  1541     0000                     	;# 
  1542     0001                     	;# 
  1543     0002                     	;# 
  1544     0003                     	;# 
  1545     0004                     	;# 
  1546     0005                     	;# 
  1547     0006                     	;# 
  1548     0007                     	;# 
  1549     0008                     	;# 
  1550     0009                     	;# 
  1551     000A                     	;# 
  1552     000B                     	;# 
  1553     000C                     	;# 
  1554     000D                     	;# 
  1555     0011                     	;# 
  1556     0012                     	;# 
  1557     0013                     	;# 
  1558     0014                     	;# 
  1559     0015                     	;# 
  1560     0016                     	;# 
  1561     0016                     	;# 
  1562     0017                     	;# 
  1563     0018                     	;# 
  1564     0019                     	;# 
  1565     001A                     	;# 
  1566     001B                     	;# 
  1567     001C                     	;# 
  1568     001E                     	;# 
  1569     001F                     	;# 
  1570     008C                     	;# 
  1571     008D                     	;# 
  1572     0091                     	;# 
  1573     0092                     	;# 
  1574     0093                     	;# 
  1575     0094                     	;# 
  1576     0095                     	;# 
  1577     0096                     	;# 
  1578     0097                     	;# 
  1579     0098                     	;# 
  1580     0099                     	;# 
  1581     009A                     	;# 
  1582     009B                     	;# 
  1583     009B                     	;# 
  1584     009C                     	;# 
  1585     009D                     	;# 
  1586     009E                     	;# 
  1587     010C                     	;# 
  1588     010D                     	;# 
  1589     0111                     	;# 
  1590     0112                     	;# 
  1591     0113                     	;# 
  1592     0114                     	;# 
  1593     0115                     	;# 
  1594     0116                     	;# 
  1595     0117                     	;# 
  1596     0118                     	;# 
  1597     0119                     	;# 
  1598     011A                     	;# 
  1599     011B                     	;# 
  1600     011D                     	;# 
  1601     011E                     	;# 
  1602     018C                     	;# 
  1603     018D                     	;# 
  1604     0191                     	;# 
  1605     0191                     	;# 
  1606     0192                     	;# 
  1607     0193                     	;# 
  1608     0193                     	;# 
  1609     0193                     	;# 
  1610     0194                     	;# 
  1611     0195                     	;# 
  1612     0196                     	;# 
  1613     0199                     	;# 
  1614     019A                     	;# 
  1615     019B                     	;# 
  1616     019B                     	;# 
  1617     019B                     	;# 
  1618     019B                     	;# 
  1619     019C                     	;# 
  1620     019C                     	;# 
  1621     019D                     	;# 
  1622     019E                     	;# 
  1623     019F                     	;# 
  1624     020C                     	;# 
  1625     020D                     	;# 
  1626     0211                     	;# 
  1627     0211                     	;# 
  1628     0212                     	;# 
  1629     0212                     	;# 
  1630     0213                     	;# 
  1631     0213                     	;# 
  1632     0214                     	;# 
  1633     0214                     	;# 
  1634     0215                     	;# 
  1635     0215                     	;# 
  1636     0215                     	;# 
  1637     0216                     	;# 
  1638     0216                     	;# 
  1639     0217                     	;# 
  1640     0217                     	;# 
  1641     0219                     	;# 
  1642     021A                     	;# 
  1643     021B                     	;# 
  1644     021C                     	;# 
  1645     021D                     	;# 
  1646     021E                     	;# 
  1647     021F                     	;# 
  1648     0291                     	;# 
  1649     0291                     	;# 
  1650     0292                     	;# 
  1651     0293                     	;# 
  1652     0294                     	;# 
  1653     0295                     	;# 
  1654     0295                     	;# 
  1655     0296                     	;# 
  1656     0298                     	;# 
  1657     0298                     	;# 
  1658     0299                     	;# 
  1659     029A                     	;# 
  1660     029B                     	;# 
  1661     029C                     	;# 
  1662     029C                     	;# 
  1663     029D                     	;# 
  1664     029E                     	;# 
  1665     029E                     	;# 
  1666     0311                     	;# 
  1667     0311                     	;# 
  1668     0312                     	;# 
  1669     0313                     	;# 
  1670     0318                     	;# 
  1671     0318                     	;# 
  1672     0319                     	;# 
  1673     031A                     	;# 
  1674     0394                     	;# 
  1675     0395                     	;# 
  1676     0396                     	;# 
  1677     039A                     	;# 
  1678     039C                     	;# 
  1679     039D                     	;# 
  1680     039E                     	;# 
  1681     039F                     	;# 
  1682     0415                     	;# 
  1683     0416                     	;# 
  1684     0417                     	;# 
  1685     041C                     	;# 
  1686     041D                     	;# 
  1687     041E                     	;# 
  1688     0FE4                     	;# 
  1689     0FE5                     	;# 
  1690     0FE6                     	;# 
  1691     0FE7                     	;# 
  1692     0FE8                     	;# 
  1693     0FE9                     	;# 
  1694     0FEA                     	;# 
  1695     0FEB                     	;# 
  1696     0FED                     	;# 
  1697     0FEE                     	;# 
  1698     0FEF                     	;# 
  1699     0000                     	;# 
  1700     0001                     	;# 
  1701     0002                     	;# 
  1702     0003                     	;# 
  1703     0004                     	;# 
  1704     0005                     	;# 
  1705     0006                     	;# 
  1706     0007                     	;# 
  1707     0008                     	;# 
  1708     0009                     	;# 
  1709     000A                     	;# 
  1710     000B                     	;# 
  1711     000C                     	;# 
  1712     000D                     	;# 
  1713     0011                     	;# 
  1714     0012                     	;# 
  1715     0013                     	;# 
  1716     0014                     	;# 
  1717     0015                     	;# 
  1718     0016                     	;# 
  1719     0016                     	;# 
  1720     0017                     	;# 
  1721     0018                     	;# 
  1722     0019                     	;# 
  1723     001A                     	;# 
  1724     001B                     	;# 
  1725     001C                     	;# 
  1726     001E                     	;# 
  1727     001F                     	;# 
  1728     008C                     	;# 
  1729     008D                     	;# 
  1730     0091                     	;# 
  1731     0092                     	;# 
  1732     0093                     	;# 
  1733     0094                     	;# 
  1734     0095                     	;# 
  1735     0096                     	;# 
  1736     0097                     	;# 
  1737     0098                     	;# 
  1738     0099                     	;# 
  1739     009A                     	;# 
  1740     009B                     	;# 
  1741     009B                     	;# 
  1742     009C                     	;# 
  1743     009D                     	;# 
  1744     009E                     	;# 
  1745     010C                     	;# 
  1746     010D                     	;# 
  1747     0111                     	;# 
  1748     0112                     	;# 
  1749     0113                     	;# 
  1750     0114                     	;# 
  1751     0115                     	;# 
  1752     0116                     	;# 
  1753     0117                     	;# 
  1754     0118                     	;# 
  1755     0119                     	;# 
  1756     011A                     	;# 
  1757     011B                     	;# 
  1758     011D                     	;# 
  1759     011E                     	;# 
  1760     018C                     	;# 
  1761     018D                     	;# 
  1762     0191                     	;# 
  1763     0191                     	;# 
  1764     0192                     	;# 
  1765     0193                     	;# 
  1766     0193                     	;# 
  1767     0193                     	;# 
  1768     0194                     	;# 
  1769     0195                     	;# 
  1770     0196                     	;# 
  1771     0199                     	;# 
  1772     019A                     	;# 
  1773     019B                     	;# 
  1774     019B                     	;# 
  1775     019B                     	;# 
  1776     019B                     	;# 
  1777     019C                     	;# 
  1778     019C                     	;# 
  1779     019D                     	;# 
  1780     019E                     	;# 
  1781     019F                     	;# 
  1782     020C                     	;# 
  1783     020D                     	;# 
  1784     0211                     	;# 
  1785     0211                     	;# 
  1786     0212                     	;# 
  1787     0212                     	;# 
  1788     0213                     	;# 
  1789     0213                     	;# 
  1790     0214                     	;# 
  1791     0214                     	;# 
  1792     0215                     	;# 
  1793     0215                     	;# 
  1794     0215                     	;# 
  1795     0216                     	;# 
  1796     0216                     	;# 
  1797     0217                     	;# 
  1798     0217                     	;# 
  1799     0219                     	;# 
  1800     021A                     	;# 
  1801     021B                     	;# 
  1802     021C                     	;# 
  1803     021D                     	;# 
  1804     021E                     	;# 
  1805     021F                     	;# 
  1806     0291                     	;# 
  1807     0291                     	;# 
  1808     0292                     	;# 
  1809     0293                     	;# 
  1810     0294                     	;# 
  1811     0295                     	;# 
  1812     0295                     	;# 
  1813     0296                     	;# 
  1814     0298                     	;# 
  1815     0298                     	;# 
  1816     0299                     	;# 
  1817     029A                     	;# 
  1818     029B                     	;# 
  1819     029C                     	;# 
  1820     029C                     	;# 
  1821     029D                     	;# 
  1822     029E                     	;# 
  1823     029E                     	;# 
  1824     0311                     	;# 
  1825     0311                     	;# 
  1826     0312                     	;# 
  1827     0313                     	;# 
  1828     0318                     	;# 
  1829     0318                     	;# 
  1830     0319                     	;# 
  1831     031A                     	;# 
  1832     0394                     	;# 
  1833     0395                     	;# 
  1834     0396                     	;# 
  1835     039A                     	;# 
  1836     039C                     	;# 
  1837     039D                     	;# 
  1838     039E                     	;# 
  1839     039F                     	;# 
  1840     0415                     	;# 
  1841     0416                     	;# 
  1842     0417                     	;# 
  1843     041C                     	;# 
  1844     041D                     	;# 
  1845     041E                     	;# 
  1846     0FE4                     	;# 
  1847     0FE5                     	;# 
  1848     0FE6                     	;# 
  1849     0FE7                     	;# 
  1850     0FE8                     	;# 
  1851     0FE9                     	;# 
  1852     0FEA                     	;# 
  1853     0FEB                     	;# 
  1854     0FED                     	;# 
  1855     0FEE                     	;# 
  1856     0FEF                     	;# 
  1857     0000                     	;# 
  1858     0001                     	;# 
  1859     0002                     	;# 
  1860     0003                     	;# 
  1861     0004                     	;# 
  1862     0005                     	;# 
  1863     0006                     	;# 
  1864     0007                     	;# 
  1865     0008                     	;# 
  1866     0009                     	;# 
  1867     000A                     	;# 
  1868     000B                     	;# 
  1869     000C                     	;# 
  1870     000D                     	;# 
  1871     0011                     	;# 
  1872     0012                     	;# 
  1873     0013                     	;# 
  1874     0014                     	;# 
  1875     0015                     	;# 
  1876     0016                     	;# 
  1877     0016                     	;# 
  1878     0017                     	;# 
  1879     0018                     	;# 
  1880     0019                     	;# 
  1881     001A                     	;# 
  1882     001B                     	;# 
  1883     001C                     	;# 
  1884     001E                     	;# 
  1885     001F                     	;# 
  1886     008C                     	;# 
  1887     008D                     	;# 
  1888     0091                     	;# 
  1889     0092                     	;# 
  1890     0093                     	;# 
  1891     0094                     	;# 
  1892     0095                     	;# 
  1893     0096                     	;# 
  1894     0097                     	;# 
  1895     0098                     	;# 
  1896     0099                     	;# 
  1897     009A                     	;# 
  1898     009B                     	;# 
  1899     009B                     	;# 
  1900     009C                     	;# 
  1901     009D                     	;# 
  1902     009E                     	;# 
  1903     010C                     	;# 
  1904     010D                     	;# 
  1905     0111                     	;# 
  1906     0112                     	;# 
  1907     0113                     	;# 
  1908     0114                     	;# 
  1909     0115                     	;# 
  1910     0116                     	;# 
  1911     0117                     	;# 
  1912     0118                     	;# 
  1913     0119                     	;# 
  1914     011A                     	;# 
  1915     011B                     	;# 
  1916     011D                     	;# 
  1917     011E                     	;# 
  1918     018C                     	;# 
  1919     018D                     	;# 
  1920     0191                     	;# 
  1921     0191                     	;# 
  1922     0192                     	;# 
  1923     0193                     	;# 
  1924     0193                     	;# 
  1925     0193                     	;# 
  1926     0194                     	;# 
  1927     0195                     	;# 
  1928     0196                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019B                     	;# 
  1932     019B                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019C                     	;# 
  1936     019C                     	;# 
  1937     019D                     	;# 
  1938     019E                     	;# 
  1939     019F                     	;# 
  1940     020C                     	;# 
  1941     020D                     	;# 
  1942     0211                     	;# 
  1943     0211                     	;# 
  1944     0212                     	;# 
  1945     0212                     	;# 
  1946     0213                     	;# 
  1947     0213                     	;# 
  1948     0214                     	;# 
  1949     0214                     	;# 
  1950     0215                     	;# 
  1951     0215                     	;# 
  1952     0215                     	;# 
  1953     0216                     	;# 
  1954     0216                     	;# 
  1955     0217                     	;# 
  1956     0217                     	;# 
  1957     0219                     	;# 
  1958     021A                     	;# 
  1959     021B                     	;# 
  1960     021C                     	;# 
  1961     021D                     	;# 
  1962     021E                     	;# 
  1963     021F                     	;# 
  1964     0291                     	;# 
  1965     0291                     	;# 
  1966     0292                     	;# 
  1967     0293                     	;# 
  1968     0294                     	;# 
  1969     0295                     	;# 
  1970     0295                     	;# 
  1971     0296                     	;# 
  1972     0298                     	;# 
  1973     0298                     	;# 
  1974     0299                     	;# 
  1975     029A                     	;# 
  1976     029B                     	;# 
  1977     029C                     	;# 
  1978     029C                     	;# 
  1979     029D                     	;# 
  1980     029E                     	;# 
  1981     029E                     	;# 
  1982     0311                     	;# 
  1983     0311                     	;# 
  1984     0312                     	;# 
  1985     0313                     	;# 
  1986     0318                     	;# 
  1987     0318                     	;# 
  1988     0319                     	;# 
  1989     031A                     	;# 
  1990     0394                     	;# 
  1991     0395                     	;# 
  1992     0396                     	;# 
  1993     039A                     	;# 
  1994     039C                     	;# 
  1995     039D                     	;# 
  1996     039E                     	;# 
  1997     039F                     	;# 
  1998     0415                     	;# 
  1999     0416                     	;# 
  2000     0417                     	;# 
  2001     041C                     	;# 
  2002     041D                     	;# 
  2003     041E                     	;# 
  2004     0FE4                     	;# 
  2005     0FE5                     	;# 
  2006     0FE6                     	;# 
  2007     0FE7                     	;# 
  2008     0FE8                     	;# 
  2009     0FE9                     	;# 
  2010     0FEA                     	;# 
  2011     0FEB                     	;# 
  2012     0FED                     	;# 
  2013     0FEE                     	;# 
  2014     0FEF                     	;# 
  2015     0000                     	;# 
  2016     0001                     	;# 
  2017     0002                     	;# 
  2018     0003                     	;# 
  2019     0004                     	;# 
  2020     0005                     	;# 
  2021     0006                     	;# 
  2022     0007                     	;# 
  2023     0008                     	;# 
  2024     0009                     	;# 
  2025     000A                     	;# 
  2026     000B                     	;# 
  2027     000C                     	;# 
  2028     000D                     	;# 
  2029     0011                     	;# 
  2030     0012                     	;# 
  2031     0013                     	;# 
  2032     0014                     	;# 
  2033     0015                     	;# 
  2034     0016                     	;# 
  2035     0016                     	;# 
  2036     0017                     	;# 
  2037     0018                     	;# 
  2038     0019                     	;# 
  2039     001A                     	;# 
  2040     001B                     	;# 
  2041     001C                     	;# 
  2042     001E                     	;# 
  2043     001F                     	;# 
  2044     008C                     	;# 
  2045     008D                     	;# 
  2046     0091                     	;# 
  2047     0092                     	;# 
  2048     0093                     	;# 
  2049     0094                     	;# 
  2050     0095                     	;# 
  2051     0096                     	;# 
  2052     0097                     	;# 
  2053     0098                     	;# 
  2054     0099                     	;# 
  2055     009A                     	;# 
  2056     009B                     	;# 
  2057     009B                     	;# 
  2058     009C                     	;# 
  2059     009D                     	;# 
  2060     009E                     	;# 
  2061     010C                     	;# 
  2062     010D                     	;# 
  2063     0111                     	;# 
  2064     0112                     	;# 
  2065     0113                     	;# 
  2066     0114                     	;# 
  2067     0115                     	;# 
  2068     0116                     	;# 
  2069     0117                     	;# 
  2070     0118                     	;# 
  2071     0119                     	;# 
  2072     011A                     	;# 
  2073     011B                     	;# 
  2074     011D                     	;# 
  2075     011E                     	;# 
  2076     018C                     	;# 
  2077     018D                     	;# 
  2078     0191                     	;# 
  2079     0191                     	;# 
  2080     0192                     	;# 
  2081     0193                     	;# 
  2082     0193                     	;# 
  2083     0193                     	;# 
  2084     0194                     	;# 
  2085     0195                     	;# 
  2086     0196                     	;# 
  2087     0199                     	;# 
  2088     019A                     	;# 
  2089     019B                     	;# 
  2090     019B                     	;# 
  2091     019B                     	;# 
  2092     019B                     	;# 
  2093     019C                     	;# 
  2094     019C                     	;# 
  2095     019D                     	;# 
  2096     019E                     	;# 
  2097     019F                     	;# 
  2098     020C                     	;# 
  2099     020D                     	;# 
  2100     0211                     	;# 
  2101     0211                     	;# 
  2102     0212                     	;# 
  2103     0212                     	;# 
  2104     0213                     	;# 
  2105     0213                     	;# 
  2106     0214                     	;# 
  2107     0214                     	;# 
  2108     0215                     	;# 
  2109     0215                     	;# 
  2110     0215                     	;# 
  2111     0216                     	;# 
  2112     0216                     	;# 
  2113     0217                     	;# 
  2114     0217                     	;# 
  2115     0219                     	;# 
  2116     021A                     	;# 
  2117     021B                     	;# 
  2118     021C                     	;# 
  2119     021D                     	;# 
  2120     021E                     	;# 
  2121     021F                     	;# 
  2122     0291                     	;# 
  2123     0291                     	;# 
  2124     0292                     	;# 
  2125     0293                     	;# 
  2126     0294                     	;# 
  2127     0295                     	;# 
  2128     0295                     	;# 
  2129     0296                     	;# 
  2130     0298                     	;# 
  2131     0298                     	;# 
  2132     0299                     	;# 
  2133     029A                     	;# 
  2134     029B                     	;# 
  2135     029C                     	;# 
  2136     029C                     	;# 
  2137     029D                     	;# 
  2138     029E                     	;# 
  2139     029E                     	;# 
  2140     0311                     	;# 
  2141     0311                     	;# 
  2142     0312                     	;# 
  2143     0313                     	;# 
  2144     0318                     	;# 
  2145     0318                     	;# 
  2146     0319                     	;# 
  2147     031A                     	;# 
  2148     0394                     	;# 
  2149     0395                     	;# 
  2150     0396                     	;# 
  2151     039A                     	;# 
  2152     039C                     	;# 
  2153     039D                     	;# 
  2154     039E                     	;# 
  2155     039F                     	;# 
  2156     0415                     	;# 
  2157     0416                     	;# 
  2158     0417                     	;# 
  2159     041C                     	;# 
  2160     041D                     	;# 
  2161     041E                     	;# 
  2162     0FE4                     	;# 
  2163     0FE5                     	;# 
  2164     0FE6                     	;# 
  2165     0FE7                     	;# 
  2166     0FE8                     	;# 
  2167     0FE9                     	;# 
  2168     0FEA                     	;# 
  2169     0FEB                     	;# 
  2170     0FED                     	;# 
  2171     0FEE                     	;# 
  2172     0FEF                     	;# 
  2173     0000                     	;# 
  2174     0001                     	;# 
  2175     0002                     	;# 
  2176     0003                     	;# 
  2177     0004                     	;# 
  2178     0005                     	;# 
  2179     0006                     	;# 
  2180     0007                     	;# 
  2181     0008                     	;# 
  2182     0009                     	;# 
  2183     000A                     	;# 
  2184     000B                     	;# 
  2185     000C                     	;# 
  2186     000D                     	;# 
  2187     0011                     	;# 
  2188     0012                     	;# 
  2189     0013                     	;# 
  2190     0014                     	;# 
  2191     0015                     	;# 
  2192     0016                     	;# 
  2193     0016                     	;# 
  2194     0017                     	;# 
  2195     0018                     	;# 
  2196     0019                     	;# 
  2197     001A                     	;# 
  2198     001B                     	;# 
  2199     001C                     	;# 
  2200     001E                     	;# 
  2201     001F                     	;# 
  2202     008C                     	;# 
  2203     008D                     	;# 
  2204     0091                     	;# 
  2205     0092                     	;# 
  2206     0093                     	;# 
  2207     0094                     	;# 
  2208     0095                     	;# 
  2209     0096                     	;# 
  2210     0097                     	;# 
  2211     0098                     	;# 
  2212     0099                     	;# 
  2213     009A                     	;# 
  2214     009B                     	;# 
  2215     009B                     	;# 
  2216     009C                     	;# 
  2217     009D                     	;# 
  2218     009E                     	;# 
  2219     010C                     	;# 
  2220     010D                     	;# 
  2221     0111                     	;# 
  2222     0112                     	;# 
  2223     0113                     	;# 
  2224     0114                     	;# 
  2225     0115                     	;# 
  2226     0116                     	;# 
  2227     0117                     	;# 
  2228     0118                     	;# 
  2229     0119                     	;# 
  2230     011A                     	;# 
  2231     011B                     	;# 
  2232     011D                     	;# 
  2233     011E                     	;# 
  2234     018C                     	;# 
  2235     018D                     	;# 
  2236     0191                     	;# 
  2237     0191                     	;# 
  2238     0192                     	;# 
  2239     0193                     	;# 
  2240     0193                     	;# 
  2241     0193                     	;# 
  2242     0194                     	;# 
  2243     0195                     	;# 
  2244     0196                     	;# 
  2245     0199                     	;# 
  2246     019A                     	;# 
  2247     019B                     	;# 
  2248     019B                     	;# 
  2249     019B                     	;# 
  2250     019B                     	;# 
  2251     019C                     	;# 
  2252     019C                     	;# 
  2253     019D                     	;# 
  2254     019E                     	;# 
  2255     019F                     	;# 
  2256     020C                     	;# 
  2257     020D                     	;# 
  2258     0211                     	;# 
  2259     0211                     	;# 
  2260     0212                     	;# 
  2261     0212                     	;# 
  2262     0213                     	;# 
  2263     0213                     	;# 
  2264     0214                     	;# 
  2265     0214                     	;# 
  2266     0215                     	;# 
  2267     0215                     	;# 
  2268     0215                     	;# 
  2269     0216                     	;# 
  2270     0216                     	;# 
  2271     0217                     	;# 
  2272     0217                     	;# 
  2273     0219                     	;# 
  2274     021A                     	;# 
  2275     021B                     	;# 
  2276     021C                     	;# 
  2277     021D                     	;# 
  2278     021E                     	;# 
  2279     021F                     	;# 
  2280     0291                     	;# 
  2281     0291                     	;# 
  2282     0292                     	;# 
  2283     0293                     	;# 
  2284     0294                     	;# 
  2285     0295                     	;# 
  2286     0295                     	;# 
  2287     0296                     	;# 
  2288     0298                     	;# 
  2289     0298                     	;# 
  2290     0299                     	;# 
  2291     029A                     	;# 
  2292     029B                     	;# 
  2293     029C                     	;# 
  2294     029C                     	;# 
  2295     029D                     	;# 
  2296     029E                     	;# 
  2297     029E                     	;# 
  2298     0311                     	;# 
  2299     0311                     	;# 
  2300     0312                     	;# 
  2301     0313                     	;# 
  2302     0318                     	;# 
  2303     0318                     	;# 
  2304     0319                     	;# 
  2305     031A                     	;# 
  2306     0394                     	;# 
  2307     0395                     	;# 
  2308     0396                     	;# 
  2309     039A                     	;# 
  2310     039C                     	;# 
  2311     039D                     	;# 
  2312     039E                     	;# 
  2313     039F                     	;# 
  2314     0415                     	;# 
  2315     0416                     	;# 
  2316     0417                     	;# 
  2317     041C                     	;# 
  2318     041D                     	;# 
  2319     041E                     	;# 
  2320     0FE4                     	;# 
  2321     0FE5                     	;# 
  2322     0FE6                     	;# 
  2323     0FE7                     	;# 
  2324     0FE8                     	;# 
  2325     0FE9                     	;# 
  2326     0FEA                     	;# 
  2327     0FEB                     	;# 
  2328     0FED                     	;# 
  2329     0FEE                     	;# 
  2330     0FEF                     	;# 
  2331     0000                     	;# 
  2332     0001                     	;# 
  2333     0002                     	;# 
  2334     0003                     	;# 
  2335     0004                     	;# 
  2336     0005                     	;# 
  2337     0006                     	;# 
  2338     0007                     	;# 
  2339     0008                     	;# 
  2340     0009                     	;# 
  2341     000A                     	;# 
  2342     000B                     	;# 
  2343     000C                     	;# 
  2344     000D                     	;# 
  2345     0011                     	;# 
  2346     0012                     	;# 
  2347     0013                     	;# 
  2348     0014                     	;# 
  2349     0015                     	;# 
  2350     0016                     	;# 
  2351     0016                     	;# 
  2352     0017                     	;# 
  2353     0018                     	;# 
  2354     0019                     	;# 
  2355     001A                     	;# 
  2356     001B                     	;# 
  2357     001C                     	;# 
  2358     001E                     	;# 
  2359     001F                     	;# 
  2360     008C                     	;# 
  2361     008D                     	;# 
  2362     0091                     	;# 
  2363     0092                     	;# 
  2364     0093                     	;# 
  2365     0094                     	;# 
  2366     0095                     	;# 
  2367     0096                     	;# 
  2368     0097                     	;# 
  2369     0098                     	;# 
  2370     0099                     	;# 
  2371     009A                     	;# 
  2372     009B                     	;# 
  2373     009B                     	;# 
  2374     009C                     	;# 
  2375     009D                     	;# 
  2376     009E                     	;# 
  2377     010C                     	;# 
  2378     010D                     	;# 
  2379     0111                     	;# 
  2380     0112                     	;# 
  2381     0113                     	;# 
  2382     0114                     	;# 
  2383     0115                     	;# 
  2384     0116                     	;# 
  2385     0117                     	;# 
  2386     0118                     	;# 
  2387     0119                     	;# 
  2388     011A                     	;# 
  2389     011B                     	;# 
  2390     011D                     	;# 
  2391     011E                     	;# 
  2392     018C                     	;# 
  2393     018D                     	;# 
  2394     0191                     	;# 
  2395     0191                     	;# 
  2396     0192                     	;# 
  2397     0193                     	;# 
  2398     0193                     	;# 
  2399     0193                     	;# 
  2400     0194                     	;# 
  2401     0195                     	;# 
  2402     0196                     	;# 
  2403     0199                     	;# 
  2404     019A                     	;# 
  2405     019B                     	;# 
  2406     019B                     	;# 
  2407     019B                     	;# 
  2408     019B                     	;# 
  2409     019C                     	;# 
  2410     019C                     	;# 
  2411     019D                     	;# 
  2412     019E                     	;# 
  2413     019F                     	;# 
  2414     020C                     	;# 
  2415     020D                     	;# 
  2416     0211                     	;# 
  2417     0211                     	;# 
  2418     0212                     	;# 
  2419     0212                     	;# 
  2420     0213                     	;# 
  2421     0213                     	;# 
  2422     0214                     	;# 
  2423     0214                     	;# 
  2424     0215                     	;# 
  2425     0215                     	;# 
  2426     0215                     	;# 
  2427     0216                     	;# 
  2428     0216                     	;# 
  2429     0217                     	;# 
  2430     0217                     	;# 
  2431     0219                     	;# 
  2432     021A                     	;# 
  2433     021B                     	;# 
  2434     021C                     	;# 
  2435     021D                     	;# 
  2436     021E                     	;# 
  2437     021F                     	;# 
  2438     0291                     	;# 
  2439     0291                     	;# 
  2440     0292                     	;# 
  2441     0293                     	;# 
  2442     0294                     	;# 
  2443     0295                     	;# 
  2444     0295                     	;# 
  2445     0296                     	;# 
  2446     0298                     	;# 
  2447     0298                     	;# 
  2448     0299                     	;# 
  2449     029A                     	;# 
  2450     029B                     	;# 
  2451     029C                     	;# 
  2452     029C                     	;# 
  2453     029D                     	;# 
  2454     029E                     	;# 
  2455     029E                     	;# 
  2456     0311                     	;# 
  2457     0311                     	;# 
  2458     0312                     	;# 
  2459     0313                     	;# 
  2460     0318                     	;# 
  2461     0318                     	;# 
  2462     0319                     	;# 
  2463     031A                     	;# 
  2464     0394                     	;# 
  2465     0395                     	;# 
  2466     0396                     	;# 
  2467     039A                     	;# 
  2468     039C                     	;# 
  2469     039D                     	;# 
  2470     039E                     	;# 
  2471     039F                     	;# 
  2472     0415                     	;# 
  2473     0416                     	;# 
  2474     0417                     	;# 
  2475     041C                     	;# 
  2476     041D                     	;# 
  2477     041E                     	;# 
  2478     0FE4                     	;# 
  2479     0FE5                     	;# 
  2480     0FE6                     	;# 
  2481     0FE7                     	;# 
  2482     0FE8                     	;# 
  2483     0FE9                     	;# 
  2484     0FEA                     	;# 
  2485     0FEB                     	;# 
  2486     0FED                     	;# 
  2487     0FEE                     	;# 
  2488     0FEF                     	;# 
  2489     0000                     	;# 
  2490     0001                     	;# 
  2491     0002                     	;# 
  2492     0003                     	;# 
  2493     0004                     	;# 
  2494     0005                     	;# 
  2495     0006                     	;# 
  2496     0007                     	;# 
  2497     0008                     	;# 
  2498     0009                     	;# 
  2499     000A                     	;# 
  2500     000B                     	;# 
  2501     000C                     	;# 
  2502     000D                     	;# 
  2503     0011                     	;# 
  2504     0012                     	;# 
  2505     0013                     	;# 
  2506     0014                     	;# 
  2507     0015                     	;# 
  2508     0016                     	;# 
  2509     0016                     	;# 
  2510     0017                     	;# 
  2511     0018                     	;# 
  2512     0019                     	;# 
  2513     001A                     	;# 
  2514     001B                     	;# 
  2515     001C                     	;# 
  2516     001E                     	;# 
  2517     001F                     	;# 
  2518     008C                     	;# 
  2519     008D                     	;# 
  2520     0091                     	;# 
  2521     0092                     	;# 
  2522     0093                     	;# 
  2523     0094                     	;# 
  2524     0095                     	;# 
  2525     0096                     	;# 
  2526     0097                     	;# 
  2527     0098                     	;# 
  2528     0099                     	;# 
  2529     009A                     	;# 
  2530     009B                     	;# 
  2531     009B                     	;# 
  2532     009C                     	;# 
  2533     009D                     	;# 
  2534     009E                     	;# 
  2535     010C                     	;# 
  2536     010D                     	;# 
  2537     0111                     	;# 
  2538     0112                     	;# 
  2539     0113                     	;# 
  2540     0114                     	;# 
  2541     0115                     	;# 
  2542     0116                     	;# 
  2543     0117                     	;# 
  2544     0118                     	;# 
  2545     0119                     	;# 
  2546     011A                     	;# 
  2547     011B                     	;# 
  2548     011D                     	;# 
  2549     011E                     	;# 
  2550     018C                     	;# 
  2551     018D                     	;# 
  2552     0191                     	;# 
  2553     0191                     	;# 
  2554     0192                     	;# 
  2555     0193                     	;# 
  2556     0193                     	;# 
  2557     0193                     	;# 
  2558     0194                     	;# 
  2559     0195                     	;# 
  2560     0196                     	;# 
  2561     0199                     	;# 
  2562     019A                     	;# 
  2563     019B                     	;# 
  2564     019B                     	;# 
  2565     019B                     	;# 
  2566     019B                     	;# 
  2567     019C                     	;# 
  2568     019C                     	;# 
  2569     019D                     	;# 
  2570     019E                     	;# 
  2571     019F                     	;# 
  2572     020C                     	;# 
  2573     020D                     	;# 
  2574     0211                     	;# 
  2575     0211                     	;# 
  2576     0212                     	;# 
  2577     0212                     	;# 
  2578     0213                     	;# 
  2579     0213                     	;# 
  2580     0214                     	;# 
  2581     0214                     	;# 
  2582     0215                     	;# 
  2583     0215                     	;# 
  2584     0215                     	;# 
  2585     0216                     	;# 
  2586     0216                     	;# 
  2587     0217                     	;# 
  2588     0217                     	;# 
  2589     0219                     	;# 
  2590     021A                     	;# 
  2591     021B                     	;# 
  2592     021C                     	;# 
  2593     021D                     	;# 
  2594     021E                     	;# 
  2595     021F                     	;# 
  2596     0291                     	;# 
  2597     0291                     	;# 
  2598     0292                     	;# 
  2599     0293                     	;# 
  2600     0294                     	;# 
  2601     0295                     	;# 
  2602     0295                     	;# 
  2603     0296                     	;# 
  2604     0298                     	;# 
  2605     0298                     	;# 
  2606     0299                     	;# 
  2607     029A                     	;# 
  2608     029B                     	;# 
  2609     029C                     	;# 
  2610     029C                     	;# 
  2611     029D                     	;# 
  2612     029E                     	;# 
  2613     029E                     	;# 
  2614     0311                     	;# 
  2615     0311                     	;# 
  2616     0312                     	;# 
  2617     0313                     	;# 
  2618     0318                     	;# 
  2619     0318                     	;# 
  2620     0319                     	;# 
  2621     031A                     	;# 
  2622     0394                     	;# 
  2623     0395                     	;# 
  2624     0396                     	;# 
  2625     039A                     	;# 
  2626     039C                     	;# 
  2627     039D                     	;# 
  2628     039E                     	;# 
  2629     039F                     	;# 
  2630     0415                     	;# 
  2631     0416                     	;# 
  2632     0417                     	;# 
  2633     041C                     	;# 
  2634     041D                     	;# 
  2635     041E                     	;# 
  2636     0FE4                     	;# 
  2637     0FE5                     	;# 
  2638     0FE6                     	;# 
  2639     0FE7                     	;# 
  2640     0FE8                     	;# 
  2641     0FE9                     	;# 
  2642     0FEA                     	;# 
  2643     0FEB                     	;# 
  2644     0FED                     	;# 
  2645     0FEE                     	;# 
  2646     0FEF                     	;# 
  2647     0000                     	;# 
  2648     0001                     	;# 
  2649     0002                     	;# 
  2650     0003                     	;# 
  2651     0004                     	;# 
  2652     0005                     	;# 
  2653     0006                     	;# 
  2654     0007                     	;# 
  2655     0008                     	;# 
  2656     0009                     	;# 
  2657     000A                     	;# 
  2658     000B                     	;# 
  2659     000C                     	;# 
  2660     000D                     	;# 
  2661     0011                     	;# 
  2662     0012                     	;# 
  2663     0013                     	;# 
  2664     0014                     	;# 
  2665     0015                     	;# 
  2666     0016                     	;# 
  2667     0016                     	;# 
  2668     0017                     	;# 
  2669     0018                     	;# 
  2670     0019                     	;# 
  2671     001A                     	;# 
  2672     001B                     	;# 
  2673     001C                     	;# 
  2674     001E                     	;# 
  2675     001F                     	;# 
  2676     008C                     	;# 
  2677     008D                     	;# 
  2678     0091                     	;# 
  2679     0092                     	;# 
  2680     0093                     	;# 
  2681     0094                     	;# 
  2682     0095                     	;# 
  2683     0096                     	;# 
  2684     0097                     	;# 
  2685     0098                     	;# 
  2686     0099                     	;# 
  2687     009A                     	;# 
  2688     009B                     	;# 
  2689     009B                     	;# 
  2690     009C                     	;# 
  2691     009D                     	;# 
  2692     009E                     	;# 
  2693     010C                     	;# 
  2694     010D                     	;# 
  2695     0111                     	;# 
  2696     0112                     	;# 
  2697     0113                     	;# 
  2698     0114                     	;# 
  2699     0115                     	;# 
  2700     0116                     	;# 
  2701     0117                     	;# 
  2702     0118                     	;# 
  2703     0119                     	;# 
  2704     011A                     	;# 
  2705     011B                     	;# 
  2706     011D                     	;# 
  2707     011E                     	;# 
  2708     018C                     	;# 
  2709     018D                     	;# 
  2710     0191                     	;# 
  2711     0191                     	;# 
  2712     0192                     	;# 
  2713     0193                     	;# 
  2714     0193                     	;# 
  2715     0193                     	;# 
  2716     0194                     	;# 
  2717     0195                     	;# 
  2718     0196                     	;# 
  2719     0199                     	;# 
  2720     019A                     	;# 
  2721     019B                     	;# 
  2722     019B                     	;# 
  2723     019B                     	;# 
  2724     019B                     	;# 
  2725     019C                     	;# 
  2726     019C                     	;# 
  2727     019D                     	;# 
  2728     019E                     	;# 
  2729     019F                     	;# 
  2730     020C                     	;# 
  2731     020D                     	;# 
  2732     0211                     	;# 
  2733     0211                     	;# 
  2734     0212                     	;# 
  2735     0212                     	;# 
  2736     0213                     	;# 
  2737     0213                     	;# 
  2738     0214                     	;# 
  2739     0214                     	;# 
  2740     0215                     	;# 
  2741     0215                     	;# 
  2742     0215                     	;# 
  2743     0216                     	;# 
  2744     0216                     	;# 
  2745     0217                     	;# 
  2746     0217                     	;# 
  2747     0219                     	;# 
  2748     021A                     	;# 
  2749     021B                     	;# 
  2750     021C                     	;# 
  2751     021D                     	;# 
  2752     021E                     	;# 
  2753     021F                     	;# 
  2754     0291                     	;# 
  2755     0291                     	;# 
  2756     0292                     	;# 
  2757     0293                     	;# 
  2758     0294                     	;# 
  2759     0295                     	;# 
  2760     0295                     	;# 
  2761     0296                     	;# 
  2762     0298                     	;# 
  2763     0298                     	;# 
  2764     0299                     	;# 
  2765     029A                     	;# 
  2766     029B                     	;# 
  2767     029C                     	;# 
  2768     029C                     	;# 
  2769     029D                     	;# 
  2770     029E                     	;# 
  2771     029E                     	;# 
  2772     0311                     	;# 
  2773     0311                     	;# 
  2774     0312                     	;# 
  2775     0313                     	;# 
  2776     0318                     	;# 
  2777     0318                     	;# 
  2778     0319                     	;# 
  2779     031A                     	;# 
  2780     0394                     	;# 
  2781     0395                     	;# 
  2782     0396                     	;# 
  2783     039A                     	;# 
  2784     039C                     	;# 
  2785     039D                     	;# 
  2786     039E                     	;# 
  2787     039F                     	;# 
  2788     0415                     	;# 
  2789     0416                     	;# 
  2790     0417                     	;# 
  2791     041C                     	;# 
  2792     041D                     	;# 
  2793     041E                     	;# 
  2794     0FE4                     	;# 
  2795     0FE5                     	;# 
  2796     0FE6                     	;# 
  2797     0FE7                     	;# 
  2798     0FE8                     	;# 
  2799     0FE9                     	;# 
  2800     0FEA                     	;# 
  2801     0FEB                     	;# 
  2802     0FED                     	;# 
  2803     0FEE                     	;# 
  2804     0FEF                     	;# 
  2805                           
  2806 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2807     0000                     
  2808 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2809     0000                     
  2810 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2811     0000                     
  2812                           	psect	idataBANK1
  2813     0F09                     __pidataBANK1:
  2814                           
  2815                           ;initializer for _kp_valvula
  2816     0F09  3486               	retlw	134
  2817     0F0A  340B               	retlw	11
  2818     0F0B  3400               	retlw	0
  2819                           
  2820                           ;initializer for _ki_valvula
  2821     0F0C  34E8               	retlw	232
  2822     0F0D  3403               	retlw	3
  2823     0F0E  3400               	retlw	0
  2824                           
  2825                           ;initializer for _kp_ventoinha
  2826     0F0F  3414               	retlw	20
  2827     0F10  3405               	retlw	5
  2828     0F11  3400               	retlw	0
  2829                           
  2830                           ;initializer for _kd_ventoinha
  2831     0F12  3410               	retlw	16
  2832     0F13  3427               	retlw	39
  2833     0F14  3400               	retlw	0
  2834                           
  2835                           ;initializer for _ki_ventoinha
  2836     0F15  3402               	retlw	2
  2837     0F16  3400               	retlw	0
  2838     0F17  3400               	retlw	0
  2839                           
  2840                           	psect	idataEEDATA
  2841     0000                     __pidataEEDATA:
  2842     0000                     _relacao_som_temperatura:	
  2843                           ;initializer for _relacao_som_temperatura
  2844                           
  2845     0000  0079               	db	121
  2846     0001  0081               	db	129
  2847     0002  00B6               	db	182
  2848     0003  0081               	db	129
  2849     0004  00F2               	db	242
  2850     0005  0081               	db	129
  2851     0006  002F               	db	47
  2852     0007  0082               	db	130
  2853     0008  006B               	db	107
  2854     0009  0082               	db	130
  2855     000A  00A7               	db	167
  2856     000B  0082               	db	130
  2857     000C  00E3               	db	227
  2858     000D  0082               	db	130
  2859     000E  001F               	db	31
  2860     000F  0083               	db	131
  2861     0010  005B               	db	91
  2862     0011  0083               	db	131
  2863     0012  0097               	db	151
  2864     0013  0083               	db	131
  2865     0014  00D2               	db	210
  2866     0015  0083               	db	131
  2867     0016  000E               	db	14
  2868     0017  0084               	db	132
  2869     0018  0049               	db	73
  2870     0019  0084               	db	132
  2871     001A  0085               	db	133
  2872     001B  0084               	db	132
  2873     001C  00C0               	db	192
  2874     001D  0084               	db	132
  2875     001E  00FB               	db	251
  2876     001F  0084               	db	132
  2877     0020  0036               	db	54
  2878     0021  0085               	db	133
  2879     0022  0071               	db	113
  2880     0023  0085               	db	133
  2881     0024  00AC               	db	172
  2882     0025  0085               	db	133
  2883     0026  00E6               	db	230
  2884     0027  0085               	db	133
  2885     0028  0021               	db	33
  2886     0029  0086               	db	134
  2887     002A  005C               	db	92
  2888     002B  0086               	db	134
  2889     002C  0096               	db	150
  2890     002D  0086               	db	134
  2891     002E  00D0               	db	208
  2892     002F  0086               	db	134
  2893     0030  000A               	db	10
  2894     0031  0087               	db	135
  2895     0032  0045               	db	69
  2896     0033  0087               	db	135
  2897     0034  007F               	db	127
  2898     0035  0087               	db	135
  2899     0036  00B9               	db	185
  2900     0037  0087               	db	135
  2901     0038  00F2               	db	242
  2902     0039  0087               	db	135
  2903     003A  002C               	db	44
  2904     003B  0088               	db	136
  2905     003C  0066               	db	102
  2906     003D  0088               	db	136
  2907     003E  009F               	db	159
  2908     003F  0088               	db	136
  2909     0040  00D9               	db	217
  2910     0041  0088               	db	136
  2911     0042  0012               	db	18
  2912     0043  0089               	db	137
  2913     0044  004B               	db	75
  2914     0045  0089               	db	137
  2915     0046  0085               	db	133
  2916     0047  0089               	db	137
  2917     0048  00BE               	db	190
  2918     0049  0089               	db	137
  2919     004A  00F7               	db	247
  2920     004B  0089               	db	137
  2921     004C  002F               	db	47
  2922     004D  008A               	db	138
  2923     004E  0068               	db	104
  2924     004F  008A               	db	138
  2925     0050  00A1               	db	161
  2926     0051  008A               	db	138
  2927     0052  00DA               	db	218
  2928     0053  008A               	db	138
  2929     0054  0012               	db	18
  2930     0055  008B               	db	139
  2931     0056  004B               	db	75
  2932     0057  008B               	db	139
  2933     0058  0083               	db	131
  2934     0059  008B               	db	139
  2935     005A  00BB               	db	187
  2936     005B  008B               	db	139
  2937     005C  00F3               	db	243
  2938     005D  008B               	db	139
  2939     005E  002B               	db	43
  2940     005F  008C               	db	140
  2941     0060  0063               	db	99
  2942     0061  008C               	db	140
  2943     0062  009B               	db	155
  2944     0063  008C               	db	140
  2945     0064  00D3               	db	211
  2946     0065  008C               	db	140
  2947                           
  2948                           	psect	nvBANK1
  2949     00D8                     __pnvBANK1:
  2950     00D8                     _TMR6_InterruptHandler:
  2951     00D8                     	ds	2
  2952     00DA                     _TMR0_InterruptHandler:
  2953     00DA                     	ds	2
  2954     00DC                     _TMR4_InterruptHandler:
  2955     00DC                     	ds	2
  2956     00DE                     _EUSART_ErrorHandler:
  2957     00DE                     	ds	2
  2958     00E0                     _EUSART_OverrunErrorHandler:
  2959     00E0                     	ds	2
  2960     00E2                     _EUSART_FramingErrorHandler:
  2961     00E2                     	ds	2
  2962     00E4                     _TMR1_GateInterruptHandler:
  2963     00E4                     	ds	2
  2964     0015                     _TMR0	set	21
  2965     001C                     _T2CONbits	set	28
  2966     001C                     _T2CON	set	28
  2967     001A                     _TMR2	set	26
  2968     001B                     _PR2	set	27
  2969     0013                     _PIR3bits	set	19
  2970     000B                     _INTCONbits	set	11
  2971     0019                     _T1GCONbits	set	25
  2972     0018                     _T1CONbits	set	24
  2973     0018                     _T1CON	set	24
  2974     0011                     _PIR1bits	set	17
  2975     0016                     _TMR1L	set	22
  2976     0017                     _TMR1H	set	23
  2977     0019                     _T1GCON	set	25
  2978     0095                     _OPTION_REG	set	149
  2979     0093                     _PIE3bits	set	147
  2980     0091                     _PIE1bits	set	145
  2981     009D                     _ADCON0bits	set	157
  2982     009D                     _ADCON0	set	157
  2983     009C                     _ADRESH	set	156
  2984     009B                     _ADRESL	set	155
  2985     009E                     _ADCON1	set	158
  2986     0095                     _OPTION_REGbits	set	149
  2987     008D                     _TRISB	set	141
  2988     008C                     _TRISA	set	140
  2989     0097                     _WDTCON	set	151
  2990     0098                     _OSCTUNE	set	152
  2991     0099                     _OSCCON	set	153
  2992     010C                     _LATAbits	set	268
  2993     0119                     _DACCON1	set	281
  2994     0118                     _DACCON0	set	280
  2995     0115                     _CMOUTbits	set	277
  2996     0112                     _CM1CON1	set	274
  2997     0111                     _CM1CON0	set	273
  2998     0117                     _FVRCONbits	set	279
  2999     0117                     _FVRCON	set	279
  3000     011E                     _APFCON1	set	286
  3001     011D                     _APFCON0	set	285
  3002     010D                     _LATB	set	269
  3003     010C                     _LATA	set	268
  3004     0116                     _BORCON	set	278
  3005     0191                     _EEADR	set	401
  3006     0193                     _EEDATA	set	403
  3007     0195                     _EECON1	set	405
  3008     0195                     _EECON1bits	set	405
  3009     019A                     _TXREG	set	410
  3010     0199                     _RCREG	set	409
  3011     019D                     _RCSTAbits	set	413
  3012     019E                     _TXSTAbits	set	414
  3013     019C                     _SPBRGH	set	412
  3014     019B                     _SPBRGL	set	411
  3015     019E                     _TXSTA	set	414
  3016     019D                     _RCSTA	set	413
  3017     019F                     _BAUDCON	set	415
  3018     018C                     _ANSELA	set	396
  3019     018D                     _ANSELB	set	397
  3020     020C                     _WPUA	set	524
  3021     020D                     _WPUB	set	525
  3022     029E                     _CCPTMRS0bits	set	670
  3023     0291                     _CCPR1L	set	657
  3024     0292                     _CCPR1H	set	658
  3025     0296                     _PSTR1CON	set	662
  3026     0294                     _PWM1CON	set	660
  3027     0295                     _ECCP1AS	set	661
  3028     0293                     _CCP1CON	set	659
  3029     041E                     _T6CONbits	set	1054
  3030     041E                     _T6CON	set	1054
  3031     041C                     _TMR6	set	1052
  3032     041D                     _PR6	set	1053
  3033     0417                     _T4CONbits	set	1047
  3034     0417                     _T4CON	set	1047
  3035     0415                     _TMR4	set	1045
  3036     0416                     _PR4	set	1046
  3037                           
  3038                           	psect	cinit
  3039     0044                     start_initialization:	
  3040                           ; #config settings
  3041                           
  3042     0044                     __initialization:
  3043                           
  3044                           ; Initialize objects allocated to BANK1
  3045     0044  3009               	movlw	low __pidataBANK1
  3046     0045  0084               	movwf	4
  3047     0046  308F               	movlw	(high __pidataBANK1)| (0+128)
  3048     0047  0085               	movwf	5
  3049     0048  30C9               	movlw	low __pdataBANK1
  3050     0049  0086               	movwf	6
  3051     004A  3000               	movlw	high __pdataBANK1
  3052     004B  0087               	movwf	7
  3053     004C  300F               	movlw	15
  3054     004D  318E  269A  3180   	fcall	init_ram
  3055                           
  3056                           ; Clear objects allocated to COMMON
  3057     0050  01FD               	clrf	__pbssCOMMON& (0+127)
  3058                           
  3059                           ; Clear objects allocated to BANK0
  3060     0051  3059               	movlw	low __pbssBANK0
  3061     0052  0084               	movwf	4
  3062     0053  3000               	movlw	high __pbssBANK0
  3063     0054  0085               	movwf	5
  3064     0055  3017               	movlw	23
  3065     0056  318E  2694  3180   	fcall	clear_ram0
  3066                           
  3067                           ; Clear objects allocated to BANK1
  3068     0059  30A0               	movlw	low __pbssBANK1
  3069     005A  0084               	movwf	4
  3070     005B  3000               	movlw	high __pbssBANK1
  3071     005C  0085               	movwf	5
  3072     005D  3029               	movlw	41
  3073     005E  318E  2694  3180   	fcall	clear_ram0
  3074                           
  3075                           ; Clear objects allocated to BANK2
  3076     0061  3020               	movlw	low __pbssBANK2
  3077     0062  0084               	movwf	4
  3078     0063  3001               	movlw	high __pbssBANK2
  3079     0064  0085               	movwf	5
  3080     0065  300F               	movlw	15
  3081     0066  318E  2694  3180   	fcall	clear_ram0
  3082     0069                     end_of_initialization:	
  3083                           ;End of C runtime variable initialization code
  3084                           
  3085     0069                     __end_of__initialization:
  3086     0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3087     006A  0020               	movlb	0
  3088     006B  3184  2CAB         	ljmp	_main	;jump to C main() function
  3089                           
  3090                           	psect	dataEEDATA
  3091     0000                     __pdataEEDATA:
  3092                           
  3093                           	psect	bssCOMMON
  3094     007D                     __pbssCOMMON:
  3095     007D                     _modo:
  3096     007D                     	ds	1
  3097                           
  3098                           	psect	bssBANK0
  3099     0059                     __pbssBANK0:
  3100     0059                     _soma_PID:
  3101     0059                     	ds	3
  3102     005C                     _erro_atual:
  3103     005C                     	ds	3
  3104     005F                     _ciclo_util_futuro:
  3105     005F                     	ds	2
  3106     0061                     _posicao_val_futura:
  3107     0061                     	ds	2
  3108     0063                     _temperatura:
  3109     0063                     	ds	2
  3110     0065                     _tempo_medio:
  3111     0065                     	ds	2
  3112     0067                     _Set_ciclo:
  3113     0067                     	ds	2
  3114     0069                     _Set_valvula:
  3115     0069                     	ds	2
  3116     006B                     _Set_altura:
  3117     006B                     	ds	2
  3118     006D                     media@indice:
  3119     006D                     	ds	1
  3120     006E                     inicia_ultrasom@j:
  3121     006E                     	ds	1
  3122     006F                     _set_modo:
  3123     006F                     	ds	1
  3124                           
  3125                           	psect	bssBANK1
  3126     00A0                     __pbssBANK1:
  3127     00A0                     _RxBuffer:
  3128     00A0                     	ds	5
  3129     00A5                     media@tempo_recebido:
  3130     00A5                     	ds	4
  3131     00A9                     _altura_bola:
  3132     00A9                     	ds	3
  3133     00AC                     _derivativo:
  3134     00AC                     	ds	3
  3135     00AF                     _proporcional:
  3136     00AF                     	ds	3
  3137     00B2                     _integrativo:
  3138     00B2                     	ds	3
  3139     00B5                     _erro_anterior:
  3140     00B5                     	ds	3
  3141     00B8                     _soma_anterior:
  3142     00B8                     	ds	3
  3143     00BB                     _posicao_val_atual:
  3144     00BB                     	ds	2
  3145     00BD                     _tempo_s:
  3146     00BD                     	ds	2
  3147     00BF                     _timer1ReloadVal:
  3148     00BF                     	ds	2
  3149     00C1                     _ADC_InterruptHandler:
  3150     00C1                     	ds	2
  3151     00C3                     _countRx:
  3152     00C3                     	ds	1
  3153     00C4                     _flag_passos:
  3154     00C4                     	ds	1
  3155     00C5                     _dado_atual:
  3156     00C5                     	ds	1
  3157     00C6                     _npassos:
  3158     00C6                     	ds	1
  3159     00C7                     _timer0ReloadVal:
  3160     00C7                     	ds	1
  3161     00C8                     _eusartRxLastError:
  3162     00C8                     	ds	1
  3163                           
  3164                           	psect	dataBANK1
  3165     00C9                     __pdataBANK1:
  3166     00C9                     _kp_valvula:
  3167     00C9                     	ds	3
  3168     00CC                     _ki_valvula:
  3169     00CC                     	ds	3
  3170     00CF                     _kp_ventoinha:
  3171     00CF                     	ds	3
  3172     00D2                     _kd_ventoinha:
  3173     00D2                     	ds	3
  3174     00D5                     _ki_ventoinha:
  3175     00D5                     	ds	3
  3176                           
  3177                           	psect	bssBANK2
  3178     0120                     __pbssBANK2:
  3179     0120                     _dados_de_envio:
  3180     0120                     	ds	15
  3181                           
  3182                           	psect	inittext
  3183     0E9A                     init_ram:
  3184     0E9A  00FE               	movwf	btemp
  3185     0E9B                     initloop:
  3186     0E9B  0012               	moviw fsr0++
  3187     0E9C  001E               	movwi fsr1++
  3188     0E9D  0BFE               	decfsz	btemp,f
  3189     0E9E  2E9B               	goto	initloop
  3190     0E9F  3400               	retlw	0
  3191                           
  3192                           	psect	clrtext
  3193     0E94                     clear_ram0:	
  3194                           ;	Called with FSR0 containing the base address, and
  3195                           ;	WREG with the size to clear
  3196                           
  3197     0E94  0064               	clrwdt	;clear the watchdog before getting into this loop
  3198     0E95                     clrloop0:
  3199     0E95  0180               	clrf	0	;clear RAM location pointed to by FSR
  3200     0E96  3101               	addfsr 0,1
  3201     0E97  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3202     0E98  2E95               	goto	clrloop0	;have we reached the end yet?
  3203     0E99  3400               	retlw	0	;all done for this memory range, return
  3204                           
  3205                           	psect	cstackBANK1
  3206     00E6                     __pcstackBANK1:
  3207     00E6                     ??_PIN_MANAGER_Initialize:
  3208     00E6                     ??_OSCILLATOR_Initialize:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211     00E6                     ??_WDT_Initialize:	
  3212                           ; 1 bytes @ 0x0
  3213                           
  3214     00E6                     ??_DAC_Initialize:	
  3215                           ; 1 bytes @ 0x0
  3216                           
  3217     00E6                     ??_FVR_Initialize:	
  3218                           ; 1 bytes @ 0x0
  3219                           
  3220     00E6                     ??_TMR2_Initialize:	
  3221                           ; 1 bytes @ 0x0
  3222                           
  3223     00E6                     ??_CMP1_Initialize:	
  3224                           ; 1 bytes @ 0x0
  3225                           
  3226     00E6                     ??_ADC_Initialize:	
  3227                           ; 1 bytes @ 0x0
  3228                           
  3229     00E6                     ??_EPWM1_Initialize:	
  3230                           ; 1 bytes @ 0x0
  3231                           
  3232     00E6                     ?_TMR1_SetGateInterruptHandler:	
  3233                           ; 1 bytes @ 0x0
  3234                           
  3235     00E6                     ?_EUSART_SetFramingErrorHandler:	
  3236                           ; 1 bytes @ 0x0
  3237                           
  3238     00E6                     ?_EUSART_SetOverrunErrorHandler:	
  3239                           ; 1 bytes @ 0x0
  3240                           
  3241     00E6                     ?_EUSART_SetErrorHandler:	
  3242                           ; 1 bytes @ 0x0
  3243                           
  3244     00E6                     ?_TMR4_SetInterruptHandler:	
  3245                           ; 1 bytes @ 0x0
  3246                           
  3247     00E6                     ?_TMR0_SetInterruptHandler:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250     00E6                     ?_TMR6_SetInterruptHandler:	
  3251                           ; 1 bytes @ 0x0
  3252                           
  3253     00E6                     ??_muda_passos:	
  3254                           ; 1 bytes @ 0x0
  3255                           
  3256     00E6                     ??_EUSART_is_rx_ready:	
  3257                           ; 1 bytes @ 0x0
  3258                           
  3259     00E6                     ??_EUSART_Read:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262     00E6                     ??_CMP1_GetOutputStatus:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265     00E6                     ??_TMR4_WriteTimer:	
  3266                           ; 1 bytes @ 0x0
  3267                           
  3268     00E6                     TMR4_WriteTimer@timerVal:	
  3269                           ; 1 bytes @ 0x0
  3270                           
  3271     00E6                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3272                           ; 1 bytes @ 0x0
  3273                           
  3274     00E6                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3275                           ; 2 bytes @ 0x0
  3276                           
  3277     00E6                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3278                           ; 2 bytes @ 0x0
  3279                           
  3280     00E6                     EUSART_SetErrorHandler@interruptHandler:	
  3281                           ; 2 bytes @ 0x0
  3282                           
  3283     00E6                     TMR4_SetInterruptHandler@InterruptHandler:	
  3284                           ; 2 bytes @ 0x0
  3285                           
  3286     00E6                     TMR0_SetInterruptHandler@InterruptHandler:	
  3287                           ; 2 bytes @ 0x0
  3288                           
  3289     00E6                     TMR6_SetInterruptHandler@InterruptHandler:	
  3290                           ; 2 bytes @ 0x0
  3291                           
  3292                           
  3293                           ; 2 bytes @ 0x0
  3294     00E6                     	ds	1
  3295     00E7                     ??_Dados_recebidos:
  3296                           
  3297                           ; 1 bytes @ 0x1
  3298     00E7                     	ds	1
  3299     00E8                     ??_TMR4_Initialize:
  3300     00E8                     ??_TMR0_Initialize:	
  3301                           ; 1 bytes @ 0x2
  3302                           
  3303     00E8                     ??_TMR6_Initialize:	
  3304                           ; 1 bytes @ 0x2
  3305                           
  3306     00E8                     ??_TMR1_Initialize:	
  3307                           ; 1 bytes @ 0x2
  3308                           
  3309     00E8                     ??_EUSART_Initialize:	
  3310                           ; 1 bytes @ 0x2
  3311                           
  3312     00E8                     ??_TMR1_SetGateInterruptHandler:	
  3313                           ; 1 bytes @ 0x2
  3314                           
  3315     00E8                     ??_EUSART_SetFramingErrorHandler:	
  3316                           ; 1 bytes @ 0x2
  3317                           
  3318     00E8                     ??_EUSART_SetOverrunErrorHandler:	
  3319                           ; 1 bytes @ 0x2
  3320                           
  3321     00E8                     ??_EUSART_SetErrorHandler:	
  3322                           ; 1 bytes @ 0x2
  3323                           
  3324     00E8                     ??_TMR4_SetInterruptHandler:	
  3325                           ; 1 bytes @ 0x2
  3326                           
  3327     00E8                     ??_TMR0_SetInterruptHandler:	
  3328                           ; 1 bytes @ 0x2
  3329                           
  3330     00E8                     ??_TMR6_SetInterruptHandler:	
  3331                           ; 1 bytes @ 0x2
  3332                           
  3333     00E8                     ??_SYSTEM_Initialize:	
  3334                           ; 1 bytes @ 0x2
  3335                           
  3336     00E8                     Dados_recebidos@rxData:	
  3337                           ; 1 bytes @ 0x2
  3338                           
  3339     00E8                     _muda_passos$1295:	
  3340                           ; 1 bytes @ 0x2
  3341                           
  3342                           
  3343                           ; 2 bytes @ 0x2
  3344     00E8                     	ds	2
  3345     00EA                     _muda_passos$1296:
  3346                           
  3347                           ; 2 bytes @ 0x4
  3348     00EA                     	ds	2
  3349     00EC                     ??_main:
  3350                           
  3351                           ; 1 bytes @ 0x6
  3352     00EC                     	ds	1
  3353                           
  3354                           	psect	cstackCOMMON
  3355     0070                     __pcstackCOMMON:
  3356     0070                     ?_PIN_MANAGER_Initialize:
  3357     0070                     ?_OSCILLATOR_Initialize:	
  3358                           ; 1 bytes @ 0x0
  3359                           
  3360     0070                     ?_WDT_Initialize:	
  3361                           ; 1 bytes @ 0x0
  3362                           
  3363     0070                     ?_DAC_Initialize:	
  3364                           ; 1 bytes @ 0x0
  3365                           
  3366     0070                     ?_FVR_Initialize:	
  3367                           ; 1 bytes @ 0x0
  3368                           
  3369     0070                     ?_TMR4_Initialize:	
  3370                           ; 1 bytes @ 0x0
  3371                           
  3372     0070                     ?_TMR2_Initialize:	
  3373                           ; 1 bytes @ 0x0
  3374                           
  3375     0070                     ?_TMR0_Initialize:	
  3376                           ; 1 bytes @ 0x0
  3377                           
  3378     0070                     ?_TMR6_Initialize:	
  3379                           ; 1 bytes @ 0x0
  3380                           
  3381     0070                     ?_CMP1_Initialize:	
  3382                           ; 1 bytes @ 0x0
  3383                           
  3384     0070                     ?_ADC_Initialize:	
  3385                           ; 1 bytes @ 0x0
  3386                           
  3387     0070                     ?_EPWM1_Initialize:	
  3388                           ; 1 bytes @ 0x0
  3389                           
  3390     0070                     ?_TMR1_Initialize:	
  3391                           ; 1 bytes @ 0x0
  3392                           
  3393     0070                     ?_EUSART_Initialize:	
  3394                           ; 1 bytes @ 0x0
  3395                           
  3396     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3397                           ; 1 bytes @ 0x0
  3398                           
  3399     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402     0070                     ?_TMR0_ISR:	
  3403                           ; 1 bytes @ 0x0
  3404                           
  3405     0070                     ?_TMR6_ISR:	
  3406                           ; 1 bytes @ 0x0
  3407                           
  3408     0070                     ?_TMR4_ISR:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411     0070                     ?_TMR4_DefaultInterruptHandler:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414     0070                     ??_TMR4_DefaultInterruptHandler:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417     0070                     ?_TMR0_DefaultInterruptHandler:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420     0070                     ??_TMR0_DefaultInterruptHandler:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423     0070                     ?_TMR6_DefaultInterruptHandler:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426     0070                     ??_TMR6_DefaultInterruptHandler:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429     0070                     ?_ProcessaDados:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432     0070                     ?_inicia_ultrasom:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435     0070                     ?_posicao_bola_tubo:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438     0070                     ?_DRMotordePassos:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441     0070                     ?_muda_passos:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444     0070                     ?_Dados_recebidos:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447     0070                     ?_EnviaTx:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450     0070                     ?_Comando_PIeD:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453     0070                     ?_selecao_do_modo:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456     0070                     ?_Controlador:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459     0070                     ?_SYSTEM_Initialize:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462     0070                     ?_TMR1_WriteTimer:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465     0070                     ?_TMR1_GATE_ISR:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468     0070                     ?_INTERRUPT_InterruptManager:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471     0070                     ?_EUSART_is_rx_ready:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474     0070                     ?_EUSART_Read:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477     0070                     ?_EUSART_Write:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480     0070                     ??_EUSART_Write:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483     0070                     ?_EPWM1_LoadDutyValue:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486     0070                     ?_CMP1_GetOutputStatus:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489     0070                     ?_TMR4_WriteTimer:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492     0070                     ?_main:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495     0070                     ?___eecpymem:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498     0070                     ?i1_muda_passos:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501     0070                     ??i1_muda_passos:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504     0070                     ?_ADC_GetConversion:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507     0070                     ?_TMR1_ReadTimer:	
  3508                           ; 2 bytes @ 0x0
  3509                           
  3510     0070                     ?___lwdiv:	
  3511                           ; 2 bytes @ 0x0
  3512                           
  3513     0070                     ?___tmul:	
  3514                           ; 2 bytes @ 0x0
  3515                           
  3516     0070                     ?___lmul:	
  3517                           ; 3 bytes @ 0x0
  3518                           
  3519     0070                     EUSART_Write@txData:	
  3520                           ; 4 bytes @ 0x0
  3521                           
  3522     0070                     ___eecpymem@from:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525     0070                     TMR1_WriteTimer@timerVal:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528     0070                     EPWM1_LoadDutyValue@dutyValue:	
  3529                           ; 2 bytes @ 0x0
  3530                           
  3531     0070                     ___lwdiv@divisor:	
  3532                           ; 2 bytes @ 0x0
  3533                           
  3534     0070                     ___tmul@multiplier:	
  3535                           ; 2 bytes @ 0x0
  3536                           
  3537     0070                     ___lmul@multiplier:	
  3538                           ; 3 bytes @ 0x0
  3539                           
  3540                           
  3541                           ; 4 bytes @ 0x0
  3542     0070                     	ds	1
  3543     0071                     ??_EnviaTx:
  3544     0071                     ___eecpymem@size:	
  3545                           ; 1 bytes @ 0x1
  3546                           
  3547                           
  3548                           ; 1 bytes @ 0x1
  3549     0071                     	ds	1
  3550     0072                     ??_inicia_ultrasom:
  3551     0072                     ??_ADC_GetConversion:	
  3552                           ; 1 bytes @ 0x2
  3553                           
  3554     0072                     ??_TMR1_ReadTimer:	
  3555                           ; 1 bytes @ 0x2
  3556                           
  3557     0072                     ??_TMR1_WriteTimer:	
  3558                           ; 1 bytes @ 0x2
  3559                           
  3560     0072                     ??_EPWM1_LoadDutyValue:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563     0072                     ??___eecpymem:	
  3564                           ; 1 bytes @ 0x2
  3565                           
  3566     0072                     _inicia_ultrasom$1282:	
  3567                           ; 1 bytes @ 0x2
  3568                           
  3569     0072                     ___lwdiv@dividend:	
  3570                           ; 2 bytes @ 0x2
  3571                           
  3572     0072                     i1_muda_passos$1295:	
  3573                           ; 2 bytes @ 0x2
  3574                           
  3575                           
  3576                           ; 2 bytes @ 0x2
  3577     0072                     	ds	1
  3578     0073                     ADC_GetConversion@channel:
  3579     0073                     ___tmul@multiplicand:	
  3580                           ; 1 bytes @ 0x3
  3581                           
  3582                           
  3583                           ; 3 bytes @ 0x3
  3584     0073                     	ds	1
  3585     0074                     ??_TMR0_ISR:
  3586     0074                     ??_TMR4_ISR:	
  3587                           ; 1 bytes @ 0x4
  3588                           
  3589     0074                     ??_ProcessaDados:	
  3590                           ; 1 bytes @ 0x4
  3591                           
  3592     0074                     ??_selecao_do_modo:	
  3593                           ; 1 bytes @ 0x4
  3594                           
  3595     0074                     ??___lwdiv:	
  3596                           ; 1 bytes @ 0x4
  3597                           
  3598     0074                     ___eecpymem@cp:	
  3599                           ; 1 bytes @ 0x4
  3600                           
  3601     0074                     i1_muda_passos$1296:	
  3602                           ; 1 bytes @ 0x4
  3603                           
  3604     0074                     ___lmul@multiplicand:	
  3605                           ; 2 bytes @ 0x4
  3606                           
  3607                           
  3608                           ; 4 bytes @ 0x4
  3609     0074                     	ds	1
  3610     0075                     ___eecpymem@to:
  3611     0075                     ___lwdiv@quotient:	
  3612                           ; 1 bytes @ 0x5
  3613                           
  3614                           
  3615                           ; 2 bytes @ 0x5
  3616     0075                     	ds	1
  3617     0076                     ??_DRMotordePassos:
  3618     0076                     ??___tmul:	
  3619                           ; 1 bytes @ 0x6
  3620                           
  3621     0076                     ?___eetoi:	
  3622                           ; 1 bytes @ 0x6
  3623                           
  3624     0076                     ___tmul@product:	
  3625                           ; 2 bytes @ 0x6
  3626                           
  3627                           
  3628                           ; 3 bytes @ 0x6
  3629     0076                     	ds	1
  3630     0077                     ??_TMR6_ISR:
  3631     0077                     ___lwdiv@counter:	
  3632                           ; 1 bytes @ 0x7
  3633                           
  3634     0077                     TMR1_ReadTimer@readVal:	
  3635                           ; 1 bytes @ 0x7
  3636                           
  3637                           
  3638                           ; 2 bytes @ 0x7
  3639     0077                     	ds	1
  3640     0078                     ??___eetoi:
  3641     0078                     ??___lmul:	
  3642                           ; 1 bytes @ 0x8
  3643                           
  3644     0078                     ___eetoi@addr:	
  3645                           ; 1 bytes @ 0x8
  3646                           
  3647     0078                     ___lmul@product:	
  3648                           ; 1 bytes @ 0x8
  3649                           
  3650                           
  3651                           ; 4 bytes @ 0x8
  3652     0078                     	ds	1
  3653     0079                     ??___atdiv:
  3654     0079                     TMR1_ReadTimer@readValHigh:	
  3655                           ; 1 bytes @ 0x9
  3656                           
  3657     0079                     ___eetoi@data:	
  3658                           ; 1 bytes @ 0x9
  3659                           
  3660                           
  3661                           ; 2 bytes @ 0x9
  3662     0079                     	ds	1
  3663     007A                     TMR1_ReadTimer@readValLow:
  3664                           
  3665                           ; 1 bytes @ 0xA
  3666     007A                     	ds	1
  3667     007B                     ?_media:
  3668     007B                     ?_velocidade_som:	
  3669                           ; 1 bytes @ 0xB
  3670                           
  3671     007B                     media@timer:	
  3672                           ; 2 bytes @ 0xB
  3673                           
  3674                           
  3675                           ; 2 bytes @ 0xB
  3676     007B                     	ds	1
  3677     007C                     ??___aldiv:
  3678                           
  3679                           ; 1 bytes @ 0xC
  3680     007C                     	ds	1
  3681     007D                     ??_posicao_bola_tubo:
  3682     007D                     ??_Comando_PIeD:	
  3683                           ; 1 bytes @ 0xD
  3684                           
  3685     007D                     ??_TMR1_GATE_ISR:	
  3686                           ; 1 bytes @ 0xD
  3687                           
  3688     007D                     ??_INTERRUPT_InterruptManager:	
  3689                           ; 1 bytes @ 0xD
  3690                           
  3691     007D                     ??_velocidade_som:	
  3692                           ; 1 bytes @ 0xD
  3693                           
  3694     007D                     ??___wmul:	
  3695                           ; 1 bytes @ 0xD
  3696                           
  3697                           
  3698                           	psect	cstackBANK0
  3699     0020                     __pcstackBANK0:	
  3700                           ; 1 bytes @ 0xD
  3701                           
  3702     0020                     ??_media:
  3703     0020                     ?___wmul:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706     0020                     ?___atdiv:	
  3707                           ; 2 bytes @ 0x0
  3708                           
  3709     0020                     ?___aldiv:	
  3710                           ; 3 bytes @ 0x0
  3711                           
  3712     0020                     ___wmul@multiplier:	
  3713                           ; 4 bytes @ 0x0
  3714                           
  3715     0020                     ___atdiv@divisor:	
  3716                           ; 2 bytes @ 0x0
  3717                           
  3718     0020                     ___aldiv@divisor:	
  3719                           ; 3 bytes @ 0x0
  3720                           
  3721                           
  3722                           ; 4 bytes @ 0x0
  3723     0020                     	ds	2
  3724     0022                     ___wmul@multiplicand:
  3725                           
  3726                           ; 2 bytes @ 0x2
  3727     0022                     	ds	1
  3728     0023                     ___atdiv@dividend:
  3729                           
  3730                           ; 3 bytes @ 0x3
  3731     0023                     	ds	1
  3732     0024                     ___wmul@product:
  3733     0024                     ___aldiv@dividend:	
  3734                           ; 2 bytes @ 0x4
  3735                           
  3736                           
  3737                           ; 4 bytes @ 0x4
  3738     0024                     	ds	2
  3739     0026                     ___atdiv@counter:
  3740                           
  3741                           ; 1 bytes @ 0x6
  3742     0026                     	ds	1
  3743     0027                     ___atdiv@sign:
  3744                           
  3745                           ; 1 bytes @ 0x7
  3746     0027                     	ds	1
  3747     0028                     ___aldiv@counter:
  3748     0028                     ___atdiv@quotient:	
  3749                           ; 1 bytes @ 0x8
  3750                           
  3751                           
  3752                           ; 3 bytes @ 0x8
  3753     0028                     	ds	1
  3754     0029                     ___aldiv@sign:
  3755                           
  3756                           ; 1 bytes @ 0x9
  3757     0029                     	ds	1
  3758     002A                     ___aldiv@quotient:
  3759                           
  3760                           ; 4 bytes @ 0xA
  3761     002A                     	ds	4
  3762     002E                     ?_map_value:
  3763     002E                     map_value@x:	
  3764                           ; 3 bytes @ 0xE
  3765                           
  3766                           
  3767                           ; 4 bytes @ 0xE
  3768     002E                     	ds	4
  3769     0032                     map_value@in_min:
  3770                           
  3771                           ; 4 bytes @ 0x12
  3772     0032                     	ds	4
  3773     0036                     map_value@in_max:
  3774                           
  3775                           ; 4 bytes @ 0x16
  3776     0036                     	ds	4
  3777     003A                     map_value@out_min:
  3778                           
  3779                           ; 4 bytes @ 0x1A
  3780     003A                     	ds	4
  3781     003E                     map_value@out_max:
  3782                           
  3783                           ; 4 bytes @ 0x1E
  3784     003E                     	ds	4
  3785     0042                     ??_map_value:
  3786                           
  3787                           ; 1 bytes @ 0x22
  3788     0042                     	ds	15
  3789     0051                     ??_Controlador:
  3790                           
  3791                           ; 1 bytes @ 0x31
  3792     0051                     	ds	6
  3793     0057                     _posicao_bola_tubo$2066:
  3794                           
  3795                           ; 2 bytes @ 0x37
  3796     0057                     	ds	2
  3797                           
  3798                           	psect	maintext
  3799     04AB                     __pmaintext:	
  3800 ;;
  3801 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3802 ;;
  3803 ;; *************** function _main *****************
  3804 ;; Defined at:
  3805 ;;		line 24 in file "main.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : B1F/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3819 ;;      Params:         0       0       0       0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0
  3821 ;;      Temps:          0       0       1       0       0       0
  3822 ;;      Totals:         0       0       1       0       0       0
  3823 ;;Total ram usage:        1 bytes
  3824 ;; Hardware stack levels required when called: 10
  3825 ;; This function calls:
  3826 ;;		_CMP1_GetOutputStatus
  3827 ;;		_Dados_recebidos
  3828 ;;		_EUSART_is_rx_ready
  3829 ;;		_SYSTEM_Initialize
  3830 ;;		_TMR0_SetInterruptHandler
  3831 ;;		_TMR1_SetGateInterruptHandler
  3832 ;;		_TMR4_SetInterruptHandler
  3833 ;;		_TMR6_SetInterruptHandler
  3834 ;;		_muda_passos
  3835 ;; This function is called by:
  3836 ;;		Startup code after reset
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840     04AB                     _main:	
  3841                           ;psect for function _main
  3842                           
  3843     04AB                     l2843:	
  3844                           ;incstack = 0
  3845                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3846                           
  3847                           
  3848                           ;main.c: 25:     SYSTEM_Initialize();
  3849     04AB  3186  26BE  3184   	fcall	_SYSTEM_Initialize
  3850     04AE                     l2845:
  3851                           
  3852                           ;main.c: 27:     (INTCONbits.GIE = 1);
  3853     04AE  178B               	bsf	11,7	;volatile
  3854     04AF                     l2847:
  3855                           
  3856                           ;main.c: 29:     (INTCONbits.PEIE = 1);
  3857     04AF  170B               	bsf	11,6	;volatile
  3858                           
  3859                           ;main.c: 32:     TMR4_SetInterruptHandler(ProcessaDados);
  3860     04B0  3004               	movlw	low _ProcessaDados
  3861     04B1  0021               	movlb	1	; select bank1
  3862     04B2  00E6               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  3863     04B3  3005               	movlw	high _ProcessaDados
  3864     04B4  00E7               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3865     04B5  318E  2688  3184   	fcall	_TMR4_SetInterruptHandler
  3866                           
  3867                           ;main.c: 35:     TMR0_SetInterruptHandler(inicia_ultrasom);
  3868     04B8  30E9               	movlw	low _inicia_ultrasom
  3869     04B9  0021               	movlb	1	; select bank1
  3870     04BA  00E6               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3871     04BB  3006               	movlw	high _inicia_ultrasom
  3872     04BC  00E7               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3873     04BD  318E  267C  3184   	fcall	_TMR0_SetInterruptHandler
  3874                           
  3875                           ;main.c: 38:     TMR1_SetGateInterruptHandler(posicao_bola_tubo);
  3876     04C0  30B0               	movlw	low _posicao_bola_tubo
  3877     04C1  0021               	movlb	1	; select bank1
  3878     04C2  00E6               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3879     04C3  3005               	movlw	high _posicao_bola_tubo
  3880     04C4  00E7               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3881     04C5  318E  2682  3184   	fcall	_TMR1_SetGateInterruptHandler
  3882                           
  3883                           ;main.c: 41:     TMR6_SetInterruptHandler(DRMotordePassos);
  3884     04C8  3028               	movlw	low _DRMotordePassos
  3885     04C9  0021               	movlb	1	; select bank1
  3886     04CA  00E6               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  3887     04CB  3006               	movlw	high _DRMotordePassos
  3888     04CC  00E7               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3889     04CD  318E  268E  3184   	fcall	_TMR6_SetInterruptHandler
  3890                           
  3891                           ;main.c: 47:     while(!CMP1_GetOutputStatus()){
  3892     04D0  2CDF               	goto	l2855
  3893     04D1                     l2849:
  3894                           
  3895                           ;main.c: 48:         flag_passos = 0;
  3896     04D1  0021               	movlb	1	; select bank1
  3897     04D2  01C4               	clrf	_flag_passos^(0+128)
  3898     04D3                     l2851:
  3899                           
  3900                           ;main.c: 49:         muda_passos();
  3901     04D3  3183  23F3  3184   	fcall	_muda_passos
  3902     04D6                     l2853:
  3903                           
  3904                           ;main.c: 50:         _delay((unsigned long)((4)*(16000000/4000.0)));
  3905     04D6  3015               	movlw	21
  3906     04D7  0021               	movlb	1	; select bank1
  3907     04D8  00EC               	movwf	??_main^(0+128)
  3908     04D9  30C6               	movlw	198
  3909     04DA                     u1827:
  3910     04DA  0B89               	decfsz	9,f
  3911     04DB  2CDA               	goto	u1827
  3912     04DC  0BEC               	decfsz	??_main^(0+128),f
  3913     04DD  2CDA               	goto	u1827
  3914     04DE  0000               	nop
  3915     04DF                     l2855:
  3916                           
  3917                           ;main.c: 47:     while(!CMP1_GetOutputStatus()){
  3918     04DF  318E  2647  3184   	fcall	_CMP1_GetOutputStatus
  3919     04E2  3A00               	xorlw	0
  3920     04E3  1903               	skipnz
  3921     04E4  2CE6               	goto	u1781
  3922     04E5  2CE7               	goto	u1780
  3923     04E6                     u1781:
  3924     04E6  2CD1               	goto	l2849
  3925     04E7                     u1780:
  3926     04E7                     l2857:
  3927                           
  3928                           ;main.c: 52:     posicao_val_atual = 0;
  3929     04E7  0021               	movlb	1	; select bank1
  3930     04E8  01BB               	clrf	_posicao_val_atual^(0+128)
  3931     04E9  01BC               	clrf	(_posicao_val_atual+1)^(0+128)
  3932     04EA                     l2859:
  3933                           
  3934                           ;main.c: 56:         LATAbits.LATA7 = !CMP1_GetOutputStatus();
  3935     04EA  318E  2647  3184   	fcall	_CMP1_GetOutputStatus
  3936     04ED  3A00               	xorlw	0
  3937     04EE  1903               	skipnz
  3938     04EF  2CF1               	goto	u1791
  3939     04F0  2CF4               	goto	u1790
  3940     04F1                     u1791:
  3941     04F1  0022               	movlb	2	; select bank2
  3942     04F2  178C               	bsf	12,7	;volatile
  3943     04F3  2CF6               	goto	u1804
  3944     04F4                     u1790:
  3945     04F4  0022               	movlb	2	; select bank2
  3946     04F5  138C               	bcf	12,7	;volatile
  3947     04F6                     u1804:
  3948     04F6                     l2861:
  3949                           
  3950                           ;main.c: 57:         if(EUSART_is_rx_ready()){
  3951     04F6  318E  2653  3184   	fcall	_EUSART_is_rx_ready
  3952     04F9  3A00               	xorlw	0
  3953     04FA  1903               	skipnz
  3954     04FB  2CFD               	goto	u1811
  3955     04FC  2CFE               	goto	u1810
  3956     04FD                     u1811:
  3957     04FD  2CEA               	goto	l2859
  3958     04FE                     u1810:
  3959     04FE                     l2863:
  3960                           
  3961                           ;main.c: 58:             Dados_recebidos();
  3962     04FE  3187  273E  3184   	fcall	_Dados_recebidos
  3963     0501  2CEA               	goto	l2859
  3964     0502  3180  2842         	ljmp	start
  3965     0504                     __end_of_main:
  3966                           
  3967                           	psect	text1
  3968     03F3                     __ptext1:	
  3969 ;; *************** function _muda_passos *****************
  3970 ;; Defined at:
  3971 ;;		line 102 in file "funcoes.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3985 ;;      Params:         0       0       0       0       0       0
  3986 ;;      Locals:         0       0       4       0       0       0
  3987 ;;      Temps:          0       0       2       0       0       0
  3988 ;;      Totals:         0       0       6       0       0       0
  3989 ;;Total ram usage:        6 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 7
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999     03F3                     _muda_passos:	
  4000                           ;psect for function _muda_passos
  4001                           
  4002     03F3                     l2781:	
  4003                           ;incstack = 0
  4004                           ; Regs used in _muda_passos: [wreg-fsr0h+status,2+status,0]
  4005                           
  4006                           
  4007                           ;funcoes.c: 103:     switch(npassos){
  4008     03F3  2C0C               	goto	l2785
  4009     03F4                     l746:	
  4010                           ;funcoes.c: 105:             do { LATAbits.LATA1 = 1; } while(0);
  4011                           
  4012     03F4  0022               	movlb	2	; select bank2
  4013     03F5  148C               	bsf	12,1	;volatile
  4014     03F6                     l748:	
  4015                           ;funcoes.c: 106:             do { LATAbits.LATA2 = 0; } while(0);
  4016                           
  4017     03F6  110C               	bcf	12,2	;volatile
  4018     03F7                     l750:	
  4019                           ;funcoes.c: 107:             do { LATAbits.LATA3 = 0; } while(0);
  4020                           
  4021     03F7  118C               	bcf	12,3	;volatile
  4022     03F8                     l752:	
  4023                           ;funcoes.c: 108:             do { LATAbits.LATA4 = 1; } while(0);
  4024                           
  4025     03F8  160C               	bsf	12,4	;volatile
  4026     03F9  2C1B               	goto	l2787
  4027     03FA                     l756:	
  4028                           ;funcoes.c: 111:             do { LATAbits.LATA1 = 1; } while(0);
  4029                           
  4030     03FA  0022               	movlb	2	; select bank2
  4031     03FB  148C               	bsf	12,1	;volatile
  4032     03FC                     l758:	
  4033                           ;funcoes.c: 112:             do { LATAbits.LATA2 = 1; } while(0);
  4034                           
  4035     03FC  150C               	bsf	12,2	;volatile
  4036     03FD                     l760:	
  4037                           ;funcoes.c: 113:             do { LATAbits.LATA3 = 0; } while(0);
  4038                           
  4039     03FD  118C               	bcf	12,3	;volatile
  4040     03FE                     l762:	
  4041                           ;funcoes.c: 114:             do { LATAbits.LATA4 = 0; } while(0);
  4042                           
  4043     03FE  120C               	bcf	12,4	;volatile
  4044     03FF  2C1B               	goto	l2787
  4045     0400                     l765:	
  4046                           ;funcoes.c: 117:             do { LATAbits.LATA1 = 0; } while(0);
  4047                           
  4048     0400  0022               	movlb	2	; select bank2
  4049     0401  108C               	bcf	12,1	;volatile
  4050     0402                     l767:	
  4051                           ;funcoes.c: 118:             do { LATAbits.LATA2 = 1; } while(0);
  4052                           
  4053     0402  150C               	bsf	12,2	;volatile
  4054     0403                     l769:	
  4055                           ;funcoes.c: 119:             do { LATAbits.LATA3 = 1; } while(0);
  4056                           
  4057     0403  158C               	bsf	12,3	;volatile
  4058     0404                     l771:	
  4059                           ;funcoes.c: 120:             do { LATAbits.LATA4 = 0; } while(0);
  4060                           
  4061     0404  120C               	bcf	12,4	;volatile
  4062     0405  2C1B               	goto	l2787
  4063     0406                     l774:	
  4064                           ;funcoes.c: 123:             do { LATAbits.LATA1 = 0; } while(0);
  4065                           
  4066     0406  0022               	movlb	2	; select bank2
  4067     0407  108C               	bcf	12,1	;volatile
  4068     0408                     l776:	
  4069                           ;funcoes.c: 124:             do { LATAbits.LATA2 = 0; } while(0);
  4070                           
  4071     0408  110C               	bcf	12,2	;volatile
  4072     0409                     l778:	
  4073                           ;funcoes.c: 125:             do { LATAbits.LATA3 = 1; } while(0);
  4074                           
  4075     0409  158C               	bsf	12,3	;volatile
  4076     040A                     l780:	
  4077                           ;funcoes.c: 126:             do { LATAbits.LATA4 = 1; } while(0);
  4078                           
  4079     040A  160C               	bsf	12,4	;volatile
  4080     040B  2C1B               	goto	l2787
  4081     040C                     l2785:
  4082     040C  0021               	movlb	1	; select bank1
  4083     040D  0846               	movf	_npassos^(0+128),w
  4084                           
  4085                           ; Switch size 1, requested type "simple"
  4086                           ; Number of cases is 4, Range of values is 0 to 3
  4087                           ; switch strategies available:
  4088                           ; Name         Instructions Cycles
  4089                           ; simple_byte           13     7 (average)
  4090                           ; direct_byte           14     6 (fixed)
  4091                           ; jumptable            260     6 (fixed)
  4092                           ;	Chosen strategy is simple_byte
  4093     040E  3A00               	xorlw	0	; case 0
  4094     040F  1903               	skipnz
  4095     0410  2BF4               	goto	l746
  4096     0411  3A01               	xorlw	1	; case 1
  4097     0412  1903               	skipnz
  4098     0413  2BFA               	goto	l756
  4099     0414  3A03               	xorlw	3	; case 2
  4100     0415  1903               	skipnz
  4101     0416  2C00               	goto	l765
  4102     0417  3A01               	xorlw	1	; case 3
  4103     0418  1903               	skipnz
  4104     0419  2C06               	goto	l774
  4105     041A  2C1B               	goto	l2787
  4106     041B                     l2787:
  4107                           
  4108                           ;funcoes.c: 129:     if(flag_passos){
  4109     041B  0021               	movlb	1	; select bank1
  4110     041C  0844               	movf	_flag_passos^(0+128),w
  4111     041D  1903               	btfsc	3,2
  4112     041E  2C20               	goto	u1641
  4113     041F  2C21               	goto	u1640
  4114     0420                     u1641:
  4115     0420  2C39               	goto	l2795
  4116     0421                     u1640:
  4117     0421                     l2789:
  4118                           
  4119                           ;funcoes.c: 130:         npassos = (npassos == 0) ? 3 : (npassos - 1);
  4120     0421  0846               	movf	_npassos^(0+128),w
  4121     0422  1903               	btfsc	3,2
  4122     0423  2C25               	goto	u1651
  4123     0424  2C26               	goto	u1650
  4124     0425                     u1651:
  4125     0425  2C32               	goto	l2793
  4126     0426                     u1650:
  4127     0426                     l2791:
  4128     0426  0846               	movf	_npassos^(0+128),w
  4129     0427  00E6               	movwf	??_muda_passos^(0+128)
  4130     0428  01E7               	clrf	(??_muda_passos^(0+128)+1)
  4131     0429  1BE6               	btfsc	??_muda_passos^(0+128),7
  4132     042A  03E7               	decf	(??_muda_passos^(0+128)+1),f
  4133     042B  0866               	movf	??_muda_passos^(0+128),w
  4134     042C  3EFF               	addlw	255
  4135     042D  00E8               	movwf	_muda_passos$1295^(0+128)
  4136     042E  30FF               	movlw	255
  4137     042F  3D67               	addwfc	(??_muda_passos+1)^(0+128),w
  4138     0430  00E9               	movwf	(_muda_passos$1295+1)^(0+128)
  4139     0431  2C36               	goto	l786
  4140     0432                     l2793:
  4141     0432  3003               	movlw	3
  4142     0433  00E8               	movwf	_muda_passos$1295^(0+128)
  4143     0434  3000               	movlw	0
  4144     0435  00E9               	movwf	(_muda_passos$1295^(0+128)+1)
  4145     0436                     l786:
  4146     0436  0868               	movf	_muda_passos$1295^(0+128),w
  4147     0437  00C6               	movwf	_npassos^(0+128)
  4148                           
  4149                           ;funcoes.c: 131:     }else{
  4150     0438  2C4E               	goto	l792
  4151     0439                     l2795:
  4152                           
  4153                           ;funcoes.c: 132:         npassos = (npassos == 3) ? 0 : (npassos + 1);}
  4154     0439  3003               	movlw	3
  4155     043A  0646               	xorwf	_npassos^(0+128),w
  4156     043B  1903               	btfsc	3,2
  4157     043C  2C3E               	goto	u1661
  4158     043D  2C3F               	goto	u1660
  4159     043E                     u1661:
  4160     043E  2C49               	goto	l2799
  4161     043F                     u1660:
  4162     043F                     l2797:
  4163     043F  3001               	movlw	1
  4164     0440  0746               	addwf	_npassos^(0+128),w
  4165     0441  00EA               	movwf	_muda_passos$1296^(0+128)
  4166     0442  01EB               	clrf	(_muda_passos$1296+1)^(0+128)
  4167     0443  1803               	skipnc
  4168     0444  0AEB               	incf	(_muda_passos$1296^(0+128)+1),f
  4169     0445  1FC6               	btfss	_npassos^(0+128),7
  4170     0446  2C48               	goto	u1674
  4171     0447  03EB               	decf	(_muda_passos$1296^(0+128)+1),f
  4172     0448                     u1674:
  4173     0448  2C4B               	goto	l2801
  4174     0449                     l2799:
  4175     0449  01EA               	clrf	_muda_passos$1296^(0+128)
  4176     044A  01EB               	clrf	(_muda_passos$1296+1)^(0+128)
  4177     044B                     l2801:
  4178     044B  0021               	movlb	1	; select bank1
  4179     044C  086A               	movf	_muda_passos$1296^(0+128),w
  4180     044D  00C6               	movwf	_npassos^(0+128)
  4181     044E                     l792:
  4182     044E  0008               	return
  4183     044F                     __end_of_muda_passos:
  4184                           
  4185                           	psect	text2
  4186     06BE                     __ptext2:	
  4187 ;; *************** function _SYSTEM_Initialize *****************
  4188 ;; Defined at:
  4189 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4203 ;;      Params:         0       0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0
  4206 ;;      Totals:         0       0       0       0       0       0
  4207 ;;Total ram usage:        0 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 9
  4210 ;; This function calls:
  4211 ;;		_ADC_Initialize
  4212 ;;		_CMP1_Initialize
  4213 ;;		_DAC_Initialize
  4214 ;;		_EPWM1_Initialize
  4215 ;;		_EUSART_Initialize
  4216 ;;		_FVR_Initialize
  4217 ;;		_OSCILLATOR_Initialize
  4218 ;;		_PIN_MANAGER_Initialize
  4219 ;;		_TMR0_Initialize
  4220 ;;		_TMR1_Initialize
  4221 ;;		_TMR2_Initialize
  4222 ;;		_TMR4_Initialize
  4223 ;;		_TMR6_Initialize
  4224 ;;		_WDT_Initialize
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230     06BE                     _SYSTEM_Initialize:	
  4231                           ;psect for function _SYSTEM_Initialize
  4232                           
  4233     06BE                     l2745:	
  4234                           ;incstack = 0
  4235                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4236                           
  4237                           
  4238                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4239     06BE  318F  279A  3186   	fcall	_PIN_MANAGER_Initialize
  4240                           
  4241                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4242     06C1  318E  26A0  3186   	fcall	_OSCILLATOR_Initialize
  4243                           
  4244                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4245     06C4  318E  264F  3186   	fcall	_WDT_Initialize
  4246                           
  4247                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  4248     06C7  318E  2664  3186   	fcall	_DAC_Initialize
  4249                           
  4250                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  4251     06CA  318E  264B  3186   	fcall	_FVR_Initialize
  4252                           
  4253                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  4254     06CD  318F  274B  3186   	fcall	_TMR4_Initialize
  4255                           
  4256                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  4257     06D0  318E  26AF  3186   	fcall	_TMR2_Initialize
  4258                           
  4259                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  4260     06D3  318F  2785  3186   	fcall	_TMR0_Initialize
  4261                           
  4262                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  4263     06D6  318F  275E  3186   	fcall	_TMR6_Initialize
  4264                           
  4265                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  4266     06D9  318E  265E  3186   	fcall	_CMP1_Initialize
  4267                           
  4268                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  4269     06DC  318E  26A7  3186   	fcall	_ADC_Initialize
  4270                           
  4271                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  4272     06DF  318E  26C1  3186   	fcall	_EPWM1_Initialize
  4273                           
  4274                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  4275     06E2  3187  27C9  3186   	fcall	_TMR1_Initialize
  4276                           
  4277                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  4278     06E5  3187  2765  3186   	fcall	_EUSART_Initialize
  4279     06E8                     l39:
  4280     06E8  0008               	return
  4281     06E9                     __end_of_SYSTEM_Initialize:
  4282                           
  4283                           	psect	text3
  4284     0E4F                     __ptext3:	
  4285 ;; *************** function _WDT_Initialize *****************
  4286 ;; Defined at:
  4287 ;;		line 79 in file "mcc_generated_files/mcc.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4301 ;;      Params:         0       0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0
  4304 ;;      Totals:         0       0       0       0       0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; Hardware stack levels required when called: 7
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_SYSTEM_Initialize
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315     0E4F                     _WDT_Initialize:	
  4316                           ;psect for function _WDT_Initialize
  4317                           
  4318     0E4F                     l2561:	
  4319                           ;incstack = 0
  4320                           ; Regs used in _WDT_Initialize: [wreg]
  4321                           
  4322                           
  4323                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  4324     0E4F  3016               	movlw	22
  4325     0E50  0021               	movlb	1	; select bank1
  4326     0E51  0097               	movwf	23	;volatile
  4327     0E52                     l45:
  4328     0E52  0008               	return
  4329     0E53                     __end_of_WDT_Initialize:
  4330                           
  4331                           	psect	text4
  4332     0F5E                     __ptext4:	
  4333 ;; *************** function _TMR6_Initialize *****************
  4334 ;; Defined at:
  4335 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4349 ;;      Params:         0       0       0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0
  4352 ;;      Totals:         0       0       0       0       0       0
  4353 ;;Total ram usage:        0 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 8
  4356 ;; This function calls:
  4357 ;;		_TMR6_SetInterruptHandler
  4358 ;; This function is called by:
  4359 ;;		_SYSTEM_Initialize
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363     0F5E                     _TMR6_Initialize:	
  4364                           ;psect for function _TMR6_Initialize
  4365                           
  4366     0F5E                     l2599:	
  4367                           ;incstack = 0
  4368                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4369                           
  4370                           
  4371                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xBB;
  4372     0F5E  30BB               	movlw	187
  4373     0F5F  0028               	movlb	8	; select bank8
  4374     0F60  009D               	movwf	29	;volatile
  4375     0F61                     l2601:
  4376                           
  4377                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  4378     0F61  019C               	clrf	28	;volatile
  4379     0F62                     l2603:
  4380                           
  4381                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  4382     0F62  0020               	movlb	0	; select bank0
  4383     0F63  1193               	bcf	19,3	;volatile
  4384     0F64                     l2605:
  4385                           
  4386                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  4387     0F64  0021               	movlb	1	; select bank1
  4388     0F65  1593               	bsf	19,3	;volatile
  4389     0F66                     l2607:
  4390                           
  4391                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  4392     0F66  3003               	movlw	low _TMR6_DefaultInterruptHandler
  4393     0F67  00E6               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  4394     0F68  3000               	movlw	high _TMR6_DefaultInterruptHandler
  4395     0F69  00E7               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4396     0F6A  318E  268E  318F   	fcall	_TMR6_SetInterruptHandler
  4397     0F6D                     l2609:
  4398                           
  4399                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x07;
  4400     0F6D  3007               	movlw	7
  4401     0F6E  0028               	movlb	8	; select bank8
  4402     0F6F  009E               	movwf	30	;volatile
  4403     0F70                     l485:
  4404     0F70  0008               	return
  4405     0F71                     __end_of_TMR6_Initialize:
  4406                           
  4407                           	psect	text5
  4408     0E8E                     __ptext5:	
  4409 ;; *************** function _TMR6_SetInterruptHandler *****************
  4410 ;; Defined at:
  4411 ;;		line 132 in file "mcc_generated_files/tmr6.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4414 ;;		 -> DRMotordePassos(1), TMR6_DefaultInterruptHandler(1), 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4426 ;;      Params:         0       0       2       0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0
  4429 ;;      Totals:         0       0       2       0       0       0
  4430 ;;Total ram usage:        2 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 7
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_TMR6_Initialize
  4437 ;;		_main
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441     0E8E                     _TMR6_SetInterruptHandler:	
  4442                           ;psect for function _TMR6_SetInterruptHandler
  4443                           
  4444     0E8E                     l2443:	
  4445                           ;incstack = 0
  4446                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  4447                           
  4448                           
  4449                           ;mcc_generated_files/tmr6.c: 133:     TMR6_InterruptHandler = InterruptHandler;
  4450     0E8E  0021               	movlb	1	; select bank1
  4451     0E8F  0867               	movf	(TMR6_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4452     0E90  00D9               	movwf	(_TMR6_InterruptHandler+1)^(0+128)
  4453     0E91  0866               	movf	TMR6_SetInterruptHandler@InterruptHandler^(0+128),w
  4454     0E92  00D8               	movwf	_TMR6_InterruptHandler^(0+128)
  4455     0E93                     l507:
  4456     0E93  0008               	return
  4457     0E94                     __end_of_TMR6_SetInterruptHandler:
  4458                           
  4459                           	psect	text6
  4460     0F4B                     __ptext6:	
  4461 ;; *************** function _TMR4_Initialize *****************
  4462 ;; Defined at:
  4463 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0, pclath, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4477 ;;      Params:         0       0       0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0
  4480 ;;      Totals:         0       0       0       0       0       0
  4481 ;;Total ram usage:        0 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; Hardware stack levels required when called: 8
  4484 ;; This function calls:
  4485 ;;		_TMR4_SetInterruptHandler
  4486 ;; This function is called by:
  4487 ;;		_SYSTEM_Initialize
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491     0F4B                     _TMR4_Initialize:	
  4492                           ;psect for function _TMR4_Initialize
  4493                           
  4494     0F4B                     l2567:	
  4495                           ;incstack = 0
  4496                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4497                           
  4498                           
  4499                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF9;
  4500     0F4B  30F9               	movlw	249
  4501     0F4C  0028               	movlb	8	; select bank8
  4502     0F4D  0096               	movwf	22	;volatile
  4503     0F4E                     l2569:
  4504                           
  4505                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  4506     0F4E  0195               	clrf	21	;volatile
  4507     0F4F                     l2571:
  4508                           
  4509                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  4510     0F4F  0020               	movlb	0	; select bank0
  4511     0F50  1093               	bcf	19,1	;volatile
  4512     0F51                     l2573:
  4513                           
  4514                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  4515     0F51  0021               	movlb	1	; select bank1
  4516     0F52  1493               	bsf	19,1	;volatile
  4517     0F53                     l2575:
  4518                           
  4519                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  4520     0F53  3002               	movlw	low _TMR4_DefaultInterruptHandler
  4521     0F54  00E6               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4522     0F55  3000               	movlw	high _TMR4_DefaultInterruptHandler
  4523     0F56  00E7               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4524     0F57  318E  2688  318F   	fcall	_TMR4_SetInterruptHandler
  4525     0F5A                     l2577:
  4526                           
  4527                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x4F;
  4528     0F5A  304F               	movlw	79
  4529     0F5B  0028               	movlb	8	; select bank8
  4530     0F5C  0097               	movwf	23	;volatile
  4531     0F5D                     l403:
  4532     0F5D  0008               	return
  4533     0F5E                     __end_of_TMR4_Initialize:
  4534                           
  4535                           	psect	text7
  4536     0E88                     __ptext7:	
  4537 ;; *************** function _TMR4_SetInterruptHandler *****************
  4538 ;; Defined at:
  4539 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4542 ;;		 -> ProcessaDados(1), TMR4_DefaultInterruptHandler(1), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4554 ;;      Params:         0       0       2       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0
  4557 ;;      Totals:         0       0       2       0       0       0
  4558 ;;Total ram usage:        2 bytes
  4559 ;; Hardware stack levels used: 1
  4560 ;; Hardware stack levels required when called: 7
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_TMR4_Initialize
  4565 ;;		_main
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569     0E88                     _TMR4_SetInterruptHandler:	
  4570                           ;psect for function _TMR4_SetInterruptHandler
  4571                           
  4572     0E88                     l2439:	
  4573                           ;incstack = 0
  4574                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  4575                           
  4576                           
  4577                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  4578     0E88  0021               	movlb	1	; select bank1
  4579     0E89  0867               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4580     0E8A  00DD               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  4581     0E8B  0866               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  4582     0E8C  00DC               	movwf	_TMR4_InterruptHandler^(0+128)
  4583     0E8D                     l425:
  4584     0E8D  0008               	return
  4585     0E8E                     __end_of_TMR4_SetInterruptHandler:
  4586                           
  4587                           	psect	text8
  4588     0EAF                     __ptext8:	
  4589 ;; *************** function _TMR2_Initialize *****************
  4590 ;; Defined at:
  4591 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4605 ;;      Params:         0       0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0
  4608 ;;      Totals:         0       0       0       0       0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 7
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_SYSTEM_Initialize
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619     0EAF                     _TMR2_Initialize:	
  4620                           ;psect for function _TMR2_Initialize
  4621                           
  4622     0EAF                     l2579:	
  4623                           ;incstack = 0
  4624                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4625                           
  4626                           
  4627                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4628     0EAF  30FF               	movlw	255
  4629     0EB0  0020               	movlb	0	; select bank0
  4630     0EB1  009B               	movwf	27	;volatile
  4631     0EB2                     l2581:
  4632                           
  4633                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4634     0EB2  019A               	clrf	26	;volatile
  4635     0EB3                     l2583:
  4636                           
  4637                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4638     0EB3  1091               	bcf	17,1	;volatile
  4639     0EB4                     l2585:
  4640                           
  4641                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x07;
  4642     0EB4  3007               	movlw	7
  4643     0EB5  009C               	movwf	28	;volatile
  4644     0EB6                     l318:
  4645     0EB6  0008               	return
  4646     0EB7                     __end_of_TMR2_Initialize:
  4647                           
  4648                           	psect	text9
  4649     07C9                     __ptext9:	
  4650 ;; *************** function _TMR1_Initialize *****************
  4651 ;; Defined at:
  4652 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4666 ;;      Params:         0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0
  4669 ;;      Totals:         0       0       0       0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 8
  4673 ;; This function calls:
  4674 ;;		_TMR1_SetGateInterruptHandler
  4675 ;; This function is called by:
  4676 ;;		_SYSTEM_Initialize
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680     07C9                     _TMR1_Initialize:	
  4681                           ;psect for function _TMR1_Initialize
  4682                           
  4683     07C9                     l2633:	
  4684                           ;incstack = 0
  4685                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4686                           
  4687                           
  4688                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  4689     07C9  30C0               	movlw	192
  4690     07CA  0020               	movlb	0	; select bank0
  4691     07CB  0099               	movwf	25	;volatile
  4692                           
  4693                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x02;
  4694     07CC  3002               	movlw	2
  4695     07CD  0097               	movwf	23	;volatile
  4696                           
  4697                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x18;
  4698     07CE  3018               	movlw	24
  4699     07CF  0096               	movwf	22	;volatile
  4700     07D0                     l2635:
  4701                           
  4702                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  4703     07D0  1011               	bcf	17,0	;volatile
  4704                           
  4705                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4706     07D1  0817               	movf	23,w	;volatile
  4707     07D2  0021               	movlb	1	; select bank1
  4708     07D3  00C0               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  4709     07D4  0020               	movlb	0	; select bank0
  4710     07D5  0816               	movf	22,w	;volatile
  4711     07D6  0021               	movlb	1	; select bank1
  4712     07D7  00BF               	movwf	_timer1ReloadVal^(0+128)	;volatile
  4713     07D8                     l2637:
  4714                           
  4715                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  4716     07D8  0020               	movlb	0	; select bank0
  4717     07D9  1391               	bcf	17,7	;volatile
  4718     07DA                     l2639:
  4719                           
  4720                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  4721     07DA  0021               	movlb	1	; select bank1
  4722     07DB  1791               	bsf	17,7	;volatile
  4723     07DC                     l2641:
  4724                           
  4725                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  4726     07DC  3046               	movlw	low _TMR1_DefaultGateInterruptHandler
  4727     07DD  00E6               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  4728     07DE  300E               	movlw	high _TMR1_DefaultGateInterruptHandler
  4729     07DF  00E7               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  4730     07E0  318E  2682  3187   	fcall	_TMR1_SetGateInterruptHandler
  4731     07E3                     l2643:
  4732                           
  4733                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x21;
  4734     07E3  3021               	movlw	33
  4735     07E4  0020               	movlb	0	; select bank0
  4736     07E5  0098               	movwf	24	;volatile
  4737     07E6                     l148:
  4738     07E6  0008               	return
  4739     07E7                     __end_of_TMR1_Initialize:
  4740                           
  4741                           	psect	text10
  4742     0E82                     __ptext10:	
  4743 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  4744 ;; Defined at:
  4745 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4748 ;;		 -> posicao_bola_tubo(1), TMR1_DefaultGateInterruptHandler(1), 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4760 ;;      Params:         0       0       2       0       0       0
  4761 ;;      Locals:         0       0       0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0
  4763 ;;      Totals:         0       0       2       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; Hardware stack levels required when called: 7
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_TMR1_Initialize
  4771 ;;		_main
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775     0E82                     _TMR1_SetGateInterruptHandler:	
  4776                           ;psect for function _TMR1_SetGateInterruptHandler
  4777                           
  4778     0E82                     l2413:	
  4779                           ;incstack = 0
  4780                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  4781                           
  4782                           
  4783                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  4784     0E82  0021               	movlb	1	; select bank1
  4785     0E83  0867               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  4786     0E84  00E5               	movwf	(_TMR1_GateInterruptHandler+1)^(0+128)
  4787     0E85  0866               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  4788     0E86  00E4               	movwf	_TMR1_GateInterruptHandler^(0+128)
  4789     0E87                     l181:
  4790     0E87  0008               	return
  4791     0E88                     __end_of_TMR1_SetGateInterruptHandler:
  4792                           
  4793                           	psect	text11
  4794     0F85                     __ptext11:	
  4795 ;; *************** function _TMR0_Initialize *****************
  4796 ;; Defined at:
  4797 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0, pclath, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4811 ;;      Params:         0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 8
  4818 ;; This function calls:
  4819 ;;		_TMR0_SetInterruptHandler
  4820 ;; This function is called by:
  4821 ;;		_SYSTEM_Initialize
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825     0F85                     _TMR0_Initialize:	
  4826                           ;psect for function _TMR0_Initialize
  4827                           
  4828     0F85                     l2587:	
  4829                           ;incstack = 0
  4830                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4831                           
  4832                           
  4833                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4834     0F85  0021               	movlb	1	; select bank1
  4835     0F86  0815               	movf	21,w	;volatile
  4836     0F87  39C0               	andlw	192
  4837     0F88  3817               	iorlw	23
  4838     0F89  0095               	movwf	21	;volatile
  4839     0F8A                     l2589:
  4840                           
  4841                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x64;
  4842     0F8A  3064               	movlw	100
  4843     0F8B  0020               	movlb	0	; select bank0
  4844     0F8C  0095               	movwf	21	;volatile
  4845     0F8D                     l2591:
  4846                           
  4847                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 100;
  4848     0F8D  3064               	movlw	100
  4849     0F8E  0021               	movlb	1	; select bank1
  4850     0F8F  00C7               	movwf	_timer0ReloadVal^(0+128)	;volatile
  4851     0F90                     l2593:
  4852                           
  4853                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  4854     0F90  110B               	bcf	11,2	;volatile
  4855     0F91                     l2595:
  4856                           
  4857                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  4858     0F91  168B               	bsf	11,5	;volatile
  4859     0F92                     l2597:
  4860                           
  4861                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4862     0F92  3045               	movlw	low _TMR0_DefaultInterruptHandler
  4863     0F93  00E6               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4864     0F94  300E               	movlw	high _TMR0_DefaultInterruptHandler
  4865     0F95  00E7               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4866     0F96  318E  267C  318F   	fcall	_TMR0_SetInterruptHandler
  4867     0F99                     l445:
  4868     0F99  0008               	return
  4869     0F9A                     __end_of_TMR0_Initialize:
  4870                           
  4871                           	psect	text12
  4872     0E7C                     __ptext12:	
  4873 ;; *************** function _TMR0_SetInterruptHandler *****************
  4874 ;; Defined at:
  4875 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4878 ;;		 -> inicia_ultrasom(1), TMR0_DefaultInterruptHandler(1), 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4890 ;;      Params:         0       0       2       0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0
  4893 ;;      Totals:         0       0       2       0       0       0
  4894 ;;Total ram usage:        2 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 7
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_TMR0_Initialize
  4901 ;;		_main
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905     0E7C                     _TMR0_SetInterruptHandler:	
  4906                           ;psect for function _TMR0_SetInterruptHandler
  4907                           
  4908     0E7C                     l2441:	
  4909                           ;incstack = 0
  4910                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4911                           
  4912                           
  4913                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  4914     0E7C  0021               	movlb	1	; select bank1
  4915     0E7D  0867               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4916     0E7E  00DB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  4917     0E7F  0866               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  4918     0E80  00DA               	movwf	_TMR0_InterruptHandler^(0+128)
  4919     0E81                     l461:
  4920     0E81  0008               	return
  4921     0E82                     __end_of_TMR0_SetInterruptHandler:
  4922                           
  4923                           	psect	text13
  4924     0F9A                     __ptext13:	
  4925 ;; *************** function _PIN_MANAGER_Initialize *****************
  4926 ;; Defined at:
  4927 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      void 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4941 ;;      Params:         0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0
  4944 ;;      Totals:         0       0       0       0       0       0
  4945 ;;Total ram usage:        0 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 7
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_SYSTEM_Initialize
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955     0F9A                     _PIN_MANAGER_Initialize:	
  4956                           ;psect for function _PIN_MANAGER_Initialize
  4957                           
  4958     0F9A                     l2543:	
  4959                           ;incstack = 0
  4960                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4961                           
  4962                           
  4963                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4964     0F9A  0022               	movlb	2	; select bank2
  4965     0F9B  018C               	clrf	12	;volatile
  4966                           
  4967                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4968     0F9C  018D               	clrf	13	;volatile
  4969     0F9D                     l2545:
  4970                           
  4971                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x21;
  4972     0F9D  3021               	movlw	33
  4973     0F9E  0021               	movlb	1	; select bank1
  4974     0F9F  008C               	movwf	12	;volatile
  4975     0FA0                     l2547:
  4976                           
  4977                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  4978     0FA0  30F7               	movlw	247
  4979     0FA1  008D               	movwf	13	;volatile
  4980     0FA2                     l2549:
  4981                           
  4982                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  4983     0FA2  30F0               	movlw	240
  4984     0FA3  0023               	movlb	3	; select bank3
  4985     0FA4  008D               	movwf	13	;volatile
  4986     0FA5                     l2551:
  4987                           
  4988                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  4989     0FA5  301F               	movlw	31
  4990     0FA6  008C               	movwf	12	;volatile
  4991                           
  4992                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  4993     0FA7  0024               	movlb	4	; select bank4
  4994     0FA8  018D               	clrf	13	;volatile
  4995                           
  4996                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  4997     0FA9  018C               	clrf	12	;volatile
  4998     0FAA                     l2553:
  4999                           
  5000                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  5001     0FAA  0021               	movlb	1	; select bank1
  5002     0FAB  1795               	bsf	21,7	;volatile
  5003                           
  5004                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  5005     0FAC  0022               	movlb	2	; select bank2
  5006     0FAD  019D               	clrf	29	;volatile
  5007                           
  5008                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  5009     0FAE  019E               	clrf	30	;volatile
  5010     0FAF                     l70:
  5011     0FAF  0008               	return
  5012     0FB0                     __end_of_PIN_MANAGER_Initialize:
  5013                           
  5014                           	psect	text14
  5015     0EA0                     __ptext14:	
  5016 ;; *************** function _OSCILLATOR_Initialize *****************
  5017 ;; Defined at:
  5018 ;;		line 69 in file "mcc_generated_files/mcc.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5032 ;;      Params:         0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used: 1
  5038 ;; Hardware stack levels required when called: 7
  5039 ;; This function calls:
  5040 ;;		Nothing
  5041 ;; This function is called by:
  5042 ;;		_SYSTEM_Initialize
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046     0EA0                     _OSCILLATOR_Initialize:	
  5047                           ;psect for function _OSCILLATOR_Initialize
  5048                           
  5049     0EA0                     l2555:	
  5050                           ;incstack = 0
  5051                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5052                           
  5053                           
  5054                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  5055     0EA0  3078               	movlw	120
  5056     0EA1  0021               	movlb	1	; select bank1
  5057     0EA2  0099               	movwf	25	;volatile
  5058     0EA3                     l2557:
  5059                           
  5060                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  5061     0EA3  0198               	clrf	24	;volatile
  5062     0EA4                     l2559:
  5063                           
  5064                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  5065     0EA4  0022               	movlb	2	; select bank2
  5066     0EA5  0196               	clrf	22	;volatile
  5067     0EA6                     l42:
  5068     0EA6  0008               	return
  5069     0EA7                     __end_of_OSCILLATOR_Initialize:
  5070                           
  5071                           	psect	text15
  5072     0E4B                     __ptext15:	
  5073 ;; *************** function _FVR_Initialize *****************
  5074 ;; Defined at:
  5075 ;;		line 58 in file "mcc_generated_files/fvr.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5089 ;;      Params:         0       0       0       0       0       0
  5090 ;;      Locals:         0       0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0
  5092 ;;      Totals:         0       0       0       0       0       0
  5093 ;;Total ram usage:        0 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 7
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_SYSTEM_Initialize
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103     0E4B                     _FVR_Initialize:	
  5104                           ;psect for function _FVR_Initialize
  5105                           
  5106     0E4B                     l2565:	
  5107                           ;incstack = 0
  5108                           ; Regs used in _FVR_Initialize: [wreg]
  5109                           
  5110                           
  5111                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  5112     0E4B  3081               	movlw	129
  5113     0E4C  0022               	movlb	2	; select bank2
  5114     0E4D  0097               	movwf	23	;volatile
  5115     0E4E                     l118:
  5116     0E4E  0008               	return
  5117     0E4F                     __end_of_FVR_Initialize:
  5118                           
  5119                           	psect	text16
  5120     0765                     __ptext16:	
  5121 ;; *************** function _EUSART_Initialize *****************
  5122 ;; Defined at:
  5123 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0, pclath, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5137 ;;      Params:         0       0       0       0       0       0
  5138 ;;      Locals:         0       0       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0       0
  5140 ;;      Totals:         0       0       0       0       0       0
  5141 ;;Total ram usage:        0 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 8
  5144 ;; This function calls:
  5145 ;;		_EUSART_SetErrorHandler
  5146 ;;		_EUSART_SetFramingErrorHandler
  5147 ;;		_EUSART_SetOverrunErrorHandler
  5148 ;; This function is called by:
  5149 ;;		_SYSTEM_Initialize
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153     0765                     _EUSART_Initialize:	
  5154                           ;psect for function _EUSART_Initialize
  5155                           
  5156     0765                     l2645:	
  5157                           ;incstack = 0
  5158                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5159                           
  5160                           
  5161                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5162     0765  3008               	movlw	8
  5163     0766  0023               	movlb	3	; select bank3
  5164     0767  009F               	movwf	31	;volatile
  5165                           
  5166                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5167     0768  3090               	movlw	144
  5168     0769  009D               	movwf	29	;volatile
  5169                           
  5170                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5171     076A  3024               	movlw	36
  5172     076B  009E               	movwf	30	;volatile
  5173                           
  5174                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  5175     076C  3022               	movlw	34
  5176     076D  009B               	movwf	27	;volatile
  5177     076E                     l2647:
  5178                           
  5179                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5180     076E  019C               	clrf	28	;volatile
  5181     076F                     l2649:
  5182                           
  5183                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5184     076F  3000               	movlw	0
  5185     0770  0021               	movlb	1	; select bank1
  5186     0771  00E6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  5187     0772  3000               	movlw	0
  5188     0773  00E7               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  5189     0774  318E  2670  3187   	fcall	_EUSART_SetFramingErrorHandler
  5190     0777                     l2651:
  5191                           
  5192                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5193     0777  3000               	movlw	0
  5194     0778  0021               	movlb	1	; select bank1
  5195     0779  00E6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  5196     077A  3000               	movlw	0
  5197     077B  00E7               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  5198     077C  318E  2676  3187   	fcall	_EUSART_SetOverrunErrorHandler
  5199     077F                     l2653:
  5200                           
  5201                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5202     077F  3000               	movlw	0
  5203     0780  0021               	movlb	1	; select bank1
  5204     0781  00E6               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  5205     0782  3000               	movlw	0
  5206     0783  00E7               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  5207     0784  318E  266A  3187   	fcall	_EUSART_SetErrorHandler
  5208     0787                     l2655:
  5209                           
  5210                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5211     0787  0021               	movlb	1	; select bank1
  5212     0788  01C8               	clrf	_eusartRxLastError^(0+128)	;volatile
  5213     0789                     l260:
  5214     0789  0008               	return
  5215     078A                     __end_of_EUSART_Initialize:
  5216                           
  5217                           	psect	text17
  5218     0E76                     __ptext17:	
  5219 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5220 ;; Defined at:
  5221 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5224 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5236 ;;      Params:         0       0       2       0       0       0
  5237 ;;      Locals:         0       0       0       0       0       0
  5238 ;;      Temps:          0       0       0       0       0       0
  5239 ;;      Totals:         0       0       2       0       0       0
  5240 ;;Total ram usage:        2 bytes
  5241 ;; Hardware stack levels used: 1
  5242 ;; Hardware stack levels required when called: 7
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_EUSART_Initialize
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250     0E76                     _EUSART_SetOverrunErrorHandler:	
  5251                           ;psect for function _EUSART_SetOverrunErrorHandler
  5252                           
  5253     0E76                     l2435:	
  5254                           ;incstack = 0
  5255                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5256                           
  5257                           
  5258                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5259     0E76  0021               	movlb	1	; select bank1
  5260     0E77  0867               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  5261     0E78  00E1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5262     0E79  0866               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  5263     0E7A  00E0               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5264     0E7B                     l302:
  5265     0E7B  0008               	return
  5266     0E7C                     __end_of_EUSART_SetOverrunErrorHandler:
  5267                           
  5268                           	psect	text18
  5269     0E70                     __ptext18:	
  5270 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5271 ;; Defined at:
  5272 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5275 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5287 ;;      Params:         0       0       2       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0
  5290 ;;      Totals:         0       0       2       0       0       0
  5291 ;;Total ram usage:        2 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 7
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_EUSART_Initialize
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301     0E70                     _EUSART_SetFramingErrorHandler:	
  5302                           ;psect for function _EUSART_SetFramingErrorHandler
  5303                           
  5304     0E70                     l2433:	
  5305                           ;incstack = 0
  5306                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5307                           
  5308                           
  5309                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5310     0E70  0021               	movlb	1	; select bank1
  5311     0E71  0867               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  5312     0E72  00E3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5313     0E73  0866               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  5314     0E74  00E2               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5315     0E75                     l299:
  5316     0E75  0008               	return
  5317     0E76                     __end_of_EUSART_SetFramingErrorHandler:
  5318                           
  5319                           	psect	text19
  5320     0E6A                     __ptext19:	
  5321 ;; *************** function _EUSART_SetErrorHandler *****************
  5322 ;; Defined at:
  5323 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5326 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5338 ;;      Params:         0       0       2       0       0       0
  5339 ;;      Locals:         0       0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0
  5341 ;;      Totals:         0       0       2       0       0       0
  5342 ;;Total ram usage:        2 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; Hardware stack levels required when called: 7
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_EUSART_Initialize
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352     0E6A                     _EUSART_SetErrorHandler:	
  5353                           ;psect for function _EUSART_SetErrorHandler
  5354                           
  5355     0E6A                     l2437:	
  5356                           ;incstack = 0
  5357                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5358                           
  5359                           
  5360                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  5361     0E6A  0021               	movlb	1	; select bank1
  5362     0E6B  0867               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  5363     0E6C  00DF               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5364     0E6D  0866               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  5365     0E6E  00DE               	movwf	_EUSART_ErrorHandler^(0+128)
  5366     0E6F                     l305:
  5367     0E6F  0008               	return
  5368     0E70                     __end_of_EUSART_SetErrorHandler:
  5369                           
  5370                           	psect	text20
  5371     0EC1                     __ptext20:	
  5372 ;; *************** function _EPWM1_Initialize *****************
  5373 ;; Defined at:
  5374 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5388 ;;      Params:         0       0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0
  5391 ;;      Totals:         0       0       0       0       0       0
  5392 ;;Total ram usage:        0 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 7
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_SYSTEM_Initialize
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402     0EC1                     _EPWM1_Initialize:	
  5403                           ;psect for function _EPWM1_Initialize
  5404                           
  5405     0EC1                     l2619:	
  5406                           ;incstack = 0
  5407                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  5408                           
  5409                           
  5410                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x0C;
  5411     0EC1  300C               	movlw	12
  5412     0EC2  0025               	movlb	5	; select bank5
  5413     0EC3  0093               	movwf	19	;volatile
  5414     0EC4                     l2621:
  5415                           
  5416                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  5417     0EC4  0195               	clrf	21	;volatile
  5418     0EC5                     l2623:
  5419                           
  5420                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  5421     0EC5  3080               	movlw	128
  5422     0EC6  0094               	movwf	20	;volatile
  5423     0EC7                     l2625:
  5424                           
  5425                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  5426     0EC7  3001               	movlw	1
  5427     0EC8  0096               	movwf	22	;volatile
  5428     0EC9                     l2627:
  5429                           
  5430                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  5431     0EC9  0192               	clrf	18	;volatile
  5432     0ECA                     l2629:
  5433                           
  5434                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x00;
  5435     0ECA  0191               	clrf	17	;volatile
  5436     0ECB                     l2631:
  5437                           
  5438                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  5439     0ECB  30FC               	movlw	-4
  5440     0ECC  059E               	andwf	30,f	;volatile
  5441     0ECD                     l354:
  5442     0ECD  0008               	return
  5443     0ECE                     __end_of_EPWM1_Initialize:
  5444                           
  5445                           	psect	text21
  5446     0E64                     __ptext21:	
  5447 ;; *************** function _DAC_Initialize *****************
  5448 ;; Defined at:
  5449 ;;		line 58 in file "mcc_generated_files/dac.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;		None
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      void 
  5456 ;; Registers used:
  5457 ;;		wreg
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5463 ;;      Params:         0       0       0       0       0       0
  5464 ;;      Locals:         0       0       0       0       0       0
  5465 ;;      Temps:          0       0       0       0       0       0
  5466 ;;      Totals:         0       0       0       0       0       0
  5467 ;;Total ram usage:        0 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; Hardware stack levels required when called: 7
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_SYSTEM_Initialize
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477     0E64                     _DAC_Initialize:	
  5478                           ;psect for function _DAC_Initialize
  5479                           
  5480     0E64                     l2563:	
  5481                           ;incstack = 0
  5482                           ; Regs used in _DAC_Initialize: [wreg]
  5483                           
  5484                           
  5485                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  5486     0E64  3080               	movlw	128
  5487     0E65  0022               	movlb	2	; select bank2
  5488     0E66  0098               	movwf	24	;volatile
  5489                           
  5490                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  5491     0E67  3006               	movlw	6
  5492     0E68  0099               	movwf	25	;volatile
  5493     0E69                     l376:
  5494     0E69  0008               	return
  5495     0E6A                     __end_of_DAC_Initialize:
  5496                           
  5497                           	psect	text22
  5498     0E5E                     __ptext22:	
  5499 ;; *************** function _CMP1_Initialize *****************
  5500 ;; Defined at:
  5501 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5515 ;;      Params:         0       0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0
  5518 ;;      Totals:         0       0       0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 7
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_SYSTEM_Initialize
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529     0E5E                     _CMP1_Initialize:	
  5530                           ;psect for function _CMP1_Initialize
  5531                           
  5532     0E5E                     l2611:	
  5533                           ;incstack = 0
  5534                           ; Regs used in _CMP1_Initialize: [wreg]
  5535                           
  5536                           
  5537                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  5538     0E5E  3084               	movlw	132
  5539     0E5F  0022               	movlb	2	; select bank2
  5540     0E60  0091               	movwf	17	;volatile
  5541                           
  5542                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  5543     0E61  3010               	movlw	16
  5544     0E62  0092               	movwf	18	;volatile
  5545     0E63                     l366:
  5546     0E63  0008               	return
  5547     0E64                     __end_of_CMP1_Initialize:
  5548                           
  5549                           	psect	text23
  5550     0EA7                     __ptext23:	
  5551 ;; *************** function _ADC_Initialize *****************
  5552 ;; Defined at:
  5553 ;;		line 67 in file "mcc_generated_files/adc.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5567 ;;      Params:         0       0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; Hardware stack levels required when called: 7
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_SYSTEM_Initialize
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581     0EA7                     _ADC_Initialize:	
  5582                           ;psect for function _ADC_Initialize
  5583                           
  5584     0EA7                     l2613:	
  5585                           ;incstack = 0
  5586                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5587                           
  5588                           
  5589                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  5590     0EA7  30D3               	movlw	211
  5591     0EA8  0021               	movlb	1	; select bank1
  5592     0EA9  009E               	movwf	30	;volatile
  5593     0EAA                     l2615:
  5594                           
  5595                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  5596     0EAA  019B               	clrf	27	;volatile
  5597     0EAB                     l2617:
  5598                           
  5599                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5600     0EAB  019C               	clrf	28	;volatile
  5601                           
  5602                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5603     0EAC  3001               	movlw	1
  5604     0EAD  009D               	movwf	29	;volatile
  5605     0EAE                     l90:
  5606     0EAE  0008               	return
  5607     0EAF                     __end_of_ADC_Initialize:
  5608                           
  5609                           	psect	text24
  5610     0E53                     __ptext24:	
  5611 ;; *************** function _EUSART_is_rx_ready *****************
  5612 ;; Defined at:
  5613 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;		None
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      _Bool 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5627 ;;      Params:         0       0       0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0
  5630 ;;      Totals:         0       0       0       0       0       0
  5631 ;;Total ram usage:        0 bytes
  5632 ;; Hardware stack levels used: 1
  5633 ;; Hardware stack levels required when called: 7
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_main
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641     0E53                     _EUSART_is_rx_ready:	
  5642                           ;psect for function _EUSART_is_rx_ready
  5643                           
  5644     0E53                     l2773:	
  5645                           ;incstack = 0
  5646                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5647                           
  5648                           
  5649                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  5650     0E53  0020               	movlb	0	; select bank0
  5651     0E54  0E11               	swapf	17,w	;volatile
  5652     0E55  0C89               	rrf	9,f
  5653     0E56  3901               	andlw	1
  5654     0E57                     l268:
  5655     0E57  0008               	return
  5656     0E58                     __end_of_EUSART_is_rx_ready:
  5657                           
  5658                           	psect	text25
  5659     073E                     __ptext25:	
  5660 ;; *************** function _Dados_recebidos *****************
  5661 ;; Defined at:
  5662 ;;		line 139 in file "funcoes.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  rxData          1    2[BANK1 ] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5676 ;;      Params:         0       0       0       0       0       0
  5677 ;;      Locals:         0       0       1       0       0       0
  5678 ;;      Temps:          0       0       1       0       0       0
  5679 ;;      Totals:         0       0       2       0       0       0
  5680 ;;Total ram usage:        2 bytes
  5681 ;; Hardware stack levels used: 1
  5682 ;; Hardware stack levels required when called: 8
  5683 ;; This function calls:
  5684 ;;		_EUSART_Read
  5685 ;;		_TMR4_WriteTimer
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691     073E                     _Dados_recebidos:	
  5692                           ;psect for function _Dados_recebidos
  5693                           
  5694     073E                     l2803:	
  5695                           ;incstack = 0
  5696                           ; Regs used in _Dados_recebidos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5697                           
  5698                           
  5699                           ;funcoes.c: 141:     dado_atual = 1;
  5700     073E  0021               	movlb	1	; select bank1
  5701     073F  01C5               	clrf	_dado_atual^(0+128)
  5702     0740  0AC5               	incf	_dado_atual^(0+128),f
  5703     0741                     l2805:
  5704                           
  5705                           ;funcoes.c: 142:     uint8_t rxData = EUSART_Read();
  5706     0741  318F  2718  3187   	fcall	_EUSART_Read
  5707     0744  0021               	movlb	1	; select bank1
  5708     0745  00E8               	movwf	Dados_recebidos@rxData^(0+128)
  5709     0746                     l2807:
  5710                           
  5711                           ;funcoes.c: 143:     if(countRx < 5){
  5712     0746  0843               	movf	_countRx^(0+128),w
  5713     0747  3A80               	xorlw	128
  5714     0748  3E7B               	addlw	-133
  5715     0749  1803               	skipnc
  5716     074A  2F4C               	goto	u1681
  5717     074B  2F4D               	goto	u1680
  5718     074C                     u1681:
  5719     074C  2F5C               	goto	l2815
  5720     074D                     u1680:
  5721     074D                     l2809:
  5722                           
  5723                           ;funcoes.c: 144:         RxBuffer[countRx] = rxData;
  5724     074D  0843               	movf	_countRx^(0+128),w
  5725     074E  3EA0               	addlw	(low (_RxBuffer| 0))& (0+255)
  5726     074F  0086               	movwf	6
  5727     0750  0187               	clrf	7
  5728     0751  0868               	movf	Dados_recebidos@rxData^(0+128),w
  5729     0752  0081               	movwf	1
  5730     0753                     l2811:
  5731                           
  5732                           ;funcoes.c: 145:         countRx++;
  5733     0753  3001               	movlw	1
  5734     0754  00E7               	movwf	??_Dados_recebidos^(0+128)
  5735     0755  0867               	movf	??_Dados_recebidos^(0+128),w
  5736     0756  07C3               	addwf	_countRx^(0+128),f
  5737     0757                     l2813:
  5738                           
  5739                           ;funcoes.c: 146:         TMR4_WriteTimer(0);
  5740     0757  3000               	movlw	0
  5741     0758  318E  2658  3187   	fcall	_TMR4_WriteTimer
  5742                           
  5743                           ;funcoes.c: 147:     }else{
  5744     075B  2F64               	goto	l797
  5745     075C                     l2815:
  5746                           
  5747                           ;funcoes.c: 148:         countRx++;
  5748     075C  3001               	movlw	1
  5749     075D  00E7               	movwf	??_Dados_recebidos^(0+128)
  5750     075E  0867               	movf	??_Dados_recebidos^(0+128),w
  5751     075F  07C3               	addwf	_countRx^(0+128),f
  5752     0760                     l2817:
  5753                           
  5754                           ;funcoes.c: 149:         TMR4_WriteTimer(0);
  5755     0760  3000               	movlw	0
  5756     0761  318E  2658  3187   	fcall	_TMR4_WriteTimer
  5757     0764                     l797:
  5758     0764  0008               	return
  5759     0765                     __end_of_Dados_recebidos:
  5760                           
  5761                           	psect	text26
  5762     0E58                     __ptext26:	
  5763 ;; *************** function _TMR4_WriteTimer *****************
  5764 ;; Defined at:
  5765 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  timerVal        1    wreg     unsigned char 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  timerVal        1    0[BANK1 ] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5779 ;;      Params:         0       0       0       0       0       0
  5780 ;;      Locals:         0       0       1       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0
  5782 ;;      Totals:         0       0       1       0       0       0
  5783 ;;Total ram usage:        1 bytes
  5784 ;; Hardware stack levels used: 1
  5785 ;; Hardware stack levels required when called: 7
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_Dados_recebidos
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793     0E58                     _TMR4_WriteTimer:	
  5794                           ;psect for function _TMR4_WriteTimer
  5795                           
  5796                           
  5797                           ;incstack = 0
  5798                           ; Regs used in _TMR4_WriteTimer: [wreg]
  5799                           ;TMR4_WriteTimer@timerVal stored from wreg
  5800     0E58  0021               	movlb	1	; select bank1
  5801     0E59  00E6               	movwf	TMR4_WriteTimer@timerVal^(0+128)
  5802     0E5A                     l2669:
  5803                           
  5804                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  5805     0E5A  0866               	movf	TMR4_WriteTimer@timerVal^(0+128),w
  5806     0E5B  0028               	movlb	8	; select bank8
  5807     0E5C  0095               	movwf	21	;volatile
  5808     0E5D                     l415:
  5809     0E5D  0008               	return
  5810     0E5E                     __end_of_TMR4_WriteTimer:
  5811                           
  5812                           	psect	text27
  5813     0F18                     __ptext27:	
  5814 ;; *************** function _EUSART_Read *****************
  5815 ;; Defined at:
  5816 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;		None
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;		None
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      unsigned char 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5830 ;;      Params:         0       0       0       0       0       0
  5831 ;;      Locals:         0       0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0
  5833 ;;      Totals:         0       0       0       0       0       0
  5834 ;;Total ram usage:        0 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 7
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_Dados_recebidos
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844     0F18                     _EUSART_Read:	
  5845                           ;psect for function _EUSART_Read
  5846                           
  5847     0F18                     l2657:	
  5848                           ;incstack = 0
  5849                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5850                           
  5851     0F18                     l277:	
  5852                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  5853                           
  5854                           
  5855                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  5856     0F18  0020               	movlb	0	; select bank0
  5857     0F19  1E91               	btfss	17,5	;volatile
  5858     0F1A  2F1C               	goto	u1511
  5859     0F1B  2F1D               	goto	u1510
  5860     0F1C                     u1511:
  5861     0F1C  2F18               	goto	l277
  5862     0F1D                     u1510:
  5863     0F1D                     l2659:
  5864                           
  5865                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  5866     0F1D  0021               	movlb	1	; select bank1
  5867     0F1E  01C8               	clrf	_eusartRxLastError^(0+128)	;volatile
  5868     0F1F                     l2661:
  5869                           
  5870                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  5871     0F1F  0023               	movlb	3	; select bank3
  5872     0F20  1C9D               	btfss	29,1	;volatile
  5873     0F21  2F23               	goto	u1521
  5874     0F22  2F24               	goto	u1520
  5875     0F23                     u1521:
  5876     0F23  2F26               	goto	l2665
  5877     0F24                     u1520:
  5878     0F24                     l2663:
  5879                           
  5880                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  5881     0F24  121D               	bcf	29,4	;volatile
  5882                           
  5883                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  5884     0F25  161D               	bsf	29,4	;volatile
  5885     0F26                     l2665:
  5886                           
  5887                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  5888     0F26  0819               	movf	25,w	;volatile
  5889     0F27                     l281:
  5890     0F27  0008               	return
  5891     0F28                     __end_of_EUSART_Read:
  5892                           
  5893                           	psect	text28
  5894     0E47                     __ptext28:	
  5895 ;; *************** function _CMP1_GetOutputStatus *****************
  5896 ;; Defined at:
  5897 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;		None
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      _Bool 
  5904 ;; Registers used:
  5905 ;;		wreg, status,2, status,0
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5911 ;;      Params:         0       0       0       0       0       0
  5912 ;;      Locals:         0       0       0       0       0       0
  5913 ;;      Temps:          0       0       0       0       0       0
  5914 ;;      Totals:         0       0       0       0       0       0
  5915 ;;Total ram usage:        0 bytes
  5916 ;; Hardware stack levels used: 1
  5917 ;; Hardware stack levels required when called: 7
  5918 ;; This function calls:
  5919 ;;		Nothing
  5920 ;; This function is called by:
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925     0E47                     _CMP1_GetOutputStatus:	
  5926                           ;psect for function _CMP1_GetOutputStatus
  5927                           
  5928     0E47                     l2777:	
  5929                           ;incstack = 0
  5930                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  5931                           
  5932                           
  5933                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  5934     0E47  0022               	movlb	2	; select bank2
  5935     0E48  0815               	movf	21,w	;volatile
  5936     0E49  3901               	andlw	1
  5937     0E4A                     l369:
  5938     0E4A  0008               	return
  5939     0E4B                     __end_of_CMP1_GetOutputStatus:
  5940                           
  5941                           	psect	intentry
  5942     0004                     __pintentry:	
  5943 ;; *************** function _INTERRUPT_InterruptManager *****************
  5944 ;; Defined at:
  5945 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;		None
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5959 ;;      Params:         0       0       0       0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0
  5962 ;;      Totals:         0       0       0       0       0       0
  5963 ;;Total ram usage:        0 bytes
  5964 ;; Hardware stack levels used: 1
  5965 ;; Hardware stack levels required when called: 6
  5966 ;; This function calls:
  5967 ;;		_TMR0_ISR
  5968 ;;		_TMR1_GATE_ISR
  5969 ;;		_TMR4_ISR
  5970 ;;		_TMR6_ISR
  5971 ;; This function is called by:
  5972 ;;		Interrupt level 1
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976     0004                     _INTERRUPT_InterruptManager:
  5977                           
  5978                           ;incstack = 0
  5979     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5980                           
  5981                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5982     0005  3180               	pagesel	$
  5983     0006                     i1l2821:
  5984                           
  5985                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5986     0006  1E8B               	btfss	11,5	;volatile
  5987     0007  2809               	goto	u169_21
  5988     0008  280A               	goto	u169_20
  5989     0009                     u169_21:
  5990     0009  2812               	goto	i1l207
  5991     000A                     u169_20:
  5992     000A                     i1l2823:
  5993     000A  1D0B               	btfss	11,2	;volatile
  5994     000B  280D               	goto	u170_21
  5995     000C  280E               	goto	u170_20
  5996     000D                     u170_21:
  5997     000D  2812               	goto	i1l207
  5998     000E                     u170_20:
  5999     000E                     i1l2825:
  6000                           
  6001                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  6002     000E  318F  2739  3180   	fcall	_TMR0_ISR
  6003                           
  6004                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6005     0011  2840               	goto	i1l217
  6006     0012                     i1l207:	
  6007                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6008                           
  6009     0012  1F0B               	btfss	11,6	;volatile
  6010     0013  2815               	goto	u171_21
  6011     0014  2816               	goto	u171_20
  6012     0015                     u171_21:
  6013     0015  2840               	goto	i1l217
  6014     0016                     u171_20:
  6015     0016                     i1l2827:
  6016                           
  6017                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  6018     0016  0021               	movlb	1	; select bank1
  6019     0017  1F91               	btfss	17,7	;volatile
  6020     0018  281A               	goto	u172_21
  6021     0019  281B               	goto	u172_20
  6022     001A                     u172_21:
  6023     001A  2824               	goto	i1l210
  6024     001B                     u172_20:
  6025     001B                     i1l2829:
  6026     001B  0020               	movlb	0	; select bank0
  6027     001C  1F91               	btfss	17,7	;volatile
  6028     001D  281F               	goto	u173_21
  6029     001E  2820               	goto	u173_20
  6030     001F                     u173_21:
  6031     001F  2824               	goto	i1l210
  6032     0020                     u173_20:
  6033     0020                     i1l2831:
  6034                           
  6035                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  6036     0020  318E  26DC  3180   	fcall	_TMR1_GATE_ISR
  6037                           
  6038                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6039     0023  2840               	goto	i1l217
  6040     0024                     i1l210:	
  6041                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  6042                           
  6043     0024  0021               	movlb	1	; select bank1
  6044     0025  1D93               	btfss	19,3	;volatile
  6045     0026  2828               	goto	u174_21
  6046     0027  2829               	goto	u174_20
  6047     0028                     u174_21:
  6048     0028  2832               	goto	i1l212
  6049     0029                     u174_20:
  6050     0029                     i1l2833:
  6051     0029  0020               	movlb	0	; select bank0
  6052     002A  1D93               	btfss	19,3	;volatile
  6053     002B  282D               	goto	u175_21
  6054     002C  282E               	goto	u175_20
  6055     002D                     u175_21:
  6056     002D  2832               	goto	i1l212
  6057     002E                     u175_20:
  6058     002E                     i1l2835:
  6059                           
  6060                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR6_ISR();
  6061     002E  318E  26FA  3180   	fcall	_TMR6_ISR
  6062                           
  6063                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  6064     0031  2840               	goto	i1l217
  6065     0032                     i1l212:	
  6066                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  6067                           
  6068     0032  0021               	movlb	1	; select bank1
  6069     0033  1C93               	btfss	19,1	;volatile
  6070     0034  2836               	goto	u176_21
  6071     0035  2837               	goto	u176_20
  6072     0036                     u176_21:
  6073     0036  2840               	goto	i1l211
  6074     0037                     u176_20:
  6075     0037                     i1l2837:
  6076     0037  0020               	movlb	0	; select bank0
  6077     0038  1C93               	btfss	19,1	;volatile
  6078     0039  283B               	goto	u177_21
  6079     003A  283C               	goto	u177_20
  6080     003B                     u177_21:
  6081     003B  2840               	goto	i1l211
  6082     003C                     u177_20:
  6083     003C                     i1l2839:
  6084                           
  6085                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR4_ISR();
  6086     003C  318E  26EB  3180   	fcall	_TMR4_ISR
  6087                           
  6088                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  6089     003F  2840               	goto	i1l217
  6090     0040                     i1l211:
  6091     0040                     i1l217:	
  6092                           ;mcc_generated_files/interrupt_manager.c: 77:     }
  6093                           
  6094     0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6095     0041  0009               	retfie
  6096     0042                     __end_of_INTERRUPT_InterruptManager:
  6097                           
  6098                           	psect	text30
  6099     0EFA                     __ptext30:	
  6100 ;; *************** function _TMR6_ISR *****************
  6101 ;; Defined at:
  6102 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;		None
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6116 ;;      Params:         0       0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0
  6119 ;;      Totals:         0       0       0       0       0       0
  6120 ;;Total ram usage:        0 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; Hardware stack levels required when called: 2
  6123 ;; This function calls:
  6124 ;;		NULL
  6125 ;;		_DRMotordePassos
  6126 ;;		_TMR6_DefaultInterruptHandler
  6127 ;; This function is called by:
  6128 ;;		_INTERRUPT_InterruptManager
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132     0EFA                     _TMR6_ISR:	
  6133                           ;psect for function _TMR6_ISR
  6134                           
  6135     0EFA                     i1l2761:	
  6136                           ;incstack = 0
  6137                           ; Regs used in _TMR6_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6138                           
  6139                           
  6140                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
  6141     0EFA  0020               	movlb	0	; select bank0
  6142     0EFB  1193               	bcf	19,3	;volatile
  6143     0EFC                     i1l2763:
  6144                           
  6145                           ;mcc_generated_files/tmr6.c: 125:     if(TMR6_InterruptHandler)
  6146     0EFC  0021               	movlb	1	; select bank1
  6147     0EFD  0858               	movf	_TMR6_InterruptHandler^(0+128),w
  6148     0EFE  0459               	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
  6149     0EFF  1903               	btfsc	3,2
  6150     0F00  2F02               	goto	u162_21
  6151     0F01  2F03               	goto	u162_20
  6152     0F02                     u162_21:
  6153     0F02  2F08               	goto	i1l504
  6154     0F03                     u162_20:
  6155     0F03                     i1l2765:
  6156                           
  6157                           ;mcc_generated_files/tmr6.c: 126:     {;mcc_generated_files/tmr6.c: 127:         TMR6_In
      +                          terruptHandler();
  6158     0F03  0859               	movf	(_TMR6_InterruptHandler+1)^(0+128),w
  6159     0F04  008A               	movwf	10
  6160     0F05  0858               	movf	_TMR6_InterruptHandler^(0+128),w
  6161     0F06  000A               	callw
  6162     0F07  318E               	pagesel	$
  6163     0F08                     i1l504:
  6164     0F08  0008               	return
  6165     0F09                     __end_of_TMR6_ISR:
  6166                           
  6167                           	psect	text31
  6168     0628                     __ptext31:	
  6169 ;; *************** function _DRMotordePassos *****************
  6170 ;; Defined at:
  6171 ;;		line 86 in file "funcoes.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;		None
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;		None
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      void 
  6178 ;; Registers used:
  6179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6185 ;;      Params:         0       0       0       0       0       0
  6186 ;;      Locals:         0       0       0       0       0       0
  6187 ;;      Temps:          1       0       0       0       0       0
  6188 ;;      Totals:         1       0       0       0       0       0
  6189 ;;Total ram usage:        1 bytes
  6190 ;; Hardware stack levels used: 1
  6191 ;; Hardware stack levels required when called: 1
  6192 ;; This function calls:
  6193 ;;		i1_muda_passos
  6194 ;; This function is called by:
  6195 ;;		_main
  6196 ;;		_TMR6_ISR
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200     0628                     _DRMotordePassos:	
  6201                           ;psect for function _DRMotordePassos
  6202                           
  6203     0628                     i1l2699:	
  6204                           ;incstack = 0
  6205                           ; Regs used in _DRMotordePassos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6206                           
  6207                           
  6208                           ;funcoes.c: 88:     if(posicao_val_atual > posicao_val_futura){
  6209     0628  0020               	movlb	0	; select bank0
  6210     0629  0862               	movf	_posicao_val_futura+1,w
  6211     062A  3A80               	xorlw	128
  6212     062B  00F6               	movwf	??_DRMotordePassos
  6213     062C  0021               	movlb	1	; select bank1
  6214     062D  083C               	movf	(_posicao_val_atual+1)^(0+128),w
  6215     062E  3A80               	xorlw	128
  6216     062F  0276               	subwf	??_DRMotordePassos,w
  6217     0630  1D03               	skipz
  6218     0631  2E35               	goto	u155_25
  6219     0632  083B               	movf	_posicao_val_atual^(0+128),w
  6220     0633  0020               	movlb	0	; select bank0
  6221     0634  0261               	subwf	_posicao_val_futura,w
  6222     0635                     u155_25:
  6223     0635  1803               	skipnc
  6224     0636  2E38               	goto	u155_21
  6225     0637  2E39               	goto	u155_20
  6226     0638                     u155_21:
  6227     0638  2E43               	goto	i1l2707
  6228     0639                     u155_20:
  6229     0639                     i1l2701:
  6230                           
  6231                           ;funcoes.c: 89:         posicao_val_atual--;
  6232     0639  30FF               	movlw	255
  6233     063A  0021               	movlb	1	; select bank1
  6234     063B  07BB               	addwf	_posicao_val_atual^(0+128),f
  6235     063C  30FF               	movlw	255
  6236     063D  3DBC               	addwfc	(_posicao_val_atual+1)^(0+128),f
  6237     063E                     i1l2703:
  6238                           
  6239                           ;funcoes.c: 90:         flag_passos = 0;
  6240     063E  01C4               	clrf	_flag_passos^(0+128)
  6241     063F                     i1l2705:
  6242                           
  6243                           ;funcoes.c: 91:         muda_passos();
  6244     063F  3184  244F  3186   	fcall	i1_muda_passos
  6245                           
  6246                           ;funcoes.c: 92:     }else if(posicao_val_atual < posicao_val_futura){
  6247     0642  2E5C               	goto	i1l741
  6248     0643                     i1l2707:
  6249     0643  0021               	movlb	1	; select bank1
  6250     0644  083C               	movf	(_posicao_val_atual+1)^(0+128),w
  6251     0645  3A80               	xorlw	128
  6252     0646  00F6               	movwf	??_DRMotordePassos
  6253     0647  0020               	movlb	0	; select bank0
  6254     0648  0862               	movf	_posicao_val_futura+1,w
  6255     0649  3A80               	xorlw	128
  6256     064A  0276               	subwf	??_DRMotordePassos,w
  6257     064B  1D03               	skipz
  6258     064C  2E50               	goto	u156_25
  6259     064D  0861               	movf	_posicao_val_futura,w
  6260     064E  0021               	movlb	1	; select bank1
  6261     064F  023B               	subwf	_posicao_val_atual^(0+128),w
  6262     0650                     u156_25:
  6263     0650  1803               	skipnc
  6264     0651  2E53               	goto	u156_21
  6265     0652  2E54               	goto	u156_20
  6266     0653                     u156_21:
  6267     0653  2E5C               	goto	i1l741
  6268     0654                     u156_20:
  6269     0654                     i1l2709:
  6270                           
  6271                           ;funcoes.c: 93:         posicao_val_atual++;
  6272     0654  3001               	movlw	1
  6273     0655  0021               	movlb	1	; select bank1
  6274     0656  07BB               	addwf	_posicao_val_atual^(0+128),f
  6275     0657  3000               	movlw	0
  6276     0658  3DBC               	addwfc	(_posicao_val_atual+1)^(0+128),f
  6277     0659                     i1l2711:
  6278                           
  6279                           ;funcoes.c: 94:         flag_passos = 1;
  6280     0659  01C4               	clrf	_flag_passos^(0+128)
  6281     065A  0AC4               	incf	_flag_passos^(0+128),f
  6282     065B  2E3F               	goto	i1l2705
  6283     065C                     i1l741:
  6284     065C  0008               	return
  6285     065D                     __end_of_DRMotordePassos:
  6286                           
  6287                           	psect	text32
  6288     0003                     __ptext32:	
  6289 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  6290 ;; Defined at:
  6291 ;;		line 136 in file "mcc_generated_files/tmr6.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      void 
  6298 ;; Registers used:
  6299 ;;		None
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6305 ;;      Params:         0       0       0       0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0
  6308 ;;      Totals:         0       0       0       0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used: 1
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_TMR6_Initialize
  6315 ;;		_TMR6_ISR
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319     0003                     _TMR6_DefaultInterruptHandler:	
  6320                           ;psect for function _TMR6_DefaultInterruptHandler
  6321                           
  6322     0003                     i1l510:	
  6323                           ;incstack = 0
  6324                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  6325                           
  6326     0003  0008               	return
  6327     0004                     __end_of_TMR6_DefaultInterruptHandler:
  6328                           
  6329                           	psect	text33
  6330     044F                     __ptext33:	
  6331 ;; *************** function i1_muda_passos *****************
  6332 ;; Defined at:
  6333 ;;		line 102 in file "funcoes.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6347 ;;      Params:         0       0       0       0       0       0
  6348 ;;      Locals:         4       0       0       0       0       0
  6349 ;;      Temps:          2       0       0       0       0       0
  6350 ;;      Totals:         6       0       0       0       0       0
  6351 ;;Total ram usage:        6 bytes
  6352 ;; Hardware stack levels used: 1
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_DRMotordePassos
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360     044F                     i1_muda_passos:	
  6361                           ;psect for function i1_muda_passos
  6362                           
  6363     044F                     i1l2521:	
  6364                           ;incstack = 0
  6365                           ; Regs used in i1_muda_passos: [wreg-fsr0h+status,2+status,0]
  6366                           
  6367                           
  6368                           ;funcoes.c: 103:     switch(npassos){
  6369     044F  2C68               	goto	i1l2525
  6370     0450                     i1l746:	
  6371                           ;funcoes.c: 105:             do { LATAbits.LATA1 = 1; } while(0);
  6372                           
  6373     0450  0022               	movlb	2	; select bank2
  6374     0451  148C               	bsf	12,1	;volatile
  6375     0452                     i1l748:	
  6376                           ;funcoes.c: 106:             do { LATAbits.LATA2 = 0; } while(0);
  6377                           
  6378     0452  110C               	bcf	12,2	;volatile
  6379     0453                     i1l750:	
  6380                           ;funcoes.c: 107:             do { LATAbits.LATA3 = 0; } while(0);
  6381                           
  6382     0453  118C               	bcf	12,3	;volatile
  6383     0454                     i1l752:	
  6384                           ;funcoes.c: 108:             do { LATAbits.LATA4 = 1; } while(0);
  6385                           
  6386     0454  160C               	bsf	12,4	;volatile
  6387     0455  2C77               	goto	i1l2527
  6388     0456                     i1l756:	
  6389                           ;funcoes.c: 111:             do { LATAbits.LATA1 = 1; } while(0);
  6390                           
  6391     0456  0022               	movlb	2	; select bank2
  6392     0457  148C               	bsf	12,1	;volatile
  6393     0458                     i1l758:	
  6394                           ;funcoes.c: 112:             do { LATAbits.LATA2 = 1; } while(0);
  6395                           
  6396     0458  150C               	bsf	12,2	;volatile
  6397     0459                     i1l760:	
  6398                           ;funcoes.c: 113:             do { LATAbits.LATA3 = 0; } while(0);
  6399                           
  6400     0459  118C               	bcf	12,3	;volatile
  6401     045A                     i1l762:	
  6402                           ;funcoes.c: 114:             do { LATAbits.LATA4 = 0; } while(0);
  6403                           
  6404     045A  120C               	bcf	12,4	;volatile
  6405     045B  2C77               	goto	i1l2527
  6406     045C                     i1l765:	
  6407                           ;funcoes.c: 117:             do { LATAbits.LATA1 = 0; } while(0);
  6408                           
  6409     045C  0022               	movlb	2	; select bank2
  6410     045D  108C               	bcf	12,1	;volatile
  6411     045E                     i1l767:	
  6412                           ;funcoes.c: 118:             do { LATAbits.LATA2 = 1; } while(0);
  6413                           
  6414     045E  150C               	bsf	12,2	;volatile
  6415     045F                     i1l769:	
  6416                           ;funcoes.c: 119:             do { LATAbits.LATA3 = 1; } while(0);
  6417                           
  6418     045F  158C               	bsf	12,3	;volatile
  6419     0460                     i1l771:	
  6420                           ;funcoes.c: 120:             do { LATAbits.LATA4 = 0; } while(0);
  6421                           
  6422     0460  120C               	bcf	12,4	;volatile
  6423     0461  2C77               	goto	i1l2527
  6424     0462                     i1l774:	
  6425                           ;funcoes.c: 123:             do { LATAbits.LATA1 = 0; } while(0);
  6426                           
  6427     0462  0022               	movlb	2	; select bank2
  6428     0463  108C               	bcf	12,1	;volatile
  6429     0464                     i1l776:	
  6430                           ;funcoes.c: 124:             do { LATAbits.LATA2 = 0; } while(0);
  6431                           
  6432     0464  110C               	bcf	12,2	;volatile
  6433     0465                     i1l778:	
  6434                           ;funcoes.c: 125:             do { LATAbits.LATA3 = 1; } while(0);
  6435                           
  6436     0465  158C               	bsf	12,3	;volatile
  6437     0466                     i1l780:	
  6438                           ;funcoes.c: 126:             do { LATAbits.LATA4 = 1; } while(0);
  6439                           
  6440     0466  160C               	bsf	12,4	;volatile
  6441     0467  2C77               	goto	i1l2527
  6442     0468                     i1l2525:
  6443     0468  0021               	movlb	1	; select bank1
  6444     0469  0846               	movf	_npassos^(0+128),w
  6445                           
  6446                           ; Switch size 1, requested type "simple"
  6447                           ; Number of cases is 4, Range of values is 0 to 3
  6448                           ; switch strategies available:
  6449                           ; Name         Instructions Cycles
  6450                           ; simple_byte           13     7 (average)
  6451                           ; direct_byte           14     6 (fixed)
  6452                           ; jumptable            260     6 (fixed)
  6453                           ;	Chosen strategy is simple_byte
  6454     046A  3A00               	xorlw	0	; case 0
  6455     046B  1903               	skipnz
  6456     046C  2C50               	goto	i1l746
  6457     046D  3A01               	xorlw	1	; case 1
  6458     046E  1903               	skipnz
  6459     046F  2C56               	goto	i1l756
  6460     0470  3A03               	xorlw	3	; case 2
  6461     0471  1903               	skipnz
  6462     0472  2C5C               	goto	i1l765
  6463     0473  3A01               	xorlw	1	; case 3
  6464     0474  1903               	skipnz
  6465     0475  2C62               	goto	i1l774
  6466     0476  2C77               	goto	i1l2527
  6467     0477                     i1l2527:
  6468                           
  6469                           ;funcoes.c: 129:     if(flag_passos){
  6470     0477  0021               	movlb	1	; select bank1
  6471     0478  0844               	movf	_flag_passos^(0+128),w
  6472     0479  1903               	btfsc	3,2
  6473     047A  2C7C               	goto	u147_21
  6474     047B  2C7D               	goto	u147_20
  6475     047C                     u147_21:
  6476     047C  2C95               	goto	i1l2535
  6477     047D                     u147_20:
  6478     047D                     i1l2529:
  6479                           
  6480                           ;funcoes.c: 130:         npassos = (npassos == 0) ? 3 : (npassos - 1);
  6481     047D  0846               	movf	_npassos^(0+128),w
  6482     047E  1903               	btfsc	3,2
  6483     047F  2C81               	goto	u148_21
  6484     0480  2C82               	goto	u148_20
  6485     0481                     u148_21:
  6486     0481  2C8E               	goto	i1l2533
  6487     0482                     u148_20:
  6488     0482                     i1l2531:
  6489     0482  0846               	movf	_npassos^(0+128),w
  6490     0483  00F0               	movwf	??i1_muda_passos
  6491     0484  01F1               	clrf	??i1_muda_passos+1
  6492     0485  1BF0               	btfsc	??i1_muda_passos,7
  6493     0486  03F1               	decf	??i1_muda_passos+1,f
  6494     0487  0870               	movf	??i1_muda_passos,w
  6495     0488  3EFF               	addlw	255
  6496     0489  00F2               	movwf	i1_muda_passos$1295
  6497     048A  30FF               	movlw	255
  6498     048B  3D71               	addwfc	??i1_muda_passos+1,w
  6499     048C  00F3               	movwf	i1_muda_passos$1295+1
  6500     048D  2C92               	goto	i1l786
  6501     048E                     i1l2533:
  6502     048E  3003               	movlw	3
  6503     048F  00F2               	movwf	i1_muda_passos$1295
  6504     0490  3000               	movlw	0
  6505     0491  00F3               	movwf	i1_muda_passos$1295+1
  6506     0492                     i1l786:
  6507     0492  0872               	movf	i1_muda_passos$1295,w
  6508     0493  00C6               	movwf	_npassos^(0+128)
  6509                           
  6510                           ;funcoes.c: 131:     }else{
  6511     0494  2CAA               	goto	i1l792
  6512     0495                     i1l2535:
  6513                           
  6514                           ;funcoes.c: 132:         npassos = (npassos == 3) ? 0 : (npassos + 1);}
  6515     0495  3003               	movlw	3
  6516     0496  0646               	xorwf	_npassos^(0+128),w
  6517     0497  1903               	btfsc	3,2
  6518     0498  2C9A               	goto	u149_21
  6519     0499  2C9B               	goto	u149_20
  6520     049A                     u149_21:
  6521     049A  2CA5               	goto	i1l2539
  6522     049B                     u149_20:
  6523     049B                     i1l2537:
  6524     049B  3001               	movlw	1
  6525     049C  0746               	addwf	_npassos^(0+128),w
  6526     049D  00F4               	movwf	i1_muda_passos$1296
  6527     049E  01F5               	clrf	i1_muda_passos$1296+1
  6528     049F  1803               	skipnc
  6529     04A0  0AF5               	incf	i1_muda_passos$1296+1,f
  6530     04A1  1FC6               	btfss	_npassos^(0+128),7
  6531     04A2  2CA4               	goto	u150_24
  6532     04A3  03F5               	decf	i1_muda_passos$1296+1,f
  6533     04A4                     u150_24:
  6534     04A4  2CA7               	goto	i1l2541
  6535     04A5                     i1l2539:
  6536     04A5  01F4               	clrf	i1_muda_passos$1296
  6537     04A6  01F5               	clrf	i1_muda_passos$1296+1
  6538     04A7                     i1l2541:
  6539     04A7  0874               	movf	i1_muda_passos$1296,w
  6540     04A8  0021               	movlb	1	; select bank1
  6541     04A9  00C6               	movwf	_npassos^(0+128)
  6542     04AA                     i1l792:
  6543     04AA  0008               	return
  6544     04AB                     __end_ofi1_muda_passos:
  6545                           
  6546                           	psect	text34
  6547     0EEB                     __ptext34:	
  6548 ;; *************** function _TMR4_ISR *****************
  6549 ;; Defined at:
  6550 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;		None
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;		None
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  1    wreg      void 
  6557 ;; Registers used:
  6558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6564 ;;      Params:         0       0       0       0       0       0
  6565 ;;      Locals:         0       0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0       0
  6567 ;;      Totals:         0       0       0       0       0       0
  6568 ;;Total ram usage:        0 bytes
  6569 ;; Hardware stack levels used: 1
  6570 ;; Hardware stack levels required when called: 3
  6571 ;; This function calls:
  6572 ;;		NULL
  6573 ;;		_ProcessaDados
  6574 ;;		_TMR4_DefaultInterruptHandler
  6575 ;; This function is called by:
  6576 ;;		_INTERRUPT_InterruptManager
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580     0EEB                     _TMR4_ISR:	
  6581                           ;psect for function _TMR4_ISR
  6582                           
  6583     0EEB                     i1l2767:	
  6584                           ;incstack = 0
  6585                           ; Regs used in _TMR4_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6586                           
  6587                           
  6588                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  6589     0EEB  0020               	movlb	0	; select bank0
  6590     0EEC  1093               	bcf	19,1	;volatile
  6591     0EED                     i1l2769:
  6592                           
  6593                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  6594     0EED  0021               	movlb	1	; select bank1
  6595     0EEE  085C               	movf	_TMR4_InterruptHandler^(0+128),w
  6596     0EEF  045D               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  6597     0EF0  1903               	btfsc	3,2
  6598     0EF1  2EF3               	goto	u163_21
  6599     0EF2  2EF4               	goto	u163_20
  6600     0EF3                     u163_21:
  6601     0EF3  2EF9               	goto	i1l422
  6602     0EF4                     u163_20:
  6603     0EF4                     i1l2771:
  6604                           
  6605                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  6606     0EF4  085D               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  6607     0EF5  008A               	movwf	10
  6608     0EF6  085C               	movf	_TMR4_InterruptHandler^(0+128),w
  6609     0EF7  000A               	callw
  6610     0EF8  318E               	pagesel	$
  6611     0EF9                     i1l422:
  6612     0EF9  0008               	return
  6613     0EFA                     __end_of_TMR4_ISR:
  6614                           
  6615                           	psect	text35
  6616     0504                     __ptext35:	
  6617 ;; *************** function _ProcessaDados *****************
  6618 ;; Defined at:
  6619 ;;		line 157 in file "funcoes.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6633 ;;      Params:         0       0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0
  6636 ;;      Totals:         0       0       0       0       0       0
  6637 ;;Total ram usage:        0 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 2
  6640 ;; This function calls:
  6641 ;;		_selecao_do_modo
  6642 ;; This function is called by:
  6643 ;;		_main
  6644 ;;		_TMR4_ISR
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648     0504                     _ProcessaDados:	
  6649                           ;psect for function _ProcessaDados
  6650                           
  6651     0504                     i1l2715:	
  6652                           ;incstack = 0
  6653                           ; Regs used in _ProcessaDados: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6654                           
  6655                           
  6656                           ;funcoes.c: 159:     if(!dado_atual){return;}
  6657     0504  0021               	movlb	1	; select bank1
  6658     0505  0845               	movf	_dado_atual^(0+128),w
  6659     0506  1D03               	btfss	3,2
  6660     0507  2D09               	goto	u157_21
  6661     0508  2D0A               	goto	u157_20
  6662     0509                     u157_21:
  6663     0509  2D0B               	goto	i1l2719
  6664     050A                     u157_20:
  6665     050A  2D5C               	goto	i1l801
  6666     050B                     i1l2719:
  6667                           
  6668                           ;funcoes.c: 160:     dado_atual = 0;
  6669     050B  01C5               	clrf	_dado_atual^(0+128)
  6670     050C                     i1l2721:
  6671                           
  6672                           ;funcoes.c: 161:     modo = RxBuffer[0];
  6673     050C  0820               	movf	_RxBuffer^(0+128),w
  6674     050D  00FD               	movwf	_modo
  6675     050E                     i1l2723:
  6676                           
  6677                           ;funcoes.c: 162:     if(countRx == 5){
  6678     050E  3005               	movlw	5
  6679     050F  0643               	xorwf	_countRx^(0+128),w
  6680     0510  1D03               	btfss	3,2
  6681     0511  2D13               	goto	u158_21
  6682     0512  2D14               	goto	u158_20
  6683     0513                     u158_21:
  6684     0513  2D53               	goto	i1l2739
  6685     0514                     u158_20:
  6686     0514  2D45               	goto	i1l2735
  6687     0515                     i1l2727:
  6688                           
  6689                           ;funcoes.c: 166:                 Set_valvula.bmsb = RxBuffer[1];
  6690     0515  0821               	movf	(_RxBuffer^(0+128)+1),w
  6691     0516  0020               	movlb	0	; select bank0
  6692     0517  00EA               	movwf	_Set_valvula+1
  6693                           
  6694                           ;funcoes.c: 167:                 Set_valvula.blsb = RxBuffer[2];
  6695     0518  0021               	movlb	1	; select bank1
  6696     0519  0822               	movf	(_RxBuffer^(0+128)+2),w
  6697     051A  0020               	movlb	0	; select bank0
  6698     051B  00E9               	movwf	_Set_valvula
  6699                           
  6700                           ;funcoes.c: 168:                 Set_ciclo.bmsb = RxBuffer[3];
  6701     051C  0021               	movlb	1	; select bank1
  6702     051D  0823               	movf	(_RxBuffer^(0+128)+3),w
  6703     051E  0020               	movlb	0	; select bank0
  6704     051F  00E8               	movwf	_Set_ciclo+1
  6705                           
  6706                           ;funcoes.c: 169:                 Set_ciclo.blsb = RxBuffer[4];
  6707     0520  0021               	movlb	1	; select bank1
  6708     0521  0824               	movf	(_RxBuffer^(0+128)+4),w
  6709     0522  0020               	movlb	0	; select bank0
  6710     0523  00E7               	movwf	_Set_ciclo
  6711                           
  6712                           ;funcoes.c: 170:                 break;
  6713     0524  2D50               	goto	i1l2737
  6714     0525                     i1l2729:
  6715                           
  6716                           ;funcoes.c: 173:                 Set_altura.bmsb = RxBuffer[1];
  6717     0525  0821               	movf	(_RxBuffer^(0+128)+1),w
  6718     0526  0020               	movlb	0	; select bank0
  6719     0527  00EC               	movwf	_Set_altura+1
  6720                           
  6721                           ;funcoes.c: 174:                 Set_altura.blsb = RxBuffer[2];
  6722     0528  0021               	movlb	1	; select bank1
  6723     0529  0822               	movf	(_RxBuffer^(0+128)+2),w
  6724     052A  0020               	movlb	0	; select bank0
  6725     052B  00EB               	movwf	_Set_altura
  6726                           
  6727                           ;funcoes.c: 175:                 Set_valvula.bmsb = RxBuffer[3];
  6728     052C  0021               	movlb	1	; select bank1
  6729     052D  0823               	movf	(_RxBuffer^(0+128)+3),w
  6730     052E  0020               	movlb	0	; select bank0
  6731     052F  00EA               	movwf	_Set_valvula+1
  6732                           
  6733                           ;funcoes.c: 176:                 Set_valvula.blsb = RxBuffer[4];
  6734     0530  0021               	movlb	1	; select bank1
  6735     0531  0824               	movf	(_RxBuffer^(0+128)+4),w
  6736     0532  0020               	movlb	0	; select bank0
  6737     0533  00E9               	movwf	_Set_valvula
  6738                           
  6739                           ;funcoes.c: 177:                 break;
  6740     0534  2D50               	goto	i1l2737
  6741     0535                     i1l2731:
  6742                           
  6743                           ;funcoes.c: 180:                 Set_altura.bmsb = RxBuffer[1];
  6744     0535  0821               	movf	(_RxBuffer^(0+128)+1),w
  6745     0536  0020               	movlb	0	; select bank0
  6746     0537  00EC               	movwf	_Set_altura+1
  6747                           
  6748                           ;funcoes.c: 181:                 Set_altura.blsb = RxBuffer[2];
  6749     0538  0021               	movlb	1	; select bank1
  6750     0539  0822               	movf	(_RxBuffer^(0+128)+2),w
  6751     053A  0020               	movlb	0	; select bank0
  6752     053B  00EB               	movwf	_Set_altura
  6753                           
  6754                           ;funcoes.c: 182:                 Set_ciclo.bmsb = RxBuffer[3];
  6755     053C  0021               	movlb	1	; select bank1
  6756     053D  0823               	movf	(_RxBuffer^(0+128)+3),w
  6757     053E  0020               	movlb	0	; select bank0
  6758     053F  00E8               	movwf	_Set_ciclo+1
  6759                           
  6760                           ;funcoes.c: 183:                 Set_ciclo.blsb = RxBuffer[4];
  6761     0540  0021               	movlb	1	; select bank1
  6762     0541  0824               	movf	(_RxBuffer^(0+128)+4),w
  6763     0542  0020               	movlb	0	; select bank0
  6764     0543  00E7               	movwf	_Set_ciclo
  6765                           
  6766                           ;funcoes.c: 184:                 break;
  6767     0544  2D50               	goto	i1l2737
  6768     0545                     i1l2735:
  6769     0545  087D               	movf	_modo,w
  6770                           
  6771                           ; Switch size 1, requested type "simple"
  6772                           ; Number of cases is 3, Range of values is 0 to 2
  6773                           ; switch strategies available:
  6774                           ; Name         Instructions Cycles
  6775                           ; simple_byte           10     6 (average)
  6776                           ; direct_byte           12     6 (fixed)
  6777                           ; jumptable            260     6 (fixed)
  6778                           ;	Chosen strategy is simple_byte
  6779     0546  3A00               	xorlw	0	; case 0
  6780     0547  1903               	skipnz
  6781     0548  2D15               	goto	i1l2727
  6782     0549  3A01               	xorlw	1	; case 1
  6783     054A  1903               	skipnz
  6784     054B  2D25               	goto	i1l2729
  6785     054C  3A03               	xorlw	3	; case 2
  6786     054D  1903               	skipnz
  6787     054E  2D35               	goto	i1l2731
  6788     054F  2D50               	goto	i1l2737
  6789     0550                     i1l2737:
  6790                           
  6791                           ;funcoes.c: 188:         selecao_do_modo();
  6792     0550  3181  21E8  3185   	fcall	_selecao_do_modo
  6793     0553                     i1l2739:
  6794                           
  6795                           ;funcoes.c: 190:     if(modo == 0x03){
  6796     0553  3003               	movlw	3
  6797     0554  067D               	xorwf	_modo,w
  6798     0555  1D03               	btfss	3,2
  6799     0556  2D58               	goto	u159_21
  6800     0557  2D59               	goto	u159_20
  6801     0558                     u159_21:
  6802     0558  2D5A               	goto	i1l2743
  6803     0559                     u159_20:
  6804     0559                     i1l2741:
  6805     0559  0001               	reset	;# 
  6806     055A                     i1l2743:
  6807                           
  6808                           ;funcoes.c: 193:     countRx = 0;
  6809     055A  0021               	movlb	1	; select bank1
  6810     055B  01C3               	clrf	_countRx^(0+128)
  6811     055C                     i1l801:
  6812     055C  0008               	return
  6813     055D                     __end_of_ProcessaDados:
  6814                           
  6815                           	psect	text36
  6816     0002                     __ptext36:	
  6817 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6818 ;; Defined at:
  6819 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;		None
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		None
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6833 ;;      Params:         0       0       0       0       0       0
  6834 ;;      Locals:         0       0       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0
  6836 ;;      Totals:         0       0       0       0       0       0
  6837 ;;Total ram usage:        0 bytes
  6838 ;; Hardware stack levels used: 1
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_TMR4_Initialize
  6843 ;;		_TMR4_ISR
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847     0002                     _TMR4_DefaultInterruptHandler:	
  6848                           ;psect for function _TMR4_DefaultInterruptHandler
  6849                           
  6850     0002                     i1l428:	
  6851                           ;incstack = 0
  6852                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  6853                           
  6854     0002  0008               	return
  6855     0003                     __end_of_TMR4_DefaultInterruptHandler:
  6856                           
  6857                           	psect	text37
  6858     01E8                     __ptext37:	
  6859 ;; *************** function _selecao_do_modo *****************
  6860 ;; Defined at:
  6861 ;;		line 200 in file "funcoes.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;		None
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1    wreg      void 
  6868 ;; Registers used:
  6869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6875 ;;      Params:         0       0       0       0       0       0
  6876 ;;      Locals:         0       0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0
  6878 ;;      Totals:         0       0       0       0       0       0
  6879 ;;Total ram usage:        0 bytes
  6880 ;; Hardware stack levels used: 1
  6881 ;; Hardware stack levels required when called: 1
  6882 ;; This function calls:
  6883 ;;		_EPWM1_LoadDutyValue
  6884 ;; This function is called by:
  6885 ;;		_ProcessaDados
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889     01E8                     _selecao_do_modo:	
  6890                           ;psect for function _selecao_do_modo
  6891                           
  6892     01E8                     i1l2471:	
  6893                           ;incstack = 0
  6894                           ; Regs used in _selecao_do_modo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6895                           
  6896                           
  6897                           ;funcoes.c: 201:     switch(modo){
  6898     01E8  2A81               	goto	i1l2505
  6899     01E9                     i1l2473:
  6900                           
  6901                           ;funcoes.c: 203:             if(Set_ciclo.Dado > 1023){Set_ciclo.Dado = 1023;}
  6902     01E9  3004               	movlw	4
  6903     01EA  0020               	movlb	0	; select bank0
  6904     01EB  0268               	subwf	_Set_ciclo+1,w
  6905     01EC  3000               	movlw	0
  6906     01ED  1903               	skipnz
  6907     01EE  0267               	subwf	_Set_ciclo,w
  6908     01EF  1C03               	skipc
  6909     01F0  29F2               	goto	u139_21
  6910     01F1  29F3               	goto	u139_20
  6911     01F2                     u139_21:
  6912     01F2  29F7               	goto	i1l814
  6913     01F3                     u139_20:
  6914     01F3                     i1l2475:
  6915     01F3  30FF               	movlw	255
  6916     01F4  00E7               	movwf	_Set_ciclo
  6917     01F5  3003               	movlw	3
  6918     01F6  00E8               	movwf	_Set_ciclo+1
  6919     01F7                     i1l814:
  6920                           
  6921                           ;funcoes.c: 204:             ciclo_util_futuro = Set_ciclo.Dado;
  6922     01F7  0868               	movf	_Set_ciclo+1,w
  6923     01F8  00E0               	movwf	_ciclo_util_futuro+1
  6924     01F9  0867               	movf	_Set_ciclo,w
  6925     01FA  00DF               	movwf	_ciclo_util_futuro
  6926     01FB                     i1l2477:
  6927                           
  6928                           ;funcoes.c: 205:             EPWM1_LoadDutyValue(ciclo_util_futuro);
  6929     01FB  0860               	movf	_ciclo_util_futuro+1,w
  6930     01FC  00F1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  6931     01FD  085F               	movf	_ciclo_util_futuro,w
  6932     01FE  00F0               	movwf	EPWM1_LoadDutyValue@dutyValue
  6933     01FF  318F  27B0  3181   	fcall	_EPWM1_LoadDutyValue
  6934     0202                     i1l2479:
  6935                           
  6936                           ;funcoes.c: 206:             if(Set_valvula.Dado > 460){Set_valvula.Dado = 460;}
  6937     0202  3001               	movlw	1
  6938     0203  0020               	movlb	0	; select bank0
  6939     0204  026A               	subwf	_Set_valvula+1,w
  6940     0205  30CD               	movlw	205
  6941     0206  1903               	skipnz
  6942     0207  0269               	subwf	_Set_valvula,w
  6943     0208  1C03               	skipc
  6944     0209  2A0B               	goto	u140_21
  6945     020A  2A0C               	goto	u140_20
  6946     020B                     u140_21:
  6947     020B  2A10               	goto	i1l815
  6948     020C                     u140_20:
  6949     020C                     i1l2481:
  6950     020C  30CC               	movlw	204
  6951     020D  00E9               	movwf	_Set_valvula
  6952     020E  3001               	movlw	1
  6953     020F  00EA               	movwf	_Set_valvula+1
  6954     0210                     i1l815:
  6955                           
  6956                           ;funcoes.c: 207:             posicao_val_futura = Set_valvula.Dado;
  6957     0210  086A               	movf	_Set_valvula+1,w
  6958     0211  00E2               	movwf	_posicao_val_futura+1
  6959     0212  0869               	movf	_Set_valvula,w
  6960     0213  00E1               	movwf	_posicao_val_futura
  6961                           
  6962                           ;funcoes.c: 208:             break;
  6963     0214  2A8C               	goto	i1l822
  6964     0215                     i1l2483:
  6965                           
  6966                           ;funcoes.c: 210:             if(Set_valvula.Dado > 460){Set_valvula.Dado = 460;}
  6967     0215  3001               	movlw	1
  6968     0216  0020               	movlb	0	; select bank0
  6969     0217  026A               	subwf	_Set_valvula+1,w
  6970     0218  30CD               	movlw	205
  6971     0219  1903               	skipnz
  6972     021A  0269               	subwf	_Set_valvula,w
  6973     021B  1C03               	skipc
  6974     021C  2A1E               	goto	u141_21
  6975     021D  2A1F               	goto	u141_20
  6976     021E                     u141_21:
  6977     021E  2A23               	goto	i1l818
  6978     021F                     u141_20:
  6979     021F                     i1l2485:
  6980     021F  30CC               	movlw	204
  6981     0220  00E9               	movwf	_Set_valvula
  6982     0221  3001               	movlw	1
  6983     0222  00EA               	movwf	_Set_valvula+1
  6984     0223                     i1l818:
  6985                           
  6986                           ;funcoes.c: 211:             posicao_val_futura = Set_valvula.Dado;
  6987     0223  086A               	movf	_Set_valvula+1,w
  6988     0224  00E2               	movwf	_posicao_val_futura+1
  6989     0225  0869               	movf	_Set_valvula,w
  6990     0226  00E1               	movwf	_posicao_val_futura
  6991                           
  6992                           ;funcoes.c: 214:             erro_atual = 0;
  6993     0227  3000               	movlw	0
  6994     0228  00DC               	movwf	_erro_atual
  6995     0229  3000               	movlw	0
  6996     022A  00DD               	movwf	_erro_atual+1
  6997     022B  3000               	movlw	0
  6998     022C  00DE               	movwf	_erro_atual+2
  6999                           
  7000                           ;funcoes.c: 215:             soma_PID = 0;
  7001     022D  3000               	movlw	0
  7002     022E  00D9               	movwf	_soma_PID
  7003     022F  3000               	movlw	0
  7004     0230  00DA               	movwf	_soma_PID+1
  7005     0231  3000               	movlw	0
  7006     0232  00DB               	movwf	_soma_PID+2
  7007                           
  7008                           ;funcoes.c: 216:             integrativo = 0;
  7009     0233  3000               	movlw	0
  7010     0234  0021               	movlb	1	; select bank1
  7011     0235  00B2               	movwf	_integrativo^(0+128)
  7012     0236  3000               	movlw	0
  7013     0237  00B3               	movwf	(_integrativo+1)^(0+128)
  7014     0238  3000               	movlw	0
  7015     0239  00B4               	movwf	(_integrativo+2)^(0+128)
  7016                           
  7017                           ;funcoes.c: 217:             proporcional = 0;
  7018     023A  3000               	movlw	0
  7019     023B  00AF               	movwf	_proporcional^(0+128)
  7020     023C  3000               	movlw	0
  7021     023D  00B0               	movwf	(_proporcional+1)^(0+128)
  7022     023E  3000               	movlw	0
  7023     023F  00B1               	movwf	(_proporcional+2)^(0+128)
  7024                           
  7025                           ;funcoes.c: 218:             derivativo = 0;
  7026     0240  3000               	movlw	0
  7027     0241  00AC               	movwf	_derivativo^(0+128)
  7028     0242  3000               	movlw	0
  7029     0243  00AD               	movwf	(_derivativo+1)^(0+128)
  7030     0244  3000               	movlw	0
  7031     0245  00AE               	movwf	(_derivativo+2)^(0+128)
  7032                           
  7033                           ;funcoes.c: 219:             break;
  7034     0246  2A8C               	goto	i1l822
  7035     0247                     i1l2487:
  7036                           
  7037                           ;funcoes.c: 221:             if(Set_ciclo.Dado > 1023){Set_ciclo.Dado = 1023;}
  7038     0247  3004               	movlw	4
  7039     0248  0020               	movlb	0	; select bank0
  7040     0249  0268               	subwf	_Set_ciclo+1,w
  7041     024A  3000               	movlw	0
  7042     024B  1903               	skipnz
  7043     024C  0267               	subwf	_Set_ciclo,w
  7044     024D  1C03               	skipc
  7045     024E  2A50               	goto	u142_21
  7046     024F  2A51               	goto	u142_20
  7047     0250                     u142_21:
  7048     0250  2A55               	goto	i1l820
  7049     0251                     u142_20:
  7050     0251                     i1l2489:
  7051     0251  30FF               	movlw	255
  7052     0252  00E7               	movwf	_Set_ciclo
  7053     0253  3003               	movlw	3
  7054     0254  00E8               	movwf	_Set_ciclo+1
  7055     0255                     i1l820:
  7056                           
  7057                           ;funcoes.c: 222:             ciclo_util_futuro = Set_ciclo.Dado;
  7058     0255  0868               	movf	_Set_ciclo+1,w
  7059     0256  00E0               	movwf	_ciclo_util_futuro+1
  7060     0257  0867               	movf	_Set_ciclo,w
  7061     0258  00DF               	movwf	_ciclo_util_futuro
  7062     0259                     i1l2491:
  7063                           
  7064                           ;funcoes.c: 223:             EPWM1_LoadDutyValue(ciclo_util_futuro);
  7065     0259  0860               	movf	_ciclo_util_futuro+1,w
  7066     025A  00F1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  7067     025B  085F               	movf	_ciclo_util_futuro,w
  7068     025C  00F0               	movwf	EPWM1_LoadDutyValue@dutyValue
  7069     025D  318F  27B0  3181   	fcall	_EPWM1_LoadDutyValue
  7070     0260                     i1l2493:
  7071                           
  7072                           ;funcoes.c: 226:             erro_atual = 0;
  7073     0260  3000               	movlw	0
  7074     0261  0020               	movlb	0	; select bank0
  7075     0262  00DC               	movwf	_erro_atual
  7076     0263  3000               	movlw	0
  7077     0264  00DD               	movwf	_erro_atual+1
  7078     0265  3000               	movlw	0
  7079     0266  00DE               	movwf	_erro_atual+2
  7080     0267                     i1l2495:
  7081                           
  7082                           ;funcoes.c: 227:             soma_PID = 0;
  7083     0267  3000               	movlw	0
  7084     0268  00D9               	movwf	_soma_PID
  7085     0269  3000               	movlw	0
  7086     026A  00DA               	movwf	_soma_PID+1
  7087     026B  3000               	movlw	0
  7088     026C  00DB               	movwf	_soma_PID+2
  7089     026D                     i1l2497:
  7090                           
  7091                           ;funcoes.c: 228:             integrativo = 0;
  7092     026D  3000               	movlw	0
  7093     026E  0021               	movlb	1	; select bank1
  7094     026F  00B2               	movwf	_integrativo^(0+128)
  7095     0270  3000               	movlw	0
  7096     0271  00B3               	movwf	(_integrativo+1)^(0+128)
  7097     0272  3000               	movlw	0
  7098     0273  00B4               	movwf	(_integrativo+2)^(0+128)
  7099     0274                     i1l2499:
  7100                           
  7101                           ;funcoes.c: 229:             proporcional = 0;
  7102     0274  3000               	movlw	0
  7103     0275  00AF               	movwf	_proporcional^(0+128)
  7104     0276  3000               	movlw	0
  7105     0277  00B0               	movwf	(_proporcional+1)^(0+128)
  7106     0278  3000               	movlw	0
  7107     0279  00B1               	movwf	(_proporcional+2)^(0+128)
  7108     027A                     i1l2501:
  7109                           
  7110                           ;funcoes.c: 230:             derivativo = 0;
  7111     027A  3000               	movlw	0
  7112     027B  00AC               	movwf	_derivativo^(0+128)
  7113     027C  3000               	movlw	0
  7114     027D  00AD               	movwf	(_derivativo+1)^(0+128)
  7115     027E  3000               	movlw	0
  7116     027F  00AE               	movwf	(_derivativo+2)^(0+128)
  7117                           
  7118                           ;funcoes.c: 231:             break;
  7119     0280  2A8C               	goto	i1l822
  7120     0281                     i1l2505:
  7121     0281  087D               	movf	_modo,w
  7122                           
  7123                           ; Switch size 1, requested type "simple"
  7124                           ; Number of cases is 3, Range of values is 0 to 2
  7125                           ; switch strategies available:
  7126                           ; Name         Instructions Cycles
  7127                           ; simple_byte           10     6 (average)
  7128                           ; direct_byte           12     6 (fixed)
  7129                           ; jumptable            260     6 (fixed)
  7130                           ;	Chosen strategy is simple_byte
  7131     0282  3A00               	xorlw	0	; case 0
  7132     0283  1903               	skipnz
  7133     0284  29E9               	goto	i1l2473
  7134     0285  3A01               	xorlw	1	; case 1
  7135     0286  1903               	skipnz
  7136     0287  2A15               	goto	i1l2483
  7137     0288  3A03               	xorlw	3	; case 2
  7138     0289  1903               	skipnz
  7139     028A  2A47               	goto	i1l2487
  7140     028B  2A8C               	goto	i1l822
  7141     028C                     i1l822:
  7142     028C  0008               	return
  7143     028D                     __end_of_selecao_do_modo:
  7144                           
  7145                           	psect	text38
  7146     0EDC                     __ptext38:	
  7147 ;; *************** function _TMR1_GATE_ISR *****************
  7148 ;; Defined at:
  7149 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7163 ;;      Params:         0       0       0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0
  7166 ;;      Totals:         0       0       0       0       0       0
  7167 ;;Total ram usage:        0 bytes
  7168 ;; Hardware stack levels used: 1
  7169 ;; Hardware stack levels required when called: 5
  7170 ;; This function calls:
  7171 ;;		NULL
  7172 ;;		_TMR1_DefaultGateInterruptHandler
  7173 ;;		_posicao_bola_tubo
  7174 ;; This function is called by:
  7175 ;;		_INTERRUPT_InterruptManager
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179     0EDC                     _TMR1_GATE_ISR:	
  7180                           ;psect for function _TMR1_GATE_ISR
  7181                           
  7182     0EDC                     i1l2747:	
  7183                           ;incstack = 0
  7184                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7185                           
  7186                           
  7187                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  7188     0EDC  0020               	movlb	0	; select bank0
  7189     0EDD  1391               	bcf	17,7	;volatile
  7190     0EDE                     i1l2749:
  7191                           
  7192                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  7193     0EDE  0021               	movlb	1	; select bank1
  7194     0EDF  0864               	movf	_TMR1_GateInterruptHandler^(0+128),w
  7195     0EE0  0465               	iorwf	(_TMR1_GateInterruptHandler+1)^(0+128),w
  7196     0EE1  1903               	btfsc	3,2
  7197     0EE2  2EE4               	goto	u160_21
  7198     0EE3  2EE5               	goto	u160_20
  7199     0EE4                     u160_21:
  7200     0EE4  2EEA               	goto	i1l178
  7201     0EE5                     u160_20:
  7202     0EE5                     i1l2751:
  7203                           
  7204                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  7205     0EE5  0865               	movf	(_TMR1_GateInterruptHandler+1)^(0+128),w
  7206     0EE6  008A               	movwf	10
  7207     0EE7  0864               	movf	_TMR1_GateInterruptHandler^(0+128),w
  7208     0EE8  000A               	callw
  7209     0EE9  318E               	pagesel	$
  7210     0EEA                     i1l178:
  7211     0EEA  0008               	return
  7212     0EEB                     __end_of_TMR1_GATE_ISR:
  7213                           
  7214                           	psect	text39
  7215     0E46                     __ptext39:	
  7216 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  7217 ;; Defined at:
  7218 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		None
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7232 ;;      Params:         0       0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0
  7235 ;;      Totals:         0       0       0       0       0       0
  7236 ;;Total ram usage:        0 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_TMR1_Initialize
  7242 ;;		_TMR1_GATE_ISR
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246     0E46                     _TMR1_DefaultGateInterruptHandler:	
  7247                           ;psect for function _TMR1_DefaultGateInterruptHandler
  7248                           
  7249     0E46                     i1l184:	
  7250                           ;incstack = 0
  7251                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  7252                           
  7253     0E46  0008               	return
  7254     0E47                     __end_of_TMR1_DefaultGateInterruptHandler:
  7255                           
  7256                           	psect	text40
  7257     05B0                     __ptext40:	
  7258 ;; *************** function _posicao_bola_tubo *****************
  7259 ;; Defined at:
  7260 ;;		line 67 in file "funcoes.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;		None
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;		None
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      void 
  7267 ;; Registers used:
  7268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7274 ;;      Params:         0       0       0       0       0       0
  7275 ;;      Locals:         0       2       0       0       0       0
  7276 ;;      Temps:          0       0       0       0       0       0
  7277 ;;      Totals:         0       2       0       0       0       0
  7278 ;;Total ram usage:        2 bytes
  7279 ;; Hardware stack levels used: 1
  7280 ;; Hardware stack levels required when called: 4
  7281 ;; This function calls:
  7282 ;;		_Comando_PIeD
  7283 ;;		_TMR1_ReadTimer
  7284 ;;		_TMR1_WriteTimer
  7285 ;;		___lwdiv
  7286 ;;		___wmul
  7287 ;;		_media
  7288 ;;		_velocidade_som
  7289 ;; This function is called by:
  7290 ;;		_main
  7291 ;;		_TMR1_GATE_ISR
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295     05B0                     _posicao_bola_tubo:	
  7296                           ;psect for function _posicao_bola_tubo
  7297                           
  7298     05B0                     i1l2691:	
  7299                           ;incstack = 0
  7300                           ; Regs used in _posicao_bola_tubo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7301                           
  7302                           
  7303                           ;funcoes.c: 68:     media(TMR1_ReadTimer());
  7304     05B0  3187  27E7  3185   	fcall	_TMR1_ReadTimer
  7305     05B3  0871               	movf	?_TMR1_ReadTimer+1,w
  7306     05B4  00FC               	movwf	media@timer+1
  7307     05B5  0870               	movf	?_TMR1_ReadTimer,w
  7308     05B6  00FB               	movwf	media@timer
  7309     05B7  318F  27E2  3185   	fcall	_media
  7310                           
  7311                           ;funcoes.c: 70:     altura_bola = (uint16_t)(((uint16_t)((velocidade_som() / 2000) * (te
      +                          mpo_medio))));
  7312     05BA  3187  27AA  3185   	fcall	_velocidade_som
  7313     05BD  087C               	movf	?_velocidade_som+1,w
  7314     05BE  0020               	movlb	0	; select bank0
  7315     05BF  00D8               	movwf	_posicao_bola_tubo$2066+1
  7316     05C0  087B               	movf	?_velocidade_som,w
  7317     05C1  00D7               	movwf	_posicao_bola_tubo$2066
  7318     05C2                     i1l2693:
  7319                           
  7320                           ;funcoes.c: 70:     altura_bola = (uint16_t)(((uint16_t)((velocidade_som() / 2000) * (te
      +                          mpo_medio))));
  7321     05C2  30D0               	movlw	208
  7322     05C3  00F0               	movwf	___lwdiv@divisor
  7323     05C4  3007               	movlw	7
  7324     05C5  00F1               	movwf	___lwdiv@divisor+1
  7325     05C6  0858               	movf	_posicao_bola_tubo$2066+1,w
  7326     05C7  00F3               	movwf	___lwdiv@dividend+1
  7327     05C8  0857               	movf	_posicao_bola_tubo$2066,w
  7328     05C9  00F2               	movwf	___lwdiv@dividend
  7329     05CA  3185  25EC  3185   	fcall	___lwdiv
  7330     05CD  0871               	movf	?___lwdiv+1,w
  7331     05CE  0020               	movlb	0	; select bank0
  7332     05CF  00A1               	movwf	___wmul@multiplier+1
  7333     05D0  0870               	movf	?___lwdiv,w
  7334     05D1  00A0               	movwf	___wmul@multiplier
  7335     05D2  0866               	movf	_tempo_medio+1,w
  7336     05D3  00A3               	movwf	___wmul@multiplicand+1
  7337     05D4  0865               	movf	_tempo_medio,w
  7338     05D5  00A2               	movwf	___wmul@multiplicand
  7339     05D6  3187  278A  3185   	fcall	___wmul
  7340     05D9  0020               	movlb	0	; select bank0
  7341     05DA  0820               	movf	?___wmul,w
  7342     05DB  0021               	movlb	1	; select bank1
  7343     05DC  00A9               	movwf	_altura_bola^(0+128)
  7344     05DD  0020               	movlb	0	; select bank0
  7345     05DE  0821               	movf	?___wmul+1,w
  7346     05DF  0021               	movlb	1	; select bank1
  7347     05E0  00AA               	movwf	(_altura_bola+1)^(0+128)
  7348     05E1  01AB               	clrf	(_altura_bola+2)^(0+128)
  7349     05E2                     i1l2695:
  7350                           
  7351                           ;funcoes.c: 71:     Comando_PIeD();
  7352     05E2  318F  2771  3185   	fcall	_Comando_PIeD
  7353     05E5                     i1l2697:
  7354                           
  7355                           ;funcoes.c: 79:     TMR1_WriteTimer(0);
  7356     05E5  3000               	movlw	0
  7357     05E6  00F0               	movwf	TMR1_WriteTimer@timerVal
  7358     05E7  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  7359     05E8  318F  2728  3185   	fcall	_TMR1_WriteTimer
  7360     05EB                     i1l735:
  7361     05EB  0008               	return
  7362     05EC                     __end_of_posicao_bola_tubo:
  7363                           
  7364                           	psect	text41
  7365     07AA                     __ptext41:	
  7366 ;; *************** function _velocidade_som *****************
  7367 ;; Defined at:
  7368 ;;		line 40 in file "funcoes.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;		None
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  2   11[COMMON] unsigned short 
  7375 ;; Registers used:
  7376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7382 ;;      Params:         2       0       0       0       0       0
  7383 ;;      Locals:         0       0       0       0       0       0
  7384 ;;      Temps:          0       0       0       0       0       0
  7385 ;;      Totals:         2       0       0       0       0       0
  7386 ;;Total ram usage:        2 bytes
  7387 ;; Hardware stack levels used: 1
  7388 ;; Hardware stack levels required when called: 2
  7389 ;; This function calls:
  7390 ;;		_ADC_GetConversion
  7391 ;;		___eetoi
  7392 ;;		___lwdiv
  7393 ;; This function is called by:
  7394 ;;		_posicao_bola_tubo
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398     07AA                     _velocidade_som:	
  7399                           ;psect for function _velocidade_som
  7400                           
  7401     07AA                     i1l2447:	
  7402                           ;incstack = 0
  7403                           ; Regs used in _velocidade_som: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7404                           
  7405                           
  7406                           ;funcoes.c: 46:     temperatura = (uint16_t)(ADC_GetConversion(Temp));
  7407     07AA  3008               	movlw	8
  7408     07AB  318F  27C7  3187   	fcall	_ADC_GetConversion
  7409     07AE  0871               	movf	?_ADC_GetConversion+1,w
  7410     07AF  0020               	movlb	0	; select bank0
  7411     07B0  00E4               	movwf	_temperatura+1
  7412     07B1  0870               	movf	?_ADC_GetConversion,w
  7413     07B2  00E3               	movwf	_temperatura
  7414     07B3                     i1l2449:
  7415                           
  7416                           ;funcoes.c: 47:     return relacao_som_temperatura[(uint16_t)(temperatura/10)];
  7417     07B3  0864               	movf	_temperatura+1,w
  7418     07B4  00F3               	movwf	___lwdiv@dividend+1
  7419     07B5  0863               	movf	_temperatura,w
  7420     07B6  00F2               	movwf	___lwdiv@dividend
  7421     07B7  300A               	movlw	10
  7422     07B8  00F0               	movwf	___lwdiv@divisor
  7423     07B9  3000               	movlw	0
  7424     07BA  00F1               	movwf	___lwdiv@divisor+1
  7425     07BB  3185  25EC  3187   	fcall	___lwdiv
  7426     07BE  0870               	movf	?___lwdiv,w
  7427     07BF  0709               	addwf	9,w
  7428     07C0  3E00               	addlw	low _relacao_som_temperatura
  7429     07C1  318E  26CE  3187   	fcall	___eetoi
  7430     07C4  0877               	movf	?___eetoi+1,w
  7431     07C5  00FC               	movwf	?_velocidade_som+1
  7432     07C6  0876               	movf	?___eetoi,w
  7433     07C7  00FB               	movwf	?_velocidade_som
  7434     07C8                     i1l725:
  7435     07C8  0008               	return
  7436     07C9                     __end_of_velocidade_som:
  7437                           
  7438                           	psect	text42
  7439     05EC                     __ptext42:	
  7440 ;; *************** function ___lwdiv *****************
  7441 ;; Defined at:
  7442 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  divisor         2    0[COMMON] unsigned int 
  7445 ;;  dividend        2    2[COMMON] unsigned int 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  quotient        2    5[COMMON] unsigned int 
  7448 ;;  counter         1    7[COMMON] unsigned char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  2    0[COMMON] unsigned int 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7458 ;;      Params:         4       0       0       0       0       0
  7459 ;;      Locals:         3       0       0       0       0       0
  7460 ;;      Temps:          1       0       0       0       0       0
  7461 ;;      Totals:         8       0       0       0       0       0
  7462 ;;Total ram usage:        8 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_velocidade_som
  7468 ;;		_posicao_bola_tubo
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472     05EC                     ___lwdiv:	
  7473                           ;psect for function ___lwdiv
  7474                           
  7475     05EC                     i1l2387:	
  7476                           ;incstack = 0
  7477                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7478                           
  7479     05EC  01F5               	clrf	___lwdiv@quotient
  7480     05ED  01F6               	clrf	___lwdiv@quotient+1
  7481     05EE                     i1l2389:
  7482     05EE  0870               	movf	___lwdiv@divisor,w
  7483     05EF  0471               	iorwf	___lwdiv@divisor+1,w
  7484     05F0  1903               	btfsc	3,2
  7485     05F1  2DF3               	goto	u131_21
  7486     05F2  2DF4               	goto	u131_20
  7487     05F3                     u131_21:
  7488     05F3  2E23               	goto	i1l2409
  7489     05F4                     u131_20:
  7490     05F4                     i1l2391:
  7491     05F4  01F7               	clrf	___lwdiv@counter
  7492     05F5  0AF7               	incf	___lwdiv@counter,f
  7493     05F6  2E00               	goto	i1l2397
  7494     05F7                     i1l2393:
  7495     05F7  3001               	movlw	1
  7496     05F8                     u132_25:
  7497     05F8  35F0               	lslf	___lwdiv@divisor,f
  7498     05F9  0DF1               	rlf	___lwdiv@divisor+1,f
  7499     05FA  0B89               	decfsz	9,f
  7500     05FB  2DF8               	goto	u132_25
  7501     05FC                     i1l2395:
  7502     05FC  3001               	movlw	1
  7503     05FD  00F4               	movwf	??___lwdiv
  7504     05FE  0874               	movf	??___lwdiv,w
  7505     05FF  07F7               	addwf	___lwdiv@counter,f
  7506     0600                     i1l2397:
  7507     0600  1FF1               	btfss	___lwdiv@divisor+1,7
  7508     0601  2E03               	goto	u133_21
  7509     0602  2E04               	goto	u133_20
  7510     0603                     u133_21:
  7511     0603  2DF7               	goto	i1l2393
  7512     0604                     u133_20:
  7513     0604                     i1l2399:
  7514     0604  3001               	movlw	1
  7515     0605                     u134_25:
  7516     0605  35F5               	lslf	___lwdiv@quotient,f
  7517     0606  0DF6               	rlf	___lwdiv@quotient+1,f
  7518     0607  0B89               	decfsz	9,f
  7519     0608  2E05               	goto	u134_25
  7520     0609  0871               	movf	___lwdiv@divisor+1,w
  7521     060A  0273               	subwf	___lwdiv@dividend+1,w
  7522     060B  1D03               	skipz
  7523     060C  2E0F               	goto	u135_25
  7524     060D  0870               	movf	___lwdiv@divisor,w
  7525     060E  0272               	subwf	___lwdiv@dividend,w
  7526     060F                     u135_25:
  7527     060F  1C03               	skipc
  7528     0610  2E12               	goto	u135_21
  7529     0611  2E13               	goto	u135_20
  7530     0612                     u135_21:
  7531     0612  2E18               	goto	i1l2405
  7532     0613                     u135_20:
  7533     0613                     i1l2401:
  7534     0613  0870               	movf	___lwdiv@divisor,w
  7535     0614  02F2               	subwf	___lwdiv@dividend,f
  7536     0615  0871               	movf	___lwdiv@divisor+1,w
  7537     0616  3BF3               	subwfb	___lwdiv@dividend+1,f
  7538     0617                     i1l2403:
  7539     0617  1475               	bsf	___lwdiv@quotient,0
  7540     0618                     i1l2405:
  7541     0618  3001               	movlw	1
  7542     0619                     u136_25:
  7543     0619  36F1               	lsrf	___lwdiv@divisor+1,f
  7544     061A  0CF0               	rrf	___lwdiv@divisor,f
  7545     061B  0B89               	decfsz	9,f
  7546     061C  2E19               	goto	u136_25
  7547     061D                     i1l2407:
  7548     061D  3001               	movlw	1
  7549     061E  02F7               	subwf	___lwdiv@counter,f
  7550     061F  1D03               	btfss	3,2
  7551     0620  2E22               	goto	u137_21
  7552     0621  2E23               	goto	u137_20
  7553     0622                     u137_21:
  7554     0622  2E04               	goto	i1l2399
  7555     0623                     u137_20:
  7556     0623                     i1l2409:
  7557     0623  0876               	movf	___lwdiv@quotient+1,w
  7558     0624  00F1               	movwf	?___lwdiv+1
  7559     0625  0875               	movf	___lwdiv@quotient,w
  7560     0626  00F0               	movwf	?___lwdiv
  7561     0627                     i1l1273:
  7562     0627  0008               	return
  7563     0628                     __end_of___lwdiv:
  7564                           
  7565                           	psect	text43
  7566     0ECE                     __ptext43:	
  7567 ;; *************** function ___eetoi *****************
  7568 ;; Defined at:
  7569 ;;		line 112 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  addr            1    wreg     PTR eeprom void 
  7572 ;;		 -> relacao_som_temperatura(102), 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  addr            1    8[COMMON] PTR eeprom void 
  7575 ;;		 -> relacao_som_temperatura(102), 
  7576 ;;  data            2    9[COMMON] unsigned int 
  7577 ;; Return value:  Size  Location     Type
  7578 ;;                  2    6[COMMON] unsigned int 
  7579 ;; Registers used:
  7580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7586 ;;      Params:         2       0       0       0       0       0
  7587 ;;      Locals:         3       0       0       0       0       0
  7588 ;;      Temps:          0       0       0       0       0       0
  7589 ;;      Totals:         5       0       0       0       0       0
  7590 ;;Total ram usage:        5 bytes
  7591 ;; Hardware stack levels used: 1
  7592 ;; Hardware stack levels required when called: 1
  7593 ;; This function calls:
  7594 ;;		___eecpymem
  7595 ;; This function is called by:
  7596 ;;		_velocidade_som
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600     0ECE                     ___eetoi:	
  7601                           ;psect for function ___eetoi
  7602                           
  7603                           
  7604                           ;incstack = 0
  7605                           ; Regs used in ___eetoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7606                           ;___eetoi@addr stored from wreg
  7607     0ECE  00F8               	movwf	___eetoi@addr
  7608     0ECF                     i1l2381:
  7609                           
  7610                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 112: __eetoi(__eep
      +                          rom void *addr);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 113
      +                          : {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 114:  unsigned 
      +                          int data;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 115:  __e
      +                          ecpymem((unsigned char *) &data,addr,2);
  7611     0ECF  0878               	movf	___eetoi@addr,w
  7612     0ED0  00F0               	movwf	___eecpymem@from
  7613     0ED1  3002               	movlw	2
  7614     0ED2  00F1               	movwf	___eecpymem@size
  7615     0ED3  3079               	movlw	(low (___eetoi@data| 0))& (0+255)
  7616     0ED4  3186  2690  318E   	fcall	___eecpymem
  7617     0ED7                     i1l2383:
  7618                           
  7619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 116:  return data;
  7620     0ED7  087A               	movf	___eetoi@data+1,w
  7621     0ED8  00F7               	movwf	?___eetoi+1
  7622     0ED9  0879               	movf	___eetoi@data,w
  7623     0EDA  00F6               	movwf	?___eetoi
  7624     0EDB                     i1l889:
  7625     0EDB  0008               	return
  7626     0EDC                     __end_of___eetoi:
  7627                           
  7628                           	psect	text44
  7629     0690                     __ptext44:	
  7630 ;; *************** function ___eecpymem *****************
  7631 ;; Defined at:
  7632 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  to              1    wreg     PTR volatile unsigned ch
  7635 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7636 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7637 ;;  from            1    0[COMMON] PTR eeprom unsigned char
  7638 ;;		 -> relacao_som_temperatura(102), 
  7639 ;;  size            1    1[COMMON] unsigned char 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  to              1    5[COMMON] PTR volatile unsigned ch
  7642 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7643 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7644 ;;  cp              1    4[COMMON] PTR volatile unsigned ch
  7645 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7646 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      void 
  7649 ;; Registers used:
  7650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7656 ;;      Params:         2       0       0       0       0       0
  7657 ;;      Locals:         2       0       0       0       0       0
  7658 ;;      Temps:          2       0       0       0       0       0
  7659 ;;      Totals:         6       0       0       0       0       0
  7660 ;;Total ram usage:        6 bytes
  7661 ;; Hardware stack levels used: 1
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		___eetoi
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669     0690                     ___eecpymem:	
  7670                           ;psect for function ___eecpymem
  7671                           
  7672                           
  7673                           ;incstack = 0
  7674                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  7675                           ;___eecpymem@to stored from wreg
  7676     0690  00F5               	movwf	___eecpymem@to
  7677     0691                     i1l2269:
  7678                           
  7679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: __eecpymem(vola
      +                          tile unsigned char *to, __eeprom unsigned char * from, unsigned char size);C:\Program Fi
      +                          les\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: };C:\Program Files\Microchip\
      +                          xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.46\pic\s
      +                          ources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\
      +                          __eeprom.c: 6: };C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 7:
      +                           {
  7680     0691  0875               	movf	___eecpymem@to,w
  7681     0692  00F4               	movwf	___eecpymem@cp
  7682     0693                     i1l860:	
  7683                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 10:  while (EECON1
      +                          bits.WR) continue;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 
      +                          10:  __memcpyee(addr,(unsigned char *) &data,2);;C:\Program Files\Microchip\xc8\v2.46\pi
      +                          c\sources\c99\pic\__eeprom.c: 10: {
  7684                           
  7685     0693  0023               	movlb	3	; select bank3
  7686     0694  1895               	btfsc	21,1	;volsfr
  7687     0695  2E97               	goto	u108_21
  7688     0696  2E98               	goto	u108_20
  7689     0697                     u108_21:
  7690     0697  2E93               	goto	i1l860
  7691     0698                     u108_20:
  7692     0698                     i1l2271:
  7693                           
  7694                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11:  EEADR = (unsi
      +                          gned char)from;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11:
      +                            return data;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11: 
      +                           double data;
  7695     0698  0870               	movf	___eecpymem@from,w
  7696     0699  00F2               	movwf	??___eecpymem
  7697     069A  01F3               	clrf	??___eecpymem+1
  7698     069B  0872               	movf	??___eecpymem,w
  7699     069C  0091               	movwf	17	;volatile
  7700     069D  0873               	movf	??___eecpymem+1,w
  7701     069E  0092               	movwf	18	;volatile
  7702                           
  7703                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  while(size--)
      +                           {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12: };C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  __eecpymem((unsigned cha
      +                          r *) &data,addr,4);
  7704     069F  2EB6               	goto	i1l2283
  7705     06A0                     i1l865:
  7706     06A0  1895               	btfsc	21,1	;volsfr
  7707     06A1  2EA3               	goto	u109_21
  7708     06A2  2EA4               	goto	u109_20
  7709     06A3                     u109_21:
  7710     06A3  2EA0               	goto	i1l865
  7711     06A4                     u109_20:
  7712     06A4                     i1l2273:
  7713                           
  7714                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 15:   EECON1 &= 0x
      +                          7F;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 15: 
  7715     06A4  307F               	movlw	127
  7716     06A5  00F2               	movwf	??___eecpymem
  7717     06A6  0872               	movf	??___eecpymem,w
  7718     06A7  0595               	andwf	21,f	;volsfr
  7719     06A8                     i1l2275:
  7720                           
  7721                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 17:   EECON1bits.R
      +                          D = 1;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 17: __fttoee
      +                          (__eeprom void *addr, float data)
  7722     06A8  1415               	bsf	21,0	;volsfr
  7723     06A9                     i1l2277:
  7724                           
  7725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 18:   *cp++ = EEDA
      +                          TA;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 18: {
  7726     06A9  0874               	movf	___eecpymem@cp,w
  7727     06AA  0086               	movwf	6
  7728     06AB  0187               	clrf	7
  7729     06AC  0813               	movf	19,w	;volatile
  7730     06AD  0081               	movwf	1
  7731     06AE                     i1l2279:
  7732     06AE  3001               	movlw	1
  7733     06AF  00F2               	movwf	??___eecpymem
  7734     06B0  0872               	movf	??___eecpymem,w
  7735     06B1  07F4               	addwf	___eecpymem@cp,f
  7736     06B2                     i1l2281:
  7737                           
  7738                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 19:   ++EEADR;;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 19:  __memcpyee(addr,(
      +                          unsigned char *) &data,3);
  7739     06B2  3001               	movlw	1
  7740     06B3  0791               	addwf	17,f	;volatile
  7741     06B4  3000               	movlw	0
  7742     06B5  3D92               	addwfc	18,f	;volatile
  7743     06B6                     i1l2283:
  7744                           
  7745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  while(size--)
      +                           {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12: };C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  __eecpymem((unsigned cha
      +                          r *) &data,addr,4);
  7746     06B6  3001               	movlw	1
  7747     06B7  02F1               	subwf	___eecpymem@size,f
  7748     06B8  0A71               	incf	___eecpymem@size,w
  7749     06B9  1D03               	btfss	3,2
  7750     06BA  2EBC               	goto	u110_21
  7751     06BB  2EBD               	goto	u110_20
  7752     06BC                     u110_21:
  7753     06BC  2EA0               	goto	i1l865
  7754     06BD                     u110_20:
  7755     06BD                     i1l869:
  7756     06BD  0008               	return
  7757     06BE                     __end_of___eecpymem:
  7758                           
  7759                           	psect	text45
  7760     0FC7                     __ptext45:	
  7761 ;; *************** function _ADC_GetConversion *****************
  7762 ;; Defined at:
  7763 ;;		line 112 in file "mcc_generated_files/adc.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  channel         1    wreg     enum E2495
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  channel         1    3[COMMON] enum E2495
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  2    0[COMMON] unsigned short 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7777 ;;      Params:         2       0       0       0       0       0
  7778 ;;      Locals:         1       0       0       0       0       0
  7779 ;;      Temps:          1       0       0       0       0       0
  7780 ;;      Totals:         4       0       0       0       0       0
  7781 ;;Total ram usage:        4 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_velocidade_som
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790     0FC7                     _ADC_GetConversion:	
  7791                           ;psect for function _ADC_GetConversion
  7792                           
  7793                           
  7794                           ;incstack = 0
  7795                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7796                           ;ADC_GetConversion@channel stored from wreg
  7797     0FC7  00F3               	movwf	ADC_GetConversion@channel
  7798     0FC8                     i1l2339:
  7799                           
  7800                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7801     0FC8  0873               	movf	ADC_GetConversion@channel,w
  7802     0FC9  00F2               	movwf	??_ADC_GetConversion
  7803     0FCA  0DF2               	rlf	??_ADC_GetConversion,f
  7804     0FCB  0DF2               	rlf	??_ADC_GetConversion,f
  7805     0FCC  0021               	movlb	1	; select bank1
  7806     0FCD  081D               	movf	29,w	;volatile
  7807     0FCE  0672               	xorwf	??_ADC_GetConversion,w
  7808     0FCF  3983               	andlw	-125
  7809     0FD0  0672               	xorwf	??_ADC_GetConversion,w
  7810     0FD1  009D               	movwf	29	;volatile
  7811     0FD2                     i1l2341:
  7812                           
  7813                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7814     0FD2  141D               	bsf	29,0	;volatile
  7815     0FD3                     i1l2343:
  7816                           
  7817                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7818     0FD3  3006               	movlw	6
  7819     0FD4                     u183_27:
  7820     0FD4  0B89               	decfsz	9,f
  7821     0FD5  2FD4               	goto	u183_27
  7822     0FD6  3200               	nop2
  7823     0FD7                     i1l2345:
  7824                           
  7825                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7826     0FD7  0021               	movlb	1	; select bank1
  7827     0FD8  149D               	bsf	29,1	;volatile
  7828     0FD9                     i1l105:	
  7829                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7830                           
  7831                           
  7832                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7833     0FD9  189D               	btfsc	29,1	;volatile
  7834     0FDA  2FDC               	goto	u125_21
  7835     0FDB  2FDD               	goto	u125_20
  7836     0FDC                     u125_21:
  7837     0FDC  2FD9               	goto	i1l105
  7838     0FDD                     u125_20:
  7839     0FDD                     i1l2347:
  7840                           
  7841                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7842     0FDD  081C               	movf	28,w	;volatile
  7843     0FDE  00F1               	movwf	?_ADC_GetConversion+1
  7844     0FDF  081B               	movf	27,w	;volatile
  7845     0FE0  00F0               	movwf	?_ADC_GetConversion
  7846     0FE1                     i1l108:
  7847     0FE1  0008               	return
  7848     0FE2                     __end_of_ADC_GetConversion:
  7849                           
  7850                           	psect	text46
  7851     0FE2                     __ptext46:	
  7852 ;; *************** function _media *****************
  7853 ;; Defined at:
  7854 ;;		line 55 in file "funcoes.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  timer           2   11[COMMON] unsigned short 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7868 ;;      Params:         2       0       0       0       0       0
  7869 ;;      Locals:         0       0       0       0       0       0
  7870 ;;      Temps:          0       2       0       0       0       0
  7871 ;;      Totals:         2       2       0       0       0       0
  7872 ;;Total ram usage:        4 bytes
  7873 ;; Hardware stack levels used: 1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_posicao_bola_tubo
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881     0FE2                     _media:	
  7882                           ;psect for function _media
  7883                           
  7884     0FE2                     i1l2453:	
  7885                           ;incstack = 0
  7886                           ; Regs used in _media: [wreg+fsr1l+fsr1h+status,2+status,0]
  7887                           
  7888                           
  7889                           ;funcoes.c: 56:     static uint16_t tempo_recebido[2] = {0, 0};;funcoes.c: 57:     stati
      +                          c uint8_t indice = 0;;funcoes.c: 58:     tempo_recebido[indice] = timer;
  7890     0FE2  0020               	movlb	0	; select bank0
  7891     0FE3  356D               	lslf	media@indice,w
  7892     0FE4  3EA5               	addlw	(low (media@tempo_recebido| 0))& (0+255)
  7893     0FE5  0086               	movwf	6
  7894     0FE6  0187               	clrf	7
  7895     0FE7  087B               	movf	media@timer,w
  7896     0FE8  3FC0               	movwi [0]fsr1
  7897     0FE9  087C               	movf	media@timer+1,w
  7898     0FEA  3FC1               	movwi [1]fsr1
  7899     0FEB                     i1l2455:
  7900                           
  7901                           ;funcoes.c: 59:     indice ^= 1;
  7902     0FEB  3001               	movlw	1
  7903     0FEC  00A0               	movwf	??_media
  7904     0FED  0820               	movf	??_media,w
  7905     0FEE  06ED               	xorwf	media@indice,f
  7906     0FEF                     i1l2457:
  7907                           
  7908                           ;funcoes.c: 60:     tempo_medio = (tempo_recebido[0] + tempo_recebido[1]) / 2;
  7909     0FEF  0021               	movlb	1	; select bank1
  7910     0FF0  0825               	movf	media@tempo_recebido^(0+128),w
  7911     0FF1  0727               	addwf	(media@tempo_recebido^(0+128)+2),w
  7912     0FF2  0020               	movlb	0	; select bank0
  7913     0FF3  00A0               	movwf	??_media
  7914     0FF4  0021               	movlb	1	; select bank1
  7915     0FF5  0826               	movf	(media@tempo_recebido+1)^(0+128),w
  7916     0FF6  3D28               	addwfc	((media@tempo_recebido+1)^(0+128)+2),w
  7917     0FF7  0020               	movlb	0	; select bank0
  7918     0FF8  00A1               	movwf	??_media+1
  7919     0FF9  36A1               	lsrf	??_media+1,f
  7920     0FFA  0CA0               	rrf	??_media,f
  7921     0FFB  0820               	movf	??_media,w
  7922     0FFC  00E5               	movwf	_tempo_medio
  7923     0FFD  0821               	movf	??_media+1,w
  7924     0FFE  00E6               	movwf	_tempo_medio+1
  7925     0FFF                     i1l732:
  7926     0FFF  0008               	return
  7927     1000                     __end_of_media:
  7928                           
  7929                           	psect	text47
  7930     078A                     __ptext47:	
  7931 ;; *************** function ___wmul *****************
  7932 ;; Defined at:
  7933 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7936 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  product         2    4[BANK0 ] unsigned int 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  2    0[BANK0 ] unsigned int 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7948 ;;      Params:         0       4       0       0       0       0
  7949 ;;      Locals:         0       2       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0
  7951 ;;      Totals:         0       6       0       0       0       0
  7952 ;;Total ram usage:        6 bytes
  7953 ;; Hardware stack levels used: 1
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_posicao_bola_tubo
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961     078A                     ___wmul:	
  7962                           ;psect for function ___wmul
  7963                           
  7964     078A                     i1l2507:	
  7965                           ;incstack = 0
  7966                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7967                           
  7968     078A  0020               	movlb	0	; select bank0
  7969     078B  01A4               	clrf	___wmul@product
  7970     078C  01A5               	clrf	___wmul@product+1
  7971     078D                     i1l2509:
  7972     078D  1C20               	btfss	___wmul@multiplier,0
  7973     078E  2F90               	goto	u143_21
  7974     078F  2F91               	goto	u143_20
  7975     0790                     u143_21:
  7976     0790  2F95               	goto	i1l993
  7977     0791                     u143_20:
  7978     0791                     i1l2511:
  7979     0791  0822               	movf	___wmul@multiplicand,w
  7980     0792  07A4               	addwf	___wmul@product,f
  7981     0793  0823               	movf	___wmul@multiplicand+1,w
  7982     0794  3DA5               	addwfc	___wmul@product+1,f
  7983     0795                     i1l993:
  7984     0795  3001               	movlw	1
  7985     0796                     u144_25:
  7986     0796  35A2               	lslf	___wmul@multiplicand,f
  7987     0797  0DA3               	rlf	___wmul@multiplicand+1,f
  7988     0798  0B89               	decfsz	9,f
  7989     0799  2F96               	goto	u144_25
  7990     079A                     i1l2513:
  7991     079A  3001               	movlw	1
  7992     079B                     u145_25:
  7993     079B  36A1               	lsrf	___wmul@multiplier+1,f
  7994     079C  0CA0               	rrf	___wmul@multiplier,f
  7995     079D  0B89               	decfsz	9,f
  7996     079E  2F9B               	goto	u145_25
  7997     079F                     i1l2515:
  7998     079F  0820               	movf	___wmul@multiplier,w
  7999     07A0  0421               	iorwf	___wmul@multiplier+1,w
  8000     07A1  1D03               	btfss	3,2
  8001     07A2  2FA4               	goto	u146_21
  8002     07A3  2FA5               	goto	u146_20
  8003     07A4                     u146_21:
  8004     07A4  2F8D               	goto	i1l2509
  8005     07A5                     u146_20:
  8006     07A5                     i1l2517:
  8007     07A5  0825               	movf	___wmul@product+1,w
  8008     07A6  00A1               	movwf	?___wmul+1
  8009     07A7  0824               	movf	___wmul@product,w
  8010     07A8  00A0               	movwf	?___wmul
  8011     07A9                     i1l995:
  8012     07A9  0008               	return
  8013     07AA                     __end_of___wmul:
  8014                           
  8015                           	psect	text48
  8016     07E7                     __ptext48:	
  8017 ;; *************** function _TMR1_ReadTimer *****************
  8018 ;; Defined at:
  8019 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;		None
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  readVal         2    7[COMMON] unsigned short 
  8024 ;;  readValLow      1   10[COMMON] unsigned char 
  8025 ;;  readValHigh     1    9[COMMON] unsigned char 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  2    0[COMMON] unsigned short 
  8028 ;; Registers used:
  8029 ;;		wreg
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8035 ;;      Params:         2       0       0       0       0       0
  8036 ;;      Locals:         4       0       0       0       0       0
  8037 ;;      Temps:          5       0       0       0       0       0
  8038 ;;      Totals:        11       0       0       0       0       0
  8039 ;;Total ram usage:       11 bytes
  8040 ;; Hardware stack levels used: 1
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_posicao_bola_tubo
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048     07E7                     _TMR1_ReadTimer:	
  8049                           ;psect for function _TMR1_ReadTimer
  8050                           
  8051     07E7                     i1l2415:	
  8052                           ;incstack = 0
  8053                           ; Regs used in _TMR1_ReadTimer: [wreg]
  8054                           
  8055                           
  8056                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  8057     07E7  0020               	movlb	0	; select bank0
  8058     07E8  0816               	movf	22,w	;volatile
  8059     07E9  00FA               	movwf	TMR1_ReadTimer@readValLow
  8060                           
  8061                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  8062     07EA  0817               	movf	23,w	;volatile
  8063     07EB  00F9               	movwf	TMR1_ReadTimer@readValHigh
  8064                           
  8065                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  8066     07EC  087A               	movf	TMR1_ReadTimer@readValLow,w
  8067     07ED  00F2               	movwf	??_TMR1_ReadTimer
  8068     07EE  01F3               	clrf	??_TMR1_ReadTimer+1
  8069     07EF  0879               	movf	TMR1_ReadTimer@readValHigh,w
  8070     07F0  00F4               	movwf	??_TMR1_ReadTimer+2
  8071     07F1  01F5               	clrf	??_TMR1_ReadTimer+3
  8072     07F2  0874               	movf	??_TMR1_ReadTimer+2,w
  8073     07F3  00F5               	movwf	??_TMR1_ReadTimer+3
  8074     07F4  01F4               	clrf	??_TMR1_ReadTimer+2
  8075     07F5  0872               	movf	??_TMR1_ReadTimer,w
  8076     07F6  0474               	iorwf	??_TMR1_ReadTimer+2,w
  8077     07F7  00F7               	movwf	TMR1_ReadTimer@readVal
  8078     07F8  0873               	movf	??_TMR1_ReadTimer+1,w
  8079     07F9  0475               	iorwf	??_TMR1_ReadTimer+3,w
  8080     07FA  00F8               	movwf	TMR1_ReadTimer@readVal+1
  8081                           
  8082                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  8083     07FB  0878               	movf	TMR1_ReadTimer@readVal+1,w
  8084     07FC  00F1               	movwf	?_TMR1_ReadTimer+1
  8085     07FD  0877               	movf	TMR1_ReadTimer@readVal,w
  8086     07FE  00F0               	movwf	?_TMR1_ReadTimer
  8087     07FF                     i1l157:
  8088     07FF  0008               	return
  8089     0800                     __end_of_TMR1_ReadTimer:
  8090                           
  8091                           	psect	text49
  8092     0F71                     __ptext49:	
  8093 ;; *************** function _Comando_PIeD *****************
  8094 ;; Defined at:
  8095 ;;		line 307 in file "funcoes.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      void 
  8102 ;; Registers used:
  8103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8109 ;;      Params:         0       0       0       0       0       0
  8110 ;;      Locals:         0       0       0       0       0       0
  8111 ;;      Temps:          0       0       0       0       0       0
  8112 ;;      Totals:         0       0       0       0       0       0
  8113 ;;Total ram usage:        0 bytes
  8114 ;; Hardware stack levels used: 1
  8115 ;; Hardware stack levels required when called: 3
  8116 ;; This function calls:
  8117 ;;		_Controlador
  8118 ;; This function is called by:
  8119 ;;		_posicao_bola_tubo
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123     0F71                     _Comando_PIeD:	
  8124                           ;psect for function _Comando_PIeD
  8125                           
  8126     0F71                     i1l2459:	
  8127                           ;incstack = 0
  8128                           ; Regs used in _Comando_PIeD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8129                           
  8130                           
  8131                           ;funcoes.c: 308:     switch(modo){
  8132     0F71  2F7C               	goto	i1l2469
  8133     0F72                     i1l829:	
  8134                           ;funcoes.c: 309:         case 0x01:
  8135                           
  8136                           
  8137                           ;funcoes.c: 310:             set_modo = 1;
  8138     0F72  0020               	movlb	0	; select bank0
  8139     0F73  01EF               	clrf	_set_modo
  8140     0F74  0AEF               	incf	_set_modo,f
  8141     0F75                     i1l2461:
  8142                           
  8143                           ;funcoes.c: 311:             Controlador();
  8144     0F75  3180  206D  318F   	fcall	_Controlador
  8145                           
  8146                           ;funcoes.c: 312:             break;
  8147     0F78  2F84               	goto	i1l833
  8148     0F79                     i1l2463:
  8149                           
  8150                           ;funcoes.c: 314:             set_modo = 0;
  8151     0F79  0020               	movlb	0	; select bank0
  8152     0F7A  01EF               	clrf	_set_modo
  8153     0F7B  2F75               	goto	i1l2461
  8154     0F7C                     i1l2469:
  8155     0F7C  087D               	movf	_modo,w
  8156                           
  8157                           ; Switch size 1, requested type "simple"
  8158                           ; Number of cases is 2, Range of values is 1 to 2
  8159                           ; switch strategies available:
  8160                           ; Name         Instructions Cycles
  8161                           ; simple_byte            7     4 (average)
  8162                           ; direct_byte           13     9 (fixed)
  8163                           ; jumptable            263     9 (fixed)
  8164                           ;	Chosen strategy is simple_byte
  8165     0F7D  3A01               	xorlw	1	; case 1
  8166     0F7E  1903               	skipnz
  8167     0F7F  2F72               	goto	i1l829
  8168     0F80  3A03               	xorlw	3	; case 2
  8169     0F81  1903               	skipnz
  8170     0F82  2F79               	goto	i1l2463
  8171     0F83  2F84               	goto	i1l833
  8172     0F84                     i1l833:
  8173     0F84  0008               	return
  8174     0F85                     __end_of_Comando_PIeD:
  8175                           
  8176                           	psect	text50
  8177     006D                     __ptext50:	
  8178 ;; *************** function _Controlador *****************
  8179 ;; Defined at:
  8180 ;;		line 327 in file "funcoes.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;		None
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;		None
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1    wreg      void 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0, pclath, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8194 ;;      Params:         0       0       0       0       0       0
  8195 ;;      Locals:         0       0       0       0       0       0
  8196 ;;      Temps:          0       6       0       0       0       0
  8197 ;;      Totals:         0       6       0       0       0       0
  8198 ;;Total ram usage:        6 bytes
  8199 ;; Hardware stack levels used: 1
  8200 ;; Hardware stack levels required when called: 2
  8201 ;; This function calls:
  8202 ;;		_EPWM1_LoadDutyValue
  8203 ;;		___atdiv
  8204 ;;		___tmul
  8205 ;;		_map_value
  8206 ;; This function is called by:
  8207 ;;		_Comando_PIeD
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211     006D                     _Controlador:	
  8212                           ;psect for function _Controlador
  8213                           
  8214     006D                     i1l2355:	
  8215                           ;incstack = 0
  8216                           ; Regs used in _Controlador: [wreg+status,2+status,0+pclath+cstack]
  8217                           
  8218                           
  8219                           ;funcoes.c: 328:     erro_atual = (int24_t)(((int24_t)Set_altura.Dado) - ((int24_t)(altu
      +                          ra_bola)));
  8220     006D  0020               	movlb	0	; select bank0
  8221     006E  086B               	movf	_Set_altura,w
  8222     006F  00D1               	movwf	??_Controlador
  8223     0070  086C               	movf	_Set_altura+1,w
  8224     0071  00D2               	movwf	??_Controlador+1
  8225     0072  01D3               	clrf	??_Controlador+2
  8226     0073  0021               	movlb	1	; select bank1
  8227     0074  0829               	movf	_altura_bola^(0+128),w
  8228     0075  0020               	movlb	0	; select bank0
  8229     0076  02D1               	subwf	??_Controlador,f
  8230     0077  0021               	movlb	1	; select bank1
  8231     0078  082A               	movf	(_altura_bola+1)^(0+128),w
  8232     0079  0020               	movlb	0	; select bank0
  8233     007A  3BD2               	subwfb	??_Controlador+1,f
  8234     007B  0021               	movlb	1	; select bank1
  8235     007C  082B               	movf	(_altura_bola+2)^(0+128),w
  8236     007D  0020               	movlb	0	; select bank0
  8237     007E  3BD3               	subwfb	??_Controlador+2,f
  8238     007F  0851               	movf	??_Controlador,w
  8239     0080  00DC               	movwf	_erro_atual
  8240     0081  0852               	movf	??_Controlador+1,w
  8241     0082  00DD               	movwf	_erro_atual+1
  8242     0083  0853               	movf	??_Controlador+2,w
  8243     0084  00DE               	movwf	_erro_atual+2
  8244     0085                     i1l2357:
  8245                           
  8246                           ;funcoes.c: 329:     integrativo += (int24_t)(((ki_ventoinha * erro_atual) / 1000));
  8247     0085  30E8               	movlw	232
  8248     0086  00A0               	movwf	___atdiv@divisor
  8249     0087  3003               	movlw	3
  8250     0088  00A1               	movwf	___atdiv@divisor+1
  8251     0089  3000               	movlw	0
  8252     008A  00A2               	movwf	___atdiv@divisor+2
  8253     008B  0021               	movlb	1	; select bank1
  8254     008C  0855               	movf	_ki_ventoinha^(0+128),w
  8255     008D  00F0               	movwf	___tmul@multiplier
  8256     008E  0856               	movf	(_ki_ventoinha+1)^(0+128),w
  8257     008F  00F1               	movwf	___tmul@multiplier+1
  8258     0090  0857               	movf	(_ki_ventoinha+2)^(0+128),w
  8259     0091  00F2               	movwf	___tmul@multiplier+2
  8260     0092  0020               	movlb	0	; select bank0
  8261     0093  085C               	movf	_erro_atual,w
  8262     0094  00F3               	movwf	___tmul@multiplicand
  8263     0095  085D               	movf	_erro_atual+1,w
  8264     0096  00F4               	movwf	___tmul@multiplicand+1
  8265     0097  085E               	movf	_erro_atual+2,w
  8266     0098  00F5               	movwf	___tmul@multiplicand+2
  8267     0099  3187  2714  3180   	fcall	___tmul
  8268     009C  0870               	movf	?___tmul,w
  8269     009D  0020               	movlb	0	; select bank0
  8270     009E  00A3               	movwf	___atdiv@dividend
  8271     009F  0871               	movf	?___tmul+1,w
  8272     00A0  00A4               	movwf	___atdiv@dividend+1
  8273     00A1  0872               	movf	?___tmul+2,w
  8274     00A2  00A5               	movwf	___atdiv@dividend+2
  8275     00A3  3183  231D  3180   	fcall	___atdiv
  8276     00A6  0020               	movlb	0	; select bank0
  8277     00A7  0820               	movf	?___atdiv,w
  8278     00A8  0021               	movlb	1	; select bank1
  8279     00A9  07B2               	addwf	_integrativo^(0+128),f
  8280     00AA  0020               	movlb	0	; select bank0
  8281     00AB  0821               	movf	?___atdiv+1,w
  8282     00AC  0021               	movlb	1	; select bank1
  8283     00AD  3DB3               	addwfc	(_integrativo+1)^(0+128),f
  8284     00AE  0020               	movlb	0	; select bank0
  8285     00AF  0822               	movf	?___atdiv+2,w
  8286     00B0  0021               	movlb	1	; select bank1
  8287     00B1  3DB4               	addwfc	(_integrativo+2)^(0+128),f
  8288     00B2                     i1l2359:
  8289                           
  8290                           ;funcoes.c: 330:     proporcional = ((((int24_t)kp_ventoinha / 1000)) * erro_atual);
  8291     00B2  30E8               	movlw	232
  8292     00B3  0020               	movlb	0	; select bank0
  8293     00B4  00A0               	movwf	___atdiv@divisor
  8294     00B5  3003               	movlw	3
  8295     00B6  00A1               	movwf	___atdiv@divisor+1
  8296     00B7  3000               	movlw	0
  8297     00B8  00A2               	movwf	___atdiv@divisor+2
  8298     00B9  0021               	movlb	1	; select bank1
  8299     00BA  084F               	movf	_kp_ventoinha^(0+128),w
  8300     00BB  0020               	movlb	0	; select bank0
  8301     00BC  00A3               	movwf	___atdiv@dividend
  8302     00BD  0021               	movlb	1	; select bank1
  8303     00BE  0850               	movf	(_kp_ventoinha+1)^(0+128),w
  8304     00BF  0020               	movlb	0	; select bank0
  8305     00C0  00A4               	movwf	___atdiv@dividend+1
  8306     00C1  0021               	movlb	1	; select bank1
  8307     00C2  0851               	movf	(_kp_ventoinha+2)^(0+128),w
  8308     00C3  0020               	movlb	0	; select bank0
  8309     00C4  00A5               	movwf	___atdiv@dividend+2
  8310     00C5  3183  231D  3180   	fcall	___atdiv
  8311     00C8  0020               	movlb	0	; select bank0
  8312     00C9  0820               	movf	?___atdiv,w
  8313     00CA  00F0               	movwf	___tmul@multiplier
  8314     00CB  0821               	movf	?___atdiv+1,w
  8315     00CC  00F1               	movwf	___tmul@multiplier+1
  8316     00CD  0822               	movf	?___atdiv+2,w
  8317     00CE  00F2               	movwf	___tmul@multiplier+2
  8318     00CF  085C               	movf	_erro_atual,w
  8319     00D0  00F3               	movwf	___tmul@multiplicand
  8320     00D1  085D               	movf	_erro_atual+1,w
  8321     00D2  00F4               	movwf	___tmul@multiplicand+1
  8322     00D3  085E               	movf	_erro_atual+2,w
  8323     00D4  00F5               	movwf	___tmul@multiplicand+2
  8324     00D5  3187  2714  3180   	fcall	___tmul
  8325     00D8  0870               	movf	?___tmul,w
  8326     00D9  0021               	movlb	1	; select bank1
  8327     00DA  00AF               	movwf	_proporcional^(0+128)
  8328     00DB  0871               	movf	?___tmul+1,w
  8329     00DC  00B0               	movwf	(_proporcional+1)^(0+128)
  8330     00DD  0872               	movf	?___tmul+2,w
  8331     00DE  00B1               	movwf	(_proporcional+2)^(0+128)
  8332     00DF                     i1l2361:
  8333                           
  8334                           ;funcoes.c: 331:     derivativo = (int24_t)(kd_ventoinha * (erro_atual - erro_anterior))
      +                           / 1000;
  8335     00DF  30E8               	movlw	232
  8336     00E0  0020               	movlb	0	; select bank0
  8337     00E1  00A0               	movwf	___atdiv@divisor
  8338     00E2  3003               	movlw	3
  8339     00E3  00A1               	movwf	___atdiv@divisor+1
  8340     00E4  3000               	movlw	0
  8341     00E5  00A2               	movwf	___atdiv@divisor+2
  8342     00E6  0021               	movlb	1	; select bank1
  8343     00E7  0835               	movf	_erro_anterior^(0+128),w
  8344     00E8  0020               	movlb	0	; select bank0
  8345     00E9  025C               	subwf	_erro_atual,w
  8346     00EA  00D1               	movwf	??_Controlador
  8347     00EB  085D               	movf	_erro_atual+1,w
  8348     00EC  00D2               	movwf	??_Controlador+1
  8349     00ED  0021               	movlb	1	; select bank1
  8350     00EE  0836               	movf	(_erro_anterior+1)^(0+128),w
  8351     00EF  1C03               	skipc
  8352     00F0  0F36               	incfsz	(_erro_anterior+1)^(0+128),w
  8353     00F1  28F3               	goto	u127_21
  8354     00F2  28F5               	goto	u127_22
  8355     00F3                     u127_21:
  8356     00F3  0020               	movlb	0	; select bank0
  8357     00F4  02D2               	subwf	??_Controlador+1,f
  8358     00F5                     u127_22:
  8359     00F5  085E               	movf	_erro_atual+2,w
  8360     00F6  00D3               	movwf	??_Controlador+2
  8361     00F7  0021               	movlb	1	; select bank1
  8362     00F8  0837               	movf	(_erro_anterior+2)^(0+128),w
  8363     00F9  1C03               	skipc
  8364     00FA  0F37               	incfsz	(_erro_anterior+2)^(0+128),w
  8365     00FB  28FD               	goto	u127_23
  8366     00FC  28FF               	goto	u127_24
  8367     00FD                     u127_23:
  8368     00FD  0020               	movlb	0	; select bank0
  8369     00FE  02D3               	subwf	??_Controlador+2,f
  8370     00FF                     u127_24:
  8371     00FF  0851               	movf	??_Controlador,w
  8372     0100  00F0               	movwf	___tmul@multiplier
  8373     0101  0852               	movf	??_Controlador+1,w
  8374     0102  00F1               	movwf	___tmul@multiplier+1
  8375     0103  0853               	movf	??_Controlador+2,w
  8376     0104  00F2               	movwf	___tmul@multiplier+2
  8377     0105  0021               	movlb	1	; select bank1
  8378     0106  0852               	movf	_kd_ventoinha^(0+128),w
  8379     0107  00F3               	movwf	___tmul@multiplicand
  8380     0108  0853               	movf	(_kd_ventoinha+1)^(0+128),w
  8381     0109  00F4               	movwf	___tmul@multiplicand+1
  8382     010A  0854               	movf	(_kd_ventoinha+2)^(0+128),w
  8383     010B  00F5               	movwf	___tmul@multiplicand+2
  8384     010C  3187  2714  3180   	fcall	___tmul
  8385     010F  0870               	movf	?___tmul,w
  8386     0110  0020               	movlb	0	; select bank0
  8387     0111  00A3               	movwf	___atdiv@dividend
  8388     0112  0871               	movf	?___tmul+1,w
  8389     0113  00A4               	movwf	___atdiv@dividend+1
  8390     0114  0872               	movf	?___tmul+2,w
  8391     0115  00A5               	movwf	___atdiv@dividend+2
  8392     0116  3183  231D  3180   	fcall	___atdiv
  8393     0119  0020               	movlb	0	; select bank0
  8394     011A  0820               	movf	?___atdiv,w
  8395     011B  0021               	movlb	1	; select bank1
  8396     011C  00AC               	movwf	_derivativo^(0+128)
  8397     011D  0020               	movlb	0	; select bank0
  8398     011E  0821               	movf	?___atdiv+1,w
  8399     011F  0021               	movlb	1	; select bank1
  8400     0120  00AD               	movwf	(_derivativo+1)^(0+128)
  8401     0121  0020               	movlb	0	; select bank0
  8402     0122  0822               	movf	?___atdiv+2,w
  8403     0123  0021               	movlb	1	; select bank1
  8404     0124  00AE               	movwf	(_derivativo+2)^(0+128)
  8405     0125                     i1l2363:
  8406                           
  8407                           ;funcoes.c: 332:     soma_PID = proporcional + integrativo + derivativo;
  8408     0125  082C               	movf	_derivativo^(0+128),w
  8409     0126  0020               	movlb	0	; select bank0
  8410     0127  00D1               	movwf	??_Controlador
  8411     0128  0021               	movlb	1	; select bank1
  8412     0129  082D               	movf	(_derivativo+1)^(0+128),w
  8413     012A  0020               	movlb	0	; select bank0
  8414     012B  00D2               	movwf	??_Controlador+1
  8415     012C  0021               	movlb	1	; select bank1
  8416     012D  082E               	movf	(_derivativo+2)^(0+128),w
  8417     012E  0020               	movlb	0	; select bank0
  8418     012F  00D3               	movwf	??_Controlador+2
  8419     0130  0021               	movlb	1	; select bank1
  8420     0131  082F               	movf	_proporcional^(0+128),w
  8421     0132  0732               	addwf	_integrativo^(0+128),w
  8422     0133  0020               	movlb	0	; select bank0
  8423     0134  00D4               	movwf	??_Controlador+3
  8424     0135  0021               	movlb	1	; select bank1
  8425     0136  0830               	movf	(_proporcional+1)^(0+128),w
  8426     0137  3D33               	addwfc	(_integrativo+1)^(0+128),w
  8427     0138  0020               	movlb	0	; select bank0
  8428     0139  00D5               	movwf	??_Controlador+4
  8429     013A  0021               	movlb	1	; select bank1
  8430     013B  0831               	movf	(_proporcional+2)^(0+128),w
  8431     013C  3D34               	addwfc	(_integrativo+2)^(0+128),w
  8432     013D  0020               	movlb	0	; select bank0
  8433     013E  00D6               	movwf	??_Controlador+5
  8434     013F  0854               	movf	??_Controlador+3,w
  8435     0140  07D1               	addwf	??_Controlador,f
  8436     0141  0855               	movf	??_Controlador+4,w
  8437     0142  3DD2               	addwfc	??_Controlador+1,f
  8438     0143  0856               	movf	??_Controlador+5,w
  8439     0144  3DD3               	addwfc	??_Controlador+2,f
  8440     0145  0851               	movf	??_Controlador,w
  8441     0146  00D9               	movwf	_soma_PID
  8442     0147  0852               	movf	??_Controlador+1,w
  8443     0148  00DA               	movwf	_soma_PID+1
  8444     0149  0853               	movf	??_Controlador+2,w
  8445     014A  00DB               	movwf	_soma_PID+2
  8446     014B                     i1l2365:
  8447                           
  8448                           ;funcoes.c: 335:     if(soma_PID < 0) soma_PID = 0;
  8449     014B  1FDB               	btfss	_soma_PID+2,7
  8450     014C  294E               	goto	u128_21
  8451     014D  294F               	goto	u128_20
  8452     014E                     u128_21:
  8453     014E  2955               	goto	i1l2369
  8454     014F                     u128_20:
  8455     014F                     i1l2367:
  8456     014F  3000               	movlw	0
  8457     0150  00D9               	movwf	_soma_PID
  8458     0151  3000               	movlw	0
  8459     0152  00DA               	movwf	_soma_PID+1
  8460     0153  3000               	movlw	0
  8461     0154  00DB               	movwf	_soma_PID+2
  8462     0155                     i1l2369:
  8463                           
  8464                           ;funcoes.c: 336:     if(soma_PID > 42000) soma_PID = 42000;
  8465     0155  1BDB               	btfsc	_soma_PID+2,7
  8466     0156  2961               	goto	u129_21
  8467     0157  085B               	movf	_soma_PID+2,w
  8468     0158  1D03               	btfss	3,2
  8469     0159  2962               	goto	u129_20
  8470     015A  3011               	movlw	17
  8471     015B  0259               	subwf	_soma_PID,w
  8472     015C  30A4               	movlw	164
  8473     015D  3B5A               	subwfb	_soma_PID+1,w
  8474     015E  1C03               	btfss	3,0
  8475     015F  2961               	goto	u129_21
  8476     0160  2962               	goto	u129_20
  8477     0161                     u129_21:
  8478     0161  2969               	goto	i1l2373
  8479     0162                     u129_20:
  8480     0162                     i1l2371:
  8481     0162  3010               	movlw	16
  8482     0163  0020               	movlb	0	; select bank0
  8483     0164  00D9               	movwf	_soma_PID
  8484     0165  30A4               	movlw	164
  8485     0166  00DA               	movwf	_soma_PID+1
  8486     0167  3000               	movlw	0
  8487     0168  00DB               	movwf	_soma_PID+2
  8488     0169                     i1l2373:
  8489                           
  8490                           ;funcoes.c: 338:     if(set_modo){
  8491     0169  0020               	movlb	0	; select bank0
  8492     016A  086F               	movf	_set_modo,w
  8493     016B  1903               	btfsc	3,2
  8494     016C  296E               	goto	u130_21
  8495     016D  296F               	goto	u130_20
  8496     016E                     u130_21:
  8497     016E  29A9               	goto	i1l2377
  8498     016F                     u130_20:
  8499     016F                     i1l2375:
  8500                           
  8501                           ;funcoes.c: 340:         ciclo_util_futuro = (int16_t)map_value(soma_PID, 0, 42000, 600,
      +                           1023);
  8502     016F  0859               	movf	_soma_PID,w
  8503     0170  00AE               	movwf	map_value@x
  8504     0171  085A               	movf	_soma_PID+1,w
  8505     0172  00AF               	movwf	map_value@x+1
  8506     0173  085B               	movf	_soma_PID+2,w
  8507     0174  00B0               	movwf	map_value@x+2
  8508     0175  0D89               	rlf	9,f
  8509     0176  3B89               	subwfb	9,f
  8510     0177  0989               	comf	9,f
  8511     0178  00B1               	movwf	map_value@x+3
  8512     0179  3000               	movlw	0
  8513     017A  00B5               	movwf	map_value@in_min+3
  8514     017B  3000               	movlw	0
  8515     017C  00B4               	movwf	map_value@in_min+2
  8516     017D  3000               	movlw	0
  8517     017E  00B3               	movwf	map_value@in_min+1
  8518     017F  3000               	movlw	0
  8519     0180  00B2               	movwf	map_value@in_min
  8520     0181  3000               	movlw	0
  8521     0182  00B9               	movwf	map_value@in_max+3
  8522     0183  3000               	movlw	0
  8523     0184  00B8               	movwf	map_value@in_max+2
  8524     0185  30A4               	movlw	164
  8525     0186  00B7               	movwf	map_value@in_max+1
  8526     0187  3010               	movlw	16
  8527     0188  00B6               	movwf	map_value@in_max
  8528     0189  3000               	movlw	0
  8529     018A  00BD               	movwf	map_value@out_min+3
  8530     018B  3000               	movlw	0
  8531     018C  00BC               	movwf	map_value@out_min+2
  8532     018D  3002               	movlw	2
  8533     018E  00BB               	movwf	map_value@out_min+1
  8534     018F  3058               	movlw	88
  8535     0190  00BA               	movwf	map_value@out_min
  8536     0191  3000               	movlw	0
  8537     0192  00C1               	movwf	map_value@out_max+3
  8538     0193  3000               	movlw	0
  8539     0194  00C0               	movwf	map_value@out_max+2
  8540     0195  3003               	movlw	3
  8541     0196  00BF               	movwf	map_value@out_max+1
  8542     0197  30FF               	movlw	255
  8543     0198  00BE               	movwf	map_value@out_max
  8544     0199  3183  2396  3180   	fcall	_map_value
  8545     019C  0020               	movlb	0	; select bank0
  8546     019D  082F               	movf	?_map_value+1,w
  8547     019E  00E0               	movwf	_ciclo_util_futuro+1
  8548     019F  082E               	movf	?_map_value,w
  8549     01A0  00DF               	movwf	_ciclo_util_futuro
  8550                           
  8551                           ;funcoes.c: 341:         EPWM1_LoadDutyValue(ciclo_util_futuro);
  8552     01A1  0860               	movf	_ciclo_util_futuro+1,w
  8553     01A2  00F1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  8554     01A3  085F               	movf	_ciclo_util_futuro,w
  8555     01A4  00F0               	movwf	EPWM1_LoadDutyValue@dutyValue
  8556     01A5  318F  27B0  3180   	fcall	_EPWM1_LoadDutyValue
  8557                           
  8558                           ;funcoes.c: 342:     }else{
  8559     01A8  29DB               	goto	i1l2379
  8560     01A9                     i1l2377:
  8561                           
  8562                           ;funcoes.c: 344:         posicao_val_futura = (int16_t)map_value(soma_PID, 0, 42000, 460
      +                          , 0);
  8563     01A9  0859               	movf	_soma_PID,w
  8564     01AA  00AE               	movwf	map_value@x
  8565     01AB  085A               	movf	_soma_PID+1,w
  8566     01AC  00AF               	movwf	map_value@x+1
  8567     01AD  085B               	movf	_soma_PID+2,w
  8568     01AE  00B0               	movwf	map_value@x+2
  8569     01AF  0D89               	rlf	9,f
  8570     01B0  3B89               	subwfb	9,f
  8571     01B1  0989               	comf	9,f
  8572     01B2  00B1               	movwf	map_value@x+3
  8573     01B3  3000               	movlw	0
  8574     01B4  00B5               	movwf	map_value@in_min+3
  8575     01B5  3000               	movlw	0
  8576     01B6  00B4               	movwf	map_value@in_min+2
  8577     01B7  3000               	movlw	0
  8578     01B8  00B3               	movwf	map_value@in_min+1
  8579     01B9  3000               	movlw	0
  8580     01BA  00B2               	movwf	map_value@in_min
  8581     01BB  3000               	movlw	0
  8582     01BC  00B9               	movwf	map_value@in_max+3
  8583     01BD  3000               	movlw	0
  8584     01BE  00B8               	movwf	map_value@in_max+2
  8585     01BF  30A4               	movlw	164
  8586     01C0  00B7               	movwf	map_value@in_max+1
  8587     01C1  3010               	movlw	16
  8588     01C2  00B6               	movwf	map_value@in_max
  8589     01C3  3000               	movlw	0
  8590     01C4  00BD               	movwf	map_value@out_min+3
  8591     01C5  3000               	movlw	0
  8592     01C6  00BC               	movwf	map_value@out_min+2
  8593     01C7  3001               	movlw	1
  8594     01C8  00BB               	movwf	map_value@out_min+1
  8595     01C9  30CC               	movlw	204
  8596     01CA  00BA               	movwf	map_value@out_min
  8597     01CB  3000               	movlw	0
  8598     01CC  00C1               	movwf	map_value@out_max+3
  8599     01CD  3000               	movlw	0
  8600     01CE  00C0               	movwf	map_value@out_max+2
  8601     01CF  3000               	movlw	0
  8602     01D0  00BF               	movwf	map_value@out_max+1
  8603     01D1  3000               	movlw	0
  8604     01D2  00BE               	movwf	map_value@out_max
  8605     01D3  3183  2396  3180   	fcall	_map_value
  8606     01D6  0020               	movlb	0	; select bank0
  8607     01D7  082F               	movf	?_map_value+1,w
  8608     01D8  00E2               	movwf	_posicao_val_futura+1
  8609     01D9  082E               	movf	?_map_value,w
  8610     01DA  00E1               	movwf	_posicao_val_futura
  8611     01DB                     i1l2379:
  8612                           
  8613                           ;funcoes.c: 346:     erro_anterior = erro_atual;
  8614     01DB  0020               	movlb	0	; select bank0
  8615     01DC  085C               	movf	_erro_atual,w
  8616     01DD  0021               	movlb	1	; select bank1
  8617     01DE  00B5               	movwf	_erro_anterior^(0+128)
  8618     01DF  0020               	movlb	0	; select bank0
  8619     01E0  085D               	movf	_erro_atual+1,w
  8620     01E1  0021               	movlb	1	; select bank1
  8621     01E2  00B6               	movwf	(_erro_anterior+1)^(0+128)
  8622     01E3  0020               	movlb	0	; select bank0
  8623     01E4  085E               	movf	_erro_atual+2,w
  8624     01E5  0021               	movlb	1	; select bank1
  8625     01E6  00B7               	movwf	(_erro_anterior+2)^(0+128)
  8626     01E7                     i1l840:
  8627     01E7  0008               	return
  8628     01E8                     __end_of_Controlador:
  8629                           
  8630                           	psect	text51
  8631     0396                     __ptext51:	
  8632 ;; *************** function _map_value *****************
  8633 ;; Defined at:
  8634 ;;		line 353 in file "funcoes.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  x               4   14[BANK0 ] long 
  8637 ;;  in_min          4   18[BANK0 ] long 
  8638 ;;  in_max          4   22[BANK0 ] long 
  8639 ;;  out_min         4   26[BANK0 ] long 
  8640 ;;  out_max         4   30[BANK0 ] long 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  3   14[BANK0 ] m
  8645 ;; Registers used:
  8646 ;;		wreg, status,2, status,0, pclath, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8652 ;;      Params:         0      20       0       0       0       0
  8653 ;;      Locals:         0       0       0       0       0       0
  8654 ;;      Temps:          0      15       0       0       0       0
  8655 ;;      Totals:         0      35       0       0       0       0
  8656 ;;Total ram usage:       35 bytes
  8657 ;; Hardware stack levels used: 1
  8658 ;; Hardware stack levels required when called: 1
  8659 ;; This function calls:
  8660 ;;		___aldiv
  8661 ;;		___lmul
  8662 ;; This function is called by:
  8663 ;;		_Controlador
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667     0396                     _map_value:	
  8668                           ;psect for function _map_value
  8669                           
  8670     0396                     i1l2265:	
  8671                           ;incstack = 0
  8672                           ; Regs used in _map_value: [wreg+status,2+status,0+pclath+cstack]
  8673                           
  8674                           
  8675                           ;funcoes.c: 354:     return ((x - in_min) * (out_max - out_min) / (in_max - in_min)) + o
      +                          ut_min;
  8676     0396  0020               	movlb	0	; select bank0
  8677     0397  0832               	movf	map_value@in_min,w
  8678     0398  0236               	subwf	map_value@in_max,w
  8679     0399  00C2               	movwf	??_map_value
  8680     039A  0833               	movf	map_value@in_min+1,w
  8681     039B  3B37               	subwfb	map_value@in_max+1,w
  8682     039C  00C3               	movwf	??_map_value+1
  8683     039D  0834               	movf	map_value@in_min+2,w
  8684     039E  3B38               	subwfb	map_value@in_max+2,w
  8685     039F  00C4               	movwf	??_map_value+2
  8686     03A0  0835               	movf	map_value@in_min+3,w
  8687     03A1  3B39               	subwfb	map_value@in_max+3,w
  8688     03A2  00C5               	movwf	??_map_value+3
  8689     03A3  0845               	movf	??_map_value+3,w
  8690     03A4  00A3               	movwf	___aldiv@divisor+3
  8691     03A5  0844               	movf	??_map_value+2,w
  8692     03A6  00A2               	movwf	___aldiv@divisor+2
  8693     03A7  0843               	movf	??_map_value+1,w
  8694     03A8  00A1               	movwf	___aldiv@divisor+1
  8695     03A9  0842               	movf	??_map_value,w
  8696     03AA  00A0               	movwf	___aldiv@divisor
  8697     03AB  0832               	movf	map_value@in_min,w
  8698     03AC  022E               	subwf	map_value@x,w
  8699     03AD  00C6               	movwf	??_map_value+4
  8700     03AE  0833               	movf	map_value@in_min+1,w
  8701     03AF  3B2F               	subwfb	map_value@x+1,w
  8702     03B0  00C7               	movwf	??_map_value+5
  8703     03B1  0834               	movf	map_value@in_min+2,w
  8704     03B2  3B30               	subwfb	map_value@x+2,w
  8705     03B3  00C8               	movwf	??_map_value+6
  8706     03B4  0835               	movf	map_value@in_min+3,w
  8707     03B5  3B31               	subwfb	map_value@x+3,w
  8708     03B6  00C9               	movwf	??_map_value+7
  8709     03B7  0849               	movf	??_map_value+7,w
  8710     03B8  00F3               	movwf	___lmul@multiplier+3
  8711     03B9  0848               	movf	??_map_value+6,w
  8712     03BA  00F2               	movwf	___lmul@multiplier+2
  8713     03BB  0847               	movf	??_map_value+5,w
  8714     03BC  00F1               	movwf	___lmul@multiplier+1
  8715     03BD  0846               	movf	??_map_value+4,w
  8716     03BE  00F0               	movwf	___lmul@multiplier
  8717     03BF  083A               	movf	map_value@out_min,w
  8718     03C0  023E               	subwf	map_value@out_max,w
  8719     03C1  00CA               	movwf	??_map_value+8
  8720     03C2  083B               	movf	map_value@out_min+1,w
  8721     03C3  3B3F               	subwfb	map_value@out_max+1,w
  8722     03C4  00CB               	movwf	??_map_value+9
  8723     03C5  083C               	movf	map_value@out_min+2,w
  8724     03C6  3B40               	subwfb	map_value@out_max+2,w
  8725     03C7  00CC               	movwf	??_map_value+10
  8726     03C8  083D               	movf	map_value@out_min+3,w
  8727     03C9  3B41               	subwfb	map_value@out_max+3,w
  8728     03CA  00CD               	movwf	??_map_value+11
  8729     03CB  084D               	movf	??_map_value+11,w
  8730     03CC  00F7               	movwf	___lmul@multiplicand+3
  8731     03CD  084C               	movf	??_map_value+10,w
  8732     03CE  00F6               	movwf	___lmul@multiplicand+2
  8733     03CF  084B               	movf	??_map_value+9,w
  8734     03D0  00F5               	movwf	___lmul@multiplicand+1
  8735     03D1  084A               	movf	??_map_value+8,w
  8736     03D2  00F4               	movwf	___lmul@multiplicand
  8737     03D3  3186  265D  3183   	fcall	___lmul
  8738     03D6  0873               	movf	?___lmul+3,w
  8739     03D7  0020               	movlb	0	; select bank0
  8740     03D8  00A7               	movwf	___aldiv@dividend+3
  8741     03D9  0872               	movf	?___lmul+2,w
  8742     03DA  00A6               	movwf	___aldiv@dividend+2
  8743     03DB  0871               	movf	?___lmul+1,w
  8744     03DC  00A5               	movwf	___aldiv@dividend+1
  8745     03DD  0870               	movf	?___lmul,w
  8746     03DE  00A4               	movwf	___aldiv@dividend
  8747     03DF  3182  228D  3183   	fcall	___aldiv
  8748     03E2  0020               	movlb	0	; select bank0
  8749     03E3  0820               	movf	?___aldiv,w
  8750     03E4  073A               	addwf	map_value@out_min,w
  8751     03E5  00CE               	movwf	??_map_value+12
  8752     03E6  0821               	movf	?___aldiv+1,w
  8753     03E7  3D3B               	addwfc	map_value@out_min+1,w
  8754     03E8  00CF               	movwf	??_map_value+13
  8755     03E9  0822               	movf	?___aldiv+2,w
  8756     03EA  3D3C               	addwfc	map_value@out_min+2,w
  8757     03EB  00D0               	movwf	??_map_value+14
  8758     03EC  084E               	movf	??_map_value+12,w
  8759     03ED  00AE               	movwf	?_map_value
  8760     03EE  084F               	movf	??_map_value+13,w
  8761     03EF  00AF               	movwf	?_map_value+1
  8762     03F0  0850               	movf	??_map_value+14,w
  8763     03F1  00B0               	movwf	?_map_value+2
  8764     03F2                     i1l843:
  8765     03F2  0008               	return
  8766     03F3                     __end_of_map_value:
  8767                           
  8768                           	psect	text52
  8769     065D                     __ptext52:	
  8770 ;; *************** function ___lmul *****************
  8771 ;; Defined at:
  8772 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  multiplier      4    0[COMMON] unsigned long 
  8775 ;;  multiplicand    4    4[COMMON] unsigned long 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  product         4    8[COMMON] unsigned long 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  4    0[COMMON] unsigned long 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2, status,0
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8787 ;;      Params:         8       0       0       0       0       0
  8788 ;;      Locals:         4       0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0
  8790 ;;      Totals:        12       0       0       0       0       0
  8791 ;;Total ram usage:       12 bytes
  8792 ;; Hardware stack levels used: 1
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_map_value
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800     065D                     ___lmul:	
  8801                           ;psect for function ___lmul
  8802                           
  8803     065D                     i1l2209:	
  8804                           ;incstack = 0
  8805                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8806                           
  8807     065D  3000               	movlw	0
  8808     065E  00FB               	movwf	___lmul@product+3
  8809     065F  3000               	movlw	0
  8810     0660  00FA               	movwf	___lmul@product+2
  8811     0661  3000               	movlw	0
  8812     0662  00F9               	movwf	___lmul@product+1
  8813     0663  3000               	movlw	0
  8814     0664  00F8               	movwf	___lmul@product
  8815     0665                     i1l2211:
  8816     0665  1C70               	btfss	___lmul@multiplier,0
  8817     0666  2E68               	goto	u93_21
  8818     0667  2E69               	goto	u93_20
  8819     0668                     u93_21:
  8820     0668  2E71               	goto	i1l2215
  8821     0669                     u93_20:
  8822     0669                     i1l2213:
  8823     0669  0874               	movf	___lmul@multiplicand,w
  8824     066A  07F8               	addwf	___lmul@product,f
  8825     066B  0875               	movf	___lmul@multiplicand+1,w
  8826     066C  3DF9               	addwfc	___lmul@product+1,f
  8827     066D  0876               	movf	___lmul@multiplicand+2,w
  8828     066E  3DFA               	addwfc	___lmul@product+2,f
  8829     066F  0877               	movf	___lmul@multiplicand+3,w
  8830     0670  3DFB               	addwfc	___lmul@product+3,f
  8831     0671                     i1l2215:
  8832     0671  3001               	movlw	1
  8833     0672                     u94_25:
  8834     0672  35F4               	lslf	___lmul@multiplicand,f
  8835     0673  0DF5               	rlf	___lmul@multiplicand+1,f
  8836     0674  0DF6               	rlf	___lmul@multiplicand+2,f
  8837     0675  0DF7               	rlf	___lmul@multiplicand+3,f
  8838     0676  0B89               	decfsz	9,f
  8839     0677  2E72               	goto	u94_25
  8840     0678                     i1l2217:
  8841     0678  3001               	movlw	1
  8842     0679                     u95_25:
  8843     0679  36F3               	lsrf	___lmul@multiplier+3,f
  8844     067A  0CF2               	rrf	___lmul@multiplier+2,f
  8845     067B  0CF1               	rrf	___lmul@multiplier+1,f
  8846     067C  0CF0               	rrf	___lmul@multiplier,f
  8847     067D  0B89               	decfsz	9,f
  8848     067E  2E79               	goto	u95_25
  8849     067F  0873               	movf	___lmul@multiplier+3,w
  8850     0680  0472               	iorwf	___lmul@multiplier+2,w
  8851     0681  0471               	iorwf	___lmul@multiplier+1,w
  8852     0682  0470               	iorwf	___lmul@multiplier,w
  8853     0683  1D03               	skipz
  8854     0684  2E86               	goto	u96_21
  8855     0685  2E87               	goto	u96_20
  8856     0686                     u96_21:
  8857     0686  2E65               	goto	i1l2211
  8858     0687                     u96_20:
  8859     0687                     i1l2219:
  8860     0687  087B               	movf	___lmul@product+3,w
  8861     0688  00F3               	movwf	?___lmul+3
  8862     0689  087A               	movf	___lmul@product+2,w
  8863     068A  00F2               	movwf	?___lmul+2
  8864     068B  0879               	movf	___lmul@product+1,w
  8865     068C  00F1               	movwf	?___lmul+1
  8866     068D  0878               	movf	___lmul@product,w
  8867     068E  00F0               	movwf	?___lmul
  8868     068F                     i1l1007:
  8869     068F  0008               	return
  8870     0690                     __end_of___lmul:
  8871                           
  8872                           	psect	text53
  8873     028D                     __ptext53:	
  8874 ;; *************** function ___aldiv *****************
  8875 ;; Defined at:
  8876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  divisor         4    0[BANK0 ] long 
  8879 ;;  dividend        4    4[BANK0 ] long 
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;  quotient        4   10[BANK0 ] long 
  8882 ;;  sign            1    9[BANK0 ] unsigned char 
  8883 ;;  counter         1    8[BANK0 ] unsigned char 
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  4    0[BANK0 ] long 
  8886 ;; Registers used:
  8887 ;;		wreg, status,2, status,0
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8893 ;;      Params:         0       8       0       0       0       0
  8894 ;;      Locals:         0       6       0       0       0       0
  8895 ;;      Temps:          1       0       0       0       0       0
  8896 ;;      Totals:         1      14       0       0       0       0
  8897 ;;Total ram usage:       15 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; This function calls:
  8900 ;;		Nothing
  8901 ;; This function is called by:
  8902 ;;		_map_value
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906     028D                     ___aldiv:	
  8907                           ;psect for function ___aldiv
  8908                           
  8909     028D                     i1l2223:	
  8910                           ;incstack = 0
  8911                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8912                           
  8913     028D  0020               	movlb	0	; select bank0
  8914     028E  01A9               	clrf	___aldiv@sign
  8915     028F                     i1l2225:
  8916     028F  1FA3               	btfss	___aldiv@divisor+3,7
  8917     0290  2A92               	goto	u97_21
  8918     0291  2A93               	goto	u97_20
  8919     0292                     u97_21:
  8920     0292  2AA0               	goto	i1l1058
  8921     0293                     u97_20:
  8922     0293                     i1l2227:
  8923     0293  09A0               	comf	___aldiv@divisor,f
  8924     0294  09A1               	comf	___aldiv@divisor+1,f
  8925     0295  09A2               	comf	___aldiv@divisor+2,f
  8926     0296  09A3               	comf	___aldiv@divisor+3,f
  8927     0297  0AA0               	incf	___aldiv@divisor,f
  8928     0298  1903               	skipnz
  8929     0299  0AA1               	incf	___aldiv@divisor+1,f
  8930     029A  1903               	skipnz
  8931     029B  0AA2               	incf	___aldiv@divisor+2,f
  8932     029C  1903               	skipnz
  8933     029D  0AA3               	incf	___aldiv@divisor+3,f
  8934     029E  01A9               	clrf	___aldiv@sign
  8935     029F  0AA9               	incf	___aldiv@sign,f
  8936     02A0                     i1l1058:
  8937     02A0  1FA7               	btfss	___aldiv@dividend+3,7
  8938     02A1  2AA3               	goto	u98_21
  8939     02A2  2AA4               	goto	u98_20
  8940     02A3                     u98_21:
  8941     02A3  2AB3               	goto	i1l2233
  8942     02A4                     u98_20:
  8943     02A4                     i1l2229:
  8944     02A4  09A4               	comf	___aldiv@dividend,f
  8945     02A5  09A5               	comf	___aldiv@dividend+1,f
  8946     02A6  09A6               	comf	___aldiv@dividend+2,f
  8947     02A7  09A7               	comf	___aldiv@dividend+3,f
  8948     02A8  0AA4               	incf	___aldiv@dividend,f
  8949     02A9  1903               	skipnz
  8950     02AA  0AA5               	incf	___aldiv@dividend+1,f
  8951     02AB  1903               	skipnz
  8952     02AC  0AA6               	incf	___aldiv@dividend+2,f
  8953     02AD  1903               	skipnz
  8954     02AE  0AA7               	incf	___aldiv@dividend+3,f
  8955     02AF                     i1l2231:
  8956     02AF  3001               	movlw	1
  8957     02B0  00FC               	movwf	??___aldiv
  8958     02B1  087C               	movf	??___aldiv,w
  8959     02B2  06A9               	xorwf	___aldiv@sign,f
  8960     02B3                     i1l2233:
  8961     02B3  3000               	movlw	0
  8962     02B4  00AD               	movwf	___aldiv@quotient+3
  8963     02B5  3000               	movlw	0
  8964     02B6  00AC               	movwf	___aldiv@quotient+2
  8965     02B7  3000               	movlw	0
  8966     02B8  00AB               	movwf	___aldiv@quotient+1
  8967     02B9  3000               	movlw	0
  8968     02BA  00AA               	movwf	___aldiv@quotient
  8969     02BB                     i1l2235:
  8970     02BB  0823               	movf	___aldiv@divisor+3,w
  8971     02BC  0422               	iorwf	___aldiv@divisor+2,w
  8972     02BD  0421               	iorwf	___aldiv@divisor+1,w
  8973     02BE  0420               	iorwf	___aldiv@divisor,w
  8974     02BF  1903               	skipnz
  8975     02C0  2AC2               	goto	u99_21
  8976     02C1  2AC3               	goto	u99_20
  8977     02C2                     u99_21:
  8978     02C2  2B04               	goto	i1l2255
  8979     02C3                     u99_20:
  8980     02C3                     i1l2237:
  8981     02C3  01A8               	clrf	___aldiv@counter
  8982     02C4  0AA8               	incf	___aldiv@counter,f
  8983     02C5  2AD1               	goto	i1l2241
  8984     02C6                     i1l2239:
  8985     02C6  3001               	movlw	1
  8986     02C7                     u100_25:
  8987     02C7  35A0               	lslf	___aldiv@divisor,f
  8988     02C8  0DA1               	rlf	___aldiv@divisor+1,f
  8989     02C9  0DA2               	rlf	___aldiv@divisor+2,f
  8990     02CA  0DA3               	rlf	___aldiv@divisor+3,f
  8991     02CB  0B89               	decfsz	9,f
  8992     02CC  2AC7               	goto	u100_25
  8993     02CD  3001               	movlw	1
  8994     02CE  00FC               	movwf	??___aldiv
  8995     02CF  087C               	movf	??___aldiv,w
  8996     02D0  07A8               	addwf	___aldiv@counter,f
  8997     02D1                     i1l2241:
  8998     02D1  1FA3               	btfss	___aldiv@divisor+3,7
  8999     02D2  2AD4               	goto	u101_21
  9000     02D3  2AD5               	goto	u101_20
  9001     02D4                     u101_21:
  9002     02D4  2AC6               	goto	i1l2239
  9003     02D5                     u101_20:
  9004     02D5                     i1l2243:
  9005     02D5  3001               	movlw	1
  9006     02D6                     u102_25:
  9007     02D6  35AA               	lslf	___aldiv@quotient,f
  9008     02D7  0DAB               	rlf	___aldiv@quotient+1,f
  9009     02D8  0DAC               	rlf	___aldiv@quotient+2,f
  9010     02D9  0DAD               	rlf	___aldiv@quotient+3,f
  9011     02DA  0B89               	decfsz	9,f
  9012     02DB  2AD6               	goto	u102_25
  9013     02DC                     i1l2245:
  9014     02DC  0823               	movf	___aldiv@divisor+3,w
  9015     02DD  0227               	subwf	___aldiv@dividend+3,w
  9016     02DE  1D03               	skipz
  9017     02DF  2AEA               	goto	u103_25
  9018     02E0  0822               	movf	___aldiv@divisor+2,w
  9019     02E1  0226               	subwf	___aldiv@dividend+2,w
  9020     02E2  1D03               	skipz
  9021     02E3  2AEA               	goto	u103_25
  9022     02E4  0821               	movf	___aldiv@divisor+1,w
  9023     02E5  0225               	subwf	___aldiv@dividend+1,w
  9024     02E6  1D03               	skipz
  9025     02E7  2AEA               	goto	u103_25
  9026     02E8  0820               	movf	___aldiv@divisor,w
  9027     02E9  0224               	subwf	___aldiv@dividend,w
  9028     02EA                     u103_25:
  9029     02EA  1C03               	skipc
  9030     02EB  2AED               	goto	u103_21
  9031     02EC  2AEE               	goto	u103_20
  9032     02ED                     u103_21:
  9033     02ED  2AF7               	goto	i1l2251
  9034     02EE                     u103_20:
  9035     02EE                     i1l2247:
  9036     02EE  0820               	movf	___aldiv@divisor,w
  9037     02EF  02A4               	subwf	___aldiv@dividend,f
  9038     02F0  0821               	movf	___aldiv@divisor+1,w
  9039     02F1  3BA5               	subwfb	___aldiv@dividend+1,f
  9040     02F2  0822               	movf	___aldiv@divisor+2,w
  9041     02F3  3BA6               	subwfb	___aldiv@dividend+2,f
  9042     02F4  0823               	movf	___aldiv@divisor+3,w
  9043     02F5  3BA7               	subwfb	___aldiv@dividend+3,f
  9044     02F6                     i1l2249:
  9045     02F6  142A               	bsf	___aldiv@quotient,0
  9046     02F7                     i1l2251:
  9047     02F7  3001               	movlw	1
  9048     02F8                     u104_25:
  9049     02F8  36A3               	lsrf	___aldiv@divisor+3,f
  9050     02F9  0CA2               	rrf	___aldiv@divisor+2,f
  9051     02FA  0CA1               	rrf	___aldiv@divisor+1,f
  9052     02FB  0CA0               	rrf	___aldiv@divisor,f
  9053     02FC  0B89               	decfsz	9,f
  9054     02FD  2AF8               	goto	u104_25
  9055     02FE                     i1l2253:
  9056     02FE  3001               	movlw	1
  9057     02FF  02A8               	subwf	___aldiv@counter,f
  9058     0300  1D03               	btfss	3,2
  9059     0301  2B03               	goto	u105_21
  9060     0302  2B04               	goto	u105_20
  9061     0303                     u105_21:
  9062     0303  2AD5               	goto	i1l2243
  9063     0304                     u105_20:
  9064     0304                     i1l2255:
  9065     0304  0829               	movf	___aldiv@sign,w
  9066     0305  1903               	btfsc	3,2
  9067     0306  2B08               	goto	u106_21
  9068     0307  2B09               	goto	u106_20
  9069     0308                     u106_21:
  9070     0308  2B14               	goto	i1l2259
  9071     0309                     u106_20:
  9072     0309                     i1l2257:
  9073     0309  09AA               	comf	___aldiv@quotient,f
  9074     030A  09AB               	comf	___aldiv@quotient+1,f
  9075     030B  09AC               	comf	___aldiv@quotient+2,f
  9076     030C  09AD               	comf	___aldiv@quotient+3,f
  9077     030D  0AAA               	incf	___aldiv@quotient,f
  9078     030E  1903               	skipnz
  9079     030F  0AAB               	incf	___aldiv@quotient+1,f
  9080     0310  1903               	skipnz
  9081     0311  0AAC               	incf	___aldiv@quotient+2,f
  9082     0312  1903               	skipnz
  9083     0313  0AAD               	incf	___aldiv@quotient+3,f
  9084     0314                     i1l2259:
  9085     0314  082D               	movf	___aldiv@quotient+3,w
  9086     0315  00A3               	movwf	?___aldiv+3
  9087     0316  082C               	movf	___aldiv@quotient+2,w
  9088     0317  00A2               	movwf	?___aldiv+2
  9089     0318  082B               	movf	___aldiv@quotient+1,w
  9090     0319  00A1               	movwf	?___aldiv+1
  9091     031A  082A               	movf	___aldiv@quotient,w
  9092     031B  00A0               	movwf	?___aldiv
  9093     031C                     i1l1068:
  9094     031C  0008               	return
  9095     031D                     __end_of___aldiv:
  9096                           
  9097                           	psect	text54
  9098     0714                     __ptext54:	
  9099 ;; *************** function ___tmul *****************
  9100 ;; Defined at:
  9101 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;  multiplier      3    0[COMMON] unsigned um
  9104 ;;  multiplicand    3    3[COMMON] unsigned um
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;  product         3    6[COMMON] unsigned um
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  3    0[COMMON] unsigned um
  9109 ;; Registers used:
  9110 ;;		wreg, status,2, status,0
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9116 ;;      Params:         6       0       0       0       0       0
  9117 ;;      Locals:         3       0       0       0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0
  9119 ;;      Totals:         9       0       0       0       0       0
  9120 ;;Total ram usage:        9 bytes
  9121 ;; Hardware stack levels used: 1
  9122 ;; This function calls:
  9123 ;;		Nothing
  9124 ;; This function is called by:
  9125 ;;		_Controlador
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129     0714                     ___tmul:	
  9130                           ;psect for function ___tmul
  9131                           
  9132     0714                     i1l2285:	
  9133                           ;incstack = 0
  9134                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  9135                           
  9136     0714  3000               	movlw	0
  9137     0715  00F6               	movwf	___tmul@product
  9138     0716  3000               	movlw	0
  9139     0717  00F7               	movwf	___tmul@product+1
  9140     0718  3000               	movlw	0
  9141     0719  00F8               	movwf	___tmul@product+2
  9142     071A                     i1l2287:
  9143     071A  1C70               	btfss	___tmul@multiplier,0
  9144     071B  2F1D               	goto	u111_21
  9145     071C  2F1E               	goto	u111_20
  9146     071D                     u111_21:
  9147     071D  2F24               	goto	i1l2291
  9148     071E                     u111_20:
  9149     071E                     i1l2289:
  9150     071E  0873               	movf	___tmul@multiplicand,w
  9151     071F  07F6               	addwf	___tmul@product,f
  9152     0720  0874               	movf	___tmul@multiplicand+1,w
  9153     0721  3DF7               	addwfc	___tmul@product+1,f
  9154     0722  0875               	movf	___tmul@multiplicand+2,w
  9155     0723  3DF8               	addwfc	___tmul@product+2,f
  9156     0724                     i1l2291:
  9157     0724  3001               	movlw	1
  9158     0725                     u112_25:
  9159     0725  35F3               	lslf	___tmul@multiplicand,f
  9160     0726  0DF4               	rlf	___tmul@multiplicand+1,f
  9161     0727  0DF5               	rlf	___tmul@multiplicand+2,f
  9162     0728  0B89               	decfsz	9,f
  9163     0729  2F25               	goto	u112_25
  9164     072A                     i1l2293:
  9165     072A  3001               	movlw	1
  9166     072B                     u113_25:
  9167     072B  36F2               	lsrf	___tmul@multiplier+2,f
  9168     072C  0CF1               	rrf	___tmul@multiplier+1,f
  9169     072D  0CF0               	rrf	___tmul@multiplier,f
  9170     072E  0B89               	decfsz	9,f
  9171     072F  2F2B               	goto	u113_25
  9172     0730  0872               	movf	___tmul@multiplier+2,w
  9173     0731  0471               	iorwf	___tmul@multiplier+1,w
  9174     0732  0470               	iorwf	___tmul@multiplier,w
  9175     0733  1D03               	skipz
  9176     0734  2F36               	goto	u114_21
  9177     0735  2F37               	goto	u114_20
  9178     0736                     u114_21:
  9179     0736  2F1A               	goto	i1l2287
  9180     0737                     u114_20:
  9181     0737                     i1l2295:
  9182     0737  0876               	movf	___tmul@product,w
  9183     0738  00F0               	movwf	?___tmul
  9184     0739  0877               	movf	___tmul@product+1,w
  9185     073A  00F1               	movwf	?___tmul+1
  9186     073B  0878               	movf	___tmul@product+2,w
  9187     073C  00F2               	movwf	?___tmul+2
  9188     073D                     i1l1001:
  9189     073D  0008               	return
  9190     073E                     __end_of___tmul:
  9191                           
  9192                           	psect	text55
  9193     031D                     __ptext55:	
  9194 ;; *************** function ___atdiv *****************
  9195 ;; Defined at:
  9196 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  divisor         3    0[BANK0 ] m
  9199 ;;  dividend        3    3[BANK0 ] m
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;  quotient        3    8[BANK0 ] m
  9202 ;;  sign            1    7[BANK0 ] unsigned char 
  9203 ;;  counter         1    6[BANK0 ] unsigned char 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  3    0[BANK0 ] m
  9206 ;; Registers used:
  9207 ;;		wreg, status,2, status,0
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9213 ;;      Params:         0       6       0       0       0       0
  9214 ;;      Locals:         0       5       0       0       0       0
  9215 ;;      Temps:          1       0       0       0       0       0
  9216 ;;      Totals:         1      11       0       0       0       0
  9217 ;;Total ram usage:       12 bytes
  9218 ;; Hardware stack levels used: 1
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_Controlador
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226     031D                     ___atdiv:	
  9227                           ;psect for function ___atdiv
  9228                           
  9229     031D                     i1l2299:	
  9230                           ;incstack = 0
  9231                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  9232                           
  9233     031D  0020               	movlb	0	; select bank0
  9234     031E  01A7               	clrf	___atdiv@sign
  9235     031F                     i1l2301:
  9236     031F  1FA2               	btfss	___atdiv@divisor+2,7
  9237     0320  2B22               	goto	u115_21
  9238     0321  2B23               	goto	u115_20
  9239     0322                     u115_21:
  9240     0322  2B2D               	goto	i1l1110
  9241     0323                     u115_20:
  9242     0323                     i1l2303:
  9243     0323  09A0               	comf	___atdiv@divisor,f
  9244     0324  09A1               	comf	___atdiv@divisor+1,f
  9245     0325  09A2               	comf	___atdiv@divisor+2,f
  9246     0326  0AA0               	incf	___atdiv@divisor,f
  9247     0327  1903               	skipnz
  9248     0328  0AA1               	incf	___atdiv@divisor+1,f
  9249     0329  1903               	skipnz
  9250     032A  0AA2               	incf	___atdiv@divisor+2,f
  9251     032B  01A7               	clrf	___atdiv@sign
  9252     032C  0AA7               	incf	___atdiv@sign,f
  9253     032D                     i1l1110:
  9254     032D  1FA5               	btfss	___atdiv@dividend+2,7
  9255     032E  2B30               	goto	u116_21
  9256     032F  2B31               	goto	u116_20
  9257     0330                     u116_21:
  9258     0330  2B3D               	goto	i1l2309
  9259     0331                     u116_20:
  9260     0331                     i1l2305:
  9261     0331  09A3               	comf	___atdiv@dividend,f
  9262     0332  09A4               	comf	___atdiv@dividend+1,f
  9263     0333  09A5               	comf	___atdiv@dividend+2,f
  9264     0334  0AA3               	incf	___atdiv@dividend,f
  9265     0335  1903               	skipnz
  9266     0336  0AA4               	incf	___atdiv@dividend+1,f
  9267     0337  1903               	skipnz
  9268     0338  0AA5               	incf	___atdiv@dividend+2,f
  9269     0339                     i1l2307:
  9270     0339  3001               	movlw	1
  9271     033A  00F9               	movwf	??___atdiv
  9272     033B  0879               	movf	??___atdiv,w
  9273     033C  06A7               	xorwf	___atdiv@sign,f
  9274     033D                     i1l2309:
  9275     033D  3000               	movlw	0
  9276     033E  00A8               	movwf	___atdiv@quotient
  9277     033F  3000               	movlw	0
  9278     0340  00A9               	movwf	___atdiv@quotient+1
  9279     0341  3000               	movlw	0
  9280     0342  00AA               	movwf	___atdiv@quotient+2
  9281     0343                     i1l2311:
  9282     0343  0822               	movf	___atdiv@divisor+2,w
  9283     0344  0421               	iorwf	___atdiv@divisor+1,w
  9284     0345  0420               	iorwf	___atdiv@divisor,w
  9285     0346  1903               	skipnz
  9286     0347  2B49               	goto	u117_21
  9287     0348  2B4A               	goto	u117_20
  9288     0349                     u117_21:
  9289     0349  2B82               	goto	i1l2331
  9290     034A                     u117_20:
  9291     034A                     i1l2313:
  9292     034A  01A6               	clrf	___atdiv@counter
  9293     034B  0AA6               	incf	___atdiv@counter,f
  9294     034C  2B57               	goto	i1l2317
  9295     034D                     i1l2315:
  9296     034D  3001               	movlw	1
  9297     034E                     u118_25:
  9298     034E  35A0               	lslf	___atdiv@divisor,f
  9299     034F  0DA1               	rlf	___atdiv@divisor+1,f
  9300     0350  0DA2               	rlf	___atdiv@divisor+2,f
  9301     0351  0B89               	decfsz	9,f
  9302     0352  2B4E               	goto	u118_25
  9303     0353  3001               	movlw	1
  9304     0354  00F9               	movwf	??___atdiv
  9305     0355  0879               	movf	??___atdiv,w
  9306     0356  07A6               	addwf	___atdiv@counter,f
  9307     0357                     i1l2317:
  9308     0357  1FA2               	btfss	___atdiv@divisor+2,7
  9309     0358  2B5A               	goto	u119_21
  9310     0359  2B5B               	goto	u119_20
  9311     035A                     u119_21:
  9312     035A  2B4D               	goto	i1l2315
  9313     035B                     u119_20:
  9314     035B                     i1l2319:
  9315     035B  3001               	movlw	1
  9316     035C                     u120_25:
  9317     035C  35A8               	lslf	___atdiv@quotient,f
  9318     035D  0DA9               	rlf	___atdiv@quotient+1,f
  9319     035E  0DAA               	rlf	___atdiv@quotient+2,f
  9320     035F  0B89               	decfsz	9,f
  9321     0360  2B5C               	goto	u120_25
  9322     0361                     i1l2321:
  9323     0361  0822               	movf	___atdiv@divisor+2,w
  9324     0362  0225               	subwf	___atdiv@dividend+2,w
  9325     0363  1D03               	skipz
  9326     0364  2B6B               	goto	u121_25
  9327     0365  0821               	movf	___atdiv@divisor+1,w
  9328     0366  0224               	subwf	___atdiv@dividend+1,w
  9329     0367  1D03               	skipz
  9330     0368  2B6B               	goto	u121_25
  9331     0369  0820               	movf	___atdiv@divisor,w
  9332     036A  0223               	subwf	___atdiv@dividend,w
  9333     036B                     u121_25:
  9334     036B  1C03               	skipc
  9335     036C  2B6E               	goto	u121_21
  9336     036D  2B6F               	goto	u121_20
  9337     036E                     u121_21:
  9338     036E  2B76               	goto	i1l2327
  9339     036F                     u121_20:
  9340     036F                     i1l2323:
  9341     036F  0820               	movf	___atdiv@divisor,w
  9342     0370  02A3               	subwf	___atdiv@dividend,f
  9343     0371  0821               	movf	___atdiv@divisor+1,w
  9344     0372  3BA4               	subwfb	___atdiv@dividend+1,f
  9345     0373  0822               	movf	___atdiv@divisor+2,w
  9346     0374  3BA5               	subwfb	___atdiv@dividend+2,f
  9347     0375                     i1l2325:
  9348     0375  1428               	bsf	___atdiv@quotient,0
  9349     0376                     i1l2327:
  9350     0376  3001               	movlw	1
  9351     0377                     u122_25:
  9352     0377  36A2               	lsrf	___atdiv@divisor+2,f
  9353     0378  0CA1               	rrf	___atdiv@divisor+1,f
  9354     0379  0CA0               	rrf	___atdiv@divisor,f
  9355     037A  0B89               	decfsz	9,f
  9356     037B  2B77               	goto	u122_25
  9357     037C                     i1l2329:
  9358     037C  3001               	movlw	1
  9359     037D  02A6               	subwf	___atdiv@counter,f
  9360     037E  1D03               	btfss	3,2
  9361     037F  2B81               	goto	u123_21
  9362     0380  2B82               	goto	u123_20
  9363     0381                     u123_21:
  9364     0381  2B5B               	goto	i1l2319
  9365     0382                     u123_20:
  9366     0382                     i1l2331:
  9367     0382  0827               	movf	___atdiv@sign,w
  9368     0383  1903               	btfsc	3,2
  9369     0384  2B86               	goto	u124_21
  9370     0385  2B87               	goto	u124_20
  9371     0386                     u124_21:
  9372     0386  2B8F               	goto	i1l2335
  9373     0387                     u124_20:
  9374     0387                     i1l2333:
  9375     0387  09A8               	comf	___atdiv@quotient,f
  9376     0388  09A9               	comf	___atdiv@quotient+1,f
  9377     0389  09AA               	comf	___atdiv@quotient+2,f
  9378     038A  0AA8               	incf	___atdiv@quotient,f
  9379     038B  1903               	skipnz
  9380     038C  0AA9               	incf	___atdiv@quotient+1,f
  9381     038D  1903               	skipnz
  9382     038E  0AAA               	incf	___atdiv@quotient+2,f
  9383     038F                     i1l2335:
  9384     038F  0828               	movf	___atdiv@quotient,w
  9385     0390  00A0               	movwf	?___atdiv
  9386     0391  0829               	movf	___atdiv@quotient+1,w
  9387     0392  00A1               	movwf	?___atdiv+1
  9388     0393  082A               	movf	___atdiv@quotient+2,w
  9389     0394  00A2               	movwf	?___atdiv+2
  9390     0395                     i1l1120:
  9391     0395  0008               	return
  9392     0396                     __end_of___atdiv:
  9393                           
  9394                           	psect	text56
  9395     0FB0                     __ptext56:	
  9396 ;; *************** function _EPWM1_LoadDutyValue *****************
  9397 ;; Defined at:
  9398 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  dutyValue       2    0[COMMON] unsigned short 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;		None
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2, status,0
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9412 ;;      Params:         2       0       0       0       0       0
  9413 ;;      Locals:         0       0       0       0       0       0
  9414 ;;      Temps:          2       0       0       0       0       0
  9415 ;;      Totals:         4       0       0       0       0       0
  9416 ;;Total ram usage:        4 bytes
  9417 ;; Hardware stack levels used: 1
  9418 ;; This function calls:
  9419 ;;		Nothing
  9420 ;; This function is called by:
  9421 ;;		_selecao_do_modo
  9422 ;;		_Controlador
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426     0FB0                     _EPWM1_LoadDutyValue:	
  9427                           ;psect for function _EPWM1_LoadDutyValue
  9428                           
  9429     0FB0                     i1l2263:	
  9430                           ;incstack = 0
  9431                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  9432                           
  9433                           
  9434                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  9435     0FB0  0871               	movf	EPWM1_LoadDutyValue@dutyValue+1,w
  9436     0FB1  00F3               	movwf	??_EPWM1_LoadDutyValue+1
  9437     0FB2  0870               	movf	EPWM1_LoadDutyValue@dutyValue,w
  9438     0FB3  00F2               	movwf	??_EPWM1_LoadDutyValue
  9439     0FB4  36F3               	lsrf	??_EPWM1_LoadDutyValue+1,f
  9440     0FB5  0CF2               	rrf	??_EPWM1_LoadDutyValue,f
  9441     0FB6  36F3               	lsrf	??_EPWM1_LoadDutyValue+1,f
  9442     0FB7  0CF2               	rrf	??_EPWM1_LoadDutyValue,f
  9443     0FB8  0872               	movf	??_EPWM1_LoadDutyValue,w
  9444     0FB9  0025               	movlb	5	; select bank5
  9445     0FBA  0091               	movwf	17	;volatile
  9446                           
  9447                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  9448     0FBB  0870               	movf	EPWM1_LoadDutyValue@dutyValue,w
  9449     0FBC  3903               	andlw	3
  9450     0FBD  00F2               	movwf	??_EPWM1_LoadDutyValue
  9451     0FBE  3004               	movlw	4
  9452     0FBF                     u107_25:
  9453     0FBF  35F2               	lslf	??_EPWM1_LoadDutyValue,f
  9454     0FC0  0B89               	decfsz	9,f
  9455     0FC1  2FBF               	goto	u107_25
  9456     0FC2  0813               	movf	19,w	;volatile
  9457     0FC3  39CF               	andlw	207
  9458     0FC4  0472               	iorwf	??_EPWM1_LoadDutyValue,w
  9459     0FC5  0093               	movwf	19	;volatile
  9460     0FC6                     i1l357:
  9461     0FC6  0008               	return
  9462     0FC7                     __end_of_EPWM1_LoadDutyValue:
  9463                           
  9464                           	psect	text57
  9465     0F39                     __ptext57:	
  9466 ;; *************** function _TMR0_ISR *****************
  9467 ;; Defined at:
  9468 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;		None
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;		None
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, status,2, status,0, pclath, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9482 ;;      Params:         0       0       0       0       0       0
  9483 ;;      Locals:         0       0       0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0
  9485 ;;      Totals:         0       0       0       0       0       0
  9486 ;;Total ram usage:        0 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 3
  9489 ;; This function calls:
  9490 ;;		NULL
  9491 ;;		_TMR0_DefaultInterruptHandler
  9492 ;;		_inicia_ultrasom
  9493 ;; This function is called by:
  9494 ;;		_INTERRUPT_InterruptManager
  9495 ;; This function uses a non-reentrant model
  9496 ;;
  9497                           
  9498     0F39                     _TMR0_ISR:	
  9499                           ;psect for function _TMR0_ISR
  9500                           
  9501     0F39                     i1l2753:	
  9502                           ;incstack = 0
  9503                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9504                           
  9505                           
  9506                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  9507     0F39  110B               	bcf	11,2	;volatile
  9508     0F3A                     i1l2755:
  9509                           
  9510                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  9511     0F3A  0021               	movlb	1	; select bank1
  9512     0F3B  0847               	movf	_timer0ReloadVal^(0+128),w	;volatile
  9513     0F3C  0020               	movlb	0	; select bank0
  9514     0F3D  0095               	movwf	21	;volatile
  9515     0F3E                     i1l2757:
  9516                           
  9517                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  9518     0F3E  0021               	movlb	1	; select bank1
  9519     0F3F  085A               	movf	_TMR0_InterruptHandler^(0+128),w
  9520     0F40  045B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  9521     0F41  1903               	btfsc	3,2
  9522     0F42  2F44               	goto	u161_21
  9523     0F43  2F45               	goto	u161_20
  9524     0F44                     u161_21:
  9525     0F44  2F4A               	goto	i1l458
  9526     0F45                     u161_20:
  9527     0F45                     i1l2759:
  9528                           
  9529                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  9530     0F45  085B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  9531     0F46  008A               	movwf	10
  9532     0F47  085A               	movf	_TMR0_InterruptHandler^(0+128),w
  9533     0F48  000A               	callw
  9534     0F49  318F               	pagesel	$
  9535     0F4A                     i1l458:
  9536     0F4A  0008               	return
  9537     0F4B                     __end_of_TMR0_ISR:
  9538                           
  9539                           	psect	text58
  9540     0E45                     __ptext58:	
  9541 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9542 ;; Defined at:
  9543 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		None
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9557 ;;      Params:         0       0       0       0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0
  9559 ;;      Temps:          0       0       0       0       0       0
  9560 ;;      Totals:         0       0       0       0       0       0
  9561 ;;Total ram usage:        0 bytes
  9562 ;; Hardware stack levels used: 1
  9563 ;; This function calls:
  9564 ;;		Nothing
  9565 ;; This function is called by:
  9566 ;;		_TMR0_Initialize
  9567 ;;		_TMR0_ISR
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571     0E45                     _TMR0_DefaultInterruptHandler:	
  9572                           ;psect for function _TMR0_DefaultInterruptHandler
  9573                           
  9574     0E45                     i1l464:	
  9575                           ;incstack = 0
  9576                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9577                           
  9578     0E45  0008               	return
  9579     0E46                     __end_of_TMR0_DefaultInterruptHandler:
  9580                           
  9581                           	psect	text59
  9582     06E9                     __ptext59:	
  9583 ;; *************** function _inicia_ultrasom *****************
  9584 ;; Defined at:
  9585 ;;		line 25 in file "funcoes.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, status,2, status,0, pclath, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9599 ;;      Params:         0       0       0       0       0       0
  9600 ;;      Locals:         2       0       0       0       0       0
  9601 ;;      Temps:          0       0       0       0       0       0
  9602 ;;      Totals:         2       0       0       0       0       0
  9603 ;;Total ram usage:        2 bytes
  9604 ;; Hardware stack levels used: 1
  9605 ;; Hardware stack levels required when called: 2
  9606 ;; This function calls:
  9607 ;;		_EnviaTx
  9608 ;;		_TMR1_WriteTimer
  9609 ;; This function is called by:
  9610 ;;		_main
  9611 ;;		_TMR0_ISR
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615     06E9                     _inicia_ultrasom:	
  9616                           ;psect for function _inicia_ultrasom
  9617                           
  9618     06E9                     i1l2671:	
  9619                           ;incstack = 0
  9620                           ; Regs used in _inicia_ultrasom: [wreg+status,2+status,0+pclath+cstack]
  9621                           
  9622                           
  9623                           ;funcoes.c: 26:     static uint8_t j = 0;;funcoes.c: 27:     if(j == 9){EnviaTx();}
  9624     06E9  3009               	movlw	9
  9625     06EA  0020               	movlb	0	; select bank0
  9626     06EB  066E               	xorwf	inicia_ultrasom@j,w
  9627     06EC  1D03               	btfss	3,2
  9628     06ED  2EEF               	goto	u153_21
  9629     06EE  2EF0               	goto	u153_20
  9630     06EF                     u153_21:
  9631     06EF  2EF3               	goto	i1l2675
  9632     06F0                     u153_20:
  9633     06F0                     i1l2673:
  9634     06F0  3185  255D  3186   	fcall	_EnviaTx
  9635     06F3                     i1l2675:
  9636                           
  9637                           ;funcoes.c: 28:     j = (j == 9) ? 0 : (j + 1);
  9638     06F3  3009               	movlw	9
  9639     06F4  0020               	movlb	0	; select bank0
  9640     06F5  066E               	xorwf	inicia_ultrasom@j,w
  9641     06F6  1903               	btfsc	3,2
  9642     06F7  2EF9               	goto	u154_21
  9643     06F8  2EFA               	goto	u154_20
  9644     06F9                     u154_21:
  9645     06F9  2F02               	goto	i1l2679
  9646     06FA                     u154_20:
  9647     06FA                     i1l2677:
  9648     06FA  086E               	movf	inicia_ultrasom@j,w
  9649     06FB  3E01               	addlw	1
  9650     06FC  00F2               	movwf	_inicia_ultrasom$1282
  9651     06FD  3000               	movlw	0
  9652     06FE  1803               	skipnc
  9653     06FF  3001               	movlw	1
  9654     0700  00F3               	movwf	_inicia_ultrasom$1282+1
  9655     0701  2F04               	goto	i1l2681
  9656     0702                     i1l2679:
  9657     0702  01F2               	clrf	_inicia_ultrasom$1282
  9658     0703  01F3               	clrf	_inicia_ultrasom$1282+1
  9659     0704                     i1l2681:
  9660     0704  0872               	movf	_inicia_ultrasom$1282,w
  9661     0705  00EE               	movwf	inicia_ultrasom@j
  9662     0706                     i1l2683:
  9663     0706  0022               	movlb	2	; select bank2
  9664     0707  170C               	bsf	12,6	;volatile
  9665     0708                     i1l2685:
  9666                           
  9667                           ;funcoes.c: 31:     TMR1_WriteTimer(0);
  9668     0708  3000               	movlw	0
  9669     0709  00F0               	movwf	TMR1_WriteTimer@timerVal
  9670     070A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9671     070B  318F  2728  3186   	fcall	_TMR1_WriteTimer
  9672     070E                     i1l2687:
  9673                           
  9674                           ;funcoes.c: 32:     _delay((unsigned long)((12)*(16000000/4000000.0)));
  9675     070E  3010               	movlw	16
  9676     070F                     u184_27:
  9677     070F  0B89               	decfsz	9,f
  9678     0710  2F0F               	goto	u184_27
  9679     0711                     i1l2689:
  9680     0711  0022               	movlb	2	; select bank2
  9681     0712  130C               	bcf	12,6	;volatile
  9682     0713                     i1l722:
  9683     0713  0008               	return
  9684     0714                     __end_of_inicia_ultrasom:
  9685                           
  9686                           	psect	text60
  9687     0F28                     __ptext60:	
  9688 ;; *************** function _TMR1_WriteTimer *****************
  9689 ;; Defined at:
  9690 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  timerVal        2    0[COMMON] unsigned short 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, status,2
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9704 ;;      Params:         2       0       0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0       0
  9706 ;;      Temps:          0       0       0       0       0       0
  9707 ;;      Totals:         2       0       0       0       0       0
  9708 ;;Total ram usage:        2 bytes
  9709 ;; Hardware stack levels used: 1
  9710 ;; This function calls:
  9711 ;;		Nothing
  9712 ;; This function is called by:
  9713 ;;		_inicia_ultrasom
  9714 ;;		_posicao_bola_tubo
  9715 ;;		_TMR1_Reload
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719     0F28                     _TMR1_WriteTimer:	
  9720                           ;psect for function _TMR1_WriteTimer
  9721                           
  9722     0F28                     i1l2419:	
  9723                           ;incstack = 0
  9724                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  9725                           
  9726                           
  9727                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9728     0F28  0020               	movlb	0	; select bank0
  9729     0F29  1D18               	btfss	24,2	;volatile
  9730     0F2A  2F2C               	goto	u138_21
  9731     0F2B  2F2D               	goto	u138_20
  9732     0F2C                     u138_21:
  9733     0F2C  2F34               	goto	i1l2429
  9734     0F2D                     u138_20:
  9735     0F2D                     i1l2421:
  9736                           
  9737                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9738     0F2D  1018               	bcf	24,0	;volatile
  9739     0F2E                     i1l2423:
  9740                           
  9741                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9742     0F2E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9743     0F2F  0097               	movwf	23	;volatile
  9744     0F30                     i1l2425:
  9745                           
  9746                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9747     0F30  0870               	movf	TMR1_WriteTimer@timerVal,w
  9748     0F31  0096               	movwf	22	;volatile
  9749     0F32                     i1l2427:
  9750                           
  9751                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9752     0F32  1418               	bsf	24,0	;volatile
  9753                           
  9754                           ;mcc_generated_files/tmr1.c: 137:     }
  9755     0F33  2F38               	goto	i1l162
  9756     0F34                     i1l2429:
  9757                           
  9758                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9759     0F34  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9760     0F35  0097               	movwf	23	;volatile
  9761     0F36                     i1l2431:
  9762                           
  9763                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9764     0F36  0870               	movf	TMR1_WriteTimer@timerVal,w
  9765     0F37  0096               	movwf	22	;volatile
  9766     0F38                     i1l162:
  9767     0F38  0008               	return
  9768     0F39                     __end_of_TMR1_WriteTimer:
  9769                           
  9770                           	psect	text61
  9771     055D                     __ptext61:	
  9772 ;; *************** function _EnviaTx *****************
  9773 ;; Defined at:
  9774 ;;		line 241 in file "funcoes.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0, pclath, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9788 ;;      Params:         0       0       0       0       0       0
  9789 ;;      Locals:         0       0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0       0
  9791 ;;      Totals:         0       0       0       0       0       0
  9792 ;;Total ram usage:        0 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 1
  9795 ;; This function calls:
  9796 ;;		_EUSART_Write
  9797 ;; This function is called by:
  9798 ;;		_inicia_ultrasom
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802     055D                     _EnviaTx:	
  9803                           ;psect for function _EnviaTx
  9804                           
  9805     055D                     i1l2445:	
  9806                           ;incstack = 0
  9807                           ; Regs used in _EnviaTx: [wreg+status,2+status,0+pclath+cstack]
  9808                           
  9809                           
  9810                           ;funcoes.c: 282:     EUSART_Write(modo);
  9811     055D  087D               	movf	_modo,w
  9812     055E  318E  26B7  3185   	fcall	_EUSART_Write
  9813                           
  9814                           ;funcoes.c: 283:     EUSART_Write((uint16_t)Set_altura.bmsb);
  9815     0561  0020               	movlb	0	; select bank0
  9816     0562  086C               	movf	_Set_altura+1,w
  9817     0563  318E  26B7  3185   	fcall	_EUSART_Write
  9818                           
  9819                           ;funcoes.c: 284:     EUSART_Write((uint16_t)Set_altura.blsb);
  9820     0566  0020               	movlb	0	; select bank0
  9821     0567  086B               	movf	_Set_altura,w
  9822     0568  318E  26B7  3185   	fcall	_EUSART_Write
  9823                           
  9824                           ;funcoes.c: 285:     EUSART_Write(((uint16_t)(altura_bola & 0xFF00)) >> 8);
  9825     056B  0021               	movlb	1	; select bank1
  9826     056C  082A               	movf	(_altura_bola+1)^(0+128),w
  9827     056D  318E  26B7  3185   	fcall	_EUSART_Write
  9828                           
  9829                           ;funcoes.c: 286:     EUSART_Write(altura_bola & 0x00FF);
  9830     0570  0021               	movlb	1	; select bank1
  9831     0571  0829               	movf	_altura_bola^(0+128),w
  9832     0572  318E  26B7  3185   	fcall	_EUSART_Write
  9833                           
  9834                           ;funcoes.c: 287:     EUSART_Write(((uint16_t)(tempo_medio & 0xFF00)) >> 8);
  9835     0575  0020               	movlb	0	; select bank0
  9836     0576  0866               	movf	_tempo_medio+1,w
  9837     0577  318E  26B7  3185   	fcall	_EUSART_Write
  9838                           
  9839                           ;funcoes.c: 288:     EUSART_Write(tempo_medio & 0x00FF);
  9840     057A  0020               	movlb	0	; select bank0
  9841     057B  0865               	movf	_tempo_medio,w
  9842     057C  318E  26B7  3185   	fcall	_EUSART_Write
  9843                           
  9844                           ;funcoes.c: 289:     EUSART_Write(((uint16_t)(temperatura & 0xFF00)) >> 8);
  9845     057F  0020               	movlb	0	; select bank0
  9846     0580  0864               	movf	_temperatura+1,w
  9847     0581  318E  26B7  3185   	fcall	_EUSART_Write
  9848                           
  9849                           ;funcoes.c: 290:     EUSART_Write(temperatura & 0x00FF);
  9850     0584  0020               	movlb	0	; select bank0
  9851     0585  0863               	movf	_temperatura,w
  9852     0586  318E  26B7  3185   	fcall	_EUSART_Write
  9853                           
  9854                           ;funcoes.c: 291:     EUSART_Write((uint16_t)Set_valvula.bmsb);
  9855     0589  0020               	movlb	0	; select bank0
  9856     058A  086A               	movf	_Set_valvula+1,w
  9857     058B  318E  26B7  3185   	fcall	_EUSART_Write
  9858                           
  9859                           ;funcoes.c: 292:     EUSART_Write((uint16_t)Set_valvula.blsb);
  9860     058E  0020               	movlb	0	; select bank0
  9861     058F  0869               	movf	_Set_valvula,w
  9862     0590  318E  26B7  3185   	fcall	_EUSART_Write
  9863                           
  9864                           ;funcoes.c: 293:     EUSART_Write(((uint16_t)(posicao_val_atual & 0xFF00)) >> 8);
  9865     0593  0021               	movlb	1	; select bank1
  9866     0594  083C               	movf	(_posicao_val_atual+1)^(0+128),w
  9867     0595  318E  26B7  3185   	fcall	_EUSART_Write
  9868                           
  9869                           ;funcoes.c: 294:     EUSART_Write(posicao_val_atual & 0x00FF);
  9870     0598  0021               	movlb	1	; select bank1
  9871     0599  083B               	movf	_posicao_val_atual^(0+128),w
  9872     059A  318E  26B7  3185   	fcall	_EUSART_Write
  9873                           
  9874                           ;funcoes.c: 295:     EUSART_Write(((uint16_t)(ciclo_util_futuro & 0xFF00)) >> 8);
  9875     059D  0020               	movlb	0	; select bank0
  9876     059E  0860               	movf	_ciclo_util_futuro+1,w
  9877     059F  318E  26B7  3185   	fcall	_EUSART_Write
  9878                           
  9879                           ;funcoes.c: 296:     EUSART_Write(ciclo_util_futuro & 0x00FF);
  9880     05A2  0020               	movlb	0	; select bank0
  9881     05A3  085F               	movf	_ciclo_util_futuro,w
  9882     05A4  318E  26B7  3185   	fcall	_EUSART_Write
  9883                           
  9884                           ;funcoes.c: 297:     EUSART_Write('\r');
  9885     05A7  300D               	movlw	13
  9886     05A8  318E  26B7  3185   	fcall	_EUSART_Write
  9887                           
  9888                           ;funcoes.c: 298:     EUSART_Write('\n');
  9889     05AB  300A               	movlw	10
  9890     05AC  318E  26B7  3185   	fcall	_EUSART_Write
  9891     05AF                     i1l825:
  9892     05AF  0008               	return
  9893     05B0                     __end_of_EnviaTx:
  9894                           
  9895                           	psect	text62
  9896     0EB7                     __ptext62:	
  9897 ;; *************** function _EUSART_Write *****************
  9898 ;; Defined at:
  9899 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;  txData          1    wreg     unsigned char 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;  txData          1    0[COMMON] unsigned char 
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      void 
  9906 ;; Registers used:
  9907 ;;		wreg
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9913 ;;      Params:         0       0       0       0       0       0
  9914 ;;      Locals:         1       0       0       0       0       0
  9915 ;;      Temps:          0       0       0       0       0       0
  9916 ;;      Totals:         1       0       0       0       0       0
  9917 ;;Total ram usage:        1 bytes
  9918 ;; Hardware stack levels used: 1
  9919 ;; This function calls:
  9920 ;;		Nothing
  9921 ;; This function is called by:
  9922 ;;		_EnviaTx
  9923 ;; This function uses a non-reentrant model
  9924 ;;
  9925                           
  9926     0EB7                     _EUSART_Write:	
  9927                           ;psect for function _EUSART_Write
  9928                           
  9929                           
  9930                           ;incstack = 0
  9931                           ; Regs used in _EUSART_Write: [wreg]
  9932                           ;EUSART_Write@txData stored from wreg
  9933     0EB7  00F0               	movwf	EUSART_Write@txData
  9934     0EB8                     i1l2351:
  9935     0EB8                     i1l284:	
  9936                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9937                           
  9938                           
  9939                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9940     0EB8  0020               	movlb	0	; select bank0
  9941     0EB9  1E11               	btfss	17,4	;volatile
  9942     0EBA  2EBC               	goto	u126_21
  9943     0EBB  2EBD               	goto	u126_20
  9944     0EBC                     u126_21:
  9945     0EBC  2EB8               	goto	i1l284
  9946     0EBD                     u126_20:
  9947     0EBD                     i1l2353:
  9948                           
  9949                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9950     0EBD  0870               	movf	EUSART_Write@txData,w
  9951     0EBE  0023               	movlb	3	; select bank3
  9952     0EBF  009A               	movwf	26	;volatile
  9953     0EC0                     i1l287:
  9954     0EC0  0008               	return
  9955     0EC1                     __end_of_EUSART_Write:
  9956     007E                     btemp	set	126	;btemp
  9957     007E                     int$flags	set	126
  9958     007E                     wtemp0	set	126
  9959                           
  9960                           	psect	config
  9961                           
  9962                           ;Config register CONFIG1 @ 0x8007
  9963                           ;	Oscillator Selection
  9964                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9965                           ;	Watchdog Timer Enable
  9966                           ;	WDTE = OFF, WDT disabled
  9967                           ;	Power-up Timer Enable
  9968                           ;	PWRTE = OFF, PWRT disabled
  9969                           ;	MCLR Pin Function Select
  9970                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9971                           ;	Flash Program Memory Code Protection
  9972                           ;	CP = OFF, Program memory code protection is disabled
  9973                           ;	Data Memory Code Protection
  9974                           ;	CPD = OFF, Data memory code protection is disabled
  9975                           ;	Brown-out Reset Enable
  9976                           ;	BOREN = ON, Brown-out Reset enabled
  9977                           ;	Clock Out Enable
  9978                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9979                           ;	Internal/External Switchover
  9980                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9981                           ;	Fail-Safe Clock Monitor Enable
  9982                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9983     8007                     	org	32775
  9984     8007  3FE4               	dw	16356
  9985                           
  9986                           ;Config register CONFIG2 @ 0x8008
  9987                           ;	Flash Memory Self-Write Protection
  9988                           ;	WRT = OFF, Write protection off
  9989                           ;	PLL Enable
  9990                           ;	PLLEN = OFF, 4x PLL disabled
  9991                           ;	Stack Overflow/Underflow Reset Enable
  9992                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9993                           ;	Brown-out Reset Voltage Selection
  9994                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9995                           ;	In-Circuit Debugger Mode
  9996                           ;	DEBUG = 0x1, unprogrammed default
  9997                           ;	Low-Voltage Programming Enable
  9998                           ;	LVP = ON, Low-voltage programming enabled
  9999     8008                     	org	32776
 10000     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        117
    BSS         80
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     57      80
    BANK1            80      7      77
    BANK2            80      0      15
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetoc@data(COMMON[1]), __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoi@data(COMMON[2]), 
		 -> __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), __eetoo@data(COMMON[8]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 102
		 -> relacao_som_temperatura(EEDATA[102]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetoc@data(COMMON[1]), __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoi@data(COMMON[2]), 
		 -> __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), __eetoo@data(COMMON[8]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> inicia_ultrasom(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> inicia_ultrasom(), TMR0_DefaultInterruptHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> posicao_bola_tubo(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> posicao_bola_tubo(), TMR1_DefaultGateInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ProcessaDados(), TMR4_DefaultInterruptHandler(), NULL(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ProcessaDados(), TMR4_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DRMotordePassos(), TMR6_DefaultInterruptHandler(), NULL(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DRMotordePassos(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_ISR->_DRMotordePassos
    _DRMotordePassos->i1_muda_passos
    _selecao_do_modo->_EPWM1_LoadDutyValue
    _posicao_bola_tubo->_media
    _posicao_bola_tubo->_velocidade_som
    _velocidade_som->___eetoi
    ___eetoi->___eecpymem
    _media->_TMR1_ReadTimer
    ___wmul->_velocidade_som
    _map_value->___aldiv
    ___aldiv->___lmul
    ___atdiv->___tmul
    _TMR0_ISR->_inicia_ultrasom
    _inicia_ultrasom->_TMR1_WriteTimer
    _EnviaTx->_EUSART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_posicao_bola_tubo
    _Comando_PIeD->_Controlador
    _Controlador->_map_value
    _map_value->___aldiv

Critical Paths under _main in BANK1

    _main->_muda_passos
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Dados_recebidos->_TMR4_WriteTimer

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1779
                                              6 BANK1      1     1      0
               _CMP1_GetOutputStatus
                    _Dados_recebidos
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
       _TMR1_SetGateInterruptHandler
           _TMR4_SetInterruptHandler
           _TMR6_SetInterruptHandler
                        _muda_passos
 ---------------------------------------------------------------------------------
 (1) _muda_passos                                          6     6      0      48
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     990
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dados_recebidos                                      2     2      0      45
                                              1 BANK1      2     2      0
                        _EUSART_Read
                    _TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR4_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    6876
                           _TMR0_ISR
                      _TMR1_GATE_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0      48
                                NULL *
                    _DRMotordePassos *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _DRMotordePassos                                      1     1      0      48
                                              6 COMMON     1     1      0
                      i1_muda_passos
 ---------------------------------------------------------------------------------
 (7) i1_muda_passos                                        6     6      0      48
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0     272
                                NULL *
                      _ProcessaDados *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ProcessaDados                                        0     0      0     272
                    _selecao_do_modo
 ---------------------------------------------------------------------------------
 (7) _selecao_do_modo                                      0     0      0     272
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    6194
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                  _posicao_bola_tubo *
 ---------------------------------------------------------------------------------
 (6) _posicao_bola_tubo                                    2     2      0    6194
                                             55 BANK0      2     2      0
                       _Comando_PIeD
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
                            ___lwdiv
                             ___wmul
                              _media
                     _velocidade_som
 ---------------------------------------------------------------------------------
 (7) _velocidade_som                                       2     0      2    1792
                                             11 COMMON     2     0      2
                  _ADC_GetConversion
                            ___eetoi
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) ___eetoi                                              5     3      2    1304
                                              6 COMMON     5     3      2
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (9) ___eecpymem                                           6     4      2    1229
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _media                                                4     2      2      98
                                             11 COMMON     2     0      2
                                              0 BANK0      2     2      0
                     _TMR1_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
                     _velocidade_som (ARG)
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (7) _Comando_PIeD                                         0     0      0    3186
                        _Controlador
 ---------------------------------------------------------------------------------
 (8) _Controlador                                          6     6      0    3186
                                             49 BANK0      6     6      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                             ___tmul
                          _map_value
 ---------------------------------------------------------------------------------
 (9) _map_value                                           35    15     20    1610
                                             14 BANK0     35    15     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (10) ___lmul                                             12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___aldiv                                            15     7      8     452
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___tmul                                               9     3      6     548
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (9) ___atdiv                                             12     6      6     756
                                              9 COMMON     1     1      0
                                              0 BANK0     11     5      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     362
                                NULL *
       _TMR0_DefaultInterruptHandler *
                    _inicia_ultrasom *
 ---------------------------------------------------------------------------------
 (6) _inicia_ultrasom                                      2     2      0     362
                                              2 COMMON     2     2      0
                            _EnviaTx
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     316
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _EnviaTx                                              0     0      0      22
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _Dados_recebidos
     _EUSART_Read
     _TMR4_WriteTimer
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetGateInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _muda_passos

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _inicia_ultrasom *
       _EnviaTx
         _EUSART_Write
       _TMR1_WriteTimer
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _posicao_bola_tubo *
       _Comando_PIeD
         _Controlador
           _EPWM1_LoadDutyValue
           ___atdiv
             ___tmul (ARG)
           ___tmul
           _map_value
             ___aldiv
               ___lmul (ARG)
             ___lmul
       _TMR1_ReadTimer
       _TMR1_WriteTimer
       ___lwdiv
       ___wmul
         ___lwdiv (ARG)
         _velocidade_som (ARG)
           _ADC_GetConversion
           ___eetoi
             ___eecpymem
           ___lwdiv
       _media
         _TMR1_ReadTimer (ARG)
       _velocidade_som
   _TMR4_ISR
     NULL(Fake) *
     _ProcessaDados *
       _selecao_do_modo
         _EPWM1_LoadDutyValue
     _TMR4_DefaultInterruptHandler *
   _TMR6_ISR
     NULL(Fake) *
     _DRMotordePassos *
       i1_muda_passos
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0      66       0       39.8%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      BA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      7      4D       8       96.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       F      10       18.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      BA      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Feb 22 18:48:11 2025

                             ?_DRMotordePassos 0070                                             l42 0EA6  
                                           l45 0E52                                             l70 0FAF  
                                           l39 06E8                                             l90 0EAE  
                            ??_CMP1_Initialize 00E6                               ___atdiv@quotient 0028  
                       __end_of_FVR_Initialize 0E4F                            ___wmul@multiplicand 0022  
                              _timer0ReloadVal 00C7                                            l302 0E7B  
                                          l118 0E4E                                            l305 0E6F  
                                          l403 0F5D                                            l260 0789  
                                          l148 07E6                                            l181 0E87  
                                          l318 0EB6                                            l415 0E5D  
                                          l281 0F27                                            l425 0E8D  
                                          l354 0ECD                                            l507 0E93  
                                          l268 0E57                                            l277 0F18  
                                          l461 0E81                                            l445 0F99  
                                          l366 0E63                                            l376 0E69  
                                          l369 0E4A                                            l299 0E75  
                                          l485 0F70                                            l750 03F7  
                                          l760 03FD                                            l752 03F8  
                                          l762 03FE                                            l746 03F4  
                                          l771 0404                                            l780 040A  
                                          l756 03FA                                            l748 03F6  
                                          l765 0400                                            l774 0406  
                                          l758 03FC                                            l767 0402  
                                          l792 044E                                            l776 0408  
                                          l769 0403                                            l786 0436  
                                          l778 0409                                            l797 0764  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 00BF  
               ?_EUSART_SetFramingErrorHandler 00E6                                _TMR2_Initialize 0EAF  
                                          wreg 0009                                   _proporcional 00AF  
                                ??_Controlador 0051       __end_of_TMR1_DefaultGateInterruptHandler 0E47  
           ??_TMR1_DefaultGateInterruptHandler 0070              ?_TMR1_DefaultGateInterruptHandler 0070  
             _TMR1_DefaultGateInterruptHandler 0E46                                   ?_EUSART_Read 0070  
                                         l2413 0E82                                           l2433 0E70  
                                         l2441 0E7C                                           l2601 0F61  
                                         l2611 0E5E                                           l2435 0E76  
                                         l2443 0E8E                                           l2603 0F62  
                                         l2613 0EA7                                           l2621 0EC4  
                                         l2437 0E6A                                           l2605 0F64  
                                         l2615 0EAA                                           l2631 0ECB  
                                         l2623 0EC5                                           l2551 0FA5  
                                         l2543 0F9A                                           l2439 0E88  
                                         l2607 0F66                                           l2617 0EAB  
                                         l2625 0EC7                                           l2553 0FAA  
                                         l2545 0F9D                                           l2641 07DC  
                                         l2633 07C9                                           l2609 0F6D  
                                         l2561 0E4F                                           l2801 044B  
                                         l2811 0753                                           l2803 073E  
                                         l2563 0E64                                           l2627 0EC9  
                                         l2619 0EC1                                           l2651 0777  
                                         l2555 0EA0                                           l2547 0FA0  
                                         l2643 07E3                                           l2635 07D0  
                                         l2571 0F4F                                           l2661 0F1F  
                                         l2813 0757                                           l2805 0741  
                                         l2629 0ECA                                           l2653 077F  
                                         l2645 0765                                           l2565 0E4B  
                                         l2557 0EA3                                           l2549 0FA2  
                                         l2637 07D8                                           l2581 0EB2  
                                         l2573 0F51                                           l2663 0F24  
                                         l2815 075C                                           l2807 0746  
                                         l2655 0787                                           l2647 076E  
                                         l2559 0EA4                                           l2591 0F8D  
                                         l2639 07DA                                           l2583 0EB3  
                                         l2575 0F53                                           l2567 0F4B  
                                         l2665 0F26                                           l2657 0F18  
                                         l2817 0760                                           l2809 074D  
                                         l2649 076F                                           l2593 0F90  
                                         l2585 0EB4                                           l2577 0F5A  
                                         l2569 0F4E                                           l2745 06BE  
                                         l2659 0F1D                                           l2595 0F91  
                                         l2587 0F85                                           l2579 0EAF  
                                         l2851 04D3                                           l2843 04AB  
                                         l2669 0E5A                                           l2773 0E53  
                                         l2597 0F92                                           l2589 0F8A  
                                         l2781 03F3                                           l2861 04F6  
                                         l2853 04D6                                           l2845 04AE  
                                         l2599 0F5E                                           l2791 0426  
                                         l2863 04FE                                           l2855 04DF  
                                         l2847 04AF                                           l2777 0E47  
                                         l2793 0432                                           l2785 040C  
                                         l2857 04E7                                           l2849 04D1  
                                         l2795 0439                                           l2787 041B  
                                         l2859 04EA                                           l2797 043F  
                                         l2789 0421                                           l2799 0449  
                                         _LATA 010C                                           u1510 0F1D  
                                         _LATB 010D                                           u1511 0F1C  
                                         u1520 0F24                                           u1521 0F23  
                                         u1640 0421                                           u1641 0420  
                                         u1650 0426                                           u1810 04FE  
                                         u1651 0425                                           u1811 04FD  
                                         u1660 043F                                           u1804 04F6  
                                         u1661 043E                                           u1680 074D  
                                         u1681 074C                                           u1674 0448  
                                         u1827 04DA                                           u1780 04E7  
                                         u1781 04E6                                           u1790 04F4  
                                         u1791 04F1                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                  ?_TMR1_SetGateInterruptHandler 00E6  
                                         _main 04AB                                           _modo 007D  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0042  
                        ??_EPWM1_LoadDutyValue 0072                     ??_TMR4_SetInterruptHandler 00E8  
                              __end_of_EnviaTx 05B0                                    media@indice 006D  
                      __end_of_TMR0_Initialize 0F9A                 ??_TMR0_DefaultInterruptHandler 0070  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0EA7                                __end_of___aldiv 031D  
                                        ?_main 0070                                __end_of___atdiv 0396  
                              __end_of___eetoi 0EDC                                          _EEADR 0191  
                                        _T1CON 0018                                          _T2CON 001C  
                                        _T4CON 0417                                          _T6CON 041E  
                              __end_of___lwdiv 0628                                          i1l105 0FD9  
                                        i1l210 0024                                          i1l211 0040  
                                        i1l108 0FE1                                          i1l212 0032  
                                        i1l207 0012                                          i1l217 0040  
                                        i1l162 0F38                                          i1l157 07FF  
                                        i1l422 0EF9                                          i1l510 0003  
                                        i1l184 0E46                                          i1l504 0F08  
                                        i1l178 0EEA                                          i1l284 0EB8  
                                        i1l428 0002                                          i1l357 0FC6  
                                        i1l287 0EC0                                          i1l464 0E45  
                                        i1l801 055C                                          i1l722 0713  
                                        i1l458 0F4A                                          i1l732 0FFF  
                                        i1l820 0255                                          i1l725 07C8  
                                        i1l741 065C                                          i1l822 028C  
                                        i1l814 01F7                                          i1l750 0453  
                                        i1l735 05EB                                          i1l815 0210  
                                        i1l840 01E7                                          i1l760 0459  
                                        i1l752 0454                                          i1l825 05AF  
                                        i1l833 0F84                                          i1l818 0223  
                                        i1l762 045A                                          i1l746 0450  
                                        i1l843 03F2                                          i1l771 0460  
                                        i1l860 0693                                          i1l780 0466  
                                        i1l756 0456                                          i1l748 0452  
                                        i1l829 0F72                                          i1l765 045C  
                                        i1l774 0462                                          i1l758 0458  
                                        i1l767 045E                                          i1l792 04AA  
                                        i1l776 0464                                          i1l865 06A0  
                                        i1l769 045F                                          i1l786 0492  
                                        i1l778 0465                                          i1l869 06BD  
                                        i1l993 0795                                          i1l889 0EDB  
                                        i1l995 07A9                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          u93_20 0669  
                                        u93_21 0668                                          u94_25 0672  
                                        u95_25 0679                                          u96_20 0687  
                                        u96_21 0686                                          u97_20 0293  
                                        u97_21 0292                                          _TXREG 019A  
                                        u98_20 02A4                                          u98_21 02A3  
                                        u99_20 02C3                                          u99_21 02C2  
                                        _TXSTA 019E                                _TMR4_Initialize 0F4B  
                          ___lmul@multiplicand 0074                      ?_TMR0_SetInterruptHandler 00E6  
                    ?_TMR6_SetInterruptHandler 00E6                               __end_of_TMR0_ISR 0F4B  
                             __end_of_TMR4_ISR 0EFA                               __end_of_TMR6_ISR 0F09  
                                        _media 0FE2                                 _WDT_Initialize 0E4F  
                             inicia_ultrasom@j 006E                        __end_of_TMR1_Initialize 07E7  
                                        pclath 000A                            __end_of_Controlador 01E8  
                                        status 0003                                          wtemp0 007E  
                         __end_of_Comando_PIeD 0F85                                _TMR1_WriteTimer 0F28  
               ??_TMR6_DefaultInterruptHandler 0070                               ??_DAC_Initialize 00E6  
                 __end_of_CMP1_GetOutputStatus 0E4B                                __initialization 0044  
                                 __end_of_main 0504                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0EB7                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00EC                              ??_selecao_do_modo 0074  
                                 ?_muda_passos 0070                         __end_of_WDT_Initialize 0E53  
                              _TMR6_Initialize 0F5E                               ??_velocidade_som 007D  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         ?_media 007B  
                   _EUSART_OverrunErrorHandler 00E0                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _EEDATA 0193  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _EECON1 0195                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0E58  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       u100_25 02C7                                         u101_20 02D5  
                                       i1l1001 073D                                         u101_21 02D4  
                                       i1l1110 032D                                         i1l1007 068F  
                                       i1l1120 0395                                         u110_20 06BD  
                                       u110_21 06BC                        TMR1_WriteTimer@timerVal 0070  
                                       u102_25 02D6                                         u111_20 071E  
                                       u103_20 02EE                                         u111_21 071D  
                                       u103_21 02ED                                         i1l1058 02A0  
                                       i1l2211 0665                                         i1l1068 031C  
                                       i1l2301 031F                                         u103_25 02EA  
                                       i1l2213 0669                                         i1l2311 0343  
                                       i1l2303 0323                                         i1l2231 02AF  
                                       i1l2223 028D                                         i1l2215 0671  
                                       i1l2321 0361                                         i1l2313 034A  
                                       i1l2305 0331                                         i1l2241 02D1  
                                       i1l2233 02B3                                         i1l2225 028F  
                                       i1l2217 0678                                         i1l2209 065D  
                                       i1l1273 0627                                         i1l2401 0613  
                                       i1l2323 036F                                         i1l2315 034D  
                                       i1l2331 0382                                         i1l2307 0339  
                                       i1l2251 02F7                                         i1l2243 02D5  
                                       i1l2235 02BB                                         i1l2227 0293  
                                       i1l2219 0687                                         i1l2403 0617  
                                       i1l2421 0F2D                                         i1l2333 0387  
                                       i1l2325 0375                                         u120_25 035C  
                                       i1l2317 0357                                         i1l2309 033D  
                                       u112_25 0725                                         i1l2253 02FE  
                                       u104_25 02F8                                         i1l2245 02DC  
                                       i1l2237 02C3                                         i1l2229 02A4  
                                       i1l2341 0FD2                                         i1l2405 0618  
                                       i1l2501 027A                                         i1l2351 0EB8  
                                       i1l2431 0F36                                         i1l2423 0F2E  
                                       i1l2263 0FB0                                         i1l2335 038F  
                                       i1l2327 0376                                         i1l2319 035B  
                                       i1l2247 02EE                                         i1l2239 02C6  
                                       i1l2255 0304                                         i1l2415 07E7  
                                       i1l2511 0791                                         i1l2343 0FD3  
                                       i1l2271 0698                                         i1l2407 061D  
                                       u121_20 036F                                         u105_20 0304  
                                       i1l2353 0EBD                                         i1l2425 0F30  
                                       i1l2329 037C                                         u121_21 036E  
                                       i1l2257 0309                                         u105_21 0303  
                                       i1l2249 02F6                                         i1l2265 0396  
                                       i1l2361 00DF                                         i1l2513 079A  
                                       i1l2345 0FD7                                         i1l2281 06B2  
                                       i1l2273 06A4                                         i1l2409 0623  
                                       i1l2505 0281                                         i1l2521 044F  
                                       i1l2427 0F32                                         i1l2419 0F28  
                                       i1l2291 0724                                         i1l2259 0314  
                                       i1l2371 0162                                         i1l2363 0125  
                                       i1l2355 006D                                         i1l2515 079F  
                                       i1l2507 078A                                         i1l2347 0FDD  
                                       i1l2339 0FC8                                         i1l2275 06A8  
                                       i1l2283 06B6                                         i1l2531 0482  
                                       i1l2445 055D                                         i1l2429 0F34  
                                       u121_25 036B                                         u113_25 072B  
                                       i1l2293 072A                                         i1l2285 0714  
                                       i1l2373 0169                                         i1l2365 014B  
                                       i1l2357 0085                                         i1l2461 0F75  
                                       i1l2517 07A5                                         i1l2509 078D  
                                       i1l2453 0FE2                                         i1l2277 06A9  
                                       i1l2269 0691                                         i1l2381 0ECF  
                                       i1l2541 04A7                                         i1l2533 048E  
                                       i1l2525 0468                                         i1l2701 0639  
                                       i1l2295 0737                                         i1l2287 071A  
                                       i1l2375 016F                                         i1l2367 014F  
                                       i1l2359 00B2                                         i1l2463 0F79  
                                       i1l2455 0FEB                                         i1l2279 06AE  
                                       i1l2383 0ED7                                         i1l2391 05F4  
                                       i1l2447 07AA                                         i1l2471 01E8  
                                       i1l2535 0495                                         i1l2527 0477  
                                       i1l2711 0659                                         i1l2703 063E  
                                       u114_20 0737                                         u106_20 0309  
                                       u130_20 016F                                         u114_21 0736  
                                       i1l2289 071E                                         u106_21 0308  
                                       i1l2377 01A9                                         u130_21 016E  
                                       i1l2369 0155                                         i1l2457 0FEF  
                                       i1l2393 05F7                                         i1l2449 07B3  
                                       i1l2481 020C                                         i1l2473 01E9  
                                       i1l2721 050C                                         i1l2537 049B  
                                       i1l2529 047D                                         i1l2705 063F  
                                       i1l2299 031D                                         i1l2379 01DB  
                                       i1l2459 0F71                                         i1l2395 05FC  
                                       i1l2387 05EC                                         i1l2491 0259  
                                       i1l2483 0215                                         i1l2475 01F3  
                                       i1l2731 0535                                         i1l2723 050E  
                                       i1l2715 0504                                         i1l2539 04A5  
                                       i1l2707 0643                                         u122_25 0377  
                                       i1l2469 0F7C                                         i1l2397 0600  
                                       i1l2389 05EE                                         i1l2493 0260  
                                       i1l2485 021F                                         i1l2477 01FB  
                                       i1l2741 0559                                         i1l2709 0654  
                                       i1l2821 0006                                         i1l2671 06E9  
                                       i1l2399 0604                                         i1l2751 0EE5  
                                       i1l2495 0267                                         i1l2487 0247  
                                       i1l2479 0202                                         i1l2743 055A  
                                       i1l2727 0515                                         i1l2735 0545  
                                       i1l2719 050B                                         i1l2831 0020  
                                       i1l2823 000A                                         u123_20 0382  
                                       u115_20 0323                                         u131_20 05F4  
                                       i1l2681 0704                                         i1l2673 06F0  
                                       i1l2753 0F39                                         u123_21 0381  
                                       u115_21 0322                                         u131_21 05F3  
                                       i1l2497 026D                                         i1l2489 0251  
                                       i1l2729 0525                                         i1l2737 0550  
                                       i1l2761 0EFA                                         i1l2833 0029  
                                       i1l2825 000E                                         i1l2683 0706  
                                       i1l2675 06F3                                         i1l2755 0F3A  
                                       i1l2691 05B0                                         i1l2747 0EDC  
                                       i1l2499 0274                                         i1l2739 0553  
                                       i1l2771 0EF4                                         i1l2763 0EFC  
                                       i1l2835 002E                                         i1l2827 0016  
                                       i1l2685 0708                                         i1l2677 06FA  
                                       i1l2757 0F3E                                         u107_25 0FBF  
                                       i1l2693 05C2                                         i1l2749 0EDE  
                                       i1l2765 0F03                                         i1l2837 0037  
                                       i1l2829 001B                                         i1l2687 070E  
                                       i1l2679 0702                                         i1l2759 0F45  
                                       i1l2695 05E2                                         i1l2767 0EEB  
                                       i1l2839 003C                                         u124_20 0387  
                                       u116_20 0331                                         u108_20 0698  
                                       u140_20 020C                                         i1l2689 0711  
                                       u124_21 0386                                         u116_21 0330  
                                       u108_21 0697                                         i1l2697 05E5  
                                       u140_21 020B                                         i1l2769 0EED  
                                       i1l2699 0628                                         u132_25 05F8  
                                       u117_20 034A                                         u125_20 0FDD  
                                       u109_20 06A4                                         u133_20 0604  
                                       u141_20 021F                                         u117_21 0349  
                                       u125_21 0FDC                                         u109_21 06A3  
                                       u133_21 0603                                         u141_21 021E  
                                       u126_20 0EBD                                         u142_20 0251  
                                       u126_21 0EBC                                         u142_21 0250  
                                       u150_24 04A4                                         u118_25 034E  
                                       u134_25 0605                                         u119_20 035B  
                                       u143_20 0791                                         u135_20 0613  
                                       u119_21 035A                                         u127_21 00F3  
                                       u143_21 0790                                         u135_21 0612  
                                       u127_22 00F5                                         u127_23 00FD  
                                       u127_24 00FF                                         u135_25 060F  
                                       u128_20 014F                                         u160_20 0EE5  
                                       u128_21 014E                                         u160_21 0EE4  
                                       u144_25 0796                                         u136_25 0619  
                                       u153_20 06F0                                         u161_20 0F45  
                                       u129_20 0162                                         u137_20 0623  
                                       u153_21 06EF                                         u161_21 0F44  
                                       u129_21 0161                                         u137_21 0622  
                                       u145_25 079B                        TMR4_WriteTimer@timerVal 00E6  
                                       u138_20 0F2D                                         u154_20 06FA  
                                       u146_20 07A5                                         u162_20 0F03  
                                       u170_20 000E                                         u138_21 0F2C  
                                       u154_21 06F9                                         u146_21 07A4  
                                       u162_21 0F02                                         u170_21 000D  
                                       u139_20 01F3                                         u163_20 0EF4  
                                       u147_20 047D                                         u155_20 0639  
                                       u171_20 0016                                         _FVRCON 0117  
                                       u139_21 01F2                                         u163_21 0EF3  
                                       u147_21 047C                                         u155_21 0638  
                                       u171_21 0015                                         u155_25 0635  
                                       u148_20 0482                                         u156_20 0654  
                                       u172_20 001B                                         u148_21 0481  
                                       u156_21 0653                                         u172_21 001A  
                                       u156_25 0650                                         u157_20 050A  
                                       u149_20 049B                                         u173_20 0020  
                                       u157_21 0509                                         u149_21 049A  
                                       u173_21 001F                                         u158_20 0514  
                                       u174_20 0029                                         u158_21 0513  
                                       u174_21 0028                                         u159_20 0559  
                                       u175_20 002E                                         u159_21 0558  
                                       u175_21 002D                                         u183_27 0FD4  
                                       u176_20 0037                                         u176_21 0036  
                                       u184_27 070F                                         u177_20 003C  
                                       u169_20 000A                                         u177_21 003B  
                                       u169_21 0009                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                      ??_EnviaTx 0071  
                                   _Set_altura 006B                          __end_of_TMR1_GATE_ISR 0EEB  
               ??_TMR1_SetGateInterruptHandler 00E8                                _Dados_recebidos 073E  
                                 _CCPTMRS0bits 029E                                         ___lmul 065D  
                                    ??___aldiv 007C                                         ___tmul 0714  
                                       ___wmul 078A                                      ??___atdiv 0079  
                                    ??___eetoi 0078                              _posicao_bola_tubo 05B0  
                                    ??___lwdiv 0074                               ?_TMR0_Initialize 0070  
                      __end_of_TMR4_Initialize 0F5E                             ?_posicao_bola_tubo 0070  
                                 __pdataEEDATA 0000           __end_of_TMR4_DefaultInterruptHandler 0003  
                 _TMR4_DefaultInterruptHandler 0002                                _TMR4_WriteTimer 0E58  
                              ?_WDT_Initialize 0070                            ??_posicao_bola_tubo 007D  
                     ADC_GetConversion@channel 0073                                    _Controlador 006D  
     TMR6_SetInterruptHandler@InterruptHandler 00E6       TMR0_SetInterruptHandler@InterruptHandler 00E6  
     TMR4_SetInterruptHandler@InterruptHandler 00E6   TMR1_SetGateInterruptHandler@InterruptHandler 00E6  
                      __end_of_TMR1_WriteTimer 0F39                                     ___eecpymem 0690  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 06BE  
                      __end_of__initialization 0069                                _CMP1_Initialize 0E5E  
                           ?_SYSTEM_Initialize 0070                              _posicao_val_atual 00BB  
                            ?_EPWM1_Initialize 0070                      __end_of_posicao_bola_tubo 05EC  
                               __pcstackCOMMON 0070                                   __pidataBANK1 0F09  
                          ??_SYSTEM_Initialize 00E8                                  _erro_anterior 00B5  
                                    ?_TMR0_ISR 0070                                      ?_TMR4_ISR 0070  
                                    ?_TMR6_ISR 0070                             ??_EPWM1_Initialize 00E6  
                        __end_of_ProcessaDados 055D                                  __end_of_media 1000  
                             ?_TMR2_Initialize 0070                        __end_of_TMR6_Initialize 0F71  
                               _OPTION_REGbits 0095                  ?_TMR4_DefaultInterruptHandler 0070  
                                   _dado_atual 00C5                ??_EUSART_SetOverrunErrorHandler 00E8  
                         _CMP1_GetOutputStatus 0E47                                        ??_media 0020  
                    __end_of_SYSTEM_Initialize 06E9                                     __pbssBANK0 0059  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 0EC1                        __end_of_Dados_recebidos 0765  
                        _TMR4_InterruptHandler 00DC                               ??_FVR_Initialize 00E6  
                                   __pmaintext 04AB               __end_of_TMR0_SetInterruptHandler 0E82  
                                      ?___lmul 0070                                        ?___tmul 0070  
                                      ?___wmul 0020                                     ??_TMR0_ISR 0074  
             __end_of_TMR6_SetInterruptHandler 0E94                                     ??_TMR4_ISR 0074  
                                   ??_TMR6_ISR 0077                                     __pintentry 0004  
                      __end_of_TMR4_WriteTimer 0E5E                                        _DACCON0 0118  
                                      _DACCON1 0119                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CCP1CON 0293  
                                      _ECCP1AS 0295                                        _BAUDCON 019F  
                               ___lmul@product 0078                               ?_TMR4_Initialize 0070  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                   _derivativo 00AC                                map_value@in_max 0036  
                              map_value@in_min 0032                                   _Comando_PIeD 0F71  
                        ?_CMP1_GetOutputStatus 0070                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                        __end_of_CMP1_Initialize 0E64  
                     ??_EUSART_SetErrorHandler 00E8                               ?_TMR1_WriteTimer 0070  
                                  ?___eecpymem 0070                    __end_of_EPWM1_LoadDutyValue 0FC7  
                                      _EnviaTx 055D                                     _ki_valvula 00CC  
                         _ADC_InterruptHandler 00C1                                _selecao_do_modo 01E8  
                                  _Set_valvula 0069                                        ___aldiv 028D  
                                      ___atdiv 031D                                        ___eetoi 0ECE  
                                   _erro_atual 005C                                        ___lwdiv 05EC  
                             ?_TMR6_Initialize 0070                       TMR1_ReadTimer@readValLow 007A  
                            __end_of_map_value 03F3                                        __ptext1 03F3  
                                      __ptext2 06BE                                        __ptext3 0E4F  
                                      __ptext4 0F5E                                        __ptext5 0E8E  
                                      __ptext6 0F4B                                        __ptext7 0E88  
                                      __ptext8 0EAF                                        __ptext9 07C9  
                    TMR1_ReadTimer@readValHigh 0079                                     _kp_valvula 00C9  
                                    _T1CONbits 0018                                        _countRx 00C3  
                        _OSCILLATOR_Initialize 0EA0                                      _T2CONbits 001C  
                                    _CMOUTbits 0115                               ___aldiv@dividend 0024  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00E6  
                                      _npassos 00C6                                  i1_muda_passos 044F  
                    ?_TMR4_SetInterruptHandler 00E6                                      _T6CONbits 041E  
                                      _tempo_s 00BD                                        clrloop0 0E95  
                         end_of_initialization 0069                 ??_TMR4_DefaultInterruptHandler 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0E7C                  _EUSART_SetOverrunErrorHandler 0E76  
                                      init_ram 0E9A                               ?_Dados_recebidos 0070  
                                      initloop 0E9B                              _EUSART_Initialize 0765  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0E53                               ___aldiv@quotient 002A  
                             ?_TMR4_WriteTimer 0070                            ??_EUSART_Initialize 00E8  
                             ??_WDT_Initialize 00E6                       _TMR0_SetInterruptHandler 0E7C  
                          ?_EUSART_is_rx_ready 0070                       _TMR6_SetInterruptHandler 0E8E  
                            ??_inicia_ultrasom 0072                         ??_CMP1_GetOutputStatus 00E6  
                               _TMR1_ReadTimer 07E7                                 ?i1_muda_passos 0070  
                                 _kd_ventoinha 00D2                                   ?_Controlador 0070  
                             ?_CMP1_Initialize 0070                              ??_DRMotordePassos 0076  
                    __end_of_EUSART_Initialize 078A                           ??_EUSART_is_rx_ready 00E6  
                      __end_of_selecao_do_modo 028D                                      _TXSTAbits 019E  
                           _posicao_val_futura 0061                                     media@timer 007B  
                               __end_of___lmul 0690                     _EUSART_DefaultErrorHandler 0000  
                      _relacao_som_temperatura 0000                                  __pidataEEDATA 0000  
                               __end_of___tmul 073E                                 __end_of___wmul 07AA  
                                 _EUSART_Write 0EB7                                 _ADC_Initialize 0EA7  
                       ?_OSCILLATOR_Initialize 0070                         __end_of_TMR1_ReadTimer 0800  
                         _inicia_ultrasom$1282 0072                            start_initialization 0044  
                                ??_EUSART_Read 00E6                                     map_value@x 002E  
                 EPWM1_LoadDutyValue@dutyValue 0070                                   _ki_ventoinha 00D5  
                                    _Set_ciclo 0067                 ?_EUSART_SetOverrunErrorHandler 00E6  
                   _EUSART_FramingErrorHandler 00E2                                       ??___lmul 0078  
                                     ??___tmul 0076                                       ??___wmul 007D  
                          media@tempo_recebido 00A5                         _EUSART_SetErrorHandler 0E6A  
                       __end_of_ADC_Initialize 0EAF                                    __pdataBANK1 00C9  
                               ___tmul@product 0076                                ?_TMR1_ReadTimer 0070  
                              ??i1_muda_passos 0070                               _muda_passos$1295 00E8  
                             _muda_passos$1296 00EA                                    __pbssCOMMON 007D  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00E6                                   ??___eecpymem 0072  
                             ?_selecao_do_modo 0070                            __end_of_EUSART_Read 0F28  
                                     ?_EnviaTx 0070                          _TMR0_InterruptHandler 00DA  
                        _TMR6_InterruptHandler 00D8                                      __pnvBANK1 00D8  
                             ___lwdiv@dividend 0072                         _PIN_MANAGER_Initialize 0F9A  
                       _posicao_bola_tubo$2066 0057                                  _TMR1_GATE_ISR 0EDC  
                                     ?___aldiv 0020               __end_of_TMR4_SetInterruptHandler 0E8E  
                                     ?___atdiv 0020                                       ?___eetoi 0076  
                                     ?___lwdiv 0070                                ?_ADC_Initialize 0070  
                 ??_INTERRUPT_InterruptManager 007D                             __end_of___eecpymem 06BE  
                                ??_muda_passos 00E6                                      _map_value 0396  
                                  _flag_passos 00C4                                   _kp_ventoinha 00CF  
                             ___lwdiv@quotient 0075                                ___aldiv@divisor 0020  
                            ??_TMR0_Initialize 00E8                                ___aldiv@counter 0028  
                               ___wmul@product 0024                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00E6                               map_value@out_max 003E  
                             map_value@out_min 003A                                      clear_ram0 0E94  
                                     _PIE1bits 0091                                       _PIE3bits 0093  
                            _eusartRxLastError 00C8                     ??_TMR0_SetInterruptHandler 00E8  
                               ?_TMR1_GATE_ISR 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00E8                                       _PIR3bits 0013  
                   ??_TMR6_SetInterruptHandler 00E8                                    _altura_bola 00A9  
                              _inicia_ultrasom 06E9                                       _TMR0_ISR 0F39  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0EEB  
                                     _PSTR1CON 0296                                       _TMR6_ISR 0EFA  
                    _TMR1_GateInterruptHandler 00E4                                  _ProcessaDados 0504  
                            ??_TMR1_Initialize 00E8                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0020                                 _DAC_Initialize 0E64  
                              _DRMotordePassos 0628                               _EPWM1_Initialize 0EC1  
                                   ?_map_value 002E                            ___tmul@multiplicand 0073  
                                  _EUSART_Read 0F18                          Dados_recebidos@rxData 00E8  
                            ___lmul@multiplier 0070                            __end_of_muda_passos 044F  
                            ??_TMR2_Initialize 00E6                                 _velocidade_som 07AA  
                                   _EECON1bits 0195                                       _RxBuffer 00A0  
                            _ADC_GetConversion 0FC7                          TMR1_ReadTimer@readVal 0077  
                      ??_OSCILLATOR_Initialize 00E6                            _EUSART_ErrorHandler 00DE  
                           ?_ADC_GetConversion 0070                                 ?_ProcessaDados 0070  
                           i1_muda_passos$1295 0072                             i1_muda_passos$1296 0074  
                       __end_of_DAC_Initialize 0E6A                       _TMR4_SetInterruptHandler 0E88  
                          ??_ADC_GetConversion 0072                                ___lwdiv@divisor 0070  
                              ___lwdiv@counter 0077                                       __ptext10 0E82  
                                     __ptext11 0F85                                       __ptext20 0EC1  
                                     __ptext12 0E7C                                       __ptext21 0E64  
                                     __ptext13 0F9A                                     _T1GCONbits 0019  
                                     __ptext30 0EFA                                       __ptext22 0E5E  
                                     __ptext14 0EA0                                       __ptext31 0628  
                                     __ptext23 0EA7                                       __ptext15 0E4B  
                                     __ptext40 05B0                                       __ptext32 0003  
                                     __ptext24 0E53                                       __ptext16 0765  
                                     __ptext41 07AA                                       __ptext33 044F  
                                     __ptext25 073E                                       __ptext17 0E76  
                                     __ptext50 006D                                       __ptext42 05EC  
                                     __ptext34 0EEB                                       __ptext26 0E58  
                                     __ptext18 0E70                                       __ptext51 0396  
                                     __ptext43 0ECE                                       __ptext35 0504  
                                     __ptext27 0F18                                       __ptext19 0E6A  
                                     __ptext60 0F28                                       __ptext52 065D  
                                     __ptext44 0690                                       __ptext36 0002  
                                     __ptext28 0E47                                       __ptext61 055D  
                                     __ptext53 028D                                       __ptext45 0FC7  
                                     __ptext37 01E8                                       __ptext62 0EB7  
                                     __ptext54 0714                                       __ptext46 0FE2  
                                     __ptext38 0EDC                                       __ptext55 031D  
                                     __ptext47 078A                                       __ptext39 0E46  
                                     __ptext56 0FB0                                       __ptext48 07E7  
                                     __ptext57 0F39                                       __ptext49 0F71  
                                     __ptext58 0E45                                       __ptext59 06E9  
                       __end_of_velocidade_som 07C9                              ??_TMR4_Initialize 00E8  
                                  _integrativo 00B2                        __end_of_inicia_ultrasom 0714  
                              ??_TMR1_GATE_ISR 007D           __end_of_TMR0_DefaultInterruptHandler 0E46  
                 _TMR0_DefaultInterruptHandler 0E45                      __end_of_ADC_GetConversion 0FE2  
                      ?_EUSART_SetErrorHandler 00E6                                       _set_modo 006F  
EUSART_SetOverrunErrorHandler@interruptHandler 00E6                                       _soma_PID 0059  
                      __end_of_DRMotordePassos 065D                               ??_TMR1_ReadTimer 0072  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0042  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0E76  
                _EUSART_SetFramingErrorHandler 0E70                                ?_DAC_Initialize 0070  
                            ??_TMR1_WriteTimer 0072                                  ?_Comando_PIeD 0070  
                              ___eecpymem@from 0070                                ___eecpymem@size 0071  
                                   _INTCONbits 000B                                    _muda_passos 03F3  
                                  ??_map_value 0042                                     _FVRCONbits 0117  
                               _dados_de_envio 0120           __end_of_TMR6_DefaultInterruptHandler 0004  
                 _TMR6_DefaultInterruptHandler 0003                                       intlevel1 0000  
                              ?_velocidade_som 007B                                  _soma_anterior 00B8  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00E8  
               __end_of_EUSART_SetErrorHandler 0E70                               ??_ADC_Initialize 00E6  
                ?_TMR0_DefaultInterruptHandler 0070                                ??_ProcessaDados 0074  
                            ___tmul@multiplier 0070  EUSART_SetFramingErrorHandler@interruptHandler 00E6  
                               ??_Comando_PIeD 007D                                 _FVR_Initialize 0E4B  
                                   _OPTION_REG 0095                                    _temperatura 0063  
                                  _tempo_medio 0065                              ??_Dados_recebidos 00E7  
                              _TMR0_Initialize 0F85                          __end_ofi1_muda_passos 04AB  
                                 ___aldiv@sign 0029                            _EPWM1_LoadDutyValue 0FB0  
                             ___atdiv@dividend 0023                                  ___eecpymem@cp 0074  
                                ___eecpymem@to 0075                             EUSART_Write@txData 0070  
         __end_of_TMR1_SetGateInterruptHandler 0E88                   _TMR1_SetGateInterruptHandler 0E82  
               __end_of_PIN_MANAGER_Initialize 0FB0                  ?_TMR6_DefaultInterruptHandler 0070  
                            ??_TMR4_WriteTimer 00E6                                ___atdiv@divisor 0020  
                             ?_inicia_ultrasom 0070                                ___atdiv@counter 0026  
                            _ciclo_util_futuro 005F                                _TMR1_Initialize 07C9  
                     __end_of_EPWM1_Initialize 0ECE                           ?_EPWM1_LoadDutyValue 0070  
                                 ___atdiv@sign 0027                                   ___eetoi@addr 0078  
                                 ___eetoi@data 0079  
