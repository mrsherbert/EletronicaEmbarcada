

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Feb 20 13:26:31 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    82                           	dabs	1,0x7E,2
    83  0000                     
    84                           ; Generated 07/09/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC16F1827 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  0111                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0115                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0118                     	;# 
   174  0119                     	;# 
   175  011A                     	;# 
   176  011B                     	;# 
   177  011D                     	;# 
   178  011E                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0191                     	;# 
   182  0191                     	;# 
   183  0192                     	;# 
   184  0193                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0194                     	;# 
   188  0195                     	;# 
   189  0196                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019D                     	;# 
   199  019E                     	;# 
   200  019F                     	;# 
   201  020C                     	;# 
   202  020D                     	;# 
   203  0211                     	;# 
   204  0211                     	;# 
   205  0212                     	;# 
   206  0212                     	;# 
   207  0213                     	;# 
   208  0213                     	;# 
   209  0214                     	;# 
   210  0214                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0216                     	;# 
   215  0216                     	;# 
   216  0217                     	;# 
   217  0217                     	;# 
   218  0219                     	;# 
   219  021A                     	;# 
   220  021B                     	;# 
   221  021C                     	;# 
   222  021D                     	;# 
   223  021E                     	;# 
   224  021F                     	;# 
   225  0291                     	;# 
   226  0291                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0294                     	;# 
   230  0295                     	;# 
   231  0295                     	;# 
   232  0296                     	;# 
   233  0298                     	;# 
   234  0298                     	;# 
   235  0299                     	;# 
   236  029A                     	;# 
   237  029B                     	;# 
   238  029C                     	;# 
   239  029C                     	;# 
   240  029D                     	;# 
   241  029E                     	;# 
   242  029E                     	;# 
   243  0311                     	;# 
   244  0311                     	;# 
   245  0312                     	;# 
   246  0313                     	;# 
   247  0318                     	;# 
   248  0318                     	;# 
   249  0319                     	;# 
   250  031A                     	;# 
   251  0394                     	;# 
   252  0395                     	;# 
   253  0396                     	;# 
   254  039A                     	;# 
   255  039C                     	;# 
   256  039D                     	;# 
   257  039E                     	;# 
   258  039F                     	;# 
   259  0415                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  041C                     	;# 
   263  041D                     	;# 
   264  041E                     	;# 
   265  0FE4                     	;# 
   266  0FE5                     	;# 
   267  0FE6                     	;# 
   268  0FE7                     	;# 
   269  0FE8                     	;# 
   270  0FE9                     	;# 
   271  0FEA                     	;# 
   272  0FEB                     	;# 
   273  0FED                     	;# 
   274  0FEE                     	;# 
   275  0FEF                     	;# 
   276  0000                     	;# 
   277  0001                     	;# 
   278  0002                     	;# 
   279  0003                     	;# 
   280  0004                     	;# 
   281  0005                     	;# 
   282  0006                     	;# 
   283  0007                     	;# 
   284  0008                     	;# 
   285  0009                     	;# 
   286  000A                     	;# 
   287  000B                     	;# 
   288  000C                     	;# 
   289  000D                     	;# 
   290  0011                     	;# 
   291  0012                     	;# 
   292  0013                     	;# 
   293  0014                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0016                     	;# 
   297  0017                     	;# 
   298  0018                     	;# 
   299  0019                     	;# 
   300  001A                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0095                     	;# 
   312  0096                     	;# 
   313  0097                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009A                     	;# 
   317  009B                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  010C                     	;# 
   323  010D                     	;# 
   324  0111                     	;# 
   325  0112                     	;# 
   326  0113                     	;# 
   327  0114                     	;# 
   328  0115                     	;# 
   329  0116                     	;# 
   330  0117                     	;# 
   331  0118                     	;# 
   332  0119                     	;# 
   333  011A                     	;# 
   334  011B                     	;# 
   335  011D                     	;# 
   336  011E                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0191                     	;# 
   340  0191                     	;# 
   341  0192                     	;# 
   342  0193                     	;# 
   343  0193                     	;# 
   344  0193                     	;# 
   345  0194                     	;# 
   346  0195                     	;# 
   347  0196                     	;# 
   348  0199                     	;# 
   349  019A                     	;# 
   350  019B                     	;# 
   351  019B                     	;# 
   352  019B                     	;# 
   353  019B                     	;# 
   354  019C                     	;# 
   355  019C                     	;# 
   356  019D                     	;# 
   357  019E                     	;# 
   358  019F                     	;# 
   359  020C                     	;# 
   360  020D                     	;# 
   361  0211                     	;# 
   362  0211                     	;# 
   363  0212                     	;# 
   364  0212                     	;# 
   365  0213                     	;# 
   366  0213                     	;# 
   367  0214                     	;# 
   368  0214                     	;# 
   369  0215                     	;# 
   370  0215                     	;# 
   371  0215                     	;# 
   372  0216                     	;# 
   373  0216                     	;# 
   374  0217                     	;# 
   375  0217                     	;# 
   376  0219                     	;# 
   377  021A                     	;# 
   378  021B                     	;# 
   379  021C                     	;# 
   380  021D                     	;# 
   381  021E                     	;# 
   382  021F                     	;# 
   383  0291                     	;# 
   384  0291                     	;# 
   385  0292                     	;# 
   386  0293                     	;# 
   387  0294                     	;# 
   388  0295                     	;# 
   389  0295                     	;# 
   390  0296                     	;# 
   391  0298                     	;# 
   392  0298                     	;# 
   393  0299                     	;# 
   394  029A                     	;# 
   395  029B                     	;# 
   396  029C                     	;# 
   397  029C                     	;# 
   398  029D                     	;# 
   399  029E                     	;# 
   400  029E                     	;# 
   401  0311                     	;# 
   402  0311                     	;# 
   403  0312                     	;# 
   404  0313                     	;# 
   405  0318                     	;# 
   406  0318                     	;# 
   407  0319                     	;# 
   408  031A                     	;# 
   409  0394                     	;# 
   410  0395                     	;# 
   411  0396                     	;# 
   412  039A                     	;# 
   413  039C                     	;# 
   414  039D                     	;# 
   415  039E                     	;# 
   416  039F                     	;# 
   417  0415                     	;# 
   418  0416                     	;# 
   419  0417                     	;# 
   420  041C                     	;# 
   421  041D                     	;# 
   422  041E                     	;# 
   423  0FE4                     	;# 
   424  0FE5                     	;# 
   425  0FE6                     	;# 
   426  0FE7                     	;# 
   427  0FE8                     	;# 
   428  0FE9                     	;# 
   429  0FEA                     	;# 
   430  0FEB                     	;# 
   431  0FED                     	;# 
   432  0FEE                     	;# 
   433  0FEF                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  0011                     	;# 
   449  0012                     	;# 
   450  0013                     	;# 
   451  0014                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0016                     	;# 
   455  0017                     	;# 
   456  0018                     	;# 
   457  0019                     	;# 
   458  001A                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001E                     	;# 
   462  001F                     	;# 
   463  008C                     	;# 
   464  008D                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009A                     	;# 
   475  009B                     	;# 
   476  009B                     	;# 
   477  009C                     	;# 
   478  009D                     	;# 
   479  009E                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  0111                     	;# 
   483  0112                     	;# 
   484  0113                     	;# 
   485  0114                     	;# 
   486  0115                     	;# 
   487  0116                     	;# 
   488  0117                     	;# 
   489  0118                     	;# 
   490  0119                     	;# 
   491  011A                     	;# 
   492  011B                     	;# 
   493  011D                     	;# 
   494  011E                     	;# 
   495  018C                     	;# 
   496  018D                     	;# 
   497  0191                     	;# 
   498  0191                     	;# 
   499  0192                     	;# 
   500  0193                     	;# 
   501  0193                     	;# 
   502  0193                     	;# 
   503  0194                     	;# 
   504  0195                     	;# 
   505  0196                     	;# 
   506  0199                     	;# 
   507  019A                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019C                     	;# 
   513  019C                     	;# 
   514  019D                     	;# 
   515  019E                     	;# 
   516  019F                     	;# 
   517  020C                     	;# 
   518  020D                     	;# 
   519  0211                     	;# 
   520  0211                     	;# 
   521  0212                     	;# 
   522  0212                     	;# 
   523  0213                     	;# 
   524  0213                     	;# 
   525  0214                     	;# 
   526  0214                     	;# 
   527  0215                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0216                     	;# 
   531  0216                     	;# 
   532  0217                     	;# 
   533  0217                     	;# 
   534  0219                     	;# 
   535  021A                     	;# 
   536  021B                     	;# 
   537  021C                     	;# 
   538  021D                     	;# 
   539  021E                     	;# 
   540  021F                     	;# 
   541  0291                     	;# 
   542  0291                     	;# 
   543  0292                     	;# 
   544  0293                     	;# 
   545  0294                     	;# 
   546  0295                     	;# 
   547  0295                     	;# 
   548  0296                     	;# 
   549  0298                     	;# 
   550  0298                     	;# 
   551  0299                     	;# 
   552  029A                     	;# 
   553  029B                     	;# 
   554  029C                     	;# 
   555  029C                     	;# 
   556  029D                     	;# 
   557  029E                     	;# 
   558  029E                     	;# 
   559  0311                     	;# 
   560  0311                     	;# 
   561  0312                     	;# 
   562  0313                     	;# 
   563  0318                     	;# 
   564  0318                     	;# 
   565  0319                     	;# 
   566  031A                     	;# 
   567  0394                     	;# 
   568  0395                     	;# 
   569  0396                     	;# 
   570  039A                     	;# 
   571  039C                     	;# 
   572  039D                     	;# 
   573  039E                     	;# 
   574  039F                     	;# 
   575  0415                     	;# 
   576  0416                     	;# 
   577  0417                     	;# 
   578  041C                     	;# 
   579  041D                     	;# 
   580  041E                     	;# 
   581  0FE4                     	;# 
   582  0FE5                     	;# 
   583  0FE6                     	;# 
   584  0FE7                     	;# 
   585  0FE8                     	;# 
   586  0FE9                     	;# 
   587  0FEA                     	;# 
   588  0FEB                     	;# 
   589  0FED                     	;# 
   590  0FEE                     	;# 
   591  0FEF                     	;# 
   592  0000                     	;# 
   593  0001                     	;# 
   594  0002                     	;# 
   595  0003                     	;# 
   596  0004                     	;# 
   597  0005                     	;# 
   598  0006                     	;# 
   599  0007                     	;# 
   600  0008                     	;# 
   601  0009                     	;# 
   602  000A                     	;# 
   603  000B                     	;# 
   604  000C                     	;# 
   605  000D                     	;# 
   606  0011                     	;# 
   607  0012                     	;# 
   608  0013                     	;# 
   609  0014                     	;# 
   610  0015                     	;# 
   611  0016                     	;# 
   612  0016                     	;# 
   613  0017                     	;# 
   614  0018                     	;# 
   615  0019                     	;# 
   616  001A                     	;# 
   617  001B                     	;# 
   618  001C                     	;# 
   619  001E                     	;# 
   620  001F                     	;# 
   621  008C                     	;# 
   622  008D                     	;# 
   623  0091                     	;# 
   624  0092                     	;# 
   625  0093                     	;# 
   626  0094                     	;# 
   627  0095                     	;# 
   628  0096                     	;# 
   629  0097                     	;# 
   630  0098                     	;# 
   631  0099                     	;# 
   632  009A                     	;# 
   633  009B                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  010C                     	;# 
   639  010D                     	;# 
   640  0111                     	;# 
   641  0112                     	;# 
   642  0113                     	;# 
   643  0114                     	;# 
   644  0115                     	;# 
   645  0116                     	;# 
   646  0117                     	;# 
   647  0118                     	;# 
   648  0119                     	;# 
   649  011A                     	;# 
   650  011B                     	;# 
   651  011D                     	;# 
   652  011E                     	;# 
   653  018C                     	;# 
   654  018D                     	;# 
   655  0191                     	;# 
   656  0191                     	;# 
   657  0192                     	;# 
   658  0193                     	;# 
   659  0193                     	;# 
   660  0193                     	;# 
   661  0194                     	;# 
   662  0195                     	;# 
   663  0196                     	;# 
   664  0199                     	;# 
   665  019A                     	;# 
   666  019B                     	;# 
   667  019B                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019C                     	;# 
   671  019C                     	;# 
   672  019D                     	;# 
   673  019E                     	;# 
   674  019F                     	;# 
   675  020C                     	;# 
   676  020D                     	;# 
   677  0211                     	;# 
   678  0211                     	;# 
   679  0212                     	;# 
   680  0212                     	;# 
   681  0213                     	;# 
   682  0213                     	;# 
   683  0214                     	;# 
   684  0214                     	;# 
   685  0215                     	;# 
   686  0215                     	;# 
   687  0215                     	;# 
   688  0216                     	;# 
   689  0216                     	;# 
   690  0217                     	;# 
   691  0217                     	;# 
   692  0219                     	;# 
   693  021A                     	;# 
   694  021B                     	;# 
   695  021C                     	;# 
   696  021D                     	;# 
   697  021E                     	;# 
   698  021F                     	;# 
   699  0291                     	;# 
   700  0291                     	;# 
   701  0292                     	;# 
   702  0293                     	;# 
   703  0294                     	;# 
   704  0295                     	;# 
   705  0295                     	;# 
   706  0296                     	;# 
   707  0298                     	;# 
   708  0298                     	;# 
   709  0299                     	;# 
   710  029A                     	;# 
   711  029B                     	;# 
   712  029C                     	;# 
   713  029C                     	;# 
   714  029D                     	;# 
   715  029E                     	;# 
   716  029E                     	;# 
   717  0311                     	;# 
   718  0311                     	;# 
   719  0312                     	;# 
   720  0313                     	;# 
   721  0318                     	;# 
   722  0318                     	;# 
   723  0319                     	;# 
   724  031A                     	;# 
   725  0394                     	;# 
   726  0395                     	;# 
   727  0396                     	;# 
   728  039A                     	;# 
   729  039C                     	;# 
   730  039D                     	;# 
   731  039E                     	;# 
   732  039F                     	;# 
   733  0415                     	;# 
   734  0416                     	;# 
   735  0417                     	;# 
   736  041C                     	;# 
   737  041D                     	;# 
   738  041E                     	;# 
   739  0FE4                     	;# 
   740  0FE5                     	;# 
   741  0FE6                     	;# 
   742  0FE7                     	;# 
   743  0FE8                     	;# 
   744  0FE9                     	;# 
   745  0FEA                     	;# 
   746  0FEB                     	;# 
   747  0FED                     	;# 
   748  0FEE                     	;# 
   749  0FEF                     	;# 
   750  0000                     	;# 
   751  0001                     	;# 
   752  0002                     	;# 
   753  0003                     	;# 
   754  0004                     	;# 
   755  0005                     	;# 
   756  0006                     	;# 
   757  0007                     	;# 
   758  0008                     	;# 
   759  0009                     	;# 
   760  000A                     	;# 
   761  000B                     	;# 
   762  000C                     	;# 
   763  000D                     	;# 
   764  0011                     	;# 
   765  0012                     	;# 
   766  0013                     	;# 
   767  0014                     	;# 
   768  0015                     	;# 
   769  0016                     	;# 
   770  0016                     	;# 
   771  0017                     	;# 
   772  0018                     	;# 
   773  0019                     	;# 
   774  001A                     	;# 
   775  001B                     	;# 
   776  001C                     	;# 
   777  001E                     	;# 
   778  001F                     	;# 
   779  008C                     	;# 
   780  008D                     	;# 
   781  0091                     	;# 
   782  0092                     	;# 
   783  0093                     	;# 
   784  0094                     	;# 
   785  0095                     	;# 
   786  0096                     	;# 
   787  0097                     	;# 
   788  0098                     	;# 
   789  0099                     	;# 
   790  009A                     	;# 
   791  009B                     	;# 
   792  009B                     	;# 
   793  009C                     	;# 
   794  009D                     	;# 
   795  009E                     	;# 
   796  010C                     	;# 
   797  010D                     	;# 
   798  0111                     	;# 
   799  0112                     	;# 
   800  0113                     	;# 
   801  0114                     	;# 
   802  0115                     	;# 
   803  0116                     	;# 
   804  0117                     	;# 
   805  0118                     	;# 
   806  0119                     	;# 
   807  011A                     	;# 
   808  011B                     	;# 
   809  011D                     	;# 
   810  011E                     	;# 
   811  018C                     	;# 
   812  018D                     	;# 
   813  0191                     	;# 
   814  0191                     	;# 
   815  0192                     	;# 
   816  0193                     	;# 
   817  0193                     	;# 
   818  0193                     	;# 
   819  0194                     	;# 
   820  0195                     	;# 
   821  0196                     	;# 
   822  0199                     	;# 
   823  019A                     	;# 
   824  019B                     	;# 
   825  019B                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019C                     	;# 
   829  019C                     	;# 
   830  019D                     	;# 
   831  019E                     	;# 
   832  019F                     	;# 
   833  020C                     	;# 
   834  020D                     	;# 
   835  0211                     	;# 
   836  0211                     	;# 
   837  0212                     	;# 
   838  0212                     	;# 
   839  0213                     	;# 
   840  0213                     	;# 
   841  0214                     	;# 
   842  0214                     	;# 
   843  0215                     	;# 
   844  0215                     	;# 
   845  0215                     	;# 
   846  0216                     	;# 
   847  0216                     	;# 
   848  0217                     	;# 
   849  0217                     	;# 
   850  0219                     	;# 
   851  021A                     	;# 
   852  021B                     	;# 
   853  021C                     	;# 
   854  021D                     	;# 
   855  021E                     	;# 
   856  021F                     	;# 
   857  0291                     	;# 
   858  0291                     	;# 
   859  0292                     	;# 
   860  0293                     	;# 
   861  0294                     	;# 
   862  0295                     	;# 
   863  0295                     	;# 
   864  0296                     	;# 
   865  0298                     	;# 
   866  0298                     	;# 
   867  0299                     	;# 
   868  029A                     	;# 
   869  029B                     	;# 
   870  029C                     	;# 
   871  029C                     	;# 
   872  029D                     	;# 
   873  029E                     	;# 
   874  029E                     	;# 
   875  0311                     	;# 
   876  0311                     	;# 
   877  0312                     	;# 
   878  0313                     	;# 
   879  0318                     	;# 
   880  0318                     	;# 
   881  0319                     	;# 
   882  031A                     	;# 
   883  0394                     	;# 
   884  0395                     	;# 
   885  0396                     	;# 
   886  039A                     	;# 
   887  039C                     	;# 
   888  039D                     	;# 
   889  039E                     	;# 
   890  039F                     	;# 
   891  0415                     	;# 
   892  0416                     	;# 
   893  0417                     	;# 
   894  041C                     	;# 
   895  041D                     	;# 
   896  041E                     	;# 
   897  0FE4                     	;# 
   898  0FE5                     	;# 
   899  0FE6                     	;# 
   900  0FE7                     	;# 
   901  0FE8                     	;# 
   902  0FE9                     	;# 
   903  0FEA                     	;# 
   904  0FEB                     	;# 
   905  0FED                     	;# 
   906  0FEE                     	;# 
   907  0FEF                     	;# 
   908  0000                     	;# 
   909  0001                     	;# 
   910  0002                     	;# 
   911  0003                     	;# 
   912  0004                     	;# 
   913  0005                     	;# 
   914  0006                     	;# 
   915  0007                     	;# 
   916  0008                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  0011                     	;# 
   923  0012                     	;# 
   924  0013                     	;# 
   925  0014                     	;# 
   926  0015                     	;# 
   927  0016                     	;# 
   928  0016                     	;# 
   929  0017                     	;# 
   930  0018                     	;# 
   931  0019                     	;# 
   932  001A                     	;# 
   933  001B                     	;# 
   934  001C                     	;# 
   935  001E                     	;# 
   936  001F                     	;# 
   937  008C                     	;# 
   938  008D                     	;# 
   939  0091                     	;# 
   940  0092                     	;# 
   941  0093                     	;# 
   942  0094                     	;# 
   943  0095                     	;# 
   944  0096                     	;# 
   945  0097                     	;# 
   946  0098                     	;# 
   947  0099                     	;# 
   948  009A                     	;# 
   949  009B                     	;# 
   950  009B                     	;# 
   951  009C                     	;# 
   952  009D                     	;# 
   953  009E                     	;# 
   954  010C                     	;# 
   955  010D                     	;# 
   956  0111                     	;# 
   957  0112                     	;# 
   958  0113                     	;# 
   959  0114                     	;# 
   960  0115                     	;# 
   961  0116                     	;# 
   962  0117                     	;# 
   963  0118                     	;# 
   964  0119                     	;# 
   965  011A                     	;# 
   966  011B                     	;# 
   967  011D                     	;# 
   968  011E                     	;# 
   969  018C                     	;# 
   970  018D                     	;# 
   971  0191                     	;# 
   972  0191                     	;# 
   973  0192                     	;# 
   974  0193                     	;# 
   975  0193                     	;# 
   976  0193                     	;# 
   977  0194                     	;# 
   978  0195                     	;# 
   979  0196                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019B                     	;# 
   985  019B                     	;# 
   986  019C                     	;# 
   987  019C                     	;# 
   988  019D                     	;# 
   989  019E                     	;# 
   990  019F                     	;# 
   991  020C                     	;# 
   992  020D                     	;# 
   993  0211                     	;# 
   994  0211                     	;# 
   995  0212                     	;# 
   996  0212                     	;# 
   997  0213                     	;# 
   998  0213                     	;# 
   999  0214                     	;# 
  1000  0214                     	;# 
  1001  0215                     	;# 
  1002  0215                     	;# 
  1003  0215                     	;# 
  1004  0216                     	;# 
  1005  0216                     	;# 
  1006  0217                     	;# 
  1007  0217                     	;# 
  1008  0219                     	;# 
  1009  021A                     	;# 
  1010  021B                     	;# 
  1011  021C                     	;# 
  1012  021D                     	;# 
  1013  021E                     	;# 
  1014  021F                     	;# 
  1015  0291                     	;# 
  1016  0291                     	;# 
  1017  0292                     	;# 
  1018  0293                     	;# 
  1019  0294                     	;# 
  1020  0295                     	;# 
  1021  0295                     	;# 
  1022  0296                     	;# 
  1023  0298                     	;# 
  1024  0298                     	;# 
  1025  0299                     	;# 
  1026  029A                     	;# 
  1027  029B                     	;# 
  1028  029C                     	;# 
  1029  029C                     	;# 
  1030  029D                     	;# 
  1031  029E                     	;# 
  1032  029E                     	;# 
  1033  0311                     	;# 
  1034  0311                     	;# 
  1035  0312                     	;# 
  1036  0313                     	;# 
  1037  0318                     	;# 
  1038  0318                     	;# 
  1039  0319                     	;# 
  1040  031A                     	;# 
  1041  0394                     	;# 
  1042  0395                     	;# 
  1043  0396                     	;# 
  1044  039A                     	;# 
  1045  039C                     	;# 
  1046  039D                     	;# 
  1047  039E                     	;# 
  1048  039F                     	;# 
  1049  0415                     	;# 
  1050  0416                     	;# 
  1051  0417                     	;# 
  1052  041C                     	;# 
  1053  041D                     	;# 
  1054  041E                     	;# 
  1055  0FE4                     	;# 
  1056  0FE5                     	;# 
  1057  0FE6                     	;# 
  1058  0FE7                     	;# 
  1059  0FE8                     	;# 
  1060  0FE9                     	;# 
  1061  0FEA                     	;# 
  1062  0FEB                     	;# 
  1063  0FED                     	;# 
  1064  0FEE                     	;# 
  1065  0FEF                     	;# 
  1066  0000                     	;# 
  1067  0001                     	;# 
  1068  0002                     	;# 
  1069  0003                     	;# 
  1070  0004                     	;# 
  1071  0005                     	;# 
  1072  0006                     	;# 
  1073  0007                     	;# 
  1074  0008                     	;# 
  1075  0009                     	;# 
  1076  000A                     	;# 
  1077  000B                     	;# 
  1078  000C                     	;# 
  1079  000D                     	;# 
  1080  0011                     	;# 
  1081  0012                     	;# 
  1082  0013                     	;# 
  1083  0014                     	;# 
  1084  0015                     	;# 
  1085  0016                     	;# 
  1086  0016                     	;# 
  1087  0017                     	;# 
  1088  0018                     	;# 
  1089  0019                     	;# 
  1090  001A                     	;# 
  1091  001B                     	;# 
  1092  001C                     	;# 
  1093  001E                     	;# 
  1094  001F                     	;# 
  1095  008C                     	;# 
  1096  008D                     	;# 
  1097  0091                     	;# 
  1098  0092                     	;# 
  1099  0093                     	;# 
  1100  0094                     	;# 
  1101  0095                     	;# 
  1102  0096                     	;# 
  1103  0097                     	;# 
  1104  0098                     	;# 
  1105  0099                     	;# 
  1106  009A                     	;# 
  1107  009B                     	;# 
  1108  009B                     	;# 
  1109  009C                     	;# 
  1110  009D                     	;# 
  1111  009E                     	;# 
  1112  010C                     	;# 
  1113  010D                     	;# 
  1114  0111                     	;# 
  1115  0112                     	;# 
  1116  0113                     	;# 
  1117  0114                     	;# 
  1118  0115                     	;# 
  1119  0116                     	;# 
  1120  0117                     	;# 
  1121  0118                     	;# 
  1122  0119                     	;# 
  1123  011A                     	;# 
  1124  011B                     	;# 
  1125  011D                     	;# 
  1126  011E                     	;# 
  1127  018C                     	;# 
  1128  018D                     	;# 
  1129  0191                     	;# 
  1130  0191                     	;# 
  1131  0192                     	;# 
  1132  0193                     	;# 
  1133  0193                     	;# 
  1134  0193                     	;# 
  1135  0194                     	;# 
  1136  0195                     	;# 
  1137  0196                     	;# 
  1138  0199                     	;# 
  1139  019A                     	;# 
  1140  019B                     	;# 
  1141  019B                     	;# 
  1142  019B                     	;# 
  1143  019B                     	;# 
  1144  019C                     	;# 
  1145  019C                     	;# 
  1146  019D                     	;# 
  1147  019E                     	;# 
  1148  019F                     	;# 
  1149  020C                     	;# 
  1150  020D                     	;# 
  1151  0211                     	;# 
  1152  0211                     	;# 
  1153  0212                     	;# 
  1154  0212                     	;# 
  1155  0213                     	;# 
  1156  0213                     	;# 
  1157  0214                     	;# 
  1158  0214                     	;# 
  1159  0215                     	;# 
  1160  0215                     	;# 
  1161  0215                     	;# 
  1162  0216                     	;# 
  1163  0216                     	;# 
  1164  0217                     	;# 
  1165  0217                     	;# 
  1166  0219                     	;# 
  1167  021A                     	;# 
  1168  021B                     	;# 
  1169  021C                     	;# 
  1170  021D                     	;# 
  1171  021E                     	;# 
  1172  021F                     	;# 
  1173  0291                     	;# 
  1174  0291                     	;# 
  1175  0292                     	;# 
  1176  0293                     	;# 
  1177  0294                     	;# 
  1178  0295                     	;# 
  1179  0295                     	;# 
  1180  0296                     	;# 
  1181  0298                     	;# 
  1182  0298                     	;# 
  1183  0299                     	;# 
  1184  029A                     	;# 
  1185  029B                     	;# 
  1186  029C                     	;# 
  1187  029C                     	;# 
  1188  029D                     	;# 
  1189  029E                     	;# 
  1190  029E                     	;# 
  1191  0311                     	;# 
  1192  0311                     	;# 
  1193  0312                     	;# 
  1194  0313                     	;# 
  1195  0318                     	;# 
  1196  0318                     	;# 
  1197  0319                     	;# 
  1198  031A                     	;# 
  1199  0394                     	;# 
  1200  0395                     	;# 
  1201  0396                     	;# 
  1202  039A                     	;# 
  1203  039C                     	;# 
  1204  039D                     	;# 
  1205  039E                     	;# 
  1206  039F                     	;# 
  1207  0415                     	;# 
  1208  0416                     	;# 
  1209  0417                     	;# 
  1210  041C                     	;# 
  1211  041D                     	;# 
  1212  041E                     	;# 
  1213  0FE4                     	;# 
  1214  0FE5                     	;# 
  1215  0FE6                     	;# 
  1216  0FE7                     	;# 
  1217  0FE8                     	;# 
  1218  0FE9                     	;# 
  1219  0FEA                     	;# 
  1220  0FEB                     	;# 
  1221  0FED                     	;# 
  1222  0FEE                     	;# 
  1223  0FEF                     	;# 
  1224  0000                     	;# 
  1225  0001                     	;# 
  1226  0002                     	;# 
  1227  0003                     	;# 
  1228  0004                     	;# 
  1229  0005                     	;# 
  1230  0006                     	;# 
  1231  0007                     	;# 
  1232  0008                     	;# 
  1233  0009                     	;# 
  1234  000A                     	;# 
  1235  000B                     	;# 
  1236  000C                     	;# 
  1237  000D                     	;# 
  1238  0011                     	;# 
  1239  0012                     	;# 
  1240  0013                     	;# 
  1241  0014                     	;# 
  1242  0015                     	;# 
  1243  0016                     	;# 
  1244  0016                     	;# 
  1245  0017                     	;# 
  1246  0018                     	;# 
  1247  0019                     	;# 
  1248  001A                     	;# 
  1249  001B                     	;# 
  1250  001C                     	;# 
  1251  001E                     	;# 
  1252  001F                     	;# 
  1253  008C                     	;# 
  1254  008D                     	;# 
  1255  0091                     	;# 
  1256  0092                     	;# 
  1257  0093                     	;# 
  1258  0094                     	;# 
  1259  0095                     	;# 
  1260  0096                     	;# 
  1261  0097                     	;# 
  1262  0098                     	;# 
  1263  0099                     	;# 
  1264  009A                     	;# 
  1265  009B                     	;# 
  1266  009B                     	;# 
  1267  009C                     	;# 
  1268  009D                     	;# 
  1269  009E                     	;# 
  1270  010C                     	;# 
  1271  010D                     	;# 
  1272  0111                     	;# 
  1273  0112                     	;# 
  1274  0113                     	;# 
  1275  0114                     	;# 
  1276  0115                     	;# 
  1277  0116                     	;# 
  1278  0117                     	;# 
  1279  0118                     	;# 
  1280  0119                     	;# 
  1281  011A                     	;# 
  1282  011B                     	;# 
  1283  011D                     	;# 
  1284  011E                     	;# 
  1285  018C                     	;# 
  1286  018D                     	;# 
  1287  0191                     	;# 
  1288  0191                     	;# 
  1289  0192                     	;# 
  1290  0193                     	;# 
  1291  0193                     	;# 
  1292  0193                     	;# 
  1293  0194                     	;# 
  1294  0195                     	;# 
  1295  0196                     	;# 
  1296  0199                     	;# 
  1297  019A                     	;# 
  1298  019B                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019C                     	;# 
  1303  019C                     	;# 
  1304  019D                     	;# 
  1305  019E                     	;# 
  1306  019F                     	;# 
  1307  020C                     	;# 
  1308  020D                     	;# 
  1309  0211                     	;# 
  1310  0211                     	;# 
  1311  0212                     	;# 
  1312  0212                     	;# 
  1313  0213                     	;# 
  1314  0213                     	;# 
  1315  0214                     	;# 
  1316  0214                     	;# 
  1317  0215                     	;# 
  1318  0215                     	;# 
  1319  0215                     	;# 
  1320  0216                     	;# 
  1321  0216                     	;# 
  1322  0217                     	;# 
  1323  0217                     	;# 
  1324  0219                     	;# 
  1325  021A                     	;# 
  1326  021B                     	;# 
  1327  021C                     	;# 
  1328  021D                     	;# 
  1329  021E                     	;# 
  1330  021F                     	;# 
  1331  0291                     	;# 
  1332  0291                     	;# 
  1333  0292                     	;# 
  1334  0293                     	;# 
  1335  0294                     	;# 
  1336  0295                     	;# 
  1337  0295                     	;# 
  1338  0296                     	;# 
  1339  0298                     	;# 
  1340  0298                     	;# 
  1341  0299                     	;# 
  1342  029A                     	;# 
  1343  029B                     	;# 
  1344  029C                     	;# 
  1345  029C                     	;# 
  1346  029D                     	;# 
  1347  029E                     	;# 
  1348  029E                     	;# 
  1349  0311                     	;# 
  1350  0311                     	;# 
  1351  0312                     	;# 
  1352  0313                     	;# 
  1353  0318                     	;# 
  1354  0318                     	;# 
  1355  0319                     	;# 
  1356  031A                     	;# 
  1357  0394                     	;# 
  1358  0395                     	;# 
  1359  0396                     	;# 
  1360  039A                     	;# 
  1361  039C                     	;# 
  1362  039D                     	;# 
  1363  039E                     	;# 
  1364  039F                     	;# 
  1365  0415                     	;# 
  1366  0416                     	;# 
  1367  0417                     	;# 
  1368  041C                     	;# 
  1369  041D                     	;# 
  1370  041E                     	;# 
  1371  0FE4                     	;# 
  1372  0FE5                     	;# 
  1373  0FE6                     	;# 
  1374  0FE7                     	;# 
  1375  0FE8                     	;# 
  1376  0FE9                     	;# 
  1377  0FEA                     	;# 
  1378  0FEB                     	;# 
  1379  0FED                     	;# 
  1380  0FEE                     	;# 
  1381  0FEF                     	;# 
  1382  0000                     	;# 
  1383  0001                     	;# 
  1384  0002                     	;# 
  1385  0003                     	;# 
  1386  0004                     	;# 
  1387  0005                     	;# 
  1388  0006                     	;# 
  1389  0007                     	;# 
  1390  0008                     	;# 
  1391  0009                     	;# 
  1392  000A                     	;# 
  1393  000B                     	;# 
  1394  000C                     	;# 
  1395  000D                     	;# 
  1396  0011                     	;# 
  1397  0012                     	;# 
  1398  0013                     	;# 
  1399  0014                     	;# 
  1400  0015                     	;# 
  1401  0016                     	;# 
  1402  0016                     	;# 
  1403  0017                     	;# 
  1404  0018                     	;# 
  1405  0019                     	;# 
  1406  001A                     	;# 
  1407  001B                     	;# 
  1408  001C                     	;# 
  1409  001E                     	;# 
  1410  001F                     	;# 
  1411  008C                     	;# 
  1412  008D                     	;# 
  1413  0091                     	;# 
  1414  0092                     	;# 
  1415  0093                     	;# 
  1416  0094                     	;# 
  1417  0095                     	;# 
  1418  0096                     	;# 
  1419  0097                     	;# 
  1420  0098                     	;# 
  1421  0099                     	;# 
  1422  009A                     	;# 
  1423  009B                     	;# 
  1424  009B                     	;# 
  1425  009C                     	;# 
  1426  009D                     	;# 
  1427  009E                     	;# 
  1428  010C                     	;# 
  1429  010D                     	;# 
  1430  0111                     	;# 
  1431  0112                     	;# 
  1432  0113                     	;# 
  1433  0114                     	;# 
  1434  0115                     	;# 
  1435  0116                     	;# 
  1436  0117                     	;# 
  1437  0118                     	;# 
  1438  0119                     	;# 
  1439  011A                     	;# 
  1440  011B                     	;# 
  1441  011D                     	;# 
  1442  011E                     	;# 
  1443  018C                     	;# 
  1444  018D                     	;# 
  1445  0191                     	;# 
  1446  0191                     	;# 
  1447  0192                     	;# 
  1448  0193                     	;# 
  1449  0193                     	;# 
  1450  0193                     	;# 
  1451  0194                     	;# 
  1452  0195                     	;# 
  1453  0196                     	;# 
  1454  0199                     	;# 
  1455  019A                     	;# 
  1456  019B                     	;# 
  1457  019B                     	;# 
  1458  019B                     	;# 
  1459  019B                     	;# 
  1460  019C                     	;# 
  1461  019C                     	;# 
  1462  019D                     	;# 
  1463  019E                     	;# 
  1464  019F                     	;# 
  1465  020C                     	;# 
  1466  020D                     	;# 
  1467  0211                     	;# 
  1468  0211                     	;# 
  1469  0212                     	;# 
  1470  0212                     	;# 
  1471  0213                     	;# 
  1472  0213                     	;# 
  1473  0214                     	;# 
  1474  0214                     	;# 
  1475  0215                     	;# 
  1476  0215                     	;# 
  1477  0215                     	;# 
  1478  0216                     	;# 
  1479  0216                     	;# 
  1480  0217                     	;# 
  1481  0217                     	;# 
  1482  0219                     	;# 
  1483  021A                     	;# 
  1484  021B                     	;# 
  1485  021C                     	;# 
  1486  021D                     	;# 
  1487  021E                     	;# 
  1488  021F                     	;# 
  1489  0291                     	;# 
  1490  0291                     	;# 
  1491  0292                     	;# 
  1492  0293                     	;# 
  1493  0294                     	;# 
  1494  0295                     	;# 
  1495  0295                     	;# 
  1496  0296                     	;# 
  1497  0298                     	;# 
  1498  0298                     	;# 
  1499  0299                     	;# 
  1500  029A                     	;# 
  1501  029B                     	;# 
  1502  029C                     	;# 
  1503  029C                     	;# 
  1504  029D                     	;# 
  1505  029E                     	;# 
  1506  029E                     	;# 
  1507  0311                     	;# 
  1508  0311                     	;# 
  1509  0312                     	;# 
  1510  0313                     	;# 
  1511  0318                     	;# 
  1512  0318                     	;# 
  1513  0319                     	;# 
  1514  031A                     	;# 
  1515  0394                     	;# 
  1516  0395                     	;# 
  1517  0396                     	;# 
  1518  039A                     	;# 
  1519  039C                     	;# 
  1520  039D                     	;# 
  1521  039E                     	;# 
  1522  039F                     	;# 
  1523  0415                     	;# 
  1524  0416                     	;# 
  1525  0417                     	;# 
  1526  041C                     	;# 
  1527  041D                     	;# 
  1528  041E                     	;# 
  1529  0FE4                     	;# 
  1530  0FE5                     	;# 
  1531  0FE6                     	;# 
  1532  0FE7                     	;# 
  1533  0FE8                     	;# 
  1534  0FE9                     	;# 
  1535  0FEA                     	;# 
  1536  0FEB                     	;# 
  1537  0FED                     	;# 
  1538  0FEE                     	;# 
  1539  0FEF                     	;# 
  1540  0000                     	;# 
  1541  0001                     	;# 
  1542  0002                     	;# 
  1543  0003                     	;# 
  1544  0004                     	;# 
  1545  0005                     	;# 
  1546  0006                     	;# 
  1547  0007                     	;# 
  1548  0008                     	;# 
  1549  0009                     	;# 
  1550  000A                     	;# 
  1551  000B                     	;# 
  1552  000C                     	;# 
  1553  000D                     	;# 
  1554  0011                     	;# 
  1555  0012                     	;# 
  1556  0013                     	;# 
  1557  0014                     	;# 
  1558  0015                     	;# 
  1559  0016                     	;# 
  1560  0016                     	;# 
  1561  0017                     	;# 
  1562  0018                     	;# 
  1563  0019                     	;# 
  1564  001A                     	;# 
  1565  001B                     	;# 
  1566  001C                     	;# 
  1567  001E                     	;# 
  1568  001F                     	;# 
  1569  008C                     	;# 
  1570  008D                     	;# 
  1571  0091                     	;# 
  1572  0092                     	;# 
  1573  0093                     	;# 
  1574  0094                     	;# 
  1575  0095                     	;# 
  1576  0096                     	;# 
  1577  0097                     	;# 
  1578  0098                     	;# 
  1579  0099                     	;# 
  1580  009A                     	;# 
  1581  009B                     	;# 
  1582  009B                     	;# 
  1583  009C                     	;# 
  1584  009D                     	;# 
  1585  009E                     	;# 
  1586  010C                     	;# 
  1587  010D                     	;# 
  1588  0111                     	;# 
  1589  0112                     	;# 
  1590  0113                     	;# 
  1591  0114                     	;# 
  1592  0115                     	;# 
  1593  0116                     	;# 
  1594  0117                     	;# 
  1595  0118                     	;# 
  1596  0119                     	;# 
  1597  011A                     	;# 
  1598  011B                     	;# 
  1599  011D                     	;# 
  1600  011E                     	;# 
  1601  018C                     	;# 
  1602  018D                     	;# 
  1603  0191                     	;# 
  1604  0191                     	;# 
  1605  0192                     	;# 
  1606  0193                     	;# 
  1607  0193                     	;# 
  1608  0193                     	;# 
  1609  0194                     	;# 
  1610  0195                     	;# 
  1611  0196                     	;# 
  1612  0199                     	;# 
  1613  019A                     	;# 
  1614  019B                     	;# 
  1615  019B                     	;# 
  1616  019B                     	;# 
  1617  019B                     	;# 
  1618  019C                     	;# 
  1619  019C                     	;# 
  1620  019D                     	;# 
  1621  019E                     	;# 
  1622  019F                     	;# 
  1623  020C                     	;# 
  1624  020D                     	;# 
  1625  0211                     	;# 
  1626  0211                     	;# 
  1627  0212                     	;# 
  1628  0212                     	;# 
  1629  0213                     	;# 
  1630  0213                     	;# 
  1631  0214                     	;# 
  1632  0214                     	;# 
  1633  0215                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0216                     	;# 
  1637  0216                     	;# 
  1638  0217                     	;# 
  1639  0217                     	;# 
  1640  0219                     	;# 
  1641  021A                     	;# 
  1642  021B                     	;# 
  1643  021C                     	;# 
  1644  021D                     	;# 
  1645  021E                     	;# 
  1646  021F                     	;# 
  1647  0291                     	;# 
  1648  0291                     	;# 
  1649  0292                     	;# 
  1650  0293                     	;# 
  1651  0294                     	;# 
  1652  0295                     	;# 
  1653  0295                     	;# 
  1654  0296                     	;# 
  1655  0298                     	;# 
  1656  0298                     	;# 
  1657  0299                     	;# 
  1658  029A                     	;# 
  1659  029B                     	;# 
  1660  029C                     	;# 
  1661  029C                     	;# 
  1662  029D                     	;# 
  1663  029E                     	;# 
  1664  029E                     	;# 
  1665  0311                     	;# 
  1666  0311                     	;# 
  1667  0312                     	;# 
  1668  0313                     	;# 
  1669  0318                     	;# 
  1670  0318                     	;# 
  1671  0319                     	;# 
  1672  031A                     	;# 
  1673  0394                     	;# 
  1674  0395                     	;# 
  1675  0396                     	;# 
  1676  039A                     	;# 
  1677  039C                     	;# 
  1678  039D                     	;# 
  1679  039E                     	;# 
  1680  039F                     	;# 
  1681  0415                     	;# 
  1682  0416                     	;# 
  1683  0417                     	;# 
  1684  041C                     	;# 
  1685  041D                     	;# 
  1686  041E                     	;# 
  1687  0FE4                     	;# 
  1688  0FE5                     	;# 
  1689  0FE6                     	;# 
  1690  0FE7                     	;# 
  1691  0FE8                     	;# 
  1692  0FE9                     	;# 
  1693  0FEA                     	;# 
  1694  0FEB                     	;# 
  1695  0FED                     	;# 
  1696  0FEE                     	;# 
  1697  0FEF                     	;# 
  1698  0000                     	;# 
  1699  0001                     	;# 
  1700  0002                     	;# 
  1701  0003                     	;# 
  1702  0004                     	;# 
  1703  0005                     	;# 
  1704  0006                     	;# 
  1705  0007                     	;# 
  1706  0008                     	;# 
  1707  0009                     	;# 
  1708  000A                     	;# 
  1709  000B                     	;# 
  1710  000C                     	;# 
  1711  000D                     	;# 
  1712  0011                     	;# 
  1713  0012                     	;# 
  1714  0013                     	;# 
  1715  0014                     	;# 
  1716  0015                     	;# 
  1717  0016                     	;# 
  1718  0016                     	;# 
  1719  0017                     	;# 
  1720  0018                     	;# 
  1721  0019                     	;# 
  1722  001A                     	;# 
  1723  001B                     	;# 
  1724  001C                     	;# 
  1725  001E                     	;# 
  1726  001F                     	;# 
  1727  008C                     	;# 
  1728  008D                     	;# 
  1729  0091                     	;# 
  1730  0092                     	;# 
  1731  0093                     	;# 
  1732  0094                     	;# 
  1733  0095                     	;# 
  1734  0096                     	;# 
  1735  0097                     	;# 
  1736  0098                     	;# 
  1737  0099                     	;# 
  1738  009A                     	;# 
  1739  009B                     	;# 
  1740  009B                     	;# 
  1741  009C                     	;# 
  1742  009D                     	;# 
  1743  009E                     	;# 
  1744  010C                     	;# 
  1745  010D                     	;# 
  1746  0111                     	;# 
  1747  0112                     	;# 
  1748  0113                     	;# 
  1749  0114                     	;# 
  1750  0115                     	;# 
  1751  0116                     	;# 
  1752  0117                     	;# 
  1753  0118                     	;# 
  1754  0119                     	;# 
  1755  011A                     	;# 
  1756  011B                     	;# 
  1757  011D                     	;# 
  1758  011E                     	;# 
  1759  018C                     	;# 
  1760  018D                     	;# 
  1761  0191                     	;# 
  1762  0191                     	;# 
  1763  0192                     	;# 
  1764  0193                     	;# 
  1765  0193                     	;# 
  1766  0193                     	;# 
  1767  0194                     	;# 
  1768  0195                     	;# 
  1769  0196                     	;# 
  1770  0199                     	;# 
  1771  019A                     	;# 
  1772  019B                     	;# 
  1773  019B                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019C                     	;# 
  1777  019C                     	;# 
  1778  019D                     	;# 
  1779  019E                     	;# 
  1780  019F                     	;# 
  1781  020C                     	;# 
  1782  020D                     	;# 
  1783  0211                     	;# 
  1784  0211                     	;# 
  1785  0212                     	;# 
  1786  0212                     	;# 
  1787  0213                     	;# 
  1788  0213                     	;# 
  1789  0214                     	;# 
  1790  0214                     	;# 
  1791  0215                     	;# 
  1792  0215                     	;# 
  1793  0215                     	;# 
  1794  0216                     	;# 
  1795  0216                     	;# 
  1796  0217                     	;# 
  1797  0217                     	;# 
  1798  0219                     	;# 
  1799  021A                     	;# 
  1800  021B                     	;# 
  1801  021C                     	;# 
  1802  021D                     	;# 
  1803  021E                     	;# 
  1804  021F                     	;# 
  1805  0291                     	;# 
  1806  0291                     	;# 
  1807  0292                     	;# 
  1808  0293                     	;# 
  1809  0294                     	;# 
  1810  0295                     	;# 
  1811  0295                     	;# 
  1812  0296                     	;# 
  1813  0298                     	;# 
  1814  0298                     	;# 
  1815  0299                     	;# 
  1816  029A                     	;# 
  1817  029B                     	;# 
  1818  029C                     	;# 
  1819  029C                     	;# 
  1820  029D                     	;# 
  1821  029E                     	;# 
  1822  029E                     	;# 
  1823  0311                     	;# 
  1824  0311                     	;# 
  1825  0312                     	;# 
  1826  0313                     	;# 
  1827  0318                     	;# 
  1828  0318                     	;# 
  1829  0319                     	;# 
  1830  031A                     	;# 
  1831  0394                     	;# 
  1832  0395                     	;# 
  1833  0396                     	;# 
  1834  039A                     	;# 
  1835  039C                     	;# 
  1836  039D                     	;# 
  1837  039E                     	;# 
  1838  039F                     	;# 
  1839  0415                     	;# 
  1840  0416                     	;# 
  1841  0417                     	;# 
  1842  041C                     	;# 
  1843  041D                     	;# 
  1844  041E                     	;# 
  1845  0FE4                     	;# 
  1846  0FE5                     	;# 
  1847  0FE6                     	;# 
  1848  0FE7                     	;# 
  1849  0FE8                     	;# 
  1850  0FE9                     	;# 
  1851  0FEA                     	;# 
  1852  0FEB                     	;# 
  1853  0FED                     	;# 
  1854  0FEE                     	;# 
  1855  0FEF                     	;# 
  1856  0000                     	;# 
  1857  0001                     	;# 
  1858  0002                     	;# 
  1859  0003                     	;# 
  1860  0004                     	;# 
  1861  0005                     	;# 
  1862  0006                     	;# 
  1863  0007                     	;# 
  1864  0008                     	;# 
  1865  0009                     	;# 
  1866  000A                     	;# 
  1867  000B                     	;# 
  1868  000C                     	;# 
  1869  000D                     	;# 
  1870  0011                     	;# 
  1871  0012                     	;# 
  1872  0013                     	;# 
  1873  0014                     	;# 
  1874  0015                     	;# 
  1875  0016                     	;# 
  1876  0016                     	;# 
  1877  0017                     	;# 
  1878  0018                     	;# 
  1879  0019                     	;# 
  1880  001A                     	;# 
  1881  001B                     	;# 
  1882  001C                     	;# 
  1883  001E                     	;# 
  1884  001F                     	;# 
  1885  008C                     	;# 
  1886  008D                     	;# 
  1887  0091                     	;# 
  1888  0092                     	;# 
  1889  0093                     	;# 
  1890  0094                     	;# 
  1891  0095                     	;# 
  1892  0096                     	;# 
  1893  0097                     	;# 
  1894  0098                     	;# 
  1895  0099                     	;# 
  1896  009A                     	;# 
  1897  009B                     	;# 
  1898  009B                     	;# 
  1899  009C                     	;# 
  1900  009D                     	;# 
  1901  009E                     	;# 
  1902  010C                     	;# 
  1903  010D                     	;# 
  1904  0111                     	;# 
  1905  0112                     	;# 
  1906  0113                     	;# 
  1907  0114                     	;# 
  1908  0115                     	;# 
  1909  0116                     	;# 
  1910  0117                     	;# 
  1911  0118                     	;# 
  1912  0119                     	;# 
  1913  011A                     	;# 
  1914  011B                     	;# 
  1915  011D                     	;# 
  1916  011E                     	;# 
  1917  018C                     	;# 
  1918  018D                     	;# 
  1919  0191                     	;# 
  1920  0191                     	;# 
  1921  0192                     	;# 
  1922  0193                     	;# 
  1923  0193                     	;# 
  1924  0193                     	;# 
  1925  0194                     	;# 
  1926  0195                     	;# 
  1927  0196                     	;# 
  1928  0199                     	;# 
  1929  019A                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019B                     	;# 
  1933  019B                     	;# 
  1934  019C                     	;# 
  1935  019C                     	;# 
  1936  019D                     	;# 
  1937  019E                     	;# 
  1938  019F                     	;# 
  1939  020C                     	;# 
  1940  020D                     	;# 
  1941  0211                     	;# 
  1942  0211                     	;# 
  1943  0212                     	;# 
  1944  0212                     	;# 
  1945  0213                     	;# 
  1946  0213                     	;# 
  1947  0214                     	;# 
  1948  0214                     	;# 
  1949  0215                     	;# 
  1950  0215                     	;# 
  1951  0215                     	;# 
  1952  0216                     	;# 
  1953  0216                     	;# 
  1954  0217                     	;# 
  1955  0217                     	;# 
  1956  0219                     	;# 
  1957  021A                     	;# 
  1958  021B                     	;# 
  1959  021C                     	;# 
  1960  021D                     	;# 
  1961  021E                     	;# 
  1962  021F                     	;# 
  1963  0291                     	;# 
  1964  0291                     	;# 
  1965  0292                     	;# 
  1966  0293                     	;# 
  1967  0294                     	;# 
  1968  0295                     	;# 
  1969  0295                     	;# 
  1970  0296                     	;# 
  1971  0298                     	;# 
  1972  0298                     	;# 
  1973  0299                     	;# 
  1974  029A                     	;# 
  1975  029B                     	;# 
  1976  029C                     	;# 
  1977  029C                     	;# 
  1978  029D                     	;# 
  1979  029E                     	;# 
  1980  029E                     	;# 
  1981  0311                     	;# 
  1982  0311                     	;# 
  1983  0312                     	;# 
  1984  0313                     	;# 
  1985  0318                     	;# 
  1986  0318                     	;# 
  1987  0319                     	;# 
  1988  031A                     	;# 
  1989  0394                     	;# 
  1990  0395                     	;# 
  1991  0396                     	;# 
  1992  039A                     	;# 
  1993  039C                     	;# 
  1994  039D                     	;# 
  1995  039E                     	;# 
  1996  039F                     	;# 
  1997  0415                     	;# 
  1998  0416                     	;# 
  1999  0417                     	;# 
  2000  041C                     	;# 
  2001  041D                     	;# 
  2002  041E                     	;# 
  2003  0FE4                     	;# 
  2004  0FE5                     	;# 
  2005  0FE6                     	;# 
  2006  0FE7                     	;# 
  2007  0FE8                     	;# 
  2008  0FE9                     	;# 
  2009  0FEA                     	;# 
  2010  0FEB                     	;# 
  2011  0FED                     	;# 
  2012  0FEE                     	;# 
  2013  0FEF                     	;# 
  2014  0000                     	;# 
  2015  0001                     	;# 
  2016  0002                     	;# 
  2017  0003                     	;# 
  2018  0004                     	;# 
  2019  0005                     	;# 
  2020  0006                     	;# 
  2021  0007                     	;# 
  2022  0008                     	;# 
  2023  0009                     	;# 
  2024  000A                     	;# 
  2025  000B                     	;# 
  2026  000C                     	;# 
  2027  000D                     	;# 
  2028  0011                     	;# 
  2029  0012                     	;# 
  2030  0013                     	;# 
  2031  0014                     	;# 
  2032  0015                     	;# 
  2033  0016                     	;# 
  2034  0016                     	;# 
  2035  0017                     	;# 
  2036  0018                     	;# 
  2037  0019                     	;# 
  2038  001A                     	;# 
  2039  001B                     	;# 
  2040  001C                     	;# 
  2041  001E                     	;# 
  2042  001F                     	;# 
  2043  008C                     	;# 
  2044  008D                     	;# 
  2045  0091                     	;# 
  2046  0092                     	;# 
  2047  0093                     	;# 
  2048  0094                     	;# 
  2049  0095                     	;# 
  2050  0096                     	;# 
  2051  0097                     	;# 
  2052  0098                     	;# 
  2053  0099                     	;# 
  2054  009A                     	;# 
  2055  009B                     	;# 
  2056  009B                     	;# 
  2057  009C                     	;# 
  2058  009D                     	;# 
  2059  009E                     	;# 
  2060  010C                     	;# 
  2061  010D                     	;# 
  2062  0111                     	;# 
  2063  0112                     	;# 
  2064  0113                     	;# 
  2065  0114                     	;# 
  2066  0115                     	;# 
  2067  0116                     	;# 
  2068  0117                     	;# 
  2069  0118                     	;# 
  2070  0119                     	;# 
  2071  011A                     	;# 
  2072  011B                     	;# 
  2073  011D                     	;# 
  2074  011E                     	;# 
  2075  018C                     	;# 
  2076  018D                     	;# 
  2077  0191                     	;# 
  2078  0191                     	;# 
  2079  0192                     	;# 
  2080  0193                     	;# 
  2081  0193                     	;# 
  2082  0193                     	;# 
  2083  0194                     	;# 
  2084  0195                     	;# 
  2085  0196                     	;# 
  2086  0199                     	;# 
  2087  019A                     	;# 
  2088  019B                     	;# 
  2089  019B                     	;# 
  2090  019B                     	;# 
  2091  019B                     	;# 
  2092  019C                     	;# 
  2093  019C                     	;# 
  2094  019D                     	;# 
  2095  019E                     	;# 
  2096  019F                     	;# 
  2097  020C                     	;# 
  2098  020D                     	;# 
  2099  0211                     	;# 
  2100  0211                     	;# 
  2101  0212                     	;# 
  2102  0212                     	;# 
  2103  0213                     	;# 
  2104  0213                     	;# 
  2105  0214                     	;# 
  2106  0214                     	;# 
  2107  0215                     	;# 
  2108  0215                     	;# 
  2109  0215                     	;# 
  2110  0216                     	;# 
  2111  0216                     	;# 
  2112  0217                     	;# 
  2113  0217                     	;# 
  2114  0219                     	;# 
  2115  021A                     	;# 
  2116  021B                     	;# 
  2117  021C                     	;# 
  2118  021D                     	;# 
  2119  021E                     	;# 
  2120  021F                     	;# 
  2121  0291                     	;# 
  2122  0291                     	;# 
  2123  0292                     	;# 
  2124  0293                     	;# 
  2125  0294                     	;# 
  2126  0295                     	;# 
  2127  0295                     	;# 
  2128  0296                     	;# 
  2129  0298                     	;# 
  2130  0298                     	;# 
  2131  0299                     	;# 
  2132  029A                     	;# 
  2133  029B                     	;# 
  2134  029C                     	;# 
  2135  029C                     	;# 
  2136  029D                     	;# 
  2137  029E                     	;# 
  2138  029E                     	;# 
  2139  0311                     	;# 
  2140  0311                     	;# 
  2141  0312                     	;# 
  2142  0313                     	;# 
  2143  0318                     	;# 
  2144  0318                     	;# 
  2145  0319                     	;# 
  2146  031A                     	;# 
  2147  0394                     	;# 
  2148  0395                     	;# 
  2149  0396                     	;# 
  2150  039A                     	;# 
  2151  039C                     	;# 
  2152  039D                     	;# 
  2153  039E                     	;# 
  2154  039F                     	;# 
  2155  0415                     	;# 
  2156  0416                     	;# 
  2157  0417                     	;# 
  2158  041C                     	;# 
  2159  041D                     	;# 
  2160  041E                     	;# 
  2161  0FE4                     	;# 
  2162  0FE5                     	;# 
  2163  0FE6                     	;# 
  2164  0FE7                     	;# 
  2165  0FE8                     	;# 
  2166  0FE9                     	;# 
  2167  0FEA                     	;# 
  2168  0FEB                     	;# 
  2169  0FED                     	;# 
  2170  0FEE                     	;# 
  2171  0FEF                     	;# 
  2172  0000                     	;# 
  2173  0001                     	;# 
  2174  0002                     	;# 
  2175  0003                     	;# 
  2176  0004                     	;# 
  2177  0005                     	;# 
  2178  0006                     	;# 
  2179  0007                     	;# 
  2180  0008                     	;# 
  2181  0009                     	;# 
  2182  000A                     	;# 
  2183  000B                     	;# 
  2184  000C                     	;# 
  2185  000D                     	;# 
  2186  0011                     	;# 
  2187  0012                     	;# 
  2188  0013                     	;# 
  2189  0014                     	;# 
  2190  0015                     	;# 
  2191  0016                     	;# 
  2192  0016                     	;# 
  2193  0017                     	;# 
  2194  0018                     	;# 
  2195  0019                     	;# 
  2196  001A                     	;# 
  2197  001B                     	;# 
  2198  001C                     	;# 
  2199  001E                     	;# 
  2200  001F                     	;# 
  2201  008C                     	;# 
  2202  008D                     	;# 
  2203  0091                     	;# 
  2204  0092                     	;# 
  2205  0093                     	;# 
  2206  0094                     	;# 
  2207  0095                     	;# 
  2208  0096                     	;# 
  2209  0097                     	;# 
  2210  0098                     	;# 
  2211  0099                     	;# 
  2212  009A                     	;# 
  2213  009B                     	;# 
  2214  009B                     	;# 
  2215  009C                     	;# 
  2216  009D                     	;# 
  2217  009E                     	;# 
  2218  010C                     	;# 
  2219  010D                     	;# 
  2220  0111                     	;# 
  2221  0112                     	;# 
  2222  0113                     	;# 
  2223  0114                     	;# 
  2224  0115                     	;# 
  2225  0116                     	;# 
  2226  0117                     	;# 
  2227  0118                     	;# 
  2228  0119                     	;# 
  2229  011A                     	;# 
  2230  011B                     	;# 
  2231  011D                     	;# 
  2232  011E                     	;# 
  2233  018C                     	;# 
  2234  018D                     	;# 
  2235  0191                     	;# 
  2236  0191                     	;# 
  2237  0192                     	;# 
  2238  0193                     	;# 
  2239  0193                     	;# 
  2240  0193                     	;# 
  2241  0194                     	;# 
  2242  0195                     	;# 
  2243  0196                     	;# 
  2244  0199                     	;# 
  2245  019A                     	;# 
  2246  019B                     	;# 
  2247  019B                     	;# 
  2248  019B                     	;# 
  2249  019B                     	;# 
  2250  019C                     	;# 
  2251  019C                     	;# 
  2252  019D                     	;# 
  2253  019E                     	;# 
  2254  019F                     	;# 
  2255  020C                     	;# 
  2256  020D                     	;# 
  2257  0211                     	;# 
  2258  0211                     	;# 
  2259  0212                     	;# 
  2260  0212                     	;# 
  2261  0213                     	;# 
  2262  0213                     	;# 
  2263  0214                     	;# 
  2264  0214                     	;# 
  2265  0215                     	;# 
  2266  0215                     	;# 
  2267  0215                     	;# 
  2268  0216                     	;# 
  2269  0216                     	;# 
  2270  0217                     	;# 
  2271  0217                     	;# 
  2272  0219                     	;# 
  2273  021A                     	;# 
  2274  021B                     	;# 
  2275  021C                     	;# 
  2276  021D                     	;# 
  2277  021E                     	;# 
  2278  021F                     	;# 
  2279  0291                     	;# 
  2280  0291                     	;# 
  2281  0292                     	;# 
  2282  0293                     	;# 
  2283  0294                     	;# 
  2284  0295                     	;# 
  2285  0295                     	;# 
  2286  0296                     	;# 
  2287  0298                     	;# 
  2288  0298                     	;# 
  2289  0299                     	;# 
  2290  029A                     	;# 
  2291  029B                     	;# 
  2292  029C                     	;# 
  2293  029C                     	;# 
  2294  029D                     	;# 
  2295  029E                     	;# 
  2296  029E                     	;# 
  2297  0311                     	;# 
  2298  0311                     	;# 
  2299  0312                     	;# 
  2300  0313                     	;# 
  2301  0318                     	;# 
  2302  0318                     	;# 
  2303  0319                     	;# 
  2304  031A                     	;# 
  2305  0394                     	;# 
  2306  0395                     	;# 
  2307  0396                     	;# 
  2308  039A                     	;# 
  2309  039C                     	;# 
  2310  039D                     	;# 
  2311  039E                     	;# 
  2312  039F                     	;# 
  2313  0415                     	;# 
  2314  0416                     	;# 
  2315  0417                     	;# 
  2316  041C                     	;# 
  2317  041D                     	;# 
  2318  041E                     	;# 
  2319  0FE4                     	;# 
  2320  0FE5                     	;# 
  2321  0FE6                     	;# 
  2322  0FE7                     	;# 
  2323  0FE8                     	;# 
  2324  0FE9                     	;# 
  2325  0FEA                     	;# 
  2326  0FEB                     	;# 
  2327  0FED                     	;# 
  2328  0FEE                     	;# 
  2329  0FEF                     	;# 
  2330  0000                     	;# 
  2331  0001                     	;# 
  2332  0002                     	;# 
  2333  0003                     	;# 
  2334  0004                     	;# 
  2335  0005                     	;# 
  2336  0006                     	;# 
  2337  0007                     	;# 
  2338  0008                     	;# 
  2339  0009                     	;# 
  2340  000A                     	;# 
  2341  000B                     	;# 
  2342  000C                     	;# 
  2343  000D                     	;# 
  2344  0011                     	;# 
  2345  0012                     	;# 
  2346  0013                     	;# 
  2347  0014                     	;# 
  2348  0015                     	;# 
  2349  0016                     	;# 
  2350  0016                     	;# 
  2351  0017                     	;# 
  2352  0018                     	;# 
  2353  0019                     	;# 
  2354  001A                     	;# 
  2355  001B                     	;# 
  2356  001C                     	;# 
  2357  001E                     	;# 
  2358  001F                     	;# 
  2359  008C                     	;# 
  2360  008D                     	;# 
  2361  0091                     	;# 
  2362  0092                     	;# 
  2363  0093                     	;# 
  2364  0094                     	;# 
  2365  0095                     	;# 
  2366  0096                     	;# 
  2367  0097                     	;# 
  2368  0098                     	;# 
  2369  0099                     	;# 
  2370  009A                     	;# 
  2371  009B                     	;# 
  2372  009B                     	;# 
  2373  009C                     	;# 
  2374  009D                     	;# 
  2375  009E                     	;# 
  2376  010C                     	;# 
  2377  010D                     	;# 
  2378  0111                     	;# 
  2379  0112                     	;# 
  2380  0113                     	;# 
  2381  0114                     	;# 
  2382  0115                     	;# 
  2383  0116                     	;# 
  2384  0117                     	;# 
  2385  0118                     	;# 
  2386  0119                     	;# 
  2387  011A                     	;# 
  2388  011B                     	;# 
  2389  011D                     	;# 
  2390  011E                     	;# 
  2391  018C                     	;# 
  2392  018D                     	;# 
  2393  0191                     	;# 
  2394  0191                     	;# 
  2395  0192                     	;# 
  2396  0193                     	;# 
  2397  0193                     	;# 
  2398  0193                     	;# 
  2399  0194                     	;# 
  2400  0195                     	;# 
  2401  0196                     	;# 
  2402  0199                     	;# 
  2403  019A                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019C                     	;# 
  2409  019C                     	;# 
  2410  019D                     	;# 
  2411  019E                     	;# 
  2412  019F                     	;# 
  2413  020C                     	;# 
  2414  020D                     	;# 
  2415  0211                     	;# 
  2416  0211                     	;# 
  2417  0212                     	;# 
  2418  0212                     	;# 
  2419  0213                     	;# 
  2420  0213                     	;# 
  2421  0214                     	;# 
  2422  0214                     	;# 
  2423  0215                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0216                     	;# 
  2427  0216                     	;# 
  2428  0217                     	;# 
  2429  0217                     	;# 
  2430  0219                     	;# 
  2431  021A                     	;# 
  2432  021B                     	;# 
  2433  021C                     	;# 
  2434  021D                     	;# 
  2435  021E                     	;# 
  2436  021F                     	;# 
  2437  0291                     	;# 
  2438  0291                     	;# 
  2439  0292                     	;# 
  2440  0293                     	;# 
  2441  0294                     	;# 
  2442  0295                     	;# 
  2443  0295                     	;# 
  2444  0296                     	;# 
  2445  0298                     	;# 
  2446  0298                     	;# 
  2447  0299                     	;# 
  2448  029A                     	;# 
  2449  029B                     	;# 
  2450  029C                     	;# 
  2451  029C                     	;# 
  2452  029D                     	;# 
  2453  029E                     	;# 
  2454  029E                     	;# 
  2455  0311                     	;# 
  2456  0311                     	;# 
  2457  0312                     	;# 
  2458  0313                     	;# 
  2459  0318                     	;# 
  2460  0318                     	;# 
  2461  0319                     	;# 
  2462  031A                     	;# 
  2463  0394                     	;# 
  2464  0395                     	;# 
  2465  0396                     	;# 
  2466  039A                     	;# 
  2467  039C                     	;# 
  2468  039D                     	;# 
  2469  039E                     	;# 
  2470  039F                     	;# 
  2471  0415                     	;# 
  2472  0416                     	;# 
  2473  0417                     	;# 
  2474  041C                     	;# 
  2475  041D                     	;# 
  2476  041E                     	;# 
  2477  0FE4                     	;# 
  2478  0FE5                     	;# 
  2479  0FE6                     	;# 
  2480  0FE7                     	;# 
  2481  0FE8                     	;# 
  2482  0FE9                     	;# 
  2483  0FEA                     	;# 
  2484  0FEB                     	;# 
  2485  0FED                     	;# 
  2486  0FEE                     	;# 
  2487  0FEF                     	;# 
  2488  0000                     	;# 
  2489  0001                     	;# 
  2490  0002                     	;# 
  2491  0003                     	;# 
  2492  0004                     	;# 
  2493  0005                     	;# 
  2494  0006                     	;# 
  2495  0007                     	;# 
  2496  0008                     	;# 
  2497  0009                     	;# 
  2498  000A                     	;# 
  2499  000B                     	;# 
  2500  000C                     	;# 
  2501  000D                     	;# 
  2502  0011                     	;# 
  2503  0012                     	;# 
  2504  0013                     	;# 
  2505  0014                     	;# 
  2506  0015                     	;# 
  2507  0016                     	;# 
  2508  0016                     	;# 
  2509  0017                     	;# 
  2510  0018                     	;# 
  2511  0019                     	;# 
  2512  001A                     	;# 
  2513  001B                     	;# 
  2514  001C                     	;# 
  2515  001E                     	;# 
  2516  001F                     	;# 
  2517  008C                     	;# 
  2518  008D                     	;# 
  2519  0091                     	;# 
  2520  0092                     	;# 
  2521  0093                     	;# 
  2522  0094                     	;# 
  2523  0095                     	;# 
  2524  0096                     	;# 
  2525  0097                     	;# 
  2526  0098                     	;# 
  2527  0099                     	;# 
  2528  009A                     	;# 
  2529  009B                     	;# 
  2530  009B                     	;# 
  2531  009C                     	;# 
  2532  009D                     	;# 
  2533  009E                     	;# 
  2534  010C                     	;# 
  2535  010D                     	;# 
  2536  0111                     	;# 
  2537  0112                     	;# 
  2538  0113                     	;# 
  2539  0114                     	;# 
  2540  0115                     	;# 
  2541  0116                     	;# 
  2542  0117                     	;# 
  2543  0118                     	;# 
  2544  0119                     	;# 
  2545  011A                     	;# 
  2546  011B                     	;# 
  2547  011D                     	;# 
  2548  011E                     	;# 
  2549  018C                     	;# 
  2550  018D                     	;# 
  2551  0191                     	;# 
  2552  0191                     	;# 
  2553  0192                     	;# 
  2554  0193                     	;# 
  2555  0193                     	;# 
  2556  0193                     	;# 
  2557  0194                     	;# 
  2558  0195                     	;# 
  2559  0196                     	;# 
  2560  0199                     	;# 
  2561  019A                     	;# 
  2562  019B                     	;# 
  2563  019B                     	;# 
  2564  019B                     	;# 
  2565  019B                     	;# 
  2566  019C                     	;# 
  2567  019C                     	;# 
  2568  019D                     	;# 
  2569  019E                     	;# 
  2570  019F                     	;# 
  2571  020C                     	;# 
  2572  020D                     	;# 
  2573  0211                     	;# 
  2574  0211                     	;# 
  2575  0212                     	;# 
  2576  0212                     	;# 
  2577  0213                     	;# 
  2578  0213                     	;# 
  2579  0214                     	;# 
  2580  0214                     	;# 
  2581  0215                     	;# 
  2582  0215                     	;# 
  2583  0215                     	;# 
  2584  0216                     	;# 
  2585  0216                     	;# 
  2586  0217                     	;# 
  2587  0217                     	;# 
  2588  0219                     	;# 
  2589  021A                     	;# 
  2590  021B                     	;# 
  2591  021C                     	;# 
  2592  021D                     	;# 
  2593  021E                     	;# 
  2594  021F                     	;# 
  2595  0291                     	;# 
  2596  0291                     	;# 
  2597  0292                     	;# 
  2598  0293                     	;# 
  2599  0294                     	;# 
  2600  0295                     	;# 
  2601  0295                     	;# 
  2602  0296                     	;# 
  2603  0298                     	;# 
  2604  0298                     	;# 
  2605  0299                     	;# 
  2606  029A                     	;# 
  2607  029B                     	;# 
  2608  029C                     	;# 
  2609  029C                     	;# 
  2610  029D                     	;# 
  2611  029E                     	;# 
  2612  029E                     	;# 
  2613  0311                     	;# 
  2614  0311                     	;# 
  2615  0312                     	;# 
  2616  0313                     	;# 
  2617  0318                     	;# 
  2618  0318                     	;# 
  2619  0319                     	;# 
  2620  031A                     	;# 
  2621  0394                     	;# 
  2622  0395                     	;# 
  2623  0396                     	;# 
  2624  039A                     	;# 
  2625  039C                     	;# 
  2626  039D                     	;# 
  2627  039E                     	;# 
  2628  039F                     	;# 
  2629  0415                     	;# 
  2630  0416                     	;# 
  2631  0417                     	;# 
  2632  041C                     	;# 
  2633  041D                     	;# 
  2634  041E                     	;# 
  2635  0FE4                     	;# 
  2636  0FE5                     	;# 
  2637  0FE6                     	;# 
  2638  0FE7                     	;# 
  2639  0FE8                     	;# 
  2640  0FE9                     	;# 
  2641  0FEA                     	;# 
  2642  0FEB                     	;# 
  2643  0FED                     	;# 
  2644  0FEE                     	;# 
  2645  0FEF                     	;# 
  2646  0000                     	;# 
  2647  0001                     	;# 
  2648  0002                     	;# 
  2649  0003                     	;# 
  2650  0004                     	;# 
  2651  0005                     	;# 
  2652  0006                     	;# 
  2653  0007                     	;# 
  2654  0008                     	;# 
  2655  0009                     	;# 
  2656  000A                     	;# 
  2657  000B                     	;# 
  2658  000C                     	;# 
  2659  000D                     	;# 
  2660  0011                     	;# 
  2661  0012                     	;# 
  2662  0013                     	;# 
  2663  0014                     	;# 
  2664  0015                     	;# 
  2665  0016                     	;# 
  2666  0016                     	;# 
  2667  0017                     	;# 
  2668  0018                     	;# 
  2669  0019                     	;# 
  2670  001A                     	;# 
  2671  001B                     	;# 
  2672  001C                     	;# 
  2673  001E                     	;# 
  2674  001F                     	;# 
  2675  008C                     	;# 
  2676  008D                     	;# 
  2677  0091                     	;# 
  2678  0092                     	;# 
  2679  0093                     	;# 
  2680  0094                     	;# 
  2681  0095                     	;# 
  2682  0096                     	;# 
  2683  0097                     	;# 
  2684  0098                     	;# 
  2685  0099                     	;# 
  2686  009A                     	;# 
  2687  009B                     	;# 
  2688  009B                     	;# 
  2689  009C                     	;# 
  2690  009D                     	;# 
  2691  009E                     	;# 
  2692  010C                     	;# 
  2693  010D                     	;# 
  2694  0111                     	;# 
  2695  0112                     	;# 
  2696  0113                     	;# 
  2697  0114                     	;# 
  2698  0115                     	;# 
  2699  0116                     	;# 
  2700  0117                     	;# 
  2701  0118                     	;# 
  2702  0119                     	;# 
  2703  011A                     	;# 
  2704  011B                     	;# 
  2705  011D                     	;# 
  2706  011E                     	;# 
  2707  018C                     	;# 
  2708  018D                     	;# 
  2709  0191                     	;# 
  2710  0191                     	;# 
  2711  0192                     	;# 
  2712  0193                     	;# 
  2713  0193                     	;# 
  2714  0193                     	;# 
  2715  0194                     	;# 
  2716  0195                     	;# 
  2717  0196                     	;# 
  2718  0199                     	;# 
  2719  019A                     	;# 
  2720  019B                     	;# 
  2721  019B                     	;# 
  2722  019B                     	;# 
  2723  019B                     	;# 
  2724  019C                     	;# 
  2725  019C                     	;# 
  2726  019D                     	;# 
  2727  019E                     	;# 
  2728  019F                     	;# 
  2729  020C                     	;# 
  2730  020D                     	;# 
  2731  0211                     	;# 
  2732  0211                     	;# 
  2733  0212                     	;# 
  2734  0212                     	;# 
  2735  0213                     	;# 
  2736  0213                     	;# 
  2737  0214                     	;# 
  2738  0214                     	;# 
  2739  0215                     	;# 
  2740  0215                     	;# 
  2741  0215                     	;# 
  2742  0216                     	;# 
  2743  0216                     	;# 
  2744  0217                     	;# 
  2745  0217                     	;# 
  2746  0219                     	;# 
  2747  021A                     	;# 
  2748  021B                     	;# 
  2749  021C                     	;# 
  2750  021D                     	;# 
  2751  021E                     	;# 
  2752  021F                     	;# 
  2753  0291                     	;# 
  2754  0291                     	;# 
  2755  0292                     	;# 
  2756  0293                     	;# 
  2757  0294                     	;# 
  2758  0295                     	;# 
  2759  0295                     	;# 
  2760  0296                     	;# 
  2761  0298                     	;# 
  2762  0298                     	;# 
  2763  0299                     	;# 
  2764  029A                     	;# 
  2765  029B                     	;# 
  2766  029C                     	;# 
  2767  029C                     	;# 
  2768  029D                     	;# 
  2769  029E                     	;# 
  2770  029E                     	;# 
  2771  0311                     	;# 
  2772  0311                     	;# 
  2773  0312                     	;# 
  2774  0313                     	;# 
  2775  0318                     	;# 
  2776  0318                     	;# 
  2777  0319                     	;# 
  2778  031A                     	;# 
  2779  0394                     	;# 
  2780  0395                     	;# 
  2781  0396                     	;# 
  2782  039A                     	;# 
  2783  039C                     	;# 
  2784  039D                     	;# 
  2785  039E                     	;# 
  2786  039F                     	;# 
  2787  0415                     	;# 
  2788  0416                     	;# 
  2789  0417                     	;# 
  2790  041C                     	;# 
  2791  041D                     	;# 
  2792  041E                     	;# 
  2793  0FE4                     	;# 
  2794  0FE5                     	;# 
  2795  0FE6                     	;# 
  2796  0FE7                     	;# 
  2797  0FE8                     	;# 
  2798  0FE9                     	;# 
  2799  0FEA                     	;# 
  2800  0FEB                     	;# 
  2801  0FED                     	;# 
  2802  0FEE                     	;# 
  2803  0FEF                     	;# 
  2804                           
  2805 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2806  0000                     
  2807 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2808  0000                     
  2809 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2810  0000                     
  2811                           	psect	idataBANK1
  2812  0000'                    __pidataBANK1:
  2813                           
  2814                           ;initializer for _kp_valvula
  2815  0000' 3486               	retlw	134
  2816  0001' 340B               	retlw	11
  2817  0002' 3400               	retlw	0
  2818                           
  2819                           ;initializer for _ki_valvula
  2820  0003' 34E8               	retlw	232
  2821  0004' 3403               	retlw	3
  2822  0005' 3400               	retlw	0
  2823                           
  2824                           ;initializer for _kp_ventoinha
  2825  0006' 3414               	retlw	20
  2826  0007' 3405               	retlw	5
  2827  0008' 3400               	retlw	0
  2828                           
  2829                           ;initializer for _kd_ventoinha
  2830  0009' 3410               	retlw	16
  2831  000A' 3427               	retlw	39
  2832  000B' 3400               	retlw	0
  2833                           
  2834                           ;initializer for _ki_ventoinha
  2835  000C' 3402               	retlw	2
  2836  000D' 3400               	retlw	0
  2837  000E' 3400               	retlw	0
  2838                           
  2839                           	psect	idataEEDATA
  2840  0000'                    __pidataEEDATA:
  2841  0000'                    _relacao_som_temperatura:	
  2842                           ;initializer for _relacao_som_temperatura
  2843                           
  2844  0000' 0079               	db	121
  2845  0001' 0081               	db	129
  2846  0002' 00B6               	db	182
  2847  0003' 0081               	db	129
  2848  0004' 00F2               	db	242
  2849  0005' 0081               	db	129
  2850  0006' 002F               	db	47
  2851  0007' 0082               	db	130
  2852  0008' 006B               	db	107
  2853  0009' 0082               	db	130
  2854  000A' 00A7               	db	167
  2855  000B' 0082               	db	130
  2856  000C' 00E3               	db	227
  2857  000D' 0082               	db	130
  2858  000E' 001F               	db	31
  2859  000F' 0083               	db	131
  2860  0010' 005B               	db	91
  2861  0011' 0083               	db	131
  2862  0012' 0097               	db	151
  2863  0013' 0083               	db	131
  2864  0014' 00D2               	db	210
  2865  0015' 0083               	db	131
  2866  0016' 000E               	db	14
  2867  0017' 0084               	db	132
  2868  0018' 0049               	db	73
  2869  0019' 0084               	db	132
  2870  001A' 0085               	db	133
  2871  001B' 0084               	db	132
  2872  001C' 00C0               	db	192
  2873  001D' 0084               	db	132
  2874  001E' 00FB               	db	251
  2875  001F' 0084               	db	132
  2876  0020' 0036               	db	54
  2877  0021' 0085               	db	133
  2878  0022' 0071               	db	113
  2879  0023' 0085               	db	133
  2880  0024' 00AC               	db	172
  2881  0025' 0085               	db	133
  2882  0026' 00E6               	db	230
  2883  0027' 0085               	db	133
  2884  0028' 0021               	db	33
  2885  0029' 0086               	db	134
  2886  002A' 005C               	db	92
  2887  002B' 0086               	db	134
  2888  002C' 0096               	db	150
  2889  002D' 0086               	db	134
  2890  002E' 00D0               	db	208
  2891  002F' 0086               	db	134
  2892  0030' 000A               	db	10
  2893  0031' 0087               	db	135
  2894  0032' 0045               	db	69
  2895  0033' 0087               	db	135
  2896  0034' 007F               	db	127
  2897  0035' 0087               	db	135
  2898  0036' 00B9               	db	185
  2899  0037' 0087               	db	135
  2900  0038' 00F2               	db	242
  2901  0039' 0087               	db	135
  2902  003A' 002C               	db	44
  2903  003B' 0088               	db	136
  2904  003C' 0066               	db	102
  2905  003D' 0088               	db	136
  2906  003E' 009F               	db	159
  2907  003F' 0088               	db	136
  2908  0040' 00D9               	db	217
  2909  0041' 0088               	db	136
  2910  0042' 0012               	db	18
  2911  0043' 0089               	db	137
  2912  0044' 004B               	db	75
  2913  0045' 0089               	db	137
  2914  0046' 0085               	db	133
  2915  0047' 0089               	db	137
  2916  0048' 00BE               	db	190
  2917  0049' 0089               	db	137
  2918  004A' 00F7               	db	247
  2919  004B' 0089               	db	137
  2920  004C' 002F               	db	47
  2921  004D' 008A               	db	138
  2922  004E' 0068               	db	104
  2923  004F' 008A               	db	138
  2924  0050' 00A1               	db	161
  2925  0051' 008A               	db	138
  2926  0052' 00DA               	db	218
  2927  0053' 008A               	db	138
  2928  0054' 0012               	db	18
  2929  0055' 008B               	db	139
  2930  0056' 004B               	db	75
  2931  0057' 008B               	db	139
  2932  0058' 0083               	db	131
  2933  0059' 008B               	db	139
  2934  005A' 00BB               	db	187
  2935  005B' 008B               	db	139
  2936  005C' 00F3               	db	243
  2937  005D' 008B               	db	139
  2938  005E' 002B               	db	43
  2939  005F' 008C               	db	140
  2940  0060' 0063               	db	99
  2941  0061' 008C               	db	140
  2942  0062' 009B               	db	155
  2943  0063' 008C               	db	140
  2944  0064' 00D3               	db	211
  2945  0065' 008C               	db	140
  2946                           
  2947                           	psect	nvBANK1
  2948  0000'                    __pnvBANK1:
  2949  0000'                    _TMR6_InterruptHandler:
  2950  0000'                    	ds	2
  2951  0002'                    _TMR0_InterruptHandler:
  2952  0002'                    	ds	2
  2953  0004'                    _TMR4_InterruptHandler:
  2954  0004'                    	ds	2
  2955  0006'                    _EUSART_ErrorHandler:
  2956  0006'                    	ds	2
  2957  0008'                    _EUSART_OverrunErrorHandler:
  2958  0008'                    	ds	2
  2959  000A'                    _EUSART_FramingErrorHandler:
  2960  000A'                    	ds	2
  2961  000C'                    _TMR1_GateInterruptHandler:
  2962  000C'                    	ds	2
  2963  0015                     _TMR0	set	21
  2964  001C                     _T2CONbits	set	28
  2965  001C                     _T2CON	set	28
  2966  001A                     _TMR2	set	26
  2967  001B                     _PR2	set	27
  2968  0013                     _PIR3bits	set	19
  2969  000B                     _INTCONbits	set	11
  2970  0019                     _T1GCONbits	set	25
  2971  0018                     _T1CONbits	set	24
  2972  0018                     _T1CON	set	24
  2973  0011                     _PIR1bits	set	17
  2974  0016                     _TMR1L	set	22
  2975  0017                     _TMR1H	set	23
  2976  0019                     _T1GCON	set	25
  2977  0095                     _OPTION_REG	set	149
  2978  0093                     _PIE3bits	set	147
  2979  0091                     _PIE1bits	set	145
  2980  009D                     _ADCON0bits	set	157
  2981  009D                     _ADCON0	set	157
  2982  009C                     _ADRESH	set	156
  2983  009B                     _ADRESL	set	155
  2984  009E                     _ADCON1	set	158
  2985  0095                     _OPTION_REGbits	set	149
  2986  008D                     _TRISB	set	141
  2987  008C                     _TRISA	set	140
  2988  0097                     _WDTCON	set	151
  2989  0098                     _OSCTUNE	set	152
  2990  0099                     _OSCCON	set	153
  2991  010C                     _LATAbits	set	268
  2992  0119                     _DACCON1	set	281
  2993  0118                     _DACCON0	set	280
  2994  0115                     _CMOUTbits	set	277
  2995  0112                     _CM1CON1	set	274
  2996  0111                     _CM1CON0	set	273
  2997  0117                     _FVRCONbits	set	279
  2998  0117                     _FVRCON	set	279
  2999  011E                     _APFCON1	set	286
  3000  011D                     _APFCON0	set	285
  3001  010D                     _LATB	set	269
  3002  010C                     _LATA	set	268
  3003  0116                     _BORCON	set	278
  3004  0191                     _EEADR	set	401
  3005  0193                     _EEDATA	set	403
  3006  0195                     _EECON1	set	405
  3007  0195                     _EECON1bits	set	405
  3008  019A                     _TXREG	set	410
  3009  0199                     _RCREG	set	409
  3010  019D                     _RCSTAbits	set	413
  3011  019E                     _TXSTAbits	set	414
  3012  019C                     _SPBRGH	set	412
  3013  019B                     _SPBRGL	set	411
  3014  019E                     _TXSTA	set	414
  3015  019D                     _RCSTA	set	413
  3016  019F                     _BAUDCON	set	415
  3017  018C                     _ANSELA	set	396
  3018  018D                     _ANSELB	set	397
  3019  020C                     _WPUA	set	524
  3020  020D                     _WPUB	set	525
  3021  029E                     _CCPTMRS0bits	set	670
  3022  0291                     _CCPR1L	set	657
  3023  0292                     _CCPR1H	set	658
  3024  0296                     _PSTR1CON	set	662
  3025  0294                     _PWM1CON	set	660
  3026  0295                     _ECCP1AS	set	661
  3027  0293                     _CCP1CON	set	659
  3028  041E                     _T6CONbits	set	1054
  3029  041E                     _T6CON	set	1054
  3030  041C                     _TMR6	set	1052
  3031  041D                     _PR6	set	1053
  3032  0417                     _T4CONbits	set	1047
  3033  0417                     _T4CON	set	1047
  3034  0415                     _TMR4	set	1045
  3035  0416                     _PR4	set	1046
  3036                           
  3037                           	psect	cinit
  3038  0000'                    start_initialization:	
  3039                           ; #config settings
  3040                           
  3041  0000'                    __initialization:
  3042                           
  3043                           ; Initialize objects allocated to BANK1
  3044  0000' 3000'              	movlw	low __pidataBANK1
  3045  0001' 0084               	movwf	4
  3046  0002' 3000'              	movlw	(high __pidataBANK1)| (0+128)
  3047  0003' 0085               	movwf	5
  3048  0004' 3000'              	movlw	low __pdataBANK1
  3049  0005' 0086               	movwf	6
  3050  0006' 3000'              	movlw	high __pdataBANK1
  3051  0007' 0087               	movwf	7
  3052  0008' 300F               	movlw	15
  3053  0009' 3180' 2000' 3180'  	fcall	init_ram
  3054                           
  3055                           ; Clear objects allocated to BANK0
  3056  000C' 3000'              	movlw	low __pbssBANK0
  3057  000D' 0084               	movwf	4
  3058  000E' 3000'              	movlw	high __pbssBANK0
  3059  000F' 0085               	movwf	5
  3060  0010' 3016               	movlw	22
  3061  0011' 3180' 2000' 3180'  	fcall	clear_ram0
  3062                           
  3063                           ; Clear objects allocated to BANK1
  3064  0014' 3000'              	movlw	low __pbssBANK1
  3065  0015' 0084               	movwf	4
  3066  0016' 3000'              	movlw	high __pbssBANK1
  3067  0017' 0085               	movwf	5
  3068  0018' 302A               	movlw	42
  3069  0019' 3180' 2000' 3180'  	fcall	clear_ram0
  3070                           
  3071                           ; Clear objects allocated to BANK2
  3072  001C' 3000'              	movlw	low __pbssBANK2
  3073  001D' 0084               	movwf	4
  3074  001E' 3000'              	movlw	high __pbssBANK2
  3075  001F' 0085               	movwf	5
  3076  0020' 300F               	movlw	15
  3077  0021' 3180' 2000' 3180'  	fcall	clear_ram0
  3078  0024'                    end_of_initialization:	
  3079                           ;End of C runtime variable initialization code
  3080                           
  3081  0024'                    __end_of__initialization:
  3082  0024' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3083  0025' 0020               	movlb	0
  3084  0026' 3180' 2800'        	ljmp	_main	;jump to C main() function
  3085                           
  3086                           	psect	dataEEDATA
  3087  0000'                    __pdataEEDATA:
  3088                           
  3089                           	psect	bssBANK0
  3090  0000'                    __pbssBANK0:
  3091  0000'                    _soma_PID:
  3092  0000'                    	ds	3
  3093  0003'                    _integrativo:
  3094  0003'                    	ds	3
  3095  0006'                    _erro_atual:
  3096  0006'                    	ds	3
  3097  0009'                    _ciclo_util_futuro:
  3098  0009'                    	ds	2
  3099  000B'                    _Set_ciclo:
  3100  000B'                    	ds	2
  3101  000D'                    _Set_valvula:
  3102  000D'                    	ds	2
  3103  000F'                    _Set_altura:
  3104  000F'                    	ds	2
  3105  0011'                    media@indice:
  3106  0011'                    	ds	1
  3107  0012'                    inicia_ultrasom@j:
  3108  0012'                    	ds	1
  3109  0013'                    _subtrai_passos:
  3110  0013'                    	ds	1
  3111  0014'                    _modo:
  3112  0014'                    	ds	1
  3113  0015'                    _npassos:
  3114  0015'                    	ds	1
  3115                           
  3116                           	psect	bssBANK1
  3117  0000'                    __pbssBANK1:
  3118  0000'                    _RxBuffer:
  3119  0000'                    	ds	5
  3120  0005'                    media@tempo_recebido:
  3121  0005'                    	ds	4
  3122  0009'                    _altura_bola:
  3123  0009'                    	ds	3
  3124  000C'                    _derivativo:
  3125  000C'                    	ds	3
  3126  000F'                    _proporcional:
  3127  000F'                    	ds	3
  3128  0012'                    _erro_anterior:
  3129  0012'                    	ds	3
  3130  0015'                    _soma_anterior:
  3131  0015'                    	ds	3
  3132  0018'                    _posicao_val_futura:
  3133  0018'                    	ds	2
  3134  001A'                    _temperatura:
  3135  001A'                    	ds	2
  3136  001C'                    _posicao_val_atual:
  3137  001C'                    	ds	2
  3138  001E'                    _tempo_medio:
  3139  001E'                    	ds	2
  3140  0020'                    _tempo_s:
  3141  0020'                    	ds	2
  3142  0022'                    _timer1ReloadVal:
  3143  0022'                    	ds	2
  3144  0024'                    _ADC_InterruptHandler:
  3145  0024'                    	ds	2
  3146  0026'                    _countRx:
  3147  0026'                    	ds	1
  3148  0027'                    _dado_atual:
  3149  0027'                    	ds	1
  3150  0028'                    _timer0ReloadVal:
  3151  0028'                    	ds	1
  3152  0029'                    _eusartRxLastError:
  3153  0029'                    	ds	1
  3154                           
  3155                           	psect	dataBANK1
  3156  0000'                    __pdataBANK1:
  3157  0000'                    _kp_valvula:
  3158  0000'                    	ds	3
  3159  0003'                    _ki_valvula:
  3160  0003'                    	ds	3
  3161  0006'                    _kp_ventoinha:
  3162  0006'                    	ds	3
  3163  0009'                    _kd_ventoinha:
  3164  0009'                    	ds	3
  3165  000C'                    _ki_ventoinha:
  3166  000C'                    	ds	3
  3167                           
  3168                           	psect	bssBANK2
  3169  0000'                    __pbssBANK2:
  3170  0000'                    _dados_de_envio:
  3171  0000'                    	ds	15
  3172                           
  3173                           	psect	inittext
  3174  0000'                    init_ram:
  3175  0000' 00FE               	movwf	btemp
  3176  0001'                    initloop:
  3177  0001' 0012               	moviw fsr0++
  3178  0002' 001E               	movwi fsr1++
  3179  0003' 0BFE               	decfsz	btemp,f
  3180  0004' 2800'              	goto	initloop
  3181  0005' 3400               	retlw	0
  3182                           
  3183                           	psect	clrtext
  3184  0000'                    clear_ram0:	
  3185                           ;	Called with FSR0 containing the base address, and
  3186                           ;	WREG with the size to clear
  3187                           
  3188  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  3189  0001'                    clrloop0:
  3190  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  3191  0002' 3101               	addfsr 0,1
  3192  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3193  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  3194  0005' 3400               	retlw	0	;all done for this memory range, return
  3195                           
  3196                           	psect	cstackBANK1
  3197  0000'                    __pcstackBANK1:
  3198  0000'                    ??_PIN_MANAGER_Initialize:
  3199  0000'                    ??_OSCILLATOR_Initialize:	
  3200                           ; 1 bytes @ 0x0
  3201                           
  3202  0000'                    ??_WDT_Initialize:	
  3203                           ; 1 bytes @ 0x0
  3204                           
  3205  0000'                    ??_DAC_Initialize:	
  3206                           ; 1 bytes @ 0x0
  3207                           
  3208  0000'                    ??_FVR_Initialize:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211  0000'                    ??_TMR2_Initialize:	
  3212                           ; 1 bytes @ 0x0
  3213                           
  3214  0000'                    ??_CMP1_Initialize:	
  3215                           ; 1 bytes @ 0x0
  3216                           
  3217  0000'                    ??_ADC_Initialize:	
  3218                           ; 1 bytes @ 0x0
  3219                           
  3220  0000'                    ??_EPWM1_Initialize:	
  3221                           ; 1 bytes @ 0x0
  3222                           
  3223  0000'                    ?_TMR1_SetGateInterruptHandler:	
  3224                           ; 1 bytes @ 0x0
  3225                           
  3226  0000'                    ?_EUSART_SetFramingErrorHandler:	
  3227                           ; 1 bytes @ 0x0
  3228                           
  3229  0000'                    ?_EUSART_SetOverrunErrorHandler:	
  3230                           ; 1 bytes @ 0x0
  3231                           
  3232  0000'                    ?_EUSART_SetErrorHandler:	
  3233                           ; 1 bytes @ 0x0
  3234                           
  3235  0000'                    ?_TMR4_SetInterruptHandler:	
  3236                           ; 1 bytes @ 0x0
  3237                           
  3238  0000'                    ?_TMR0_SetInterruptHandler:	
  3239                           ; 1 bytes @ 0x0
  3240                           
  3241  0000'                    ?_TMR6_SetInterruptHandler:	
  3242                           ; 1 bytes @ 0x0
  3243                           
  3244  0000'                    ??_funcao_diminui_num_passos:	
  3245                           ; 1 bytes @ 0x0
  3246                           
  3247  0000'                    ??_EUSART_is_rx_ready:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250  0000'                    ??_EUSART_Read:	
  3251                           ; 1 bytes @ 0x0
  3252                           
  3253  0000'                    ??_CMP1_GetOutputStatus:	
  3254                           ; 1 bytes @ 0x0
  3255                           
  3256  0000'                    ??_TMR4_WriteTimer:	
  3257                           ; 1 bytes @ 0x0
  3258                           
  3259  0000'                    TMR4_WriteTimer@timerVal:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262  0000'                    TMR1_SetGateInterruptHandler@InterruptHandler:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265  0000'                    EUSART_SetFramingErrorHandler@interruptHandler:	
  3266                           ; 2 bytes @ 0x0
  3267                           
  3268  0000'                    EUSART_SetOverrunErrorHandler@interruptHandler:	
  3269                           ; 2 bytes @ 0x0
  3270                           
  3271  0000'                    EUSART_SetErrorHandler@interruptHandler:	
  3272                           ; 2 bytes @ 0x0
  3273                           
  3274  0000'                    TMR4_SetInterruptHandler@InterruptHandler:	
  3275                           ; 2 bytes @ 0x0
  3276                           
  3277  0000'                    TMR0_SetInterruptHandler@InterruptHandler:	
  3278                           ; 2 bytes @ 0x0
  3279                           
  3280  0000'                    TMR6_SetInterruptHandler@InterruptHandler:	
  3281                           ; 2 bytes @ 0x0
  3282                           
  3283                           
  3284                           ; 2 bytes @ 0x0
  3285  0000'                    	ds	1
  3286  0001'                    ??_Dados_recebidos:
  3287                           
  3288                           ; 1 bytes @ 0x1
  3289  0001'                    	ds	1
  3290  0002'                    ??_TMR4_Initialize:
  3291  0002'                    ??_TMR0_Initialize:	
  3292                           ; 1 bytes @ 0x2
  3293                           
  3294  0002'                    ??_TMR6_Initialize:	
  3295                           ; 1 bytes @ 0x2
  3296                           
  3297  0002'                    ??_TMR1_Initialize:	
  3298                           ; 1 bytes @ 0x2
  3299                           
  3300  0002'                    ??_EUSART_Initialize:	
  3301                           ; 1 bytes @ 0x2
  3302                           
  3303  0002'                    ??_TMR1_SetGateInterruptHandler:	
  3304                           ; 1 bytes @ 0x2
  3305                           
  3306  0002'                    ??_EUSART_SetFramingErrorHandler:	
  3307                           ; 1 bytes @ 0x2
  3308                           
  3309  0002'                    ??_EUSART_SetOverrunErrorHandler:	
  3310                           ; 1 bytes @ 0x2
  3311                           
  3312  0002'                    ??_EUSART_SetErrorHandler:	
  3313                           ; 1 bytes @ 0x2
  3314                           
  3315  0002'                    ??_TMR4_SetInterruptHandler:	
  3316                           ; 1 bytes @ 0x2
  3317                           
  3318  0002'                    ??_TMR0_SetInterruptHandler:	
  3319                           ; 1 bytes @ 0x2
  3320                           
  3321  0002'                    ??_TMR6_SetInterruptHandler:	
  3322                           ; 1 bytes @ 0x2
  3323                           
  3324  0002'                    ??_SYSTEM_Initialize:	
  3325                           ; 1 bytes @ 0x2
  3326                           
  3327  0002'                    Dados_recebidos@rxData:	
  3328                           ; 1 bytes @ 0x2
  3329                           
  3330                           
  3331                           ; 1 bytes @ 0x2
  3332  0002'                    	ds	1
  3333  0003'                    ??_main:
  3334                           
  3335                           ; 1 bytes @ 0x3
  3336  0003'                    	ds	1
  3337                           
  3338                           	psect	cstackCOMMON
  3339  0000'                    __pcstackCOMMON:
  3340  0000'                    ?_PIN_MANAGER_Initialize:
  3341  0000'                    ?_OSCILLATOR_Initialize:	
  3342                           ; 1 bytes @ 0x0
  3343                           
  3344  0000'                    ?_WDT_Initialize:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347  0000'                    ?_DAC_Initialize:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350  0000'                    ?_FVR_Initialize:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353  0000'                    ?_TMR4_Initialize:	
  3354                           ; 1 bytes @ 0x0
  3355                           
  3356  0000'                    ?_TMR2_Initialize:	
  3357                           ; 1 bytes @ 0x0
  3358                           
  3359  0000'                    ?_TMR0_Initialize:	
  3360                           ; 1 bytes @ 0x0
  3361                           
  3362  0000'                    ?_TMR6_Initialize:	
  3363                           ; 1 bytes @ 0x0
  3364                           
  3365  0000'                    ?_CMP1_Initialize:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368  0000'                    ?_ADC_Initialize:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371  0000'                    ?_EPWM1_Initialize:	
  3372                           ; 1 bytes @ 0x0
  3373                           
  3374  0000'                    ?_TMR1_Initialize:	
  3375                           ; 1 bytes @ 0x0
  3376                           
  3377  0000'                    ?_EUSART_Initialize:	
  3378                           ; 1 bytes @ 0x0
  3379                           
  3380  0000'                    ?_TMR1_DefaultGateInterruptHandler:	
  3381                           ; 1 bytes @ 0x0
  3382                           
  3383  0000'                    ??_TMR1_DefaultGateInterruptHandler:	
  3384                           ; 1 bytes @ 0x0
  3385                           
  3386  0000'                    ?_TMR0_ISR:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389  0000'                    ?_TMR6_ISR:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392  0000'                    ?_TMR4_ISR:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395  0000'                    ?_TMR4_DefaultInterruptHandler:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398  0000'                    ??_TMR4_DefaultInterruptHandler:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401  0000'                    ?_TMR0_DefaultInterruptHandler:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404  0000'                    ??_TMR0_DefaultInterruptHandler:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407  0000'                    ?_TMR6_DefaultInterruptHandler:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410  0000'                    ??_TMR6_DefaultInterruptHandler:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413  0000'                    ?_ProcessaDados:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416  0000'                    ?_inicia_ultrasom:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419  0000'                    ?_posicao_bola_tubo:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422  0000'                    ?_DRMotordePassos:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425  0000'                    ?_Dados_recebidos:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428  0000'                    ?_EnviaTx:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431  0000'                    ?_Comando_PIeD:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434  0000'                    ?_muda_passos:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437  0000'                    ??_muda_passos:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440  0000'                    ?_selecao_do_modo:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443  0000'                    ?_modo_ventoinha:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446  0000'                    ?_modo_valvula:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449  0000'                    ?_SYSTEM_Initialize:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452  0000'                    ?_TMR1_WriteTimer:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455  0000'                    ?_TMR1_GATE_ISR:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458  0000'                    ?_INTERRUPT_InterruptManager:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461  0000'                    ?_EUSART_is_rx_ready:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464  0000'                    ?_EUSART_Read:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467  0000'                    ?_EUSART_Write:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470  0000'                    ??_EUSART_Write:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473  0000'                    ?_EPWM1_LoadDutyValue:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476  0000'                    ?_CMP1_GetOutputStatus:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479  0000'                    ?_TMR4_WriteTimer:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482  0000'                    ?_main:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485  0000'                    ?___eecpymem:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488  0000'                    ?_funcao_diminui_num_passos:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491  0000'                    ?_ADC_GetConversion:	
  3492                           ; 2 bytes @ 0x0
  3493                           
  3494  0000'                    ?_TMR1_ReadTimer:	
  3495                           ; 2 bytes @ 0x0
  3496                           
  3497  0000'                    ?___tmul:	
  3498                           ; 2 bytes @ 0x0
  3499                           
  3500  0000'                    ?___lmul:	
  3501                           ; 3 bytes @ 0x0
  3502                           
  3503  0000'                    EUSART_Write@txData:	
  3504                           ; 4 bytes @ 0x0
  3505                           
  3506  0000'                    ___eecpymem@from:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  0000'                    TMR1_WriteTimer@timerVal:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  0000'                    EPWM1_LoadDutyValue@dutyValue:	
  3513                           ; 2 bytes @ 0x0
  3514                           
  3515  0000'                    ___tmul@multiplier:	
  3516                           ; 2 bytes @ 0x0
  3517                           
  3518  0000'                    ___lmul@multiplier:	
  3519                           ; 3 bytes @ 0x0
  3520                           
  3521                           
  3522                           ; 4 bytes @ 0x0
  3523  0000'                    	ds	1
  3524  0001'                    ??_DRMotordePassos:
  3525  0001'                    ??_EnviaTx:	
  3526                           ; 1 bytes @ 0x1
  3527                           
  3528  0001'                    ___eecpymem@size:	
  3529                           ; 1 bytes @ 0x1
  3530                           
  3531                           
  3532                           ; 1 bytes @ 0x1
  3533  0001'                    	ds	1
  3534  0002'                    ??_TMR6_ISR:
  3535  0002'                    ??_inicia_ultrasom:	
  3536                           ; 1 bytes @ 0x2
  3537                           
  3538  0002'                    ??_ADC_GetConversion:	
  3539                           ; 1 bytes @ 0x2
  3540                           
  3541  0002'                    ??_TMR1_ReadTimer:	
  3542                           ; 1 bytes @ 0x2
  3543                           
  3544  0002'                    ??_TMR1_WriteTimer:	
  3545                           ; 1 bytes @ 0x2
  3546                           
  3547  0002'                    ??_EPWM1_LoadDutyValue:	
  3548                           ; 1 bytes @ 0x2
  3549                           
  3550  0002'                    ??___eecpymem:	
  3551                           ; 1 bytes @ 0x2
  3552                           
  3553  0002'                    _inicia_ultrasom$1287:	
  3554                           ; 1 bytes @ 0x2
  3555                           
  3556                           
  3557                           ; 2 bytes @ 0x2
  3558  0002'                    	ds	1
  3559  0003'                    ADC_GetConversion@channel:
  3560  0003'                    ___tmul@multiplicand:	
  3561                           ; 1 bytes @ 0x3
  3562                           
  3563                           
  3564                           ; 3 bytes @ 0x3
  3565  0003'                    	ds	1
  3566  0004'                    ??_TMR0_ISR:
  3567  0004'                    ??_TMR4_ISR:	
  3568                           ; 1 bytes @ 0x4
  3569                           
  3570  0004'                    ??_ProcessaDados:	
  3571                           ; 1 bytes @ 0x4
  3572                           
  3573  0004'                    ??_selecao_do_modo:	
  3574                           ; 1 bytes @ 0x4
  3575                           
  3576  0004'                    ?___lwdiv:	
  3577                           ; 1 bytes @ 0x4
  3578                           
  3579  0004'                    ___eecpymem@cp:	
  3580                           ; 2 bytes @ 0x4
  3581                           
  3582  0004'                    ___lwdiv@divisor:	
  3583                           ; 1 bytes @ 0x4
  3584                           
  3585  0004'                    ___lmul@multiplicand:	
  3586                           ; 2 bytes @ 0x4
  3587                           
  3588                           
  3589                           ; 4 bytes @ 0x4
  3590  0004'                    	ds	1
  3591  0005'                    ___eecpymem@to:
  3592                           
  3593                           ; 1 bytes @ 0x5
  3594  0005'                    	ds	1
  3595  0006'                    ??___tmul:
  3596  0006'                    ?___eetoi:	
  3597                           ; 1 bytes @ 0x6
  3598                           
  3599  0006'                    ___lwdiv@dividend:	
  3600                           ; 2 bytes @ 0x6
  3601                           
  3602  0006'                    ___tmul@product:	
  3603                           ; 2 bytes @ 0x6
  3604                           
  3605                           
  3606                           ; 3 bytes @ 0x6
  3607  0006'                    	ds	1
  3608  0007'                    TMR1_ReadTimer@readVal:
  3609                           
  3610                           ; 2 bytes @ 0x7
  3611  0007'                    	ds	1
  3612  0008'                    ??___eetoi:
  3613  0008'                    ??___lmul:	
  3614                           ; 1 bytes @ 0x8
  3615                           
  3616  0008'                    ??___lwdiv:	
  3617                           ; 1 bytes @ 0x8
  3618                           
  3619  0008'                    ___eetoi@addr:	
  3620                           ; 1 bytes @ 0x8
  3621                           
  3622  0008'                    ___lmul@product:	
  3623                           ; 1 bytes @ 0x8
  3624                           
  3625                           
  3626                           ; 4 bytes @ 0x8
  3627  0008'                    	ds	1
  3628  0009'                    ??___atdiv:
  3629  0009'                    TMR1_ReadTimer@readValHigh:	
  3630                           ; 1 bytes @ 0x9
  3631                           
  3632  0009'                    ___eetoi@data:	
  3633                           ; 1 bytes @ 0x9
  3634                           
  3635  0009'                    ___lwdiv@quotient:	
  3636                           ; 2 bytes @ 0x9
  3637                           
  3638                           
  3639                           ; 2 bytes @ 0x9
  3640  0009'                    	ds	1
  3641  000A'                    TMR1_ReadTimer@readValLow:
  3642                           
  3643                           ; 1 bytes @ 0xA
  3644  000A'                    	ds	1
  3645  000B'                    ?_media:
  3646  000B'                    ___lwdiv@counter:	
  3647                           ; 1 bytes @ 0xB
  3648                           
  3649  000B'                    media@timer:	
  3650                           ; 1 bytes @ 0xB
  3651                           
  3652                           
  3653                           ; 2 bytes @ 0xB
  3654  000B'                    	ds	1
  3655  000C'                    ??___aldiv:
  3656  000C'                    ?_velocidade_som:	
  3657                           ; 1 bytes @ 0xC
  3658                           
  3659                           
  3660                           ; 2 bytes @ 0xC
  3661  000C'                    	ds	1
  3662  000D'                    ??_Comando_PIeD:
  3663                           
  3664                           ; 1 bytes @ 0xD
  3665  000D'                    	ds	1
  3666  000E'                    ??_posicao_bola_tubo:
  3667  000E'                    ??_TMR1_GATE_ISR:	
  3668                           ; 1 bytes @ 0xE
  3669                           
  3670  000E'                    ??_INTERRUPT_InterruptManager:	
  3671                           ; 1 bytes @ 0xE
  3672                           
  3673  000E'                    ??_velocidade_som:	
  3674                           ; 1 bytes @ 0xE
  3675                           
  3676  000E'                    ??___wmul:	
  3677                           ; 1 bytes @ 0xE
  3678                           
  3679                           
  3680                           	psect	cstackBANK0
  3681  0000'                    __pcstackBANK0:	
  3682                           ; 1 bytes @ 0xE
  3683                           
  3684  0000'                    ??_media:
  3685  0000'                    ?___wmul:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688  0000'                    ?___atdiv:	
  3689                           ; 2 bytes @ 0x0
  3690                           
  3691  0000'                    ?___aldiv:	
  3692                           ; 3 bytes @ 0x0
  3693                           
  3694  0000'                    ___wmul@multiplier:	
  3695                           ; 4 bytes @ 0x0
  3696                           
  3697  0000'                    ___atdiv@divisor:	
  3698                           ; 2 bytes @ 0x0
  3699                           
  3700  0000'                    ___aldiv@divisor:	
  3701                           ; 3 bytes @ 0x0
  3702                           
  3703                           
  3704                           ; 4 bytes @ 0x0
  3705  0000'                    	ds	2
  3706  0002'                    ___wmul@multiplicand:
  3707                           
  3708                           ; 2 bytes @ 0x2
  3709  0002'                    	ds	1
  3710  0003'                    ___atdiv@dividend:
  3711                           
  3712                           ; 3 bytes @ 0x3
  3713  0003'                    	ds	1
  3714  0004'                    ___wmul@product:
  3715  0004'                    ___aldiv@dividend:	
  3716                           ; 2 bytes @ 0x4
  3717                           
  3718                           
  3719                           ; 4 bytes @ 0x4
  3720  0004'                    	ds	2
  3721  0006'                    ___atdiv@counter:
  3722                           
  3723                           ; 1 bytes @ 0x6
  3724  0006'                    	ds	1
  3725  0007'                    ___atdiv@sign:
  3726                           
  3727                           ; 1 bytes @ 0x7
  3728  0007'                    	ds	1
  3729  0008'                    ___aldiv@counter:
  3730  0008'                    ___atdiv@quotient:	
  3731                           ; 1 bytes @ 0x8
  3732                           
  3733                           
  3734                           ; 3 bytes @ 0x8
  3735  0008'                    	ds	1
  3736  0009'                    ___aldiv@sign:
  3737                           
  3738                           ; 1 bytes @ 0x9
  3739  0009'                    	ds	1
  3740  000A'                    ___aldiv@quotient:
  3741                           
  3742                           ; 4 bytes @ 0xA
  3743  000A'                    	ds	4
  3744  000E'                    ?_map_value:
  3745  000E'                    map_value@x:	
  3746                           ; 3 bytes @ 0xE
  3747                           
  3748                           
  3749                           ; 4 bytes @ 0xE
  3750  000E'                    	ds	4
  3751  0012'                    map_value@in_min:
  3752                           
  3753                           ; 4 bytes @ 0x12
  3754  0012'                    	ds	4
  3755  0016'                    map_value@in_max:
  3756                           
  3757                           ; 4 bytes @ 0x16
  3758  0016'                    	ds	4
  3759  001A'                    map_value@out_min:
  3760                           
  3761                           ; 4 bytes @ 0x1A
  3762  001A'                    	ds	4
  3763  001E'                    map_value@out_max:
  3764                           
  3765                           ; 4 bytes @ 0x1E
  3766  001E'                    	ds	4
  3767  0022'                    ??_map_value:
  3768                           
  3769                           ; 1 bytes @ 0x22
  3770  0022'                    	ds	15
  3771  0031'                    ??_modo_ventoinha:
  3772  0031'                    ??_modo_valvula:	
  3773                           ; 1 bytes @ 0x31
  3774                           
  3775                           
  3776                           ; 1 bytes @ 0x31
  3777  0031'                    	ds	6
  3778  0037'                    _posicao_bola_tubo$2070:
  3779                           
  3780                           ; 2 bytes @ 0x37
  3781  0037'                    	ds	2
  3782                           
  3783                           	psect	maintext
  3784  0000'                    __pmaintext:	
  3785 ;;
  3786 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3787 ;;
  3788 ;; *************** function _main *****************
  3789 ;; Defined at:
  3790 ;;		line 24 in file "main.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : B1F/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3804 ;;      Params:         0       0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0
  3806 ;;      Temps:          0       0       1       0       0       0
  3807 ;;      Totals:         0       0       1       0       0       0
  3808 ;;Total ram usage:        1 bytes
  3809 ;; Hardware stack levels required when called: 10
  3810 ;; This function calls:
  3811 ;;		_CMP1_GetOutputStatus
  3812 ;;		_Dados_recebidos
  3813 ;;		_EUSART_is_rx_ready
  3814 ;;		_SYSTEM_Initialize
  3815 ;;		_TMR0_SetInterruptHandler
  3816 ;;		_TMR1_SetGateInterruptHandler
  3817 ;;		_TMR4_SetInterruptHandler
  3818 ;;		_TMR6_SetInterruptHandler
  3819 ;;		_funcao_diminui_num_passos
  3820 ;; This function is called by:
  3821 ;;		Startup code after reset
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825  0000'                    _main:	
  3826                           ;psect for function _main
  3827                           
  3828  0000'                    l2847:	
  3829                           ;incstack = 0
  3830                           ; Regs used in _main: [allreg]
  3831                           
  3832                           
  3833                           ;main.c: 25:     SYSTEM_Initialize();
  3834  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  3835  0003'                    l2849:
  3836                           
  3837                           ;main.c: 27:     (INTCONbits.GIE = 1);
  3838  0003' 178B               	bsf	11,7	;volatile
  3839  0004'                    l2851:
  3840                           
  3841                           ;main.c: 29:     (INTCONbits.PEIE = 1);
  3842  0004' 170B               	bsf	11,6	;volatile
  3843                           
  3844                           ;main.c: 32:     TMR4_SetInterruptHandler(ProcessaDados);
  3845  0005' 3000'              	movlw	low _ProcessaDados
  3846  0006' 0021               	movlb	1	; select bank1
  3847  0007' 0080'              	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  3848  0008' 3000'              	movlw	high _ProcessaDados
  3849  0009' 0081'              	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3850  000A' 3180' 2000' 3180'  	fcall	_TMR4_SetInterruptHandler
  3851                           
  3852                           ;main.c: 35:     TMR0_SetInterruptHandler(inicia_ultrasom);
  3853  000D' 3000'              	movlw	low _inicia_ultrasom
  3854  000E' 0021               	movlb	1	; select bank1
  3855  000F' 0080'              	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3856  0010' 3000'              	movlw	high _inicia_ultrasom
  3857  0011' 0081'              	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3858  0012' 3180' 2000' 3180'  	fcall	_TMR0_SetInterruptHandler
  3859                           
  3860                           ;main.c: 38:     TMR1_SetGateInterruptHandler(posicao_bola_tubo);
  3861  0015' 3000'              	movlw	low _posicao_bola_tubo
  3862  0016' 0021               	movlb	1	; select bank1
  3863  0017' 0080'              	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3864  0018' 3000'              	movlw	high _posicao_bola_tubo
  3865  0019' 0081'              	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3866  001A' 3180' 2000' 3180'  	fcall	_TMR1_SetGateInterruptHandler
  3867                           
  3868                           ;main.c: 41:     TMR6_SetInterruptHandler(DRMotordePassos);
  3869  001D' 3000'              	movlw	low _DRMotordePassos
  3870  001E' 0021               	movlb	1	; select bank1
  3871  001F' 0080'              	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  3872  0020' 3000'              	movlw	high _DRMotordePassos
  3873  0021' 0081'              	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3874  0022' 3180' 2000' 3180'  	fcall	_TMR6_SetInterruptHandler
  3875                           
  3876                           ;main.c: 47:     while(!CMP1_GetOutputStatus()){
  3877  0025' 2800'              	goto	l2857
  3878  0026'                    l2853:
  3879                           
  3880                           ;main.c: 48:         funcao_diminui_num_passos();
  3881  0026' 3180' 2000' 3180'  	fcall	_funcao_diminui_num_passos
  3882  0029'                    l2855:
  3883                           
  3884                           ;main.c: 49:         _delay((unsigned long)((4)*(16000000/4000.0)));
  3885  0029' 3015               	movlw	21
  3886  002A' 0021               	movlb	1	; select bank1
  3887  002B' 0080'              	movwf	??_main^(0+128)
  3888  002C' 30C6               	movlw	198
  3889  002D'                    u1807:
  3890  002D' 0B89               	decfsz	9,f
  3891  002E' 2800'              	goto	u1807
  3892  002F' 0B80'              	decfsz	??_main^(0+128),f
  3893  0030' 2800'              	goto	u1807
  3894  0031' 0000               	nop
  3895  0032'                    l2857:
  3896                           
  3897                           ;main.c: 47:     while(!CMP1_GetOutputStatus()){
  3898  0032' 3180' 2000' 3180'  	fcall	_CMP1_GetOutputStatus
  3899  0035' 3A00               	xorlw	0
  3900  0036' 1903               	skipnz
  3901  0037' 2800'              	goto	u1761
  3902  0038' 2800'              	goto	u1760
  3903  0039'                    u1761:
  3904  0039' 2800'              	goto	l2853
  3905  003A'                    u1760:
  3906  003A'                    l2859:
  3907                           
  3908                           ;main.c: 51:     posicao_val_atual = 0;
  3909  003A' 0021               	movlb	1	; select bank1
  3910  003B' 0180'              	clrf	_posicao_val_atual^(0+128)
  3911  003C' 0180'              	clrf	(_posicao_val_atual+1)^(0+128)
  3912  003D'                    l2861:
  3913                           
  3914                           ;main.c: 55:         LATAbits.LATA7 = !CMP1_GetOutputStatus();
  3915  003D' 3180' 2000' 3180'  	fcall	_CMP1_GetOutputStatus
  3916  0040' 3A00               	xorlw	0
  3917  0041' 1903               	skipnz
  3918  0042' 2800'              	goto	u1771
  3919  0043' 2800'              	goto	u1770
  3920  0044'                    u1771:
  3921  0044' 0022               	movlb	2	; select bank2
  3922  0045' 178C               	bsf	12,7	;volatile
  3923  0046' 2800'              	goto	u1784
  3924  0047'                    u1770:
  3925  0047' 0022               	movlb	2	; select bank2
  3926  0048' 138C               	bcf	12,7	;volatile
  3927  0049'                    u1784:
  3928  0049'                    l2863:
  3929                           
  3930                           ;main.c: 56:         if(EUSART_is_rx_ready()){
  3931  0049' 3180' 2000' 3180'  	fcall	_EUSART_is_rx_ready
  3932  004C' 3A00               	xorlw	0
  3933  004D' 1903               	skipnz
  3934  004E' 2800'              	goto	u1791
  3935  004F' 2800'              	goto	u1790
  3936  0050'                    u1791:
  3937  0050' 2800'              	goto	l2861
  3938  0051'                    u1790:
  3939  0051'                    l2865:
  3940                           
  3941                           ;main.c: 57:             Dados_recebidos();
  3942  0051' 3180' 2000' 3180'  	fcall	_Dados_recebidos
  3943  0054' 2800'              	goto	l2861
  3944  0055' 3180' 2800'        	ljmp	start
  3945  0057'                    __end_of_main:
  3946                           
  3947                           	psect	text1
  3948  0000'                    __ptext1:	
  3949 ;; *************** function _SYSTEM_Initialize *****************
  3950 ;; Defined at:
  3951 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, pclath, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3965 ;;      Params:         0       0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 9
  3972 ;; This function calls:
  3973 ;;		_ADC_Initialize
  3974 ;;		_CMP1_Initialize
  3975 ;;		_DAC_Initialize
  3976 ;;		_EPWM1_Initialize
  3977 ;;		_EUSART_Initialize
  3978 ;;		_FVR_Initialize
  3979 ;;		_OSCILLATOR_Initialize
  3980 ;;		_PIN_MANAGER_Initialize
  3981 ;;		_TMR0_Initialize
  3982 ;;		_TMR1_Initialize
  3983 ;;		_TMR2_Initialize
  3984 ;;		_TMR4_Initialize
  3985 ;;		_TMR6_Initialize
  3986 ;;		_WDT_Initialize
  3987 ;; This function is called by:
  3988 ;;		_main
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992  0000'                    _SYSTEM_Initialize:	
  3993                           ;psect for function _SYSTEM_Initialize
  3994                           
  3995  0000'                    l2771:	
  3996                           ;incstack = 0
  3997                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3998                           
  3999                           
  4000                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4001  0000' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
  4002                           
  4003                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4004  0003' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
  4005                           
  4006                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4007  0006' 3180' 2000' 3180'  	fcall	_WDT_Initialize
  4008                           
  4009                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  4010  0009' 3180' 2000' 3180'  	fcall	_DAC_Initialize
  4011                           
  4012                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  4013  000C' 3180' 2000' 3180'  	fcall	_FVR_Initialize
  4014                           
  4015                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  4016  000F' 3180' 2000' 3180'  	fcall	_TMR4_Initialize
  4017                           
  4018                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  4019  0012' 3180' 2000' 3180'  	fcall	_TMR2_Initialize
  4020                           
  4021                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  4022  0015' 3180' 2000' 3180'  	fcall	_TMR0_Initialize
  4023                           
  4024                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  4025  0018' 3180' 2000' 3180'  	fcall	_TMR6_Initialize
  4026                           
  4027                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  4028  001B' 3180' 2000' 3180'  	fcall	_CMP1_Initialize
  4029                           
  4030                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  4031  001E' 3180' 2000' 3180'  	fcall	_ADC_Initialize
  4032                           
  4033                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  4034  0021' 3180' 2000' 3180'  	fcall	_EPWM1_Initialize
  4035                           
  4036                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  4037  0024' 3180' 2000' 3180'  	fcall	_TMR1_Initialize
  4038                           
  4039                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  4040  0027' 3180' 2000' 3180'  	fcall	_EUSART_Initialize
  4041  002A'                    l39:
  4042  002A' 0008               	return
  4043  002B'                    __end_of_SYSTEM_Initialize:
  4044                           
  4045                           	psect	text2
  4046  0000'                    __ptext2:	
  4047 ;; *************** function _WDT_Initialize *****************
  4048 ;; Defined at:
  4049 ;;		line 79 in file "mcc_generated_files/mcc.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4063 ;;      Params:         0       0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0
  4066 ;;      Totals:         0       0       0       0       0       0
  4067 ;;Total ram usage:        0 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 7
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_SYSTEM_Initialize
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077  0000'                    _WDT_Initialize:	
  4078                           ;psect for function _WDT_Initialize
  4079                           
  4080  0000'                    l2581:	
  4081                           ;incstack = 0
  4082                           ; Regs used in _WDT_Initialize: [wreg]
  4083                           
  4084                           
  4085                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  4086  0000' 3016               	movlw	22
  4087  0001' 0021               	movlb	1	; select bank1
  4088  0002' 0097               	movwf	23	;volatile
  4089  0003'                    l45:
  4090  0003' 0008               	return
  4091  0004'                    __end_of_WDT_Initialize:
  4092                           
  4093                           	psect	text3
  4094  0000'                    __ptext3:	
  4095 ;; *************** function _TMR6_Initialize *****************
  4096 ;; Defined at:
  4097 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4111 ;;      Params:         0       0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0
  4114 ;;      Totals:         0       0       0       0       0       0
  4115 ;;Total ram usage:        0 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 8
  4118 ;; This function calls:
  4119 ;;		_TMR6_SetInterruptHandler
  4120 ;; This function is called by:
  4121 ;;		_SYSTEM_Initialize
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125  0000'                    _TMR6_Initialize:	
  4126                           ;psect for function _TMR6_Initialize
  4127                           
  4128  0000'                    l2619:	
  4129                           ;incstack = 0
  4130                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4131                           
  4132                           
  4133                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xBB;
  4134  0000' 30BB               	movlw	187
  4135  0001' 0028               	movlb	8	; select bank8
  4136  0002' 009D               	movwf	29	;volatile
  4137  0003'                    l2621:
  4138                           
  4139                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  4140  0003' 019C               	clrf	28	;volatile
  4141  0004'                    l2623:
  4142                           
  4143                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  4144  0004' 0020               	movlb	0	; select bank0
  4145  0005' 1193               	bcf	19,3	;volatile
  4146  0006'                    l2625:
  4147                           
  4148                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  4149  0006' 0021               	movlb	1	; select bank1
  4150  0007' 1593               	bsf	19,3	;volatile
  4151  0008'                    l2627:
  4152                           
  4153                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  4154  0008' 3000'              	movlw	low _TMR6_DefaultInterruptHandler
  4155  0009' 0080'              	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  4156  000A' 3000'              	movlw	high _TMR6_DefaultInterruptHandler
  4157  000B' 0081'              	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4158  000C' 3180' 2000' 3180'  	fcall	_TMR6_SetInterruptHandler
  4159  000F'                    l2629:
  4160                           
  4161                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x07;
  4162  000F' 3007               	movlw	7
  4163  0010' 0028               	movlb	8	; select bank8
  4164  0011' 009E               	movwf	30	;volatile
  4165  0012'                    l485:
  4166  0012' 0008               	return
  4167  0013'                    __end_of_TMR6_Initialize:
  4168                           
  4169                           	psect	text4
  4170  0000'                    __ptext4:	
  4171 ;; *************** function _TMR6_SetInterruptHandler *****************
  4172 ;; Defined at:
  4173 ;;		line 132 in file "mcc_generated_files/tmr6.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4176 ;;		 -> DRMotordePassos(1), TMR6_DefaultInterruptHandler(1), 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4188 ;;      Params:         0       0       2       0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0
  4191 ;;      Totals:         0       0       2       0       0       0
  4192 ;;Total ram usage:        2 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 7
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_TMR6_Initialize
  4199 ;;		_main
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203  0000'                    _TMR6_SetInterruptHandler:	
  4204                           ;psect for function _TMR6_SetInterruptHandler
  4205                           
  4206  0000'                    l2467:	
  4207                           ;incstack = 0
  4208                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  4209                           
  4210                           
  4211                           ;mcc_generated_files/tmr6.c: 133:     TMR6_InterruptHandler = InterruptHandler;
  4212  0000' 0021               	movlb	1	; select bank1
  4213  0001' 0800'              	movf	(TMR6_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4214  0002' 0080'              	movwf	(_TMR6_InterruptHandler+1)^(0+128)
  4215  0003' 0800'              	movf	TMR6_SetInterruptHandler@InterruptHandler^(0+128),w
  4216  0004' 0080'              	movwf	_TMR6_InterruptHandler^(0+128)
  4217  0005'                    l507:
  4218  0005' 0008               	return
  4219  0006'                    __end_of_TMR6_SetInterruptHandler:
  4220                           
  4221                           	psect	text5
  4222  0000'                    __ptext5:	
  4223 ;; *************** function _TMR4_Initialize *****************
  4224 ;; Defined at:
  4225 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0, pclath, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4239 ;;      Params:         0       0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 8
  4246 ;; This function calls:
  4247 ;;		_TMR4_SetInterruptHandler
  4248 ;; This function is called by:
  4249 ;;		_SYSTEM_Initialize
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253  0000'                    _TMR4_Initialize:	
  4254                           ;psect for function _TMR4_Initialize
  4255                           
  4256  0000'                    l2587:	
  4257                           ;incstack = 0
  4258                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4259                           
  4260                           
  4261                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF9;
  4262  0000' 30F9               	movlw	249
  4263  0001' 0028               	movlb	8	; select bank8
  4264  0002' 0096               	movwf	22	;volatile
  4265  0003'                    l2589:
  4266                           
  4267                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  4268  0003' 0195               	clrf	21	;volatile
  4269  0004'                    l2591:
  4270                           
  4271                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  4272  0004' 0020               	movlb	0	; select bank0
  4273  0005' 1093               	bcf	19,1	;volatile
  4274  0006'                    l2593:
  4275                           
  4276                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  4277  0006' 0021               	movlb	1	; select bank1
  4278  0007' 1493               	bsf	19,1	;volatile
  4279  0008'                    l2595:
  4280                           
  4281                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  4282  0008' 3000'              	movlw	low _TMR4_DefaultInterruptHandler
  4283  0009' 0080'              	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4284  000A' 3000'              	movlw	high _TMR4_DefaultInterruptHandler
  4285  000B' 0081'              	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4286  000C' 3180' 2000' 3180'  	fcall	_TMR4_SetInterruptHandler
  4287  000F'                    l2597:
  4288                           
  4289                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x4F;
  4290  000F' 304F               	movlw	79
  4291  0010' 0028               	movlb	8	; select bank8
  4292  0011' 0097               	movwf	23	;volatile
  4293  0012'                    l403:
  4294  0012' 0008               	return
  4295  0013'                    __end_of_TMR4_Initialize:
  4296                           
  4297                           	psect	text6
  4298  0000'                    __ptext6:	
  4299 ;; *************** function _TMR4_SetInterruptHandler *****************
  4300 ;; Defined at:
  4301 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4304 ;;		 -> ProcessaDados(1), TMR4_DefaultInterruptHandler(1), 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4316 ;;      Params:         0       0       2       0       0       0
  4317 ;;      Locals:         0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0
  4319 ;;      Totals:         0       0       2       0       0       0
  4320 ;;Total ram usage:        2 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 7
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_TMR4_Initialize
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331  0000'                    _TMR4_SetInterruptHandler:	
  4332                           ;psect for function _TMR4_SetInterruptHandler
  4333                           
  4334  0000'                    l2463:	
  4335                           ;incstack = 0
  4336                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  4337                           
  4338                           
  4339                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  4340  0000' 0021               	movlb	1	; select bank1
  4341  0001' 0800'              	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4342  0002' 0080'              	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  4343  0003' 0800'              	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  4344  0004' 0080'              	movwf	_TMR4_InterruptHandler^(0+128)
  4345  0005'                    l425:
  4346  0005' 0008               	return
  4347  0006'                    __end_of_TMR4_SetInterruptHandler:
  4348                           
  4349                           	psect	text7
  4350  0000'                    __ptext7:	
  4351 ;; *************** function _TMR2_Initialize *****************
  4352 ;; Defined at:
  4353 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4367 ;;      Params:         0       0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 7
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_SYSTEM_Initialize
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381  0000'                    _TMR2_Initialize:	
  4382                           ;psect for function _TMR2_Initialize
  4383                           
  4384  0000'                    l2599:	
  4385                           ;incstack = 0
  4386                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4387                           
  4388                           
  4389                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4390  0000' 30FF               	movlw	255
  4391  0001' 0020               	movlb	0	; select bank0
  4392  0002' 009B               	movwf	27	;volatile
  4393  0003'                    l2601:
  4394                           
  4395                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4396  0003' 019A               	clrf	26	;volatile
  4397  0004'                    l2603:
  4398                           
  4399                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4400  0004' 1091               	bcf	17,1	;volatile
  4401  0005'                    l2605:
  4402                           
  4403                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x07;
  4404  0005' 3007               	movlw	7
  4405  0006' 009C               	movwf	28	;volatile
  4406  0007'                    l318:
  4407  0007' 0008               	return
  4408  0008'                    __end_of_TMR2_Initialize:
  4409                           
  4410                           	psect	text8
  4411  0000'                    __ptext8:	
  4412 ;; *************** function _TMR1_Initialize *****************
  4413 ;; Defined at:
  4414 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0, pclath, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4428 ;;      Params:         0       0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0
  4431 ;;      Totals:         0       0       0       0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 8
  4435 ;; This function calls:
  4436 ;;		_TMR1_SetGateInterruptHandler
  4437 ;; This function is called by:
  4438 ;;		_SYSTEM_Initialize
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442  0000'                    _TMR1_Initialize:	
  4443                           ;psect for function _TMR1_Initialize
  4444                           
  4445  0000'                    l2653:	
  4446                           ;incstack = 0
  4447                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4448                           
  4449                           
  4450                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  4451  0000' 30C0               	movlw	192
  4452  0001' 0020               	movlb	0	; select bank0
  4453  0002' 0099               	movwf	25	;volatile
  4454                           
  4455                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x02;
  4456  0003' 3002               	movlw	2
  4457  0004' 0097               	movwf	23	;volatile
  4458                           
  4459                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x18;
  4460  0005' 3018               	movlw	24
  4461  0006' 0096               	movwf	22	;volatile
  4462  0007'                    l2655:
  4463                           
  4464                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  4465  0007' 1011               	bcf	17,0	;volatile
  4466                           
  4467                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4468  0008' 0817               	movf	23,w	;volatile
  4469  0009' 0021               	movlb	1	; select bank1
  4470  000A' 0080'              	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  4471  000B' 0020               	movlb	0	; select bank0
  4472  000C' 0816               	movf	22,w	;volatile
  4473  000D' 0021               	movlb	1	; select bank1
  4474  000E' 0080'              	movwf	_timer1ReloadVal^(0+128)	;volatile
  4475  000F'                    l2657:
  4476                           
  4477                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  4478  000F' 0020               	movlb	0	; select bank0
  4479  0010' 1391               	bcf	17,7	;volatile
  4480  0011'                    l2659:
  4481                           
  4482                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  4483  0011' 0021               	movlb	1	; select bank1
  4484  0012' 1791               	bsf	17,7	;volatile
  4485  0013'                    l2661:
  4486                           
  4487                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  4488  0013' 3000'              	movlw	low _TMR1_DefaultGateInterruptHandler
  4489  0014' 0080'              	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  4490  0015' 3000'              	movlw	high _TMR1_DefaultGateInterruptHandler
  4491  0016' 0081'              	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  4492  0017' 3180' 2000' 3180'  	fcall	_TMR1_SetGateInterruptHandler
  4493  001A'                    l2663:
  4494                           
  4495                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x21;
  4496  001A' 3021               	movlw	33
  4497  001B' 0020               	movlb	0	; select bank0
  4498  001C' 0098               	movwf	24	;volatile
  4499  001D'                    l148:
  4500  001D' 0008               	return
  4501  001E'                    __end_of_TMR1_Initialize:
  4502                           
  4503                           	psect	text9
  4504  0000'                    __ptext9:	
  4505 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  4506 ;; Defined at:
  4507 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4510 ;;		 -> posicao_bola_tubo(1), TMR1_DefaultGateInterruptHandler(1), 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4522 ;;      Params:         0       0       2       0       0       0
  4523 ;;      Locals:         0       0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0
  4525 ;;      Totals:         0       0       2       0       0       0
  4526 ;;Total ram usage:        2 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 7
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_TMR1_Initialize
  4533 ;;		_main
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537  0000'                    _TMR1_SetGateInterruptHandler:	
  4538                           ;psect for function _TMR1_SetGateInterruptHandler
  4539                           
  4540  0000'                    l2437:	
  4541                           ;incstack = 0
  4542                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  4543                           
  4544                           
  4545                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  4546  0000' 0021               	movlb	1	; select bank1
  4547  0001' 0800'              	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  4548  0002' 0080'              	movwf	(_TMR1_GateInterruptHandler+1)^(0+128)
  4549  0003' 0800'              	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  4550  0004' 0080'              	movwf	_TMR1_GateInterruptHandler^(0+128)
  4551  0005'                    l181:
  4552  0005' 0008               	return
  4553  0006'                    __end_of_TMR1_SetGateInterruptHandler:
  4554                           
  4555                           	psect	text10
  4556  0000'                    __ptext10:	
  4557 ;; *************** function _TMR0_Initialize *****************
  4558 ;; Defined at:
  4559 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0, pclath, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4573 ;;      Params:         0       0       0       0       0       0
  4574 ;;      Locals:         0       0       0       0       0       0
  4575 ;;      Temps:          0       0       0       0       0       0
  4576 ;;      Totals:         0       0       0       0       0       0
  4577 ;;Total ram usage:        0 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 8
  4580 ;; This function calls:
  4581 ;;		_TMR0_SetInterruptHandler
  4582 ;; This function is called by:
  4583 ;;		_SYSTEM_Initialize
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587  0000'                    _TMR0_Initialize:	
  4588                           ;psect for function _TMR0_Initialize
  4589                           
  4590  0000'                    l2607:	
  4591                           ;incstack = 0
  4592                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4593                           
  4594                           
  4595                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4596  0000' 0021               	movlb	1	; select bank1
  4597  0001' 0815               	movf	21,w	;volatile
  4598  0002' 39C0               	andlw	192
  4599  0003' 3817               	iorlw	23
  4600  0004' 0095               	movwf	21	;volatile
  4601  0005'                    l2609:
  4602                           
  4603                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x64;
  4604  0005' 3064               	movlw	100
  4605  0006' 0020               	movlb	0	; select bank0
  4606  0007' 0095               	movwf	21	;volatile
  4607  0008'                    l2611:
  4608                           
  4609                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 100;
  4610  0008' 3064               	movlw	100
  4611  0009' 0021               	movlb	1	; select bank1
  4612  000A' 0080'              	movwf	_timer0ReloadVal^(0+128)	;volatile
  4613  000B'                    l2613:
  4614                           
  4615                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  4616  000B' 110B               	bcf	11,2	;volatile
  4617  000C'                    l2615:
  4618                           
  4619                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  4620  000C' 168B               	bsf	11,5	;volatile
  4621  000D'                    l2617:
  4622                           
  4623                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4624  000D' 3000'              	movlw	low _TMR0_DefaultInterruptHandler
  4625  000E' 0080'              	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4626  000F' 3000'              	movlw	high _TMR0_DefaultInterruptHandler
  4627  0010' 0081'              	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4628  0011' 3180' 2000' 3180'  	fcall	_TMR0_SetInterruptHandler
  4629  0014'                    l445:
  4630  0014' 0008               	return
  4631  0015'                    __end_of_TMR0_Initialize:
  4632                           
  4633                           	psect	text11
  4634  0000'                    __ptext11:	
  4635 ;; *************** function _TMR0_SetInterruptHandler *****************
  4636 ;; Defined at:
  4637 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4640 ;;		 -> inicia_ultrasom(1), TMR0_DefaultInterruptHandler(1), 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4652 ;;      Params:         0       0       2       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0
  4655 ;;      Totals:         0       0       2       0       0       0
  4656 ;;Total ram usage:        2 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; Hardware stack levels required when called: 7
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_TMR0_Initialize
  4663 ;;		_main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667  0000'                    _TMR0_SetInterruptHandler:	
  4668                           ;psect for function _TMR0_SetInterruptHandler
  4669                           
  4670  0000'                    l2465:	
  4671                           ;incstack = 0
  4672                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4673                           
  4674                           
  4675                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  4676  0000' 0021               	movlb	1	; select bank1
  4677  0001' 0800'              	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4678  0002' 0080'              	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  4679  0003' 0800'              	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  4680  0004' 0080'              	movwf	_TMR0_InterruptHandler^(0+128)
  4681  0005'                    l461:
  4682  0005' 0008               	return
  4683  0006'                    __end_of_TMR0_SetInterruptHandler:
  4684                           
  4685                           	psect	text12
  4686  0000'                    __ptext12:	
  4687 ;; *************** function _PIN_MANAGER_Initialize *****************
  4688 ;; Defined at:
  4689 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;		None
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;		None
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4703 ;;      Params:         0       0       0       0       0       0
  4704 ;;      Locals:         0       0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0
  4706 ;;      Totals:         0       0       0       0       0       0
  4707 ;;Total ram usage:        0 bytes
  4708 ;; Hardware stack levels used: 1
  4709 ;; Hardware stack levels required when called: 7
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_SYSTEM_Initialize
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717  0000'                    _PIN_MANAGER_Initialize:	
  4718                           ;psect for function _PIN_MANAGER_Initialize
  4719                           
  4720  0000'                    l2563:	
  4721                           ;incstack = 0
  4722                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4723                           
  4724                           
  4725                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4726  0000' 0022               	movlb	2	; select bank2
  4727  0001' 018C               	clrf	12	;volatile
  4728                           
  4729                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4730  0002' 018D               	clrf	13	;volatile
  4731  0003'                    l2565:
  4732                           
  4733                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x21;
  4734  0003' 3021               	movlw	33
  4735  0004' 0021               	movlb	1	; select bank1
  4736  0005' 008C               	movwf	12	;volatile
  4737  0006'                    l2567:
  4738                           
  4739                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  4740  0006' 30F7               	movlw	247
  4741  0007' 008D               	movwf	13	;volatile
  4742  0008'                    l2569:
  4743                           
  4744                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  4745  0008' 30F0               	movlw	240
  4746  0009' 0023               	movlb	3	; select bank3
  4747  000A' 008D               	movwf	13	;volatile
  4748  000B'                    l2571:
  4749                           
  4750                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  4751  000B' 301F               	movlw	31
  4752  000C' 008C               	movwf	12	;volatile
  4753                           
  4754                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  4755  000D' 0024               	movlb	4	; select bank4
  4756  000E' 018D               	clrf	13	;volatile
  4757                           
  4758                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  4759  000F' 018C               	clrf	12	;volatile
  4760  0010'                    l2573:
  4761                           
  4762                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  4763  0010' 0021               	movlb	1	; select bank1
  4764  0011' 1795               	bsf	21,7	;volatile
  4765                           
  4766                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  4767  0012' 0022               	movlb	2	; select bank2
  4768  0013' 019D               	clrf	29	;volatile
  4769                           
  4770                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  4771  0014' 019E               	clrf	30	;volatile
  4772  0015'                    l70:
  4773  0015' 0008               	return
  4774  0016'                    __end_of_PIN_MANAGER_Initialize:
  4775                           
  4776                           	psect	text13
  4777  0000'                    __ptext13:	
  4778 ;; *************** function _OSCILLATOR_Initialize *****************
  4779 ;; Defined at:
  4780 ;;		line 69 in file "mcc_generated_files/mcc.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4794 ;;      Params:         0       0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; Hardware stack levels required when called: 7
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_SYSTEM_Initialize
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808  0000'                    _OSCILLATOR_Initialize:	
  4809                           ;psect for function _OSCILLATOR_Initialize
  4810                           
  4811  0000'                    l2575:	
  4812                           ;incstack = 0
  4813                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4814                           
  4815                           
  4816                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  4817  0000' 3078               	movlw	120
  4818  0001' 0021               	movlb	1	; select bank1
  4819  0002' 0099               	movwf	25	;volatile
  4820  0003'                    l2577:
  4821                           
  4822                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  4823  0003' 0198               	clrf	24	;volatile
  4824  0004'                    l2579:
  4825                           
  4826                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  4827  0004' 0022               	movlb	2	; select bank2
  4828  0005' 0196               	clrf	22	;volatile
  4829  0006'                    l42:
  4830  0006' 0008               	return
  4831  0007'                    __end_of_OSCILLATOR_Initialize:
  4832                           
  4833                           	psect	text14
  4834  0000'                    __ptext14:	
  4835 ;; *************** function _FVR_Initialize *****************
  4836 ;; Defined at:
  4837 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4851 ;;      Params:         0       0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0
  4854 ;;      Totals:         0       0       0       0       0       0
  4855 ;;Total ram usage:        0 bytes
  4856 ;; Hardware stack levels used: 1
  4857 ;; Hardware stack levels required when called: 7
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_SYSTEM_Initialize
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865  0000'                    _FVR_Initialize:	
  4866                           ;psect for function _FVR_Initialize
  4867                           
  4868  0000'                    l2585:	
  4869                           ;incstack = 0
  4870                           ; Regs used in _FVR_Initialize: [wreg]
  4871                           
  4872                           
  4873                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  4874  0000' 3081               	movlw	129
  4875  0001' 0022               	movlb	2	; select bank2
  4876  0002' 0097               	movwf	23	;volatile
  4877  0003'                    l118:
  4878  0003' 0008               	return
  4879  0004'                    __end_of_FVR_Initialize:
  4880                           
  4881                           	psect	text15
  4882  0000'                    __ptext15:	
  4883 ;; *************** function _EUSART_Initialize *****************
  4884 ;; Defined at:
  4885 ;;		line 66 in file "mcc_generated_files/eusart.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, pclath, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4899 ;;      Params:         0       0       0       0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0
  4902 ;;      Totals:         0       0       0       0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; Hardware stack levels required when called: 8
  4906 ;; This function calls:
  4907 ;;		_EUSART_SetErrorHandler
  4908 ;;		_EUSART_SetFramingErrorHandler
  4909 ;;		_EUSART_SetOverrunErrorHandler
  4910 ;; This function is called by:
  4911 ;;		_SYSTEM_Initialize
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915  0000'                    _EUSART_Initialize:	
  4916                           ;psect for function _EUSART_Initialize
  4917                           
  4918  0000'                    l2665:	
  4919                           ;incstack = 0
  4920                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4921                           
  4922                           
  4923                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  4924  0000' 3008               	movlw	8
  4925  0001' 0023               	movlb	3	; select bank3
  4926  0002' 009F               	movwf	31	;volatile
  4927                           
  4928                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  4929  0003' 3090               	movlw	144
  4930  0004' 009D               	movwf	29	;volatile
  4931                           
  4932                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  4933  0005' 3024               	movlw	36
  4934  0006' 009E               	movwf	30	;volatile
  4935                           
  4936                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  4937  0007' 3022               	movlw	34
  4938  0008' 009B               	movwf	27	;volatile
  4939  0009'                    l2667:
  4940                           
  4941                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  4942  0009' 019C               	clrf	28	;volatile
  4943  000A'                    l2669:
  4944                           
  4945                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4946  000A' 3000               	movlw	0
  4947  000B' 0021               	movlb	1	; select bank1
  4948  000C' 0080'              	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  4949  000D' 3000               	movlw	0
  4950  000E' 0081'              	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  4951  000F' 3180' 2000' 3180'  	fcall	_EUSART_SetFramingErrorHandler
  4952  0012'                    l2671:
  4953                           
  4954                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4955  0012' 3000               	movlw	0
  4956  0013' 0021               	movlb	1	; select bank1
  4957  0014' 0080'              	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  4958  0015' 3000               	movlw	0
  4959  0016' 0081'              	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  4960  0017' 3180' 2000' 3180'  	fcall	_EUSART_SetOverrunErrorHandler
  4961  001A'                    l2673:
  4962                           
  4963                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4964  001A' 3000               	movlw	0
  4965  001B' 0021               	movlb	1	; select bank1
  4966  001C' 0080'              	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  4967  001D' 3000               	movlw	0
  4968  001E' 0081'              	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  4969  001F' 3180' 2000' 3180'  	fcall	_EUSART_SetErrorHandler
  4970  0022'                    l2675:
  4971                           
  4972                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4973  0022' 0021               	movlb	1	; select bank1
  4974  0023' 0180'              	clrf	_eusartRxLastError^(0+128)	;volatile
  4975  0024'                    l260:
  4976  0024' 0008               	return
  4977  0025'                    __end_of_EUSART_Initialize:
  4978                           
  4979                           	psect	text16
  4980  0000'                    __ptext16:	
  4981 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4982 ;; Defined at:
  4983 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  4986 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4998 ;;      Params:         0       0       2       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0
  5001 ;;      Totals:         0       0       2       0       0       0
  5002 ;;Total ram usage:        2 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 7
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_EUSART_Initialize
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012  0000'                    _EUSART_SetOverrunErrorHandler:	
  5013                           ;psect for function _EUSART_SetOverrunErrorHandler
  5014                           
  5015  0000'                    l2459:	
  5016                           ;incstack = 0
  5017                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5018                           
  5019                           
  5020                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5021  0000' 0021               	movlb	1	; select bank1
  5022  0001' 0800'              	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  5023  0002' 0080'              	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5024  0003' 0800'              	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  5025  0004' 0080'              	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5026  0005'                    l302:
  5027  0005' 0008               	return
  5028  0006'                    __end_of_EUSART_SetOverrunErrorHandler:
  5029                           
  5030                           	psect	text17
  5031  0000'                    __ptext17:	
  5032 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5033 ;; Defined at:
  5034 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5037 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5049 ;;      Params:         0       0       2       0       0       0
  5050 ;;      Locals:         0       0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0
  5052 ;;      Totals:         0       0       2       0       0       0
  5053 ;;Total ram usage:        2 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 7
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_EUSART_Initialize
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063  0000'                    _EUSART_SetFramingErrorHandler:	
  5064                           ;psect for function _EUSART_SetFramingErrorHandler
  5065                           
  5066  0000'                    l2457:	
  5067                           ;incstack = 0
  5068                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5069                           
  5070                           
  5071                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5072  0000' 0021               	movlb	1	; select bank1
  5073  0001' 0800'              	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  5074  0002' 0080'              	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5075  0003' 0800'              	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  5076  0004' 0080'              	movwf	_EUSART_FramingErrorHandler^(0+128)
  5077  0005'                    l299:
  5078  0005' 0008               	return
  5079  0006'                    __end_of_EUSART_SetFramingErrorHandler:
  5080                           
  5081                           	psect	text18
  5082  0000'                    __ptext18:	
  5083 ;; *************** function _EUSART_SetErrorHandler *****************
  5084 ;; Defined at:
  5085 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5088 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5100 ;;      Params:         0       0       2       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0
  5103 ;;      Totals:         0       0       2       0       0       0
  5104 ;;Total ram usage:        2 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 7
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_EUSART_Initialize
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114  0000'                    _EUSART_SetErrorHandler:	
  5115                           ;psect for function _EUSART_SetErrorHandler
  5116                           
  5117  0000'                    l2461:	
  5118                           ;incstack = 0
  5119                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5120                           
  5121                           
  5122                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  5123  0000' 0021               	movlb	1	; select bank1
  5124  0001' 0800'              	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  5125  0002' 0080'              	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5126  0003' 0800'              	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  5127  0004' 0080'              	movwf	_EUSART_ErrorHandler^(0+128)
  5128  0005'                    l305:
  5129  0005' 0008               	return
  5130  0006'                    __end_of_EUSART_SetErrorHandler:
  5131                           
  5132                           	psect	text19
  5133  0000'                    __ptext19:	
  5134 ;; *************** function _EPWM1_Initialize *****************
  5135 ;; Defined at:
  5136 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5150 ;;      Params:         0       0       0       0       0       0
  5151 ;;      Locals:         0       0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0
  5153 ;;      Totals:         0       0       0       0       0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; Hardware stack levels required when called: 7
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_SYSTEM_Initialize
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164  0000'                    _EPWM1_Initialize:	
  5165                           ;psect for function _EPWM1_Initialize
  5166                           
  5167  0000'                    l2639:	
  5168                           ;incstack = 0
  5169                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  5170                           
  5171                           
  5172                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x0C;
  5173  0000' 300C               	movlw	12
  5174  0001' 0025               	movlb	5	; select bank5
  5175  0002' 0093               	movwf	19	;volatile
  5176  0003'                    l2641:
  5177                           
  5178                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  5179  0003' 0195               	clrf	21	;volatile
  5180  0004'                    l2643:
  5181                           
  5182                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  5183  0004' 3080               	movlw	128
  5184  0005' 0094               	movwf	20	;volatile
  5185  0006'                    l2645:
  5186                           
  5187                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  5188  0006' 3001               	movlw	1
  5189  0007' 0096               	movwf	22	;volatile
  5190  0008'                    l2647:
  5191                           
  5192                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  5193  0008' 0192               	clrf	18	;volatile
  5194  0009'                    l2649:
  5195                           
  5196                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x00;
  5197  0009' 0191               	clrf	17	;volatile
  5198  000A'                    l2651:
  5199                           
  5200                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  5201  000A' 30FC               	movlw	-4
  5202  000B' 059E               	andwf	30,f	;volatile
  5203  000C'                    l354:
  5204  000C' 0008               	return
  5205  000D'                    __end_of_EPWM1_Initialize:
  5206                           
  5207                           	psect	text20
  5208  0000'                    __ptext20:	
  5209 ;; *************** function _DAC_Initialize *****************
  5210 ;; Defined at:
  5211 ;;		line 58 in file "mcc_generated_files/dac.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;		None
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  1    wreg      void 
  5218 ;; Registers used:
  5219 ;;		wreg
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5225 ;;      Params:         0       0       0       0       0       0
  5226 ;;      Locals:         0       0       0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0       0
  5228 ;;      Totals:         0       0       0       0       0       0
  5229 ;;Total ram usage:        0 bytes
  5230 ;; Hardware stack levels used: 1
  5231 ;; Hardware stack levels required when called: 7
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_SYSTEM_Initialize
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239  0000'                    _DAC_Initialize:	
  5240                           ;psect for function _DAC_Initialize
  5241                           
  5242  0000'                    l2583:	
  5243                           ;incstack = 0
  5244                           ; Regs used in _DAC_Initialize: [wreg]
  5245                           
  5246                           
  5247                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  5248  0000' 3080               	movlw	128
  5249  0001' 0022               	movlb	2	; select bank2
  5250  0002' 0098               	movwf	24	;volatile
  5251                           
  5252                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  5253  0003' 3006               	movlw	6
  5254  0004' 0099               	movwf	25	;volatile
  5255  0005'                    l376:
  5256  0005' 0008               	return
  5257  0006'                    __end_of_DAC_Initialize:
  5258                           
  5259                           	psect	text21
  5260  0000'                    __ptext21:	
  5261 ;; *************** function _CMP1_Initialize *****************
  5262 ;; Defined at:
  5263 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5277 ;;      Params:         0       0       0       0       0       0
  5278 ;;      Locals:         0       0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0
  5280 ;;      Totals:         0       0       0       0       0       0
  5281 ;;Total ram usage:        0 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; Hardware stack levels required when called: 7
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_SYSTEM_Initialize
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291  0000'                    _CMP1_Initialize:	
  5292                           ;psect for function _CMP1_Initialize
  5293                           
  5294  0000'                    l2631:	
  5295                           ;incstack = 0
  5296                           ; Regs used in _CMP1_Initialize: [wreg]
  5297                           
  5298                           
  5299                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  5300  0000' 3084               	movlw	132
  5301  0001' 0022               	movlb	2	; select bank2
  5302  0002' 0091               	movwf	17	;volatile
  5303                           
  5304                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  5305  0003' 3010               	movlw	16
  5306  0004' 0092               	movwf	18	;volatile
  5307  0005'                    l366:
  5308  0005' 0008               	return
  5309  0006'                    __end_of_CMP1_Initialize:
  5310                           
  5311                           	psect	text22
  5312  0000'                    __ptext22:	
  5313 ;; *************** function _ADC_Initialize *****************
  5314 ;; Defined at:
  5315 ;;		line 67 in file "mcc_generated_files/adc.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      void 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5329 ;;      Params:         0       0       0       0       0       0
  5330 ;;      Locals:         0       0       0       0       0       0
  5331 ;;      Temps:          0       0       0       0       0       0
  5332 ;;      Totals:         0       0       0       0       0       0
  5333 ;;Total ram usage:        0 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; Hardware stack levels required when called: 7
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_SYSTEM_Initialize
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343  0000'                    _ADC_Initialize:	
  5344                           ;psect for function _ADC_Initialize
  5345                           
  5346  0000'                    l2633:	
  5347                           ;incstack = 0
  5348                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5349                           
  5350                           
  5351                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  5352  0000' 30D3               	movlw	211
  5353  0001' 0021               	movlb	1	; select bank1
  5354  0002' 009E               	movwf	30	;volatile
  5355  0003'                    l2635:
  5356                           
  5357                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  5358  0003' 019B               	clrf	27	;volatile
  5359  0004'                    l2637:
  5360                           
  5361                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5362  0004' 019C               	clrf	28	;volatile
  5363                           
  5364                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5365  0005' 3001               	movlw	1
  5366  0006' 009D               	movwf	29	;volatile
  5367  0007'                    l90:
  5368  0007' 0008               	return
  5369  0008'                    __end_of_ADC_Initialize:
  5370                           
  5371                           	psect	text23
  5372  0000'                    __ptext23:	
  5373 ;; *************** function _EUSART_is_rx_ready *****************
  5374 ;; Defined at:
  5375 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      _Bool 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5389 ;;      Params:         0       0       0       0       0       0
  5390 ;;      Locals:         0       0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0
  5392 ;;      Totals:         0       0       0       0       0       0
  5393 ;;Total ram usage:        0 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; Hardware stack levels required when called: 7
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_main
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403  0000'                    _EUSART_is_rx_ready:	
  5404                           ;psect for function _EUSART_is_rx_ready
  5405                           
  5406  0000'                    l2799:	
  5407                           ;incstack = 0
  5408                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5409                           
  5410                           
  5411                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  5412  0000' 0020               	movlb	0	; select bank0
  5413  0001' 0E11               	swapf	17,w	;volatile
  5414  0002' 0C89               	rrf	9,f
  5415  0003' 3901               	andlw	1
  5416  0004'                    l268:
  5417  0004' 0008               	return
  5418  0005'                    __end_of_EUSART_is_rx_ready:
  5419                           
  5420                           	psect	text24
  5421  0000'                    __ptext24:	
  5422 ;; *************** function _Dados_recebidos *****************
  5423 ;; Defined at:
  5424 ;;		line 159 in file "funcoes.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  rxData          1    2[BANK1 ] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5438 ;;      Params:         0       0       0       0       0       0
  5439 ;;      Locals:         0       0       1       0       0       0
  5440 ;;      Temps:          0       0       1       0       0       0
  5441 ;;      Totals:         0       0       2       0       0       0
  5442 ;;Total ram usage:        2 bytes
  5443 ;; Hardware stack levels used: 1
  5444 ;; Hardware stack levels required when called: 8
  5445 ;; This function calls:
  5446 ;;		_EUSART_Read
  5447 ;;		_TMR4_WriteTimer
  5448 ;; This function is called by:
  5449 ;;		_main
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453  0000'                    _Dados_recebidos:	
  5454                           ;psect for function _Dados_recebidos
  5455                           
  5456  0000'                    l2807:	
  5457                           ;incstack = 0
  5458                           ; Regs used in _Dados_recebidos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5459                           
  5460                           
  5461                           ;funcoes.c: 161:     dado_atual = 1;
  5462  0000' 0021               	movlb	1	; select bank1
  5463  0001' 0180'              	clrf	_dado_atual^(0+128)
  5464  0002' 0A80'              	incf	_dado_atual^(0+128),f
  5465  0003'                    l2809:
  5466                           
  5467                           ;funcoes.c: 162:     uint8_t rxData = EUSART_Read();
  5468  0003' 3180' 2000' 3180'  	fcall	_EUSART_Read
  5469  0006' 0021               	movlb	1	; select bank1
  5470  0007' 0080'              	movwf	Dados_recebidos@rxData^(0+128)
  5471  0008'                    l2811:
  5472                           
  5473                           ;funcoes.c: 163:     if(countRx < 5){
  5474  0008' 0800'              	movf	_countRx^(0+128),w
  5475  0009' 3A80               	xorlw	128
  5476  000A' 3E7B               	addlw	-133
  5477  000B' 1803               	skipnc
  5478  000C' 2800'              	goto	u1661
  5479  000D' 2800'              	goto	u1660
  5480  000E'                    u1661:
  5481  000E' 2800'              	goto	l2819
  5482  000F'                    u1660:
  5483  000F'                    l2813:
  5484                           
  5485                           ;funcoes.c: 164:         RxBuffer[countRx] = rxData;
  5486  000F' 0800'              	movf	_countRx^(0+128),w
  5487  0010' 3E00'              	addlw	(low (_RxBuffer| 0))& (0+255)
  5488  0011' 0086               	movwf	6
  5489  0012' 0187               	clrf	7
  5490  0013' 0800'              	movf	Dados_recebidos@rxData^(0+128),w
  5491  0014' 0081               	movwf	1
  5492  0015'                    l2815:
  5493                           
  5494                           ;funcoes.c: 165:         countRx++;
  5495  0015' 3001               	movlw	1
  5496  0016' 0080'              	movwf	??_Dados_recebidos^(0+128)
  5497  0017' 0800'              	movf	??_Dados_recebidos^(0+128),w
  5498  0018' 0780'              	addwf	_countRx^(0+128),f
  5499  0019'                    l2817:
  5500                           
  5501                           ;funcoes.c: 166:         TMR4_WriteTimer(0);
  5502  0019' 3000               	movlw	0
  5503  001A' 3180' 2000' 3180'  	fcall	_TMR4_WriteTimer
  5504                           
  5505                           ;funcoes.c: 167:     }else{
  5506  001D' 2800'              	goto	l790
  5507  001E'                    l2819:
  5508                           
  5509                           ;funcoes.c: 168:         countRx++;
  5510  001E' 3001               	movlw	1
  5511  001F' 0080'              	movwf	??_Dados_recebidos^(0+128)
  5512  0020' 0800'              	movf	??_Dados_recebidos^(0+128),w
  5513  0021' 0780'              	addwf	_countRx^(0+128),f
  5514  0022'                    l2821:
  5515                           
  5516                           ;funcoes.c: 169:         TMR4_WriteTimer(0);
  5517  0022' 3000               	movlw	0
  5518  0023' 3180' 2000' 3180'  	fcall	_TMR4_WriteTimer
  5519  0026'                    l790:
  5520  0026' 0008               	return
  5521  0027'                    __end_of_Dados_recebidos:
  5522                           
  5523                           	psect	text25
  5524  0000'                    __ptext25:	
  5525 ;; *************** function _TMR4_WriteTimer *****************
  5526 ;; Defined at:
  5527 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  timerVal        1    wreg     unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  timerVal        1    0[BANK1 ] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5541 ;;      Params:         0       0       0       0       0       0
  5542 ;;      Locals:         0       0       1       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0
  5544 ;;      Totals:         0       0       1       0       0       0
  5545 ;;Total ram usage:        1 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 7
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_Dados_recebidos
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555  0000'                    _TMR4_WriteTimer:	
  5556                           ;psect for function _TMR4_WriteTimer
  5557                           
  5558                           
  5559                           ;incstack = 0
  5560                           ; Regs used in _TMR4_WriteTimer: [wreg]
  5561                           ;TMR4_WriteTimer@timerVal stored from wreg
  5562  0000' 0021               	movlb	1	; select bank1
  5563  0001' 0080'              	movwf	TMR4_WriteTimer@timerVal^(0+128)
  5564  0002'                    l2689:
  5565                           
  5566                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  5567  0002' 0800'              	movf	TMR4_WriteTimer@timerVal^(0+128),w
  5568  0003' 0028               	movlb	8	; select bank8
  5569  0004' 0095               	movwf	21	;volatile
  5570  0005'                    l415:
  5571  0005' 0008               	return
  5572  0006'                    __end_of_TMR4_WriteTimer:
  5573                           
  5574                           	psect	text26
  5575  0000'                    __ptext26:	
  5576 ;; *************** function _EUSART_Read *****************
  5577 ;; Defined at:
  5578 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      unsigned char 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5592 ;;      Params:         0       0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0
  5595 ;;      Totals:         0       0       0       0       0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 7
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_Dados_recebidos
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606  0000'                    _EUSART_Read:	
  5607                           ;psect for function _EUSART_Read
  5608                           
  5609  0000'                    l2677:	
  5610                           ;incstack = 0
  5611                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5612                           
  5613  0000'                    l277:	
  5614                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  5615                           
  5616                           
  5617                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  5618  0000' 0020               	movlb	0	; select bank0
  5619  0001' 1E91               	btfss	17,5	;volatile
  5620  0002' 2800'              	goto	u1511
  5621  0003' 2800'              	goto	u1510
  5622  0004'                    u1511:
  5623  0004' 2800'              	goto	l277
  5624  0005'                    u1510:
  5625  0005'                    l2679:
  5626                           
  5627                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  5628  0005' 0021               	movlb	1	; select bank1
  5629  0006' 0180'              	clrf	_eusartRxLastError^(0+128)	;volatile
  5630  0007'                    l2681:
  5631                           
  5632                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  5633  0007' 0023               	movlb	3	; select bank3
  5634  0008' 1C9D               	btfss	29,1	;volatile
  5635  0009' 2800'              	goto	u1521
  5636  000A' 2800'              	goto	u1520
  5637  000B'                    u1521:
  5638  000B' 2800'              	goto	l2685
  5639  000C'                    u1520:
  5640  000C'                    l2683:
  5641                           
  5642                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  5643  000C' 121D               	bcf	29,4	;volatile
  5644                           
  5645                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  5646  000D' 161D               	bsf	29,4	;volatile
  5647  000E'                    l2685:
  5648                           
  5649                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  5650  000E' 0819               	movf	25,w	;volatile
  5651  000F'                    l281:
  5652  000F' 0008               	return
  5653  0010'                    __end_of_EUSART_Read:
  5654                           
  5655                           	psect	text27
  5656  0000'                    __ptext27:	
  5657 ;; *************** function _CMP1_GetOutputStatus *****************
  5658 ;; Defined at:
  5659 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      _Bool 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5673 ;;      Params:         0       0       0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0
  5676 ;;      Totals:         0       0       0       0       0       0
  5677 ;;Total ram usage:        0 bytes
  5678 ;; Hardware stack levels used: 1
  5679 ;; Hardware stack levels required when called: 7
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_main
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687  0000'                    _CMP1_GetOutputStatus:	
  5688                           ;psect for function _CMP1_GetOutputStatus
  5689                           
  5690  0000'                    l2803:	
  5691                           ;incstack = 0
  5692                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  5693                           
  5694                           
  5695                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  5696  0000' 0022               	movlb	2	; select bank2
  5697  0001' 0815               	movf	21,w	;volatile
  5698  0002' 3901               	andlw	1
  5699  0003'                    l369:
  5700  0003' 0008               	return
  5701  0004'                    __end_of_CMP1_GetOutputStatus:
  5702                           
  5703                           	psect	intentry
  5704  0000'                    __pintentry:	
  5705 ;; *************** function _INTERRUPT_InterruptManager *****************
  5706 ;; Defined at:
  5707 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5721 ;;      Params:         0       0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 6
  5728 ;; This function calls:
  5729 ;;		_TMR0_ISR
  5730 ;;		_TMR1_GATE_ISR
  5731 ;;		_TMR4_ISR
  5732 ;;		_TMR6_ISR
  5733 ;; This function is called by:
  5734 ;;		Interrupt level 1
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738  0000'                    _INTERRUPT_InterruptManager:
  5739                           
  5740                           ;incstack = 0
  5741  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5742                           
  5743                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5744  0001' 3180'              	pagesel	$
  5745  0002'                    i1l2825:
  5746                           
  5747                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5748  0002' 1E8B               	btfss	11,5	;volatile
  5749  0003' 2800'              	goto	u167_21
  5750  0004' 2800'              	goto	u167_20
  5751  0005'                    u167_21:
  5752  0005' 2800'              	goto	i1l207
  5753  0006'                    u167_20:
  5754  0006'                    i1l2827:
  5755  0006' 1D0B               	btfss	11,2	;volatile
  5756  0007' 2800'              	goto	u168_21
  5757  0008' 2800'              	goto	u168_20
  5758  0009'                    u168_21:
  5759  0009' 2800'              	goto	i1l207
  5760  000A'                    u168_20:
  5761  000A'                    i1l2829:
  5762                           
  5763                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5764  000A' 3180' 2000' 3180'  	fcall	_TMR0_ISR
  5765                           
  5766                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5767  000D' 2800'              	goto	i1l217
  5768  000E'                    i1l207:	
  5769                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5770                           
  5771  000E' 1F0B               	btfss	11,6	;volatile
  5772  000F' 2800'              	goto	u169_21
  5773  0010' 2800'              	goto	u169_20
  5774  0011'                    u169_21:
  5775  0011' 2800'              	goto	i1l217
  5776  0012'                    u169_20:
  5777  0012'                    i1l2831:
  5778                           
  5779                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  5780  0012' 0021               	movlb	1	; select bank1
  5781  0013' 1F91               	btfss	17,7	;volatile
  5782  0014' 2800'              	goto	u170_21
  5783  0015' 2800'              	goto	u170_20
  5784  0016'                    u170_21:
  5785  0016' 2800'              	goto	i1l210
  5786  0017'                    u170_20:
  5787  0017'                    i1l2833:
  5788  0017' 0020               	movlb	0	; select bank0
  5789  0018' 1F91               	btfss	17,7	;volatile
  5790  0019' 2800'              	goto	u171_21
  5791  001A' 2800'              	goto	u171_20
  5792  001B'                    u171_21:
  5793  001B' 2800'              	goto	i1l210
  5794  001C'                    u171_20:
  5795  001C'                    i1l2835:
  5796                           
  5797                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  5798  001C' 3180' 2000' 3180'  	fcall	_TMR1_GATE_ISR
  5799                           
  5800                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5801  001F' 2800'              	goto	i1l217
  5802  0020'                    i1l210:	
  5803                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  5804                           
  5805  0020' 0021               	movlb	1	; select bank1
  5806  0021' 1D93               	btfss	19,3	;volatile
  5807  0022' 2800'              	goto	u172_21
  5808  0023' 2800'              	goto	u172_20
  5809  0024'                    u172_21:
  5810  0024' 2800'              	goto	i1l212
  5811  0025'                    u172_20:
  5812  0025'                    i1l2837:
  5813  0025' 0020               	movlb	0	; select bank0
  5814  0026' 1D93               	btfss	19,3	;volatile
  5815  0027' 2800'              	goto	u173_21
  5816  0028' 2800'              	goto	u173_20
  5817  0029'                    u173_21:
  5818  0029' 2800'              	goto	i1l212
  5819  002A'                    u173_20:
  5820  002A'                    i1l2839:
  5821                           
  5822                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR6_ISR();
  5823  002A' 3180' 2000' 3180'  	fcall	_TMR6_ISR
  5824                           
  5825                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5826  002D' 2800'              	goto	i1l217
  5827  002E'                    i1l212:	
  5828                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  5829                           
  5830  002E' 0021               	movlb	1	; select bank1
  5831  002F' 1C93               	btfss	19,1	;volatile
  5832  0030' 2800'              	goto	u174_21
  5833  0031' 2800'              	goto	u174_20
  5834  0032'                    u174_21:
  5835  0032' 2800'              	goto	i1l211
  5836  0033'                    u174_20:
  5837  0033'                    i1l2841:
  5838  0033' 0020               	movlb	0	; select bank0
  5839  0034' 1C93               	btfss	19,1	;volatile
  5840  0035' 2800'              	goto	u175_21
  5841  0036' 2800'              	goto	u175_20
  5842  0037'                    u175_21:
  5843  0037' 2800'              	goto	i1l211
  5844  0038'                    u175_20:
  5845  0038'                    i1l2843:
  5846                           
  5847                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR4_ISR();
  5848  0038' 3180' 2000' 3180'  	fcall	_TMR4_ISR
  5849                           
  5850                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  5851  003B' 2800'              	goto	i1l217
  5852  003C'                    i1l211:
  5853  003C'                    i1l217:	
  5854                           ;mcc_generated_files/interrupt_manager.c: 77:     }
  5855                           
  5856  003C' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5857  003D' 0009               	retfie
  5858  003E'                    __end_of_INTERRUPT_InterruptManager:
  5859                           
  5860                           	psect	text29
  5861  0000'                    __ptext29:	
  5862 ;; *************** function _TMR6_ISR *****************
  5863 ;; Defined at:
  5864 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      void 
  5871 ;; Registers used:
  5872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5878 ;;      Params:         0       0       0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0
  5881 ;;      Totals:         0       0       0       0       0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used: 1
  5884 ;; Hardware stack levels required when called: 2
  5885 ;; This function calls:
  5886 ;;		NULL
  5887 ;;		_DRMotordePassos
  5888 ;;		_TMR6_DefaultInterruptHandler
  5889 ;; This function is called by:
  5890 ;;		_INTERRUPT_InterruptManager
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894  0000'                    _TMR6_ISR:	
  5895                           ;psect for function _TMR6_ISR
  5896                           
  5897  0000'                    i1l2787:	
  5898                           ;incstack = 0
  5899                           ; Regs used in _TMR6_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5900                           
  5901                           
  5902                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
  5903  0000' 0020               	movlb	0	; select bank0
  5904  0001' 1193               	bcf	19,3	;volatile
  5905  0002'                    i1l2789:
  5906                           
  5907                           ;mcc_generated_files/tmr6.c: 125:     if(TMR6_InterruptHandler)
  5908  0002' 0021               	movlb	1	; select bank1
  5909  0003' 0800'              	movf	_TMR6_InterruptHandler^(0+128),w
  5910  0004' 0400'              	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
  5911  0005' 1903               	btfsc	3,2
  5912  0006' 2800'              	goto	u164_21
  5913  0007' 2800'              	goto	u164_20
  5914  0008'                    u164_21:
  5915  0008' 2800'              	goto	i1l504
  5916  0009'                    u164_20:
  5917  0009'                    i1l2791:
  5918                           
  5919                           ;mcc_generated_files/tmr6.c: 126:     {;mcc_generated_files/tmr6.c: 127:         TMR6_In
      +                          terruptHandler();
  5920  0009' 0800'              	movf	(_TMR6_InterruptHandler+1)^(0+128),w
  5921  000A' 008A               	movwf	10
  5922  000B' 0800'              	movf	_TMR6_InterruptHandler^(0+128),w
  5923  000C' 000A               	callw
  5924  000D' 3180'              	pagesel	$
  5925  000E'                    i1l504:
  5926  000E' 0008               	return
  5927  000F'                    __end_of_TMR6_ISR:
  5928                           
  5929                           	psect	text30
  5930  0000'                    __ptext30:	
  5931 ;; *************** function _DRMotordePassos *****************
  5932 ;; Defined at:
  5933 ;;		line 91 in file "funcoes.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5947 ;;      Params:         0       0       0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0
  5949 ;;      Temps:          1       0       0       0       0       0
  5950 ;;      Totals:         1       0       0       0       0       0
  5951 ;;Total ram usage:        1 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 1
  5954 ;; This function calls:
  5955 ;;		_muda_passos
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;;		_TMR6_ISR
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962  0000'                    _DRMotordePassos:	
  5963                           ;psect for function _DRMotordePassos
  5964                           
  5965  0000'                    i1l2721:	
  5966                           ;incstack = 0
  5967                           ; Regs used in _DRMotordePassos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5968                           
  5969                           
  5970                           ;funcoes.c: 93:     if(posicao_val_futura > 460){
  5971  0000' 0021               	movlb	1	; select bank1
  5972  0001' 0800'              	movf	(_posicao_val_futura+1)^(0+128),w
  5973  0002' 3A80               	xorlw	128
  5974  0003' 0081'              	movwf	??_DRMotordePassos
  5975  0004' 3081               	movlw	129
  5976  0005' 0201'              	subwf	??_DRMotordePassos,w
  5977  0006' 1D03               	skipz
  5978  0007' 2800'              	goto	u155_25
  5979  0008' 30CD               	movlw	205
  5980  0009' 0200'              	subwf	_posicao_val_futura^(0+128),w
  5981  000A'                    u155_25:
  5982  000A' 1C03               	skipc
  5983  000B' 2800'              	goto	u155_21
  5984  000C' 2800'              	goto	u155_20
  5985  000D'                    u155_21:
  5986  000D' 2800'              	goto	i1l736
  5987  000E'                    u155_20:
  5988  000E'                    i1l2723:
  5989                           
  5990                           ;funcoes.c: 94:         posicao_val_futura = 460;
  5991  000E' 30CC               	movlw	204
  5992  000F' 0021               	movlb	1	; select bank1
  5993  0010' 0080'              	movwf	_posicao_val_futura^(0+128)
  5994  0011' 3001               	movlw	1
  5995  0012' 0081'              	movwf	(_posicao_val_futura^(0+128)+1)
  5996  0013'                    i1l736:	
  5997                           ;funcoes.c: 95:     }
  5998                           
  5999                           
  6000                           ;funcoes.c: 96:     if(ciclo_util_futuro > 1023){
  6001  0013' 0020               	movlb	0	; select bank0
  6002  0014' 080A'              	movf	_ciclo_util_futuro+1,w
  6003  0015' 3A80               	xorlw	128
  6004  0016' 0081'              	movwf	??_DRMotordePassos
  6005  0017' 3084               	movlw	132
  6006  0018' 0201'              	subwf	??_DRMotordePassos,w
  6007  0019' 1D03               	skipz
  6008  001A' 2800'              	goto	u156_25
  6009  001B' 3000               	movlw	0
  6010  001C' 0209'              	subwf	_ciclo_util_futuro,w
  6011  001D'                    u156_25:
  6012  001D' 1C03               	skipc
  6013  001E' 2800'              	goto	u156_21
  6014  001F' 2800'              	goto	u156_20
  6015  0020'                    u156_21:
  6016  0020' 2800'              	goto	i1l737
  6017  0021'                    u156_20:
  6018  0021'                    i1l2725:
  6019                           
  6020                           ;funcoes.c: 97:         ciclo_util_futuro = 1023;
  6021  0021' 30FF               	movlw	255
  6022  0022' 0020               	movlb	0	; select bank0
  6023  0023' 0089'              	movwf	_ciclo_util_futuro
  6024  0024' 3003               	movlw	3
  6025  0025' 008A'              	movwf	_ciclo_util_futuro+1
  6026  0026'                    i1l737:	
  6027                           ;funcoes.c: 98:     }
  6028                           
  6029                           
  6030                           ;funcoes.c: 101:     if(posicao_val_atual > posicao_val_futura){
  6031  0026' 0021               	movlb	1	; select bank1
  6032  0027' 0800'              	movf	(_posicao_val_futura+1)^(0+128),w
  6033  0028' 3A80               	xorlw	128
  6034  0029' 0081'              	movwf	??_DRMotordePassos
  6035  002A' 0800'              	movf	(_posicao_val_atual+1)^(0+128),w
  6036  002B' 3A80               	xorlw	128
  6037  002C' 0201'              	subwf	??_DRMotordePassos,w
  6038  002D' 1D03               	skipz
  6039  002E' 2800'              	goto	u157_25
  6040  002F' 0800'              	movf	_posicao_val_atual^(0+128),w
  6041  0030' 0200'              	subwf	_posicao_val_futura^(0+128),w
  6042  0031'                    u157_25:
  6043  0031' 1803               	skipnc
  6044  0032' 2800'              	goto	u157_21
  6045  0033' 2800'              	goto	u157_20
  6046  0034'                    u157_21:
  6047  0034' 2800'              	goto	i1l2733
  6048  0035'                    u157_20:
  6049  0035'                    i1l2727:
  6050                           
  6051                           ;funcoes.c: 102:         posicao_val_atual--;
  6052  0035' 30FF               	movlw	255
  6053  0036' 0021               	movlb	1	; select bank1
  6054  0037' 0780'              	addwf	_posicao_val_atual^(0+128),f
  6055  0038' 30FF               	movlw	255
  6056  0039' 3D80'              	addwfc	(_posicao_val_atual+1)^(0+128),f
  6057  003A'                    i1l2729:
  6058                           
  6059                           ;funcoes.c: 103:         subtrai_passos = 0;
  6060  003A' 0020               	movlb	0	; select bank0
  6061  003B' 0193'              	clrf	_subtrai_passos
  6062  003C'                    i1l2731:
  6063                           
  6064                           ;funcoes.c: 104:         muda_passos();
  6065  003C' 3180' 2000' 3180'  	fcall	_muda_passos
  6066                           
  6067                           ;funcoes.c: 105:     } else if (posicao_val_atual < posicao_val_futura){
  6068  003F' 2800'              	goto	i1l741
  6069  0040'                    i1l2733:
  6070  0040' 0021               	movlb	1	; select bank1
  6071  0041' 0800'              	movf	(_posicao_val_atual+1)^(0+128),w
  6072  0042' 3A80               	xorlw	128
  6073  0043' 0081'              	movwf	??_DRMotordePassos
  6074  0044' 0800'              	movf	(_posicao_val_futura+1)^(0+128),w
  6075  0045' 3A80               	xorlw	128
  6076  0046' 0201'              	subwf	??_DRMotordePassos,w
  6077  0047' 1D03               	skipz
  6078  0048' 2800'              	goto	u158_25
  6079  0049' 0800'              	movf	_posicao_val_futura^(0+128),w
  6080  004A' 0200'              	subwf	_posicao_val_atual^(0+128),w
  6081  004B'                    u158_25:
  6082  004B' 1803               	skipnc
  6083  004C' 2800'              	goto	u158_21
  6084  004D' 2800'              	goto	u158_20
  6085  004E'                    u158_21:
  6086  004E' 2800'              	goto	i1l741
  6087  004F'                    u158_20:
  6088  004F'                    i1l2735:
  6089                           
  6090                           ;funcoes.c: 106:         posicao_val_atual++;
  6091  004F' 3001               	movlw	1
  6092  0050' 0021               	movlb	1	; select bank1
  6093  0051' 0780'              	addwf	_posicao_val_atual^(0+128),f
  6094  0052' 3000               	movlw	0
  6095  0053' 3D80'              	addwfc	(_posicao_val_atual+1)^(0+128),f
  6096  0054'                    i1l2737:
  6097                           
  6098                           ;funcoes.c: 107:         subtrai_passos = 1;
  6099  0054' 0020               	movlb	0	; select bank0
  6100  0055' 0193'              	clrf	_subtrai_passos
  6101  0056' 0A93'              	incf	_subtrai_passos,f
  6102  0057' 2800'              	goto	i1l2731
  6103  0058'                    i1l741:
  6104  0058' 0008               	return
  6105  0059'                    __end_of_DRMotordePassos:
  6106                           
  6107                           	psect	text31
  6108  0000'                    __ptext31:	
  6109 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  6110 ;; Defined at:
  6111 ;;		line 136 in file "mcc_generated_files/tmr6.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		None
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6125 ;;      Params:         0       0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0
  6128 ;;      Totals:         0       0       0       0       0       0
  6129 ;;Total ram usage:        0 bytes
  6130 ;; Hardware stack levels used: 1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_TMR6_Initialize
  6135 ;;		_TMR6_ISR
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139  0000'                    _TMR6_DefaultInterruptHandler:	
  6140                           ;psect for function _TMR6_DefaultInterruptHandler
  6141                           
  6142  0000'                    i1l510:	
  6143                           ;incstack = 0
  6144                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  6145                           
  6146  0000' 0008               	return
  6147  0001'                    __end_of_TMR6_DefaultInterruptHandler:
  6148                           
  6149                           	psect	text32
  6150  0000'                    __ptext32:	
  6151 ;; *************** function _muda_passos *****************
  6152 ;; Defined at:
  6153 ;;		line 116 in file "funcoes.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6167 ;;      Params:         0       0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0
  6169 ;;      Temps:          1       0       0       0       0       0
  6170 ;;      Totals:         1       0       0       0       0       0
  6171 ;;Total ram usage:        1 bytes
  6172 ;; Hardware stack levels used: 1
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_DRMotordePassos
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180  0000'                    _muda_passos:	
  6181                           ;psect for function _muda_passos
  6182                           
  6183  0000'                    i1l2493:	
  6184                           ;incstack = 0
  6185                           ; Regs used in _muda_passos: [wreg-fsr0h+status,2+status,0]
  6186                           
  6187                           
  6188                           ;funcoes.c: 117:     switch(npassos){
  6189  0000' 2800'              	goto	i1l2497
  6190  0001'                    i1l746:	
  6191                           ;funcoes.c: 119:             do { LATAbits.LATA1 = 1; } while(0);
  6192                           
  6193  0001' 0022               	movlb	2	; select bank2
  6194  0002' 148C               	bsf	12,1	;volatile
  6195  0003'                    i1l748:	
  6196                           ;funcoes.c: 120:             do { LATAbits.LATA2 = 0; } while(0);
  6197                           
  6198  0003' 110C               	bcf	12,2	;volatile
  6199  0004'                    i1l750:	
  6200                           ;funcoes.c: 121:             do { LATAbits.LATA3 = 0; } while(0);
  6201                           
  6202  0004' 118C               	bcf	12,3	;volatile
  6203  0005'                    i1l752:	
  6204                           ;funcoes.c: 122:             do { LATAbits.LATA4 = 1; } while(0);
  6205                           
  6206  0005' 160C               	bsf	12,4	;volatile
  6207  0006' 2800'              	goto	i1l2499
  6208  0007'                    i1l756:	
  6209                           ;funcoes.c: 125:             do { LATAbits.LATA1 = 1; } while(0);
  6210                           
  6211  0007' 0022               	movlb	2	; select bank2
  6212  0008' 148C               	bsf	12,1	;volatile
  6213  0009'                    i1l758:	
  6214                           ;funcoes.c: 126:             do { LATAbits.LATA2 = 1; } while(0);
  6215                           
  6216  0009' 150C               	bsf	12,2	;volatile
  6217  000A'                    i1l760:	
  6218                           ;funcoes.c: 127:             do { LATAbits.LATA3 = 0; } while(0);
  6219                           
  6220  000A' 118C               	bcf	12,3	;volatile
  6221  000B'                    i1l762:	
  6222                           ;funcoes.c: 128:             do { LATAbits.LATA4 = 0; } while(0);
  6223                           
  6224  000B' 120C               	bcf	12,4	;volatile
  6225  000C' 2800'              	goto	i1l2499
  6226  000D'                    i1l765:	
  6227                           ;funcoes.c: 131:             do { LATAbits.LATA1 = 0; } while(0);
  6228                           
  6229  000D' 0022               	movlb	2	; select bank2
  6230  000E' 108C               	bcf	12,1	;volatile
  6231  000F'                    i1l767:	
  6232                           ;funcoes.c: 132:             do { LATAbits.LATA2 = 1; } while(0);
  6233                           
  6234  000F' 150C               	bsf	12,2	;volatile
  6235  0010'                    i1l769:	
  6236                           ;funcoes.c: 133:             do { LATAbits.LATA3 = 1; } while(0);
  6237                           
  6238  0010' 158C               	bsf	12,3	;volatile
  6239  0011'                    i1l771:	
  6240                           ;funcoes.c: 134:             do { LATAbits.LATA4 = 0; } while(0);
  6241                           
  6242  0011' 120C               	bcf	12,4	;volatile
  6243  0012' 2800'              	goto	i1l2499
  6244  0013'                    i1l774:	
  6245                           ;funcoes.c: 137:             do { LATAbits.LATA1 = 0; } while(0);
  6246                           
  6247  0013' 0022               	movlb	2	; select bank2
  6248  0014' 108C               	bcf	12,1	;volatile
  6249  0015'                    i1l776:	
  6250                           ;funcoes.c: 138:             do { LATAbits.LATA2 = 0; } while(0);
  6251                           
  6252  0015' 110C               	bcf	12,2	;volatile
  6253  0016'                    i1l778:	
  6254                           ;funcoes.c: 139:             do { LATAbits.LATA3 = 1; } while(0);
  6255                           
  6256  0016' 158C               	bsf	12,3	;volatile
  6257  0017'                    i1l780:	
  6258                           ;funcoes.c: 140:             do { LATAbits.LATA4 = 1; } while(0);
  6259                           
  6260  0017' 160C               	bsf	12,4	;volatile
  6261  0018' 2800'              	goto	i1l2499
  6262  0019'                    i1l2497:
  6263  0019' 0020               	movlb	0	; select bank0
  6264  001A' 0815'              	movf	_npassos,w
  6265                           
  6266                           ; Switch size 1, requested type "simple"
  6267                           ; Number of cases is 4, Range of values is 0 to 3
  6268                           ; switch strategies available:
  6269                           ; Name         Instructions Cycles
  6270                           ; simple_byte           13     7 (average)
  6271                           ; direct_byte           14     6 (fixed)
  6272                           ; jumptable            260     6 (fixed)
  6273                           ;	Chosen strategy is simple_byte
  6274  001B' 3A00               	xorlw	0	; case 0
  6275  001C' 1903               	skipnz
  6276  001D' 2800'              	goto	i1l746
  6277  001E' 3A01               	xorlw	1	; case 1
  6278  001F' 1903               	skipnz
  6279  0020' 2800'              	goto	i1l756
  6280  0021' 3A03               	xorlw	3	; case 2
  6281  0022' 1903               	skipnz
  6282  0023' 2800'              	goto	i1l765
  6283  0024' 3A01               	xorlw	1	; case 3
  6284  0025' 1903               	skipnz
  6285  0026' 2800'              	goto	i1l774
  6286  0027' 2800'              	goto	i1l2499
  6287  0028'                    i1l2499:
  6288                           
  6289                           ;funcoes.c: 143:     if(subtrai_passos){
  6290  0028' 0020               	movlb	0	; select bank0
  6291  0029' 0813'              	movf	_subtrai_passos,w
  6292  002A' 1903               	btfsc	3,2
  6293  002B' 2800'              	goto	u141_21
  6294  002C' 2800'              	goto	u141_20
  6295  002D'                    u141_21:
  6296  002D' 2800'              	goto	i1l2509
  6297  002E'                    u141_20:
  6298  002E'                    i1l2501:
  6299                           
  6300                           ;funcoes.c: 144:         if(npassos == 0){
  6301  002E' 0815'              	movf	_npassos,w
  6302  002F' 1D03               	btfss	3,2
  6303  0030' 2800'              	goto	u142_21
  6304  0031' 2800'              	goto	u142_20
  6305  0032'                    u142_21:
  6306  0032' 2800'              	goto	i1l2505
  6307  0033'                    u142_20:
  6308  0033'                    i1l2503:
  6309                           
  6310                           ;funcoes.c: 145:             npassos = 4;
  6311  0033' 3004               	movlw	4
  6312  0034' 0095'              	movwf	_npassos
  6313  0035'                    i1l2505:
  6314                           
  6315                           ;funcoes.c: 147:         npassos--;
  6316  0035' 30FF               	movlw	255
  6317  0036' 0080'              	movwf	??_muda_passos
  6318  0037' 0800'              	movf	??_muda_passos,w
  6319  0038' 0795'              	addwf	_npassos,f
  6320  0039'                    i1l2507:
  6321                           
  6322                           ;funcoes.c: 148:         npassos = npassos & 0b00000011;
  6323  0039' 0815'              	movf	_npassos,w
  6324  003A' 3903               	andlw	3
  6325  003B' 0095'              	movwf	_npassos
  6326                           
  6327                           ;funcoes.c: 149:     }else{
  6328  003C' 2800'              	goto	i1l785
  6329  003D'                    i1l2509:
  6330                           
  6331                           ;funcoes.c: 150:         npassos++;
  6332  003D' 3001               	movlw	1
  6333  003E' 0080'              	movwf	??_muda_passos
  6334  003F' 0800'              	movf	??_muda_passos,w
  6335  0040' 0795'              	addwf	_npassos,f
  6336  0041' 2800'              	goto	i1l2507
  6337  0042'                    i1l785:
  6338  0042' 0008               	return
  6339  0043'                    __end_of_muda_passos:
  6340                           
  6341                           	psect	text33
  6342  0000'                    __ptext33:	
  6343 ;; *************** function _TMR4_ISR *****************
  6344 ;; Defined at:
  6345 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6359 ;;      Params:         0       0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0
  6362 ;;      Totals:         0       0       0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; Hardware stack levels required when called: 3
  6366 ;; This function calls:
  6367 ;;		NULL
  6368 ;;		_ProcessaDados
  6369 ;;		_TMR4_DefaultInterruptHandler
  6370 ;; This function is called by:
  6371 ;;		_INTERRUPT_InterruptManager
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375  0000'                    _TMR4_ISR:	
  6376                           ;psect for function _TMR4_ISR
  6377                           
  6378  0000'                    i1l2793:	
  6379                           ;incstack = 0
  6380                           ; Regs used in _TMR4_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6381                           
  6382                           
  6383                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  6384  0000' 0020               	movlb	0	; select bank0
  6385  0001' 1093               	bcf	19,1	;volatile
  6386  0002'                    i1l2795:
  6387                           
  6388                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  6389  0002' 0021               	movlb	1	; select bank1
  6390  0003' 0800'              	movf	_TMR4_InterruptHandler^(0+128),w
  6391  0004' 0400'              	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  6392  0005' 1903               	btfsc	3,2
  6393  0006' 2800'              	goto	u165_21
  6394  0007' 2800'              	goto	u165_20
  6395  0008'                    u165_21:
  6396  0008' 2800'              	goto	i1l422
  6397  0009'                    u165_20:
  6398  0009'                    i1l2797:
  6399                           
  6400                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  6401  0009' 0800'              	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  6402  000A' 008A               	movwf	10
  6403  000B' 0800'              	movf	_TMR4_InterruptHandler^(0+128),w
  6404  000C' 000A               	callw
  6405  000D' 3180'              	pagesel	$
  6406  000E'                    i1l422:
  6407  000E' 0008               	return
  6408  000F'                    __end_of_TMR4_ISR:
  6409                           
  6410                           	psect	text34
  6411  0000'                    __ptext34:	
  6412 ;; *************** function _ProcessaDados *****************
  6413 ;; Defined at:
  6414 ;;		line 177 in file "funcoes.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6428 ;;      Params:         0       0       0       0       0       0
  6429 ;;      Locals:         0       0       0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0
  6431 ;;      Totals:         0       0       0       0       0       0
  6432 ;;Total ram usage:        0 bytes
  6433 ;; Hardware stack levels used: 1
  6434 ;; Hardware stack levels required when called: 2
  6435 ;; This function calls:
  6436 ;;		_selecao_do_modo
  6437 ;; This function is called by:
  6438 ;;		_main
  6439 ;;		_TMR4_ISR
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443  0000'                    _ProcessaDados:	
  6444                           ;psect for function _ProcessaDados
  6445                           
  6446  0000'                    i1l2741:	
  6447                           ;incstack = 0
  6448                           ; Regs used in _ProcessaDados: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6449                           
  6450                           
  6451                           ;funcoes.c: 179:     if(!dado_atual){
  6452  0000' 0021               	movlb	1	; select bank1
  6453  0001' 0800'              	movf	_dado_atual^(0+128),w
  6454  0002' 1D03               	btfss	3,2
  6455  0003' 2800'              	goto	u159_21
  6456  0004' 2800'              	goto	u159_20
  6457  0005'                    u159_21:
  6458  0005' 2800'              	goto	i1l2745
  6459  0006'                    u159_20:
  6460  0006' 2800'              	goto	i1l794
  6461  0007'                    i1l2745:
  6462                           
  6463                           ;funcoes.c: 182:     dado_atual = 0;
  6464  0007' 0180'              	clrf	_dado_atual^(0+128)
  6465  0008'                    i1l2747:
  6466                           
  6467                           ;funcoes.c: 183:     modo = RxBuffer[0];
  6468  0008' 0800'              	movf	_RxBuffer^(0+128),w
  6469  0009' 0020               	movlb	0	; select bank0
  6470  000A' 0094'              	movwf	_modo
  6471  000B'                    i1l2749:
  6472                           
  6473                           ;funcoes.c: 184:     if(countRx == 5){
  6474  000B' 3005               	movlw	5
  6475  000C' 0021               	movlb	1	; select bank1
  6476  000D' 0600'              	xorwf	_countRx^(0+128),w
  6477  000E' 1D03               	btfss	3,2
  6478  000F' 2800'              	goto	u160_21
  6479  0010' 2800'              	goto	u160_20
  6480  0011'                    u160_21:
  6481  0011' 2800'              	goto	i1l2765
  6482  0012'                    u160_20:
  6483  0012' 2800'              	goto	i1l2761
  6484  0013'                    i1l2753:
  6485                           
  6486                           ;funcoes.c: 188:                 Set_valvula.bmsb = RxBuffer[1];
  6487  0013' 0021               	movlb	1	; select bank1
  6488  0014' 0801'              	movf	(_RxBuffer^(0+128)+1),w
  6489  0015' 0020               	movlb	0	; select bank0
  6490  0016' 008E'              	movwf	_Set_valvula+1
  6491                           
  6492                           ;funcoes.c: 189:                 Set_valvula.blsb = RxBuffer[2];
  6493  0017' 0021               	movlb	1	; select bank1
  6494  0018' 0802'              	movf	(_RxBuffer^(0+128)+2),w
  6495  0019' 0020               	movlb	0	; select bank0
  6496  001A' 008D'              	movwf	_Set_valvula
  6497                           
  6498                           ;funcoes.c: 190:                 Set_ciclo.bmsb = RxBuffer[3];
  6499  001B' 0021               	movlb	1	; select bank1
  6500  001C' 0803'              	movf	(_RxBuffer^(0+128)+3),w
  6501  001D' 0020               	movlb	0	; select bank0
  6502  001E' 008C'              	movwf	_Set_ciclo+1
  6503                           
  6504                           ;funcoes.c: 191:                 Set_ciclo.blsb = RxBuffer[4];
  6505  001F' 0021               	movlb	1	; select bank1
  6506  0020' 0804'              	movf	(_RxBuffer^(0+128)+4),w
  6507  0021' 0020               	movlb	0	; select bank0
  6508  0022' 008B'              	movwf	_Set_ciclo
  6509                           
  6510                           ;funcoes.c: 192:                 break;
  6511  0023' 2800'              	goto	i1l2763
  6512  0024'                    i1l2755:
  6513                           
  6514                           ;funcoes.c: 195:                 Set_altura.bmsb = RxBuffer[1];
  6515  0024' 0021               	movlb	1	; select bank1
  6516  0025' 0801'              	movf	(_RxBuffer^(0+128)+1),w
  6517  0026' 0020               	movlb	0	; select bank0
  6518  0027' 0090'              	movwf	_Set_altura+1
  6519                           
  6520                           ;funcoes.c: 196:                 Set_altura.blsb = RxBuffer[2];
  6521  0028' 0021               	movlb	1	; select bank1
  6522  0029' 0802'              	movf	(_RxBuffer^(0+128)+2),w
  6523  002A' 0020               	movlb	0	; select bank0
  6524  002B' 008F'              	movwf	_Set_altura
  6525                           
  6526                           ;funcoes.c: 197:                 Set_valvula.bmsb = RxBuffer[3];
  6527  002C' 0021               	movlb	1	; select bank1
  6528  002D' 0803'              	movf	(_RxBuffer^(0+128)+3),w
  6529  002E' 0020               	movlb	0	; select bank0
  6530  002F' 008E'              	movwf	_Set_valvula+1
  6531                           
  6532                           ;funcoes.c: 198:                 Set_valvula.blsb = RxBuffer[4];
  6533  0030' 0021               	movlb	1	; select bank1
  6534  0031' 0804'              	movf	(_RxBuffer^(0+128)+4),w
  6535  0032' 0020               	movlb	0	; select bank0
  6536  0033' 008D'              	movwf	_Set_valvula
  6537                           
  6538                           ;funcoes.c: 199:                 break;
  6539  0034' 2800'              	goto	i1l2763
  6540  0035'                    i1l2757:
  6541                           
  6542                           ;funcoes.c: 202:                 Set_altura.bmsb = RxBuffer[1];
  6543  0035' 0021               	movlb	1	; select bank1
  6544  0036' 0801'              	movf	(_RxBuffer^(0+128)+1),w
  6545  0037' 0020               	movlb	0	; select bank0
  6546  0038' 0090'              	movwf	_Set_altura+1
  6547                           
  6548                           ;funcoes.c: 203:                 Set_altura.blsb = RxBuffer[2];
  6549  0039' 0021               	movlb	1	; select bank1
  6550  003A' 0802'              	movf	(_RxBuffer^(0+128)+2),w
  6551  003B' 0020               	movlb	0	; select bank0
  6552  003C' 008F'              	movwf	_Set_altura
  6553                           
  6554                           ;funcoes.c: 204:                 Set_ciclo.bmsb = RxBuffer[3];
  6555  003D' 0021               	movlb	1	; select bank1
  6556  003E' 0803'              	movf	(_RxBuffer^(0+128)+3),w
  6557  003F' 0020               	movlb	0	; select bank0
  6558  0040' 008C'              	movwf	_Set_ciclo+1
  6559                           
  6560                           ;funcoes.c: 205:                 Set_ciclo.blsb = RxBuffer[4];
  6561  0041' 0021               	movlb	1	; select bank1
  6562  0042' 0804'              	movf	(_RxBuffer^(0+128)+4),w
  6563  0043' 0020               	movlb	0	; select bank0
  6564  0044' 008B'              	movwf	_Set_ciclo
  6565                           
  6566                           ;funcoes.c: 206:                 break;
  6567  0045' 2800'              	goto	i1l2763
  6568  0046'                    i1l2761:
  6569  0046' 0020               	movlb	0	; select bank0
  6570  0047' 0814'              	movf	_modo,w
  6571                           
  6572                           ; Switch size 1, requested type "simple"
  6573                           ; Number of cases is 3, Range of values is 0 to 2
  6574                           ; switch strategies available:
  6575                           ; Name         Instructions Cycles
  6576                           ; simple_byte           10     6 (average)
  6577                           ; direct_byte           12     6 (fixed)
  6578                           ; jumptable            260     6 (fixed)
  6579                           ;	Chosen strategy is simple_byte
  6580  0048' 3A00               	xorlw	0	; case 0
  6581  0049' 1903               	skipnz
  6582  004A' 2800'              	goto	i1l2753
  6583  004B' 3A01               	xorlw	1	; case 1
  6584  004C' 1903               	skipnz
  6585  004D' 2800'              	goto	i1l2755
  6586  004E' 3A03               	xorlw	3	; case 2
  6587  004F' 1903               	skipnz
  6588  0050' 2800'              	goto	i1l2757
  6589  0051' 2800'              	goto	i1l2763
  6590  0052'                    i1l2763:
  6591                           
  6592                           ;funcoes.c: 210:         selecao_do_modo();
  6593  0052' 3180' 2000' 3180'  	fcall	_selecao_do_modo
  6594  0055'                    i1l2765:
  6595                           
  6596                           ;funcoes.c: 212:     if(modo == 0x03){
  6597  0055' 3003               	movlw	3
  6598  0056' 0020               	movlb	0	; select bank0
  6599  0057' 0614'              	xorwf	_modo,w
  6600  0058' 1D03               	btfss	3,2
  6601  0059' 2800'              	goto	u161_21
  6602  005A' 2800'              	goto	u161_20
  6603  005B'                    u161_21:
  6604  005B' 2800'              	goto	i1l2769
  6605  005C'                    u161_20:
  6606  005C'                    i1l2767:
  6607  005C' 0001               	reset	;# 
  6608  005D'                    i1l2769:
  6609                           
  6610                           ;funcoes.c: 215:     countRx = 0;
  6611  005D' 0021               	movlb	1	; select bank1
  6612  005E' 0180'              	clrf	_countRx^(0+128)
  6613  005F'                    i1l794:
  6614  005F' 0008               	return
  6615  0060'                    __end_of_ProcessaDados:
  6616                           
  6617                           	psect	text35
  6618  0000'                    __ptext35:	
  6619 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6620 ;; Defined at:
  6621 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		None
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6635 ;;      Params:         0       0       0       0       0       0
  6636 ;;      Locals:         0       0       0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0
  6638 ;;      Totals:         0       0       0       0       0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used: 1
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_TMR4_Initialize
  6645 ;;		_TMR4_ISR
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649  0000'                    _TMR4_DefaultInterruptHandler:	
  6650                           ;psect for function _TMR4_DefaultInterruptHandler
  6651                           
  6652  0000'                    i1l428:	
  6653                           ;incstack = 0
  6654                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  6655                           
  6656  0000' 0008               	return
  6657  0001'                    __end_of_TMR4_DefaultInterruptHandler:
  6658                           
  6659                           	psect	text36
  6660  0000'                    __ptext36:	
  6661 ;; *************** function _selecao_do_modo *****************
  6662 ;; Defined at:
  6663 ;;		line 222 in file "funcoes.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6677 ;;      Params:         0       0       0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0
  6680 ;;      Totals:         0       0       0       0       0       0
  6681 ;;Total ram usage:        0 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 1
  6684 ;; This function calls:
  6685 ;;		_EPWM1_LoadDutyValue
  6686 ;; This function is called by:
  6687 ;;		_ProcessaDados
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691  0000'                    _selecao_do_modo:	
  6692                           ;psect for function _selecao_do_modo
  6693                           
  6694  0000'                    i1l2513:	
  6695                           ;incstack = 0
  6696                           ; Regs used in _selecao_do_modo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6697                           
  6698                           
  6699                           ;funcoes.c: 223:     switch(modo){
  6700  0000' 2800'              	goto	i1l2547
  6701  0001'                    i1l2515:
  6702                           
  6703                           ;funcoes.c: 225:             if(Set_ciclo.Dado > 1023){
  6704  0001' 3004               	movlw	4
  6705  0002' 020C'              	subwf	_Set_ciclo+1,w
  6706  0003' 3000               	movlw	0
  6707  0004' 1903               	skipnz
  6708  0005' 020B'              	subwf	_Set_ciclo,w
  6709  0006' 1C03               	skipc
  6710  0007' 2800'              	goto	u143_21
  6711  0008' 2800'              	goto	u143_20
  6712  0009'                    u143_21:
  6713  0009' 2800'              	goto	i1l807
  6714  000A'                    u143_20:
  6715  000A'                    i1l2517:
  6716                           
  6717                           ;funcoes.c: 226:                 Set_ciclo.Dado = 1023;
  6718  000A' 30FF               	movlw	255
  6719  000B' 008B'              	movwf	_Set_ciclo
  6720  000C' 3003               	movlw	3
  6721  000D' 008C'              	movwf	_Set_ciclo+1
  6722  000E'                    i1l807:	
  6723                           ;funcoes.c: 227:             }
  6724                           
  6725                           
  6726                           ;funcoes.c: 228:             ciclo_util_futuro = Set_ciclo.Dado;
  6727  000E' 080C'              	movf	_Set_ciclo+1,w
  6728  000F' 008A'              	movwf	_ciclo_util_futuro+1
  6729  0010' 080B'              	movf	_Set_ciclo,w
  6730  0011' 0089'              	movwf	_ciclo_util_futuro
  6731  0012'                    i1l2519:
  6732                           
  6733                           ;funcoes.c: 229:             EPWM1_LoadDutyValue(ciclo_util_futuro);
  6734  0012' 080A'              	movf	_ciclo_util_futuro+1,w
  6735  0013' 0081'              	movwf	EPWM1_LoadDutyValue@dutyValue+1
  6736  0014' 0809'              	movf	_ciclo_util_futuro,w
  6737  0015' 0080'              	movwf	EPWM1_LoadDutyValue@dutyValue
  6738  0016' 3180' 2000' 3180'  	fcall	_EPWM1_LoadDutyValue
  6739  0019'                    i1l2521:
  6740                           
  6741                           ;funcoes.c: 230:             if(Set_valvula.Dado > 460){
  6742  0019' 3001               	movlw	1
  6743  001A' 0020               	movlb	0	; select bank0
  6744  001B' 020E'              	subwf	_Set_valvula+1,w
  6745  001C' 30CD               	movlw	205
  6746  001D' 1903               	skipnz
  6747  001E' 020D'              	subwf	_Set_valvula,w
  6748  001F' 1C03               	skipc
  6749  0020' 2800'              	goto	u144_21
  6750  0021' 2800'              	goto	u144_20
  6751  0022'                    u144_21:
  6752  0022' 2800'              	goto	i1l808
  6753  0023'                    u144_20:
  6754  0023'                    i1l2523:
  6755                           
  6756                           ;funcoes.c: 231:                 Set_valvula.Dado = 460;
  6757  0023' 30CC               	movlw	204
  6758  0024' 008D'              	movwf	_Set_valvula
  6759  0025' 3001               	movlw	1
  6760  0026' 008E'              	movwf	_Set_valvula+1
  6761  0027'                    i1l808:	
  6762                           ;funcoes.c: 232:             }
  6763                           
  6764                           
  6765                           ;funcoes.c: 233:             posicao_val_futura = Set_valvula.Dado;
  6766  0027' 080E'              	movf	_Set_valvula+1,w
  6767  0028' 0021               	movlb	1	; select bank1
  6768  0029' 0080'              	movwf	(_posicao_val_futura+1)^(0+128)
  6769  002A' 0020               	movlb	0	; select bank0
  6770  002B' 080D'              	movf	_Set_valvula,w
  6771  002C' 0021               	movlb	1	; select bank1
  6772  002D' 0080'              	movwf	_posicao_val_futura^(0+128)
  6773                           
  6774                           ;funcoes.c: 234:             break;
  6775  002E' 2800'              	goto	i1l815
  6776  002F'                    i1l2525:
  6777                           
  6778                           ;funcoes.c: 236:             if(Set_valvula.Dado > 460){
  6779  002F' 3001               	movlw	1
  6780  0030' 020E'              	subwf	_Set_valvula+1,w
  6781  0031' 30CD               	movlw	205
  6782  0032' 1903               	skipnz
  6783  0033' 020D'              	subwf	_Set_valvula,w
  6784  0034' 1C03               	skipc
  6785  0035' 2800'              	goto	u145_21
  6786  0036' 2800'              	goto	u145_20
  6787  0037'                    u145_21:
  6788  0037' 2800'              	goto	i1l811
  6789  0038'                    u145_20:
  6790  0038'                    i1l2527:
  6791                           
  6792                           ;funcoes.c: 237:                 Set_valvula.Dado = 460;
  6793  0038' 30CC               	movlw	204
  6794  0039' 008D'              	movwf	_Set_valvula
  6795  003A' 3001               	movlw	1
  6796  003B' 008E'              	movwf	_Set_valvula+1
  6797  003C'                    i1l811:	
  6798                           ;funcoes.c: 238:             }
  6799                           
  6800                           
  6801                           ;funcoes.c: 239:             posicao_val_futura = Set_valvula.Dado;
  6802  003C' 080E'              	movf	_Set_valvula+1,w
  6803  003D' 0021               	movlb	1	; select bank1
  6804  003E' 0080'              	movwf	(_posicao_val_futura+1)^(0+128)
  6805  003F' 0020               	movlb	0	; select bank0
  6806  0040' 080D'              	movf	_Set_valvula,w
  6807  0041' 0021               	movlb	1	; select bank1
  6808  0042' 0080'              	movwf	_posicao_val_futura^(0+128)
  6809                           
  6810                           ;funcoes.c: 240:             erro_atual = 0;
  6811  0043' 3000               	movlw	0
  6812  0044' 0020               	movlb	0	; select bank0
  6813  0045' 0086'              	movwf	_erro_atual
  6814  0046' 3000               	movlw	0
  6815  0047' 0087'              	movwf	_erro_atual+1
  6816  0048' 3000               	movlw	0
  6817  0049' 0088'              	movwf	_erro_atual+2
  6818                           
  6819                           ;funcoes.c: 241:             soma_PID = 0;
  6820  004A' 3000               	movlw	0
  6821  004B' 0080'              	movwf	_soma_PID
  6822  004C' 3000               	movlw	0
  6823  004D' 0081'              	movwf	_soma_PID+1
  6824  004E' 3000               	movlw	0
  6825  004F' 0082'              	movwf	_soma_PID+2
  6826                           
  6827                           ;funcoes.c: 242:             integrativo = 0;
  6828  0050' 3000               	movlw	0
  6829  0051' 0083'              	movwf	_integrativo
  6830  0052' 3000               	movlw	0
  6831  0053' 0084'              	movwf	_integrativo+1
  6832  0054' 3000               	movlw	0
  6833  0055' 0085'              	movwf	_integrativo+2
  6834                           
  6835                           ;funcoes.c: 243:             proporcional = 0;
  6836  0056' 3000               	movlw	0
  6837  0057' 0021               	movlb	1	; select bank1
  6838  0058' 0080'              	movwf	_proporcional^(0+128)
  6839  0059' 3000               	movlw	0
  6840  005A' 0080'              	movwf	(_proporcional+1)^(0+128)
  6841  005B' 3000               	movlw	0
  6842  005C' 0080'              	movwf	(_proporcional+2)^(0+128)
  6843                           
  6844                           ;funcoes.c: 244:             derivativo = 0;
  6845  005D' 3000               	movlw	0
  6846  005E' 0080'              	movwf	_derivativo^(0+128)
  6847  005F' 3000               	movlw	0
  6848  0060' 0080'              	movwf	(_derivativo+1)^(0+128)
  6849  0061' 3000               	movlw	0
  6850  0062' 0080'              	movwf	(_derivativo+2)^(0+128)
  6851                           
  6852                           ;funcoes.c: 245:             break;
  6853  0063' 2800'              	goto	i1l815
  6854  0064'                    i1l2529:
  6855                           
  6856                           ;funcoes.c: 247:             if(Set_ciclo.Dado > 1023){
  6857  0064' 3004               	movlw	4
  6858  0065' 020C'              	subwf	_Set_ciclo+1,w
  6859  0066' 3000               	movlw	0
  6860  0067' 1903               	skipnz
  6861  0068' 020B'              	subwf	_Set_ciclo,w
  6862  0069' 1C03               	skipc
  6863  006A' 2800'              	goto	u146_21
  6864  006B' 2800'              	goto	u146_20
  6865  006C'                    u146_21:
  6866  006C' 2800'              	goto	i1l813
  6867  006D'                    u146_20:
  6868  006D'                    i1l2531:
  6869                           
  6870                           ;funcoes.c: 248:                 Set_ciclo.Dado = 1023;
  6871  006D' 30FF               	movlw	255
  6872  006E' 008B'              	movwf	_Set_ciclo
  6873  006F' 3003               	movlw	3
  6874  0070' 008C'              	movwf	_Set_ciclo+1
  6875  0071'                    i1l813:	
  6876                           ;funcoes.c: 249:             }
  6877                           
  6878                           
  6879                           ;funcoes.c: 250:             ciclo_util_futuro = Set_ciclo.Dado;
  6880  0071' 080C'              	movf	_Set_ciclo+1,w
  6881  0072' 008A'              	movwf	_ciclo_util_futuro+1
  6882  0073' 080B'              	movf	_Set_ciclo,w
  6883  0074' 0089'              	movwf	_ciclo_util_futuro
  6884  0075'                    i1l2533:
  6885                           
  6886                           ;funcoes.c: 251:             EPWM1_LoadDutyValue(ciclo_util_futuro);
  6887  0075' 080A'              	movf	_ciclo_util_futuro+1,w
  6888  0076' 0081'              	movwf	EPWM1_LoadDutyValue@dutyValue+1
  6889  0077' 0809'              	movf	_ciclo_util_futuro,w
  6890  0078' 0080'              	movwf	EPWM1_LoadDutyValue@dutyValue
  6891  0079' 3180' 2000' 3180'  	fcall	_EPWM1_LoadDutyValue
  6892  007C'                    i1l2535:
  6893                           
  6894                           ;funcoes.c: 252:             erro_atual = 0;
  6895  007C' 3000               	movlw	0
  6896  007D' 0020               	movlb	0	; select bank0
  6897  007E' 0086'              	movwf	_erro_atual
  6898  007F' 3000               	movlw	0
  6899  0080' 0087'              	movwf	_erro_atual+1
  6900  0081' 3000               	movlw	0
  6901  0082' 0088'              	movwf	_erro_atual+2
  6902  0083'                    i1l2537:
  6903                           
  6904                           ;funcoes.c: 253:             soma_PID = 0;
  6905  0083' 3000               	movlw	0
  6906  0084' 0080'              	movwf	_soma_PID
  6907  0085' 3000               	movlw	0
  6908  0086' 0081'              	movwf	_soma_PID+1
  6909  0087' 3000               	movlw	0
  6910  0088' 0082'              	movwf	_soma_PID+2
  6911  0089'                    i1l2539:
  6912                           
  6913                           ;funcoes.c: 254:             integrativo = 0;
  6914  0089' 3000               	movlw	0
  6915  008A' 0083'              	movwf	_integrativo
  6916  008B' 3000               	movlw	0
  6917  008C' 0084'              	movwf	_integrativo+1
  6918  008D' 3000               	movlw	0
  6919  008E' 0085'              	movwf	_integrativo+2
  6920  008F'                    i1l2541:
  6921                           
  6922                           ;funcoes.c: 255:             proporcional = 0;
  6923  008F' 3000               	movlw	0
  6924  0090' 0021               	movlb	1	; select bank1
  6925  0091' 0080'              	movwf	_proporcional^(0+128)
  6926  0092' 3000               	movlw	0
  6927  0093' 0080'              	movwf	(_proporcional+1)^(0+128)
  6928  0094' 3000               	movlw	0
  6929  0095' 0080'              	movwf	(_proporcional+2)^(0+128)
  6930  0096'                    i1l2543:
  6931                           
  6932                           ;funcoes.c: 256:             derivativo = 0;
  6933  0096' 3000               	movlw	0
  6934  0097' 0080'              	movwf	_derivativo^(0+128)
  6935  0098' 3000               	movlw	0
  6936  0099' 0080'              	movwf	(_derivativo+1)^(0+128)
  6937  009A' 3000               	movlw	0
  6938  009B' 0080'              	movwf	(_derivativo+2)^(0+128)
  6939                           
  6940                           ;funcoes.c: 257:             break;
  6941  009C' 2800'              	goto	i1l815
  6942  009D'                    i1l2547:
  6943  009D' 0020               	movlb	0	; select bank0
  6944  009E' 0814'              	movf	_modo,w
  6945                           
  6946                           ; Switch size 1, requested type "simple"
  6947                           ; Number of cases is 3, Range of values is 0 to 2
  6948                           ; switch strategies available:
  6949                           ; Name         Instructions Cycles
  6950                           ; simple_byte           10     6 (average)
  6951                           ; direct_byte           12     6 (fixed)
  6952                           ; jumptable            260     6 (fixed)
  6953                           ;	Chosen strategy is simple_byte
  6954  009F' 3A00               	xorlw	0	; case 0
  6955  00A0' 1903               	skipnz
  6956  00A1' 2800'              	goto	i1l2515
  6957  00A2' 3A01               	xorlw	1	; case 1
  6958  00A3' 1903               	skipnz
  6959  00A4' 2800'              	goto	i1l2525
  6960  00A5' 3A03               	xorlw	3	; case 2
  6961  00A6' 1903               	skipnz
  6962  00A7' 2800'              	goto	i1l2529
  6963  00A8' 2800'              	goto	i1l815
  6964  00A9'                    i1l815:
  6965  00A9' 0008               	return
  6966  00AA'                    __end_of_selecao_do_modo:
  6967                           
  6968                           	psect	text37
  6969  0000'                    __ptext37:	
  6970 ;; *************** function _TMR1_GATE_ISR *****************
  6971 ;; Defined at:
  6972 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;		None
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;		None
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1    wreg      void 
  6979 ;; Registers used:
  6980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6986 ;;      Params:         0       0       0       0       0       0
  6987 ;;      Locals:         0       0       0       0       0       0
  6988 ;;      Temps:          0       0       0       0       0       0
  6989 ;;      Totals:         0       0       0       0       0       0
  6990 ;;Total ram usage:        0 bytes
  6991 ;; Hardware stack levels used: 1
  6992 ;; Hardware stack levels required when called: 5
  6993 ;; This function calls:
  6994 ;;		NULL
  6995 ;;		_TMR1_DefaultGateInterruptHandler
  6996 ;;		_posicao_bola_tubo
  6997 ;; This function is called by:
  6998 ;;		_INTERRUPT_InterruptManager
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002  0000'                    _TMR1_GATE_ISR:	
  7003                           ;psect for function _TMR1_GATE_ISR
  7004                           
  7005  0000'                    i1l2773:	
  7006                           ;incstack = 0
  7007                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7008                           
  7009                           
  7010                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  7011  0000' 0020               	movlb	0	; select bank0
  7012  0001' 1391               	bcf	17,7	;volatile
  7013  0002'                    i1l2775:
  7014                           
  7015                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  7016  0002' 0021               	movlb	1	; select bank1
  7017  0003' 0800'              	movf	_TMR1_GateInterruptHandler^(0+128),w
  7018  0004' 0400'              	iorwf	(_TMR1_GateInterruptHandler+1)^(0+128),w
  7019  0005' 1903               	btfsc	3,2
  7020  0006' 2800'              	goto	u162_21
  7021  0007' 2800'              	goto	u162_20
  7022  0008'                    u162_21:
  7023  0008' 2800'              	goto	i1l178
  7024  0009'                    u162_20:
  7025  0009'                    i1l2777:
  7026                           
  7027                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  7028  0009' 0800'              	movf	(_TMR1_GateInterruptHandler+1)^(0+128),w
  7029  000A' 008A               	movwf	10
  7030  000B' 0800'              	movf	_TMR1_GateInterruptHandler^(0+128),w
  7031  000C' 000A               	callw
  7032  000D' 3180'              	pagesel	$
  7033  000E'                    i1l178:
  7034  000E' 0008               	return
  7035  000F'                    __end_of_TMR1_GATE_ISR:
  7036                           
  7037                           	psect	text38
  7038  0000'                    __ptext38:	
  7039 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  7040 ;; Defined at:
  7041 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  1    wreg      void 
  7048 ;; Registers used:
  7049 ;;		None
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7055 ;;      Params:         0       0       0       0       0       0
  7056 ;;      Locals:         0       0       0       0       0       0
  7057 ;;      Temps:          0       0       0       0       0       0
  7058 ;;      Totals:         0       0       0       0       0       0
  7059 ;;Total ram usage:        0 bytes
  7060 ;; Hardware stack levels used: 1
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_TMR1_Initialize
  7065 ;;		_TMR1_GATE_ISR
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069  0000'                    _TMR1_DefaultGateInterruptHandler:	
  7070                           ;psect for function _TMR1_DefaultGateInterruptHandler
  7071                           
  7072  0000'                    i1l184:	
  7073                           ;incstack = 0
  7074                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  7075                           
  7076  0000' 0008               	return
  7077  0001'                    __end_of_TMR1_DefaultGateInterruptHandler:
  7078                           
  7079                           	psect	text39
  7080  0000'                    __ptext39:	
  7081 ;; *************** function _posicao_bola_tubo *****************
  7082 ;; Defined at:
  7083 ;;		line 69 in file "funcoes.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7097 ;;      Params:         0       0       0       0       0       0
  7098 ;;      Locals:         0       2       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0
  7100 ;;      Totals:         0       2       0       0       0       0
  7101 ;;Total ram usage:        2 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; Hardware stack levels required when called: 4
  7104 ;; This function calls:
  7105 ;;		_ADC_GetConversion
  7106 ;;		_Comando_PIeD
  7107 ;;		_TMR1_ReadTimer
  7108 ;;		_TMR1_WriteTimer
  7109 ;;		___lwdiv
  7110 ;;		___wmul
  7111 ;;		_media
  7112 ;;		_velocidade_som
  7113 ;; This function is called by:
  7114 ;;		_main
  7115 ;;		_TMR1_GATE_ISR
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119  0000'                    _posicao_bola_tubo:	
  7120                           ;psect for function _posicao_bola_tubo
  7121                           
  7122  0000'                    i1l2711:	
  7123                           ;incstack = 0
  7124                           ; Regs used in _posicao_bola_tubo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7125                           
  7126                           
  7127                           ;funcoes.c: 70:     media(TMR1_ReadTimer());
  7128  0000' 3180' 2000' 3180'  	fcall	_TMR1_ReadTimer
  7129  0003' 0801'              	movf	?_TMR1_ReadTimer+1,w
  7130  0004' 008C'              	movwf	media@timer+1
  7131  0005' 0800'              	movf	?_TMR1_ReadTimer,w
  7132  0006' 008B'              	movwf	media@timer
  7133  0007' 3180' 2000' 3180'  	fcall	_media
  7134                           
  7135                           ;funcoes.c: 72:     altura_bola = (uint16_t)(((uint16_t)((velocidade_som() / 2000) * (te
      +                          mpo_medio))));
  7136  000A' 3180' 2000' 3180'  	fcall	_velocidade_som
  7137  000D' 080D'              	movf	?_velocidade_som+1,w
  7138  000E' 0020               	movlb	0	; select bank0
  7139  000F' 00B8'              	movwf	_posicao_bola_tubo$2070+1
  7140  0010' 080C'              	movf	?_velocidade_som,w
  7141  0011' 00B7'              	movwf	_posicao_bola_tubo$2070
  7142  0012'                    i1l2713:
  7143                           
  7144                           ;funcoes.c: 72:     altura_bola = (uint16_t)(((uint16_t)((velocidade_som() / 2000) * (te
      +                          mpo_medio))));
  7145  0012' 30D0               	movlw	208
  7146  0013' 0084'              	movwf	___lwdiv@divisor
  7147  0014' 3007               	movlw	7
  7148  0015' 0085'              	movwf	___lwdiv@divisor+1
  7149  0016' 0838'              	movf	_posicao_bola_tubo$2070+1,w
  7150  0017' 0087'              	movwf	___lwdiv@dividend+1
  7151  0018' 0837'              	movf	_posicao_bola_tubo$2070,w
  7152  0019' 0086'              	movwf	___lwdiv@dividend
  7153  001A' 3180' 2000' 3180'  	fcall	___lwdiv
  7154  001D' 0805'              	movf	?___lwdiv+1,w
  7155  001E' 0020               	movlb	0	; select bank0
  7156  001F' 0081'              	movwf	___wmul@multiplier+1
  7157  0020' 0804'              	movf	?___lwdiv,w
  7158  0021' 0080'              	movwf	___wmul@multiplier
  7159  0022' 0021               	movlb	1	; select bank1
  7160  0023' 0800'              	movf	(_tempo_medio+1)^(0+128),w
  7161  0024' 0020               	movlb	0	; select bank0
  7162  0025' 0083'              	movwf	___wmul@multiplicand+1
  7163  0026' 0021               	movlb	1	; select bank1
  7164  0027' 0800'              	movf	_tempo_medio^(0+128),w
  7165  0028' 0020               	movlb	0	; select bank0
  7166  0029' 0082'              	movwf	___wmul@multiplicand
  7167  002A' 3180' 2000' 3180'  	fcall	___wmul
  7168  002D' 0020               	movlb	0	; select bank0
  7169  002E' 0800'              	movf	?___wmul,w
  7170  002F' 0021               	movlb	1	; select bank1
  7171  0030' 0080'              	movwf	_altura_bola^(0+128)
  7172  0031' 0020               	movlb	0	; select bank0
  7173  0032' 0801'              	movf	?___wmul+1,w
  7174  0033' 0021               	movlb	1	; select bank1
  7175  0034' 0080'              	movwf	(_altura_bola+1)^(0+128)
  7176  0035' 0180'              	clrf	(_altura_bola+2)^(0+128)
  7177  0036'                    i1l2715:
  7178                           
  7179                           ;funcoes.c: 73:     Comando_PIeD();
  7180  0036' 3180' 2000' 3180'  	fcall	_Comando_PIeD
  7181  0039'                    i1l2717:
  7182                           
  7183                           ;funcoes.c: 81:     temperatura = (uint16_t)(ADC_GetConversion(Temp) / 10) * 10;
  7184  0039' 300A               	movlw	10
  7185  003A' 0084'              	movwf	___lwdiv@divisor
  7186  003B' 3000               	movlw	0
  7187  003C' 0085'              	movwf	___lwdiv@divisor+1
  7188  003D' 3008               	movlw	8
  7189  003E' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  7190  0041' 0801'              	movf	?_ADC_GetConversion+1,w
  7191  0042' 0087'              	movwf	___lwdiv@dividend+1
  7192  0043' 0800'              	movf	?_ADC_GetConversion,w
  7193  0044' 0086'              	movwf	___lwdiv@dividend
  7194  0045' 3180' 2000' 3180'  	fcall	___lwdiv
  7195  0048' 0805'              	movf	?___lwdiv+1,w
  7196  0049' 0020               	movlb	0	; select bank0
  7197  004A' 0081'              	movwf	___wmul@multiplier+1
  7198  004B' 0804'              	movf	?___lwdiv,w
  7199  004C' 0080'              	movwf	___wmul@multiplier
  7200  004D' 300A               	movlw	10
  7201  004E' 0082'              	movwf	___wmul@multiplicand
  7202  004F' 3000               	movlw	0
  7203  0050' 0083'              	movwf	___wmul@multiplicand+1
  7204  0051' 3180' 2000' 3180'  	fcall	___wmul
  7205  0054' 0020               	movlb	0	; select bank0
  7206  0055' 0801'              	movf	?___wmul+1,w
  7207  0056' 0021               	movlb	1	; select bank1
  7208  0057' 0080'              	movwf	(_temperatura+1)^(0+128)
  7209  0058' 0020               	movlb	0	; select bank0
  7210  0059' 0800'              	movf	?___wmul,w
  7211  005A' 0021               	movlb	1	; select bank1
  7212  005B' 0080'              	movwf	_temperatura^(0+128)
  7213  005C'                    i1l2719:
  7214                           
  7215                           ;funcoes.c: 84:     TMR1_WriteTimer(0);
  7216  005C' 3000               	movlw	0
  7217  005D' 0080'              	movwf	TMR1_WriteTimer@timerVal
  7218  005E' 0081'              	movwf	TMR1_WriteTimer@timerVal+1
  7219  005F' 3180' 2000' 3180'  	fcall	_TMR1_WriteTimer
  7220  0062'                    i1l733:
  7221  0062' 0008               	return
  7222  0063'                    __end_of_posicao_bola_tubo:
  7223                           
  7224                           	psect	text40
  7225  0000'                    __ptext40:	
  7226 ;; *************** function _velocidade_som *****************
  7227 ;; Defined at:
  7228 ;;		line 42 in file "funcoes.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;		None
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  2   12[COMMON] unsigned short 
  7235 ;; Registers used:
  7236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7242 ;;      Params:         2       0       0       0       0       0
  7243 ;;      Locals:         0       0       0       0       0       0
  7244 ;;      Temps:          0       0       0       0       0       0
  7245 ;;      Totals:         2       0       0       0       0       0
  7246 ;;Total ram usage:        2 bytes
  7247 ;; Hardware stack levels used: 1
  7248 ;; Hardware stack levels required when called: 2
  7249 ;; This function calls:
  7250 ;;		_ADC_GetConversion
  7251 ;;		___eetoi
  7252 ;;		___lwdiv
  7253 ;; This function is called by:
  7254 ;;		_posicao_bola_tubo
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258  0000'                    _velocidade_som:	
  7259                           ;psect for function _velocidade_som
  7260                           
  7261  0000'                    i1l2471:	
  7262                           ;incstack = 0
  7263                           ; Regs used in _velocidade_som: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7264                           
  7265                           
  7266                           ;funcoes.c: 48:     temperatura = (uint16_t)(ADC_GetConversion(Temp) / 10);
  7267  0000' 300A               	movlw	10
  7268  0001' 0084'              	movwf	___lwdiv@divisor
  7269  0002' 3000               	movlw	0
  7270  0003' 0085'              	movwf	___lwdiv@divisor+1
  7271  0004' 3008               	movlw	8
  7272  0005' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  7273  0008' 0801'              	movf	?_ADC_GetConversion+1,w
  7274  0009' 0087'              	movwf	___lwdiv@dividend+1
  7275  000A' 0800'              	movf	?_ADC_GetConversion,w
  7276  000B' 0086'              	movwf	___lwdiv@dividend
  7277  000C' 3180' 2000' 3180'  	fcall	___lwdiv
  7278  000F' 0805'              	movf	?___lwdiv+1,w
  7279  0010' 0021               	movlb	1	; select bank1
  7280  0011' 0080'              	movwf	(_temperatura+1)^(0+128)
  7281  0012' 0804'              	movf	?___lwdiv,w
  7282  0013' 0080'              	movwf	_temperatura^(0+128)
  7283  0014'                    i1l2473:
  7284                           
  7285                           ;funcoes.c: 49:     return relacao_som_temperatura[temperatura];
  7286  0014' 3500'              	lslf	_temperatura^(0+128),w
  7287  0015' 3E00'              	addlw	low _relacao_som_temperatura
  7288  0016' 3180' 2000' 3180'  	fcall	___eetoi
  7289  0019' 0807'              	movf	?___eetoi+1,w
  7290  001A' 008D'              	movwf	?_velocidade_som+1
  7291  001B' 0806'              	movf	?___eetoi,w
  7292  001C' 008C'              	movwf	?_velocidade_som
  7293  001D'                    i1l723:
  7294  001D' 0008               	return
  7295  001E'                    __end_of_velocidade_som:
  7296                           
  7297                           	psect	text41
  7298  0000'                    __ptext41:	
  7299 ;; *************** function ___lwdiv *****************
  7300 ;; Defined at:
  7301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  divisor         2    4[COMMON] unsigned int 
  7304 ;;  dividend        2    6[COMMON] unsigned int 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  quotient        2    9[COMMON] unsigned int 
  7307 ;;  counter         1   11[COMMON] unsigned char 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  2    4[COMMON] unsigned int 
  7310 ;; Registers used:
  7311 ;;		wreg, status,2, status,0
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7317 ;;      Params:         4       0       0       0       0       0
  7318 ;;      Locals:         3       0       0       0       0       0
  7319 ;;      Temps:          1       0       0       0       0       0
  7320 ;;      Totals:         8       0       0       0       0       0
  7321 ;;Total ram usage:        8 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_velocidade_som
  7327 ;;		_posicao_bola_tubo
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331  0000'                    ___lwdiv:	
  7332                           ;psect for function ___lwdiv
  7333                           
  7334  0000'                    i1l2411:	
  7335                           ;incstack = 0
  7336                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7337                           
  7338  0000' 0189'              	clrf	___lwdiv@quotient
  7339  0001' 018A'              	clrf	___lwdiv@quotient+1
  7340  0002'                    i1l2413:
  7341  0002' 0804'              	movf	___lwdiv@divisor,w
  7342  0003' 0405'              	iorwf	___lwdiv@divisor+1,w
  7343  0004' 1903               	btfsc	3,2
  7344  0005' 2800'              	goto	u133_21
  7345  0006' 2800'              	goto	u133_20
  7346  0007'                    u133_21:
  7347  0007' 2800'              	goto	i1l2433
  7348  0008'                    u133_20:
  7349  0008'                    i1l2415:
  7350  0008' 018B'              	clrf	___lwdiv@counter
  7351  0009' 0A8B'              	incf	___lwdiv@counter,f
  7352  000A' 2800'              	goto	i1l2421
  7353  000B'                    i1l2417:
  7354  000B' 3001               	movlw	1
  7355  000C'                    u134_25:
  7356  000C' 3584'              	lslf	___lwdiv@divisor,f
  7357  000D' 0D85'              	rlf	___lwdiv@divisor+1,f
  7358  000E' 0B89               	decfsz	9,f
  7359  000F' 2800'              	goto	u134_25
  7360  0010'                    i1l2419:
  7361  0010' 3001               	movlw	1
  7362  0011' 0088'              	movwf	??___lwdiv
  7363  0012' 0808'              	movf	??___lwdiv,w
  7364  0013' 078B'              	addwf	___lwdiv@counter,f
  7365  0014'                    i1l2421:
  7366  0014' 1F85'              	btfss	___lwdiv@divisor+1,7
  7367  0015' 2800'              	goto	u135_21
  7368  0016' 2800'              	goto	u135_20
  7369  0017'                    u135_21:
  7370  0017' 2800'              	goto	i1l2417
  7371  0018'                    u135_20:
  7372  0018'                    i1l2423:
  7373  0018' 3001               	movlw	1
  7374  0019'                    u136_25:
  7375  0019' 3589'              	lslf	___lwdiv@quotient,f
  7376  001A' 0D8A'              	rlf	___lwdiv@quotient+1,f
  7377  001B' 0B89               	decfsz	9,f
  7378  001C' 2800'              	goto	u136_25
  7379  001D' 0805'              	movf	___lwdiv@divisor+1,w
  7380  001E' 0207'              	subwf	___lwdiv@dividend+1,w
  7381  001F' 1D03               	skipz
  7382  0020' 2800'              	goto	u137_25
  7383  0021' 0804'              	movf	___lwdiv@divisor,w
  7384  0022' 0206'              	subwf	___lwdiv@dividend,w
  7385  0023'                    u137_25:
  7386  0023' 1C03               	skipc
  7387  0024' 2800'              	goto	u137_21
  7388  0025' 2800'              	goto	u137_20
  7389  0026'                    u137_21:
  7390  0026' 2800'              	goto	i1l2429
  7391  0027'                    u137_20:
  7392  0027'                    i1l2425:
  7393  0027' 0804'              	movf	___lwdiv@divisor,w
  7394  0028' 0286'              	subwf	___lwdiv@dividend,f
  7395  0029' 0805'              	movf	___lwdiv@divisor+1,w
  7396  002A' 3B87'              	subwfb	___lwdiv@dividend+1,f
  7397  002B'                    i1l2427:
  7398  002B' 1409'              	bsf	___lwdiv@quotient,0
  7399  002C'                    i1l2429:
  7400  002C' 3001               	movlw	1
  7401  002D'                    u138_25:
  7402  002D' 3685'              	lsrf	___lwdiv@divisor+1,f
  7403  002E' 0C84'              	rrf	___lwdiv@divisor,f
  7404  002F' 0B89               	decfsz	9,f
  7405  0030' 2800'              	goto	u138_25
  7406  0031'                    i1l2431:
  7407  0031' 3001               	movlw	1
  7408  0032' 028B'              	subwf	___lwdiv@counter,f
  7409  0033' 1D03               	btfss	3,2
  7410  0034' 2800'              	goto	u139_21
  7411  0035' 2800'              	goto	u139_20
  7412  0036'                    u139_21:
  7413  0036' 2800'              	goto	i1l2423
  7414  0037'                    u139_20:
  7415  0037'                    i1l2433:
  7416  0037' 080A'              	movf	___lwdiv@quotient+1,w
  7417  0038' 0085'              	movwf	?___lwdiv+1
  7418  0039' 0809'              	movf	___lwdiv@quotient,w
  7419  003A' 0084'              	movwf	?___lwdiv
  7420  003B'                    i1l1271:
  7421  003B' 0008               	return
  7422  003C'                    __end_of___lwdiv:
  7423                           
  7424                           	psect	text42
  7425  0000'                    __ptext42:	
  7426 ;; *************** function ___eetoi *****************
  7427 ;; Defined at:
  7428 ;;		line 112 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  addr            1    wreg     PTR eeprom void 
  7431 ;;		 -> relacao_som_temperatura(102), 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  addr            1    8[COMMON] PTR eeprom void 
  7434 ;;		 -> relacao_som_temperatura(102), 
  7435 ;;  data            2    9[COMMON] unsigned int 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  2    6[COMMON] unsigned int 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7445 ;;      Params:         2       0       0       0       0       0
  7446 ;;      Locals:         3       0       0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0
  7448 ;;      Totals:         5       0       0       0       0       0
  7449 ;;Total ram usage:        5 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; Hardware stack levels required when called: 1
  7452 ;; This function calls:
  7453 ;;		___eecpymem
  7454 ;; This function is called by:
  7455 ;;		_velocidade_som
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459  0000'                    ___eetoi:	
  7460                           ;psect for function ___eetoi
  7461                           
  7462                           
  7463                           ;incstack = 0
  7464                           ; Regs used in ___eetoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7465                           ;___eetoi@addr stored from wreg
  7466  0000' 0088'              	movwf	___eetoi@addr
  7467  0001'                    i1l2405:
  7468                           
  7469                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 112: __eetoi(__eep
      +                          rom void *addr);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 113
      +                          : {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 114:  unsigned 
      +                          int data;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 115:  __e
      +                          ecpymem((unsigned char *) &data,addr,2);
  7470  0001' 0808'              	movf	___eetoi@addr,w
  7471  0002' 0080'              	movwf	___eecpymem@from
  7472  0003' 3002               	movlw	2
  7473  0004' 0081'              	movwf	___eecpymem@size
  7474  0005' 3000'              	movlw	(low (___eetoi@data| 0))& (0+255)
  7475  0006' 3180' 2000' 3180'  	fcall	___eecpymem
  7476  0009'                    i1l2407:
  7477                           
  7478                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 116:  return data;
  7479  0009' 080A'              	movf	___eetoi@data+1,w
  7480  000A' 0087'              	movwf	?___eetoi+1
  7481  000B' 0809'              	movf	___eetoi@data,w
  7482  000C' 0086'              	movwf	?___eetoi
  7483  000D'                    i1l887:
  7484  000D' 0008               	return
  7485  000E'                    __end_of___eetoi:
  7486                           
  7487                           	psect	text43
  7488  0000'                    __ptext43:	
  7489 ;; *************** function ___eecpymem *****************
  7490 ;; Defined at:
  7491 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  to              1    wreg     PTR volatile unsigned ch
  7494 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7495 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7496 ;;  from            1    0[COMMON] PTR eeprom unsigned char
  7497 ;;		 -> relacao_som_temperatura(102), 
  7498 ;;  size            1    1[COMMON] unsigned char 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  to              1    5[COMMON] PTR volatile unsigned ch
  7501 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7502 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7503 ;;  cp              1    4[COMMON] PTR volatile unsigned ch
  7504 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7505 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7515 ;;      Params:         2       0       0       0       0       0
  7516 ;;      Locals:         2       0       0       0       0       0
  7517 ;;      Temps:          2       0       0       0       0       0
  7518 ;;      Totals:         6       0       0       0       0       0
  7519 ;;Total ram usage:        6 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		___eetoi
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528  0000'                    ___eecpymem:	
  7529                           ;psect for function ___eecpymem
  7530                           
  7531                           
  7532                           ;incstack = 0
  7533                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  7534                           ;___eecpymem@to stored from wreg
  7535  0000' 0085'              	movwf	___eecpymem@to
  7536  0001'                    i1l2269:
  7537                           
  7538                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: __eecpymem(vola
      +                          tile unsigned char *to, __eeprom unsigned char * from, unsigned char size);C:\Program Fi
      +                          les\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: };C:\Program Files\Microchip\
      +                          xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.46\pic\s
      +                          ources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\
      +                          __eeprom.c: 6: };C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 7:
      +                           {
  7539  0001' 0805'              	movf	___eecpymem@to,w
  7540  0002' 0084'              	movwf	___eecpymem@cp
  7541  0003'                    i1l858:	
  7542                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 10:  while (EECON1
      +                          bits.WR) continue;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 
      +                          10:  __memcpyee(addr,(unsigned char *) &data,2);;C:\Program Files\Microchip\xc8\v2.46\pi
      +                          c\sources\c99\pic\__eeprom.c: 10: {
  7543                           
  7544  0003' 0023               	movlb	3	; select bank3
  7545  0004' 1895               	btfsc	21,1	;volsfr
  7546  0005' 2800'              	goto	u107_21
  7547  0006' 2800'              	goto	u107_20
  7548  0007'                    u107_21:
  7549  0007' 2800'              	goto	i1l858
  7550  0008'                    u107_20:
  7551  0008'                    i1l2271:
  7552                           
  7553                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11:  EEADR = (unsi
      +                          gned char)from;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11:
      +                            return data;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11: 
      +                           double data;
  7554  0008' 0800'              	movf	___eecpymem@from,w
  7555  0009' 0082'              	movwf	??___eecpymem
  7556  000A' 0183'              	clrf	??___eecpymem+1
  7557  000B' 0802'              	movf	??___eecpymem,w
  7558  000C' 0091               	movwf	17	;volatile
  7559  000D' 0803'              	movf	??___eecpymem+1,w
  7560  000E' 0092               	movwf	18	;volatile
  7561                           
  7562                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  while(size--)
      +                           {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12: };C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  __eecpymem((unsigned cha
      +                          r *) &data,addr,4);
  7563  000F' 2800'              	goto	i1l2283
  7564  0010'                    i1l863:
  7565  0010' 1895               	btfsc	21,1	;volsfr
  7566  0011' 2800'              	goto	u108_21
  7567  0012' 2800'              	goto	u108_20
  7568  0013'                    u108_21:
  7569  0013' 2800'              	goto	i1l863
  7570  0014'                    u108_20:
  7571  0014'                    i1l2273:
  7572                           
  7573                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 15:   EECON1 &= 0x
      +                          7F;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 15: 
  7574  0014' 307F               	movlw	127
  7575  0015' 0082'              	movwf	??___eecpymem
  7576  0016' 0802'              	movf	??___eecpymem,w
  7577  0017' 0595               	andwf	21,f	;volsfr
  7578  0018'                    i1l2275:
  7579                           
  7580                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 17:   EECON1bits.R
      +                          D = 1;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 17: __fttoee
      +                          (__eeprom void *addr, float data)
  7581  0018' 1415               	bsf	21,0	;volsfr
  7582  0019'                    i1l2277:
  7583                           
  7584                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 18:   *cp++ = EEDA
      +                          TA;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 18: {
  7585  0019' 0804'              	movf	___eecpymem@cp,w
  7586  001A' 0086               	movwf	6
  7587  001B' 0187               	clrf	7
  7588  001C' 0813               	movf	19,w	;volatile
  7589  001D' 0081               	movwf	1
  7590  001E'                    i1l2279:
  7591  001E' 3001               	movlw	1
  7592  001F' 0082'              	movwf	??___eecpymem
  7593  0020' 0802'              	movf	??___eecpymem,w
  7594  0021' 0784'              	addwf	___eecpymem@cp,f
  7595  0022'                    i1l2281:
  7596                           
  7597                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 19:   ++EEADR;;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 19:  __memcpyee(addr,(
      +                          unsigned char *) &data,3);
  7598  0022' 3001               	movlw	1
  7599  0023' 0791               	addwf	17,f	;volatile
  7600  0024' 3000               	movlw	0
  7601  0025' 3D92               	addwfc	18,f	;volatile
  7602  0026'                    i1l2283:
  7603                           
  7604                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  while(size--)
      +                           {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12: };C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  __eecpymem((unsigned cha
      +                          r *) &data,addr,4);
  7605  0026' 3001               	movlw	1
  7606  0027' 0281'              	subwf	___eecpymem@size,f
  7607  0028' 0A01'              	incf	___eecpymem@size,w
  7608  0029' 1D03               	btfss	3,2
  7609  002A' 2800'              	goto	u109_21
  7610  002B' 2800'              	goto	u109_20
  7611  002C'                    u109_21:
  7612  002C' 2800'              	goto	i1l863
  7613  002D'                    u109_20:
  7614  002D'                    i1l867:
  7615  002D' 0008               	return
  7616  002E'                    __end_of___eecpymem:
  7617                           
  7618                           	psect	text44
  7619  0000'                    __ptext44:	
  7620 ;; *************** function _ADC_GetConversion *****************
  7621 ;; Defined at:
  7622 ;;		line 112 in file "mcc_generated_files/adc.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  channel         1    wreg     enum E2495
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  channel         1    3[COMMON] enum E2495
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  2    0[COMMON] unsigned short 
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7636 ;;      Params:         2       0       0       0       0       0
  7637 ;;      Locals:         1       0       0       0       0       0
  7638 ;;      Temps:          1       0       0       0       0       0
  7639 ;;      Totals:         4       0       0       0       0       0
  7640 ;;Total ram usage:        4 bytes
  7641 ;; Hardware stack levels used: 1
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_velocidade_som
  7646 ;;		_posicao_bola_tubo
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650  0000'                    _ADC_GetConversion:	
  7651                           ;psect for function _ADC_GetConversion
  7652                           
  7653                           
  7654                           ;incstack = 0
  7655                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7656                           ;ADC_GetConversion@channel stored from wreg
  7657  0000' 0083'              	movwf	ADC_GetConversion@channel
  7658  0001'                    i1l2339:
  7659                           
  7660                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7661  0001' 0803'              	movf	ADC_GetConversion@channel,w
  7662  0002' 0082'              	movwf	??_ADC_GetConversion
  7663  0003' 0D82'              	rlf	??_ADC_GetConversion,f
  7664  0004' 0D82'              	rlf	??_ADC_GetConversion,f
  7665  0005' 0021               	movlb	1	; select bank1
  7666  0006' 081D               	movf	29,w	;volatile
  7667  0007' 0602'              	xorwf	??_ADC_GetConversion,w
  7668  0008' 3983               	andlw	-125
  7669  0009' 0602'              	xorwf	??_ADC_GetConversion,w
  7670  000A' 009D               	movwf	29	;volatile
  7671  000B'                    i1l2341:
  7672                           
  7673                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7674  000B' 141D               	bsf	29,0	;volatile
  7675  000C'                    i1l2343:
  7676                           
  7677                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7678  000C' 3006               	movlw	6
  7679  000D'                    u181_27:
  7680  000D' 0B89               	decfsz	9,f
  7681  000E' 2800'              	goto	u181_27
  7682  000F' 3200               	nop2
  7683  0010'                    i1l2345:
  7684                           
  7685                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7686  0010' 0021               	movlb	1	; select bank1
  7687  0011' 149D               	bsf	29,1	;volatile
  7688  0012'                    i1l105:	
  7689                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7690                           
  7691                           
  7692                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7693  0012' 189D               	btfsc	29,1	;volatile
  7694  0013' 2800'              	goto	u124_21
  7695  0014' 2800'              	goto	u124_20
  7696  0015'                    u124_21:
  7697  0015' 2800'              	goto	i1l105
  7698  0016'                    u124_20:
  7699  0016'                    i1l2347:
  7700                           
  7701                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7702  0016' 081C               	movf	28,w	;volatile
  7703  0017' 0081'              	movwf	?_ADC_GetConversion+1
  7704  0018' 081B               	movf	27,w	;volatile
  7705  0019' 0080'              	movwf	?_ADC_GetConversion
  7706  001A'                    i1l108:
  7707  001A' 0008               	return
  7708  001B'                    __end_of_ADC_GetConversion:
  7709                           
  7710                           	psect	text45
  7711  0000'                    __ptext45:	
  7712 ;; *************** function _media *****************
  7713 ;; Defined at:
  7714 ;;		line 57 in file "funcoes.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  timer           2   11[COMMON] unsigned short 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;		None
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      void 
  7721 ;; Registers used:
  7722 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7728 ;;      Params:         2       0       0       0       0       0
  7729 ;;      Locals:         0       0       0       0       0       0
  7730 ;;      Temps:          0       2       0       0       0       0
  7731 ;;      Totals:         2       2       0       0       0       0
  7732 ;;Total ram usage:        4 bytes
  7733 ;; Hardware stack levels used: 1
  7734 ;; This function calls:
  7735 ;;		Nothing
  7736 ;; This function is called by:
  7737 ;;		_posicao_bola_tubo
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741  0000'                    _media:	
  7742                           ;psect for function _media
  7743                           
  7744  0000'                    i1l2477:	
  7745                           ;incstack = 0
  7746                           ; Regs used in _media: [wreg+fsr1l+fsr1h+status,2+status,0]
  7747                           
  7748                           
  7749                           ;funcoes.c: 58:     static uint16_t tempo_recebido[2] = {0, 0};;funcoes.c: 59:     stati
      +                          c uint8_t indice = 0;;funcoes.c: 60:     tempo_recebido[indice] = timer;
  7750  0000' 0020               	movlb	0	; select bank0
  7751  0001' 3511'              	lslf	media@indice,w
  7752  0002' 3E00'              	addlw	(low (media@tempo_recebido| 0))& (0+255)
  7753  0003' 0086               	movwf	6
  7754  0004' 0187               	clrf	7
  7755  0005' 080B'              	movf	media@timer,w
  7756  0006' 3FC0               	movwi [0]fsr1
  7757  0007' 080C'              	movf	media@timer+1,w
  7758  0008' 3FC1               	movwi [1]fsr1
  7759  0009'                    i1l2479:
  7760                           
  7761                           ;funcoes.c: 61:     indice ^= 1;
  7762  0009' 3001               	movlw	1
  7763  000A' 0080'              	movwf	??_media
  7764  000B' 0800'              	movf	??_media,w
  7765  000C' 0691'              	xorwf	media@indice,f
  7766  000D'                    i1l2481:
  7767                           
  7768                           ;funcoes.c: 62:     tempo_medio = (tempo_recebido[0] + tempo_recebido[1]) / 2;
  7769  000D' 0021               	movlb	1	; select bank1
  7770  000E' 0800'              	movf	media@tempo_recebido^(0+128),w
  7771  000F' 0702'              	addwf	(media@tempo_recebido^(0+128)+2),w
  7772  0010' 0020               	movlb	0	; select bank0
  7773  0011' 0080'              	movwf	??_media
  7774  0012' 0021               	movlb	1	; select bank1
  7775  0013' 0800'              	movf	(media@tempo_recebido+1)^(0+128),w
  7776  0014' 3D02'              	addwfc	((media@tempo_recebido+1)^(0+128)+2),w
  7777  0015' 0020               	movlb	0	; select bank0
  7778  0016' 0081'              	movwf	??_media+1
  7779  0017' 3681'              	lsrf	??_media+1,f
  7780  0018' 0C80'              	rrf	??_media,f
  7781  0019' 0800'              	movf	??_media,w
  7782  001A' 0021               	movlb	1	; select bank1
  7783  001B' 0080'              	movwf	_tempo_medio^(0+128)
  7784  001C' 0020               	movlb	0	; select bank0
  7785  001D' 0801'              	movf	??_media+1,w
  7786  001E' 0021               	movlb	1	; select bank1
  7787  001F' 0080'              	movwf	(_tempo_medio+1)^(0+128)
  7788  0020'                    i1l730:
  7789  0020' 0008               	return
  7790  0021'                    __end_of_media:
  7791                           
  7792                           	psect	text46
  7793  0000'                    __ptext46:	
  7794 ;; *************** function ___wmul *****************
  7795 ;; Defined at:
  7796 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7799 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;  product         2    4[BANK0 ] unsigned int 
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  2    0[BANK0 ] unsigned int 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7811 ;;      Params:         0       4       0       0       0       0
  7812 ;;      Locals:         0       2       0       0       0       0
  7813 ;;      Temps:          0       0       0       0       0       0
  7814 ;;      Totals:         0       6       0       0       0       0
  7815 ;;Total ram usage:        6 bytes
  7816 ;; Hardware stack levels used: 1
  7817 ;; This function calls:
  7818 ;;		Nothing
  7819 ;; This function is called by:
  7820 ;;		_posicao_bola_tubo
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824  0000'                    ___wmul:	
  7825                           ;psect for function ___wmul
  7826                           
  7827  0000'                    i1l2549:	
  7828                           ;incstack = 0
  7829                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7830                           
  7831  0000' 0020               	movlb	0	; select bank0
  7832  0001' 0184'              	clrf	___wmul@product
  7833  0002' 0185'              	clrf	___wmul@product+1
  7834  0003'                    i1l2551:
  7835  0003' 1C00'              	btfss	___wmul@multiplier,0
  7836  0004' 2800'              	goto	u147_21
  7837  0005' 2800'              	goto	u147_20
  7838  0006'                    u147_21:
  7839  0006' 2800'              	goto	i1l991
  7840  0007'                    u147_20:
  7841  0007'                    i1l2553:
  7842  0007' 0802'              	movf	___wmul@multiplicand,w
  7843  0008' 0784'              	addwf	___wmul@product,f
  7844  0009' 0803'              	movf	___wmul@multiplicand+1,w
  7845  000A' 3D85'              	addwfc	___wmul@product+1,f
  7846  000B'                    i1l991:
  7847  000B' 3001               	movlw	1
  7848  000C'                    u148_25:
  7849  000C' 3582'              	lslf	___wmul@multiplicand,f
  7850  000D' 0D83'              	rlf	___wmul@multiplicand+1,f
  7851  000E' 0B89               	decfsz	9,f
  7852  000F' 2800'              	goto	u148_25
  7853  0010'                    i1l2555:
  7854  0010' 3001               	movlw	1
  7855  0011'                    u149_25:
  7856  0011' 3681'              	lsrf	___wmul@multiplier+1,f
  7857  0012' 0C80'              	rrf	___wmul@multiplier,f
  7858  0013' 0B89               	decfsz	9,f
  7859  0014' 2800'              	goto	u149_25
  7860  0015'                    i1l2557:
  7861  0015' 0800'              	movf	___wmul@multiplier,w
  7862  0016' 0401'              	iorwf	___wmul@multiplier+1,w
  7863  0017' 1D03               	btfss	3,2
  7864  0018' 2800'              	goto	u150_21
  7865  0019' 2800'              	goto	u150_20
  7866  001A'                    u150_21:
  7867  001A' 2800'              	goto	i1l2551
  7868  001B'                    u150_20:
  7869  001B'                    i1l2559:
  7870  001B' 0805'              	movf	___wmul@product+1,w
  7871  001C' 0081'              	movwf	?___wmul+1
  7872  001D' 0804'              	movf	___wmul@product,w
  7873  001E' 0080'              	movwf	?___wmul
  7874  001F'                    i1l993:
  7875  001F' 0008               	return
  7876  0020'                    __end_of___wmul:
  7877                           
  7878                           	psect	text47
  7879  0000'                    __ptext47:	
  7880 ;; *************** function _TMR1_ReadTimer *****************
  7881 ;; Defined at:
  7882 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;		None
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  readVal         2    7[COMMON] unsigned short 
  7887 ;;  readValLow      1   10[COMMON] unsigned char 
  7888 ;;  readValHigh     1    9[COMMON] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  2    0[COMMON] unsigned short 
  7891 ;; Registers used:
  7892 ;;		wreg
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7898 ;;      Params:         2       0       0       0       0       0
  7899 ;;      Locals:         4       0       0       0       0       0
  7900 ;;      Temps:          5       0       0       0       0       0
  7901 ;;      Totals:        11       0       0       0       0       0
  7902 ;;Total ram usage:       11 bytes
  7903 ;; Hardware stack levels used: 1
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_posicao_bola_tubo
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911  0000'                    _TMR1_ReadTimer:	
  7912                           ;psect for function _TMR1_ReadTimer
  7913                           
  7914  0000'                    i1l2439:	
  7915                           ;incstack = 0
  7916                           ; Regs used in _TMR1_ReadTimer: [wreg]
  7917                           
  7918                           
  7919                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  7920  0000' 0020               	movlb	0	; select bank0
  7921  0001' 0816               	movf	22,w	;volatile
  7922  0002' 008A'              	movwf	TMR1_ReadTimer@readValLow
  7923                           
  7924                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  7925  0003' 0817               	movf	23,w	;volatile
  7926  0004' 0089'              	movwf	TMR1_ReadTimer@readValHigh
  7927                           
  7928                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  7929  0005' 080A'              	movf	TMR1_ReadTimer@readValLow,w
  7930  0006' 0082'              	movwf	??_TMR1_ReadTimer
  7931  0007' 0183'              	clrf	??_TMR1_ReadTimer+1
  7932  0008' 0809'              	movf	TMR1_ReadTimer@readValHigh,w
  7933  0009' 0084'              	movwf	??_TMR1_ReadTimer+2
  7934  000A' 0185'              	clrf	??_TMR1_ReadTimer+3
  7935  000B' 0804'              	movf	??_TMR1_ReadTimer+2,w
  7936  000C' 0085'              	movwf	??_TMR1_ReadTimer+3
  7937  000D' 0184'              	clrf	??_TMR1_ReadTimer+2
  7938  000E' 0802'              	movf	??_TMR1_ReadTimer,w
  7939  000F' 0404'              	iorwf	??_TMR1_ReadTimer+2,w
  7940  0010' 0087'              	movwf	TMR1_ReadTimer@readVal
  7941  0011' 0803'              	movf	??_TMR1_ReadTimer+1,w
  7942  0012' 0405'              	iorwf	??_TMR1_ReadTimer+3,w
  7943  0013' 0088'              	movwf	TMR1_ReadTimer@readVal+1
  7944                           
  7945                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  7946  0014' 0808'              	movf	TMR1_ReadTimer@readVal+1,w
  7947  0015' 0081'              	movwf	?_TMR1_ReadTimer+1
  7948  0016' 0807'              	movf	TMR1_ReadTimer@readVal,w
  7949  0017' 0080'              	movwf	?_TMR1_ReadTimer
  7950  0018'                    i1l157:
  7951  0018' 0008               	return
  7952  0019'                    __end_of_TMR1_ReadTimer:
  7953                           
  7954                           	psect	text48
  7955  0000'                    __ptext48:	
  7956 ;; *************** function _Comando_PIeD *****************
  7957 ;; Defined at:
  7958 ;;		line 333 in file "funcoes.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;		None
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;		None
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  1    wreg      void 
  7965 ;; Registers used:
  7966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7972 ;;      Params:         0       0       0       0       0       0
  7973 ;;      Locals:         0       0       0       0       0       0
  7974 ;;      Temps:          0       0       0       0       0       0
  7975 ;;      Totals:         0       0       0       0       0       0
  7976 ;;Total ram usage:        0 bytes
  7977 ;; Hardware stack levels used: 1
  7978 ;; Hardware stack levels required when called: 3
  7979 ;; This function calls:
  7980 ;;		_modo_valvula
  7981 ;;		_modo_ventoinha
  7982 ;; This function is called by:
  7983 ;;		_posicao_bola_tubo
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987  0000'                    _Comando_PIeD:	
  7988                           ;psect for function _Comando_PIeD
  7989                           
  7990  0000'                    i1l2483:	
  7991                           ;incstack = 0
  7992                           ; Regs used in _Comando_PIeD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7993                           
  7994                           
  7995                           ;funcoes.c: 334:     switch(modo){
  7996  0000' 2800'              	goto	i1l2491
  7997  0001'                    i1l2485:
  7998                           
  7999                           ;funcoes.c: 336:             modo_ventoinha();
  8000  0001' 3180' 2000' 3180'  	fcall	_modo_ventoinha
  8001                           
  8002                           ;funcoes.c: 337:             break;
  8003  0004' 2800'              	goto	i1l826
  8004  0005'                    i1l2487:
  8005                           
  8006                           ;funcoes.c: 339:             modo_valvula();
  8007  0005' 3180' 2000' 3180'  	fcall	_modo_valvula
  8008                           
  8009                           ;funcoes.c: 340:             break;
  8010  0008' 2800'              	goto	i1l826
  8011  0009'                    i1l2491:
  8012  0009' 0020               	movlb	0	; select bank0
  8013  000A' 0814'              	movf	_modo,w
  8014                           
  8015                           ; Switch size 1, requested type "simple"
  8016                           ; Number of cases is 2, Range of values is 1 to 2
  8017                           ; switch strategies available:
  8018                           ; Name         Instructions Cycles
  8019                           ; simple_byte            7     4 (average)
  8020                           ; direct_byte           13     9 (fixed)
  8021                           ; jumptable            263     9 (fixed)
  8022                           ;	Chosen strategy is simple_byte
  8023  000B' 3A01               	xorlw	1	; case 1
  8024  000C' 1903               	skipnz
  8025  000D' 2800'              	goto	i1l2485
  8026  000E' 3A03               	xorlw	3	; case 2
  8027  000F' 1903               	skipnz
  8028  0010' 2800'              	goto	i1l2487
  8029  0011' 2800'              	goto	i1l826
  8030  0012'                    i1l826:
  8031  0012' 0008               	return
  8032  0013'                    __end_of_Comando_PIeD:
  8033                           
  8034                           	psect	text49
  8035  0000'                    __ptext49:	
  8036 ;; *************** function _modo_ventoinha *****************
  8037 ;; Defined at:
  8038 ;;		line 351 in file "funcoes.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;		None
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0, pclath, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8052 ;;      Params:         0       0       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0
  8054 ;;      Temps:          0       6       0       0       0       0
  8055 ;;      Totals:         0       6       0       0       0       0
  8056 ;;Total ram usage:        6 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; Hardware stack levels required when called: 2
  8059 ;; This function calls:
  8060 ;;		_EPWM1_LoadDutyValue
  8061 ;;		___atdiv
  8062 ;;		___tmul
  8063 ;;		_map_value
  8064 ;; This function is called by:
  8065 ;;		_Comando_PIeD
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069  0000'                    _modo_ventoinha:	
  8070                           ;psect for function _modo_ventoinha
  8071                           
  8072  0000'                    i1l2355:	
  8073                           ;incstack = 0
  8074                           ; Regs used in _modo_ventoinha: [wreg+status,2+status,0+pclath+cstack]
  8075                           
  8076                           
  8077                           ;funcoes.c: 352:     erro_atual = (int24_t)(((int24_t)Set_altura.Dado) - ((int24_t)(altu
      +                          ra_bola)));
  8078  0000' 0020               	movlb	0	; select bank0
  8079  0001' 080F'              	movf	_Set_altura,w
  8080  0002' 00B1'              	movwf	??_modo_ventoinha
  8081  0003' 0810'              	movf	_Set_altura+1,w
  8082  0004' 00B2'              	movwf	??_modo_ventoinha+1
  8083  0005' 01B3'              	clrf	??_modo_ventoinha+2
  8084  0006' 0021               	movlb	1	; select bank1
  8085  0007' 0800'              	movf	_altura_bola^(0+128),w
  8086  0008' 0020               	movlb	0	; select bank0
  8087  0009' 02B1'              	subwf	??_modo_ventoinha,f
  8088  000A' 0021               	movlb	1	; select bank1
  8089  000B' 0800'              	movf	(_altura_bola+1)^(0+128),w
  8090  000C' 0020               	movlb	0	; select bank0
  8091  000D' 3BB2'              	subwfb	??_modo_ventoinha+1,f
  8092  000E' 0021               	movlb	1	; select bank1
  8093  000F' 0800'              	movf	(_altura_bola+2)^(0+128),w
  8094  0010' 0020               	movlb	0	; select bank0
  8095  0011' 3BB3'              	subwfb	??_modo_ventoinha+2,f
  8096  0012' 0831'              	movf	??_modo_ventoinha,w
  8097  0013' 0086'              	movwf	_erro_atual
  8098  0014' 0832'              	movf	??_modo_ventoinha+1,w
  8099  0015' 0087'              	movwf	_erro_atual+1
  8100  0016' 0833'              	movf	??_modo_ventoinha+2,w
  8101  0017' 0088'              	movwf	_erro_atual+2
  8102  0018'                    i1l2357:
  8103                           
  8104                           ;funcoes.c: 353:     integrativo += (int24_t)(((ki_ventoinha * erro_atual) / 1000));
  8105  0018' 30E8               	movlw	232
  8106  0019' 0080'              	movwf	___atdiv@divisor
  8107  001A' 3003               	movlw	3
  8108  001B' 0081'              	movwf	___atdiv@divisor+1
  8109  001C' 3000               	movlw	0
  8110  001D' 0082'              	movwf	___atdiv@divisor+2
  8111  001E' 0021               	movlb	1	; select bank1
  8112  001F' 0800'              	movf	_ki_ventoinha^(0+128),w
  8113  0020' 0080'              	movwf	___tmul@multiplier
  8114  0021' 0800'              	movf	(_ki_ventoinha+1)^(0+128),w
  8115  0022' 0081'              	movwf	___tmul@multiplier+1
  8116  0023' 0800'              	movf	(_ki_ventoinha+2)^(0+128),w
  8117  0024' 0082'              	movwf	___tmul@multiplier+2
  8118  0025' 0020               	movlb	0	; select bank0
  8119  0026' 0806'              	movf	_erro_atual,w
  8120  0027' 0083'              	movwf	___tmul@multiplicand
  8121  0028' 0807'              	movf	_erro_atual+1,w
  8122  0029' 0084'              	movwf	___tmul@multiplicand+1
  8123  002A' 0808'              	movf	_erro_atual+2,w
  8124  002B' 0085'              	movwf	___tmul@multiplicand+2
  8125  002C' 3180' 2000' 3180'  	fcall	___tmul
  8126  002F' 0800'              	movf	?___tmul,w
  8127  0030' 0020               	movlb	0	; select bank0
  8128  0031' 0083'              	movwf	___atdiv@dividend
  8129  0032' 0801'              	movf	?___tmul+1,w
  8130  0033' 0084'              	movwf	___atdiv@dividend+1
  8131  0034' 0802'              	movf	?___tmul+2,w
  8132  0035' 0085'              	movwf	___atdiv@dividend+2
  8133  0036' 3180' 2000' 3180'  	fcall	___atdiv
  8134  0039' 0020               	movlb	0	; select bank0
  8135  003A' 0800'              	movf	?___atdiv,w
  8136  003B' 0783'              	addwf	_integrativo,f
  8137  003C' 0801'              	movf	?___atdiv+1,w
  8138  003D' 3D84'              	addwfc	_integrativo+1,f
  8139  003E' 0802'              	movf	?___atdiv+2,w
  8140  003F' 3D85'              	addwfc	_integrativo+2,f
  8141  0040'                    i1l2359:
  8142                           
  8143                           ;funcoes.c: 354:     proporcional = ((((int24_t)kp_ventoinha / 1000)) * erro_atual);
  8144  0040' 30E8               	movlw	232
  8145  0041' 0080'              	movwf	___atdiv@divisor
  8146  0042' 3003               	movlw	3
  8147  0043' 0081'              	movwf	___atdiv@divisor+1
  8148  0044' 3000               	movlw	0
  8149  0045' 0082'              	movwf	___atdiv@divisor+2
  8150  0046' 0021               	movlb	1	; select bank1
  8151  0047' 0800'              	movf	_kp_ventoinha^(0+128),w
  8152  0048' 0020               	movlb	0	; select bank0
  8153  0049' 0083'              	movwf	___atdiv@dividend
  8154  004A' 0021               	movlb	1	; select bank1
  8155  004B' 0800'              	movf	(_kp_ventoinha+1)^(0+128),w
  8156  004C' 0020               	movlb	0	; select bank0
  8157  004D' 0084'              	movwf	___atdiv@dividend+1
  8158  004E' 0021               	movlb	1	; select bank1
  8159  004F' 0800'              	movf	(_kp_ventoinha+2)^(0+128),w
  8160  0050' 0020               	movlb	0	; select bank0
  8161  0051' 0085'              	movwf	___atdiv@dividend+2
  8162  0052' 3180' 2000' 3180'  	fcall	___atdiv
  8163  0055' 0020               	movlb	0	; select bank0
  8164  0056' 0800'              	movf	?___atdiv,w
  8165  0057' 0080'              	movwf	___tmul@multiplier
  8166  0058' 0801'              	movf	?___atdiv+1,w
  8167  0059' 0081'              	movwf	___tmul@multiplier+1
  8168  005A' 0802'              	movf	?___atdiv+2,w
  8169  005B' 0082'              	movwf	___tmul@multiplier+2
  8170  005C' 0806'              	movf	_erro_atual,w
  8171  005D' 0083'              	movwf	___tmul@multiplicand
  8172  005E' 0807'              	movf	_erro_atual+1,w
  8173  005F' 0084'              	movwf	___tmul@multiplicand+1
  8174  0060' 0808'              	movf	_erro_atual+2,w
  8175  0061' 0085'              	movwf	___tmul@multiplicand+2
  8176  0062' 3180' 2000' 3180'  	fcall	___tmul
  8177  0065' 0800'              	movf	?___tmul,w
  8178  0066' 0021               	movlb	1	; select bank1
  8179  0067' 0080'              	movwf	_proporcional^(0+128)
  8180  0068' 0801'              	movf	?___tmul+1,w
  8181  0069' 0080'              	movwf	(_proporcional+1)^(0+128)
  8182  006A' 0802'              	movf	?___tmul+2,w
  8183  006B' 0080'              	movwf	(_proporcional+2)^(0+128)
  8184  006C'                    i1l2361:
  8185                           
  8186                           ;funcoes.c: 355:     derivativo = (int24_t)(kd_ventoinha * (erro_atual - erro_anterior))
      +                           / 1000;
  8187  006C' 30E8               	movlw	232
  8188  006D' 0020               	movlb	0	; select bank0
  8189  006E' 0080'              	movwf	___atdiv@divisor
  8190  006F' 3003               	movlw	3
  8191  0070' 0081'              	movwf	___atdiv@divisor+1
  8192  0071' 3000               	movlw	0
  8193  0072' 0082'              	movwf	___atdiv@divisor+2
  8194  0073' 0021               	movlb	1	; select bank1
  8195  0074' 0800'              	movf	_erro_anterior^(0+128),w
  8196  0075' 0020               	movlb	0	; select bank0
  8197  0076' 0206'              	subwf	_erro_atual,w
  8198  0077' 00B1'              	movwf	??_modo_ventoinha
  8199  0078' 0807'              	movf	_erro_atual+1,w
  8200  0079' 00B2'              	movwf	??_modo_ventoinha+1
  8201  007A' 0021               	movlb	1	; select bank1
  8202  007B' 0800'              	movf	(_erro_anterior+1)^(0+128),w
  8203  007C' 1C03               	skipc
  8204  007D' 0F00'              	incfsz	(_erro_anterior+1)^(0+128),w
  8205  007E' 2800'              	goto	u126_21
  8206  007F' 2800'              	goto	u126_22
  8207  0080'                    u126_21:
  8208  0080' 0020               	movlb	0	; select bank0
  8209  0081' 02B2'              	subwf	??_modo_ventoinha+1,f
  8210  0082'                    u126_22:
  8211  0082' 0808'              	movf	_erro_atual+2,w
  8212  0083' 00B3'              	movwf	??_modo_ventoinha+2
  8213  0084' 0021               	movlb	1	; select bank1
  8214  0085' 0800'              	movf	(_erro_anterior+2)^(0+128),w
  8215  0086' 1C03               	skipc
  8216  0087' 0F00'              	incfsz	(_erro_anterior+2)^(0+128),w
  8217  0088' 2800'              	goto	u126_23
  8218  0089' 2800'              	goto	u126_24
  8219  008A'                    u126_23:
  8220  008A' 0020               	movlb	0	; select bank0
  8221  008B' 02B3'              	subwf	??_modo_ventoinha+2,f
  8222  008C'                    u126_24:
  8223  008C' 0831'              	movf	??_modo_ventoinha,w
  8224  008D' 0080'              	movwf	___tmul@multiplier
  8225  008E' 0832'              	movf	??_modo_ventoinha+1,w
  8226  008F' 0081'              	movwf	___tmul@multiplier+1
  8227  0090' 0833'              	movf	??_modo_ventoinha+2,w
  8228  0091' 0082'              	movwf	___tmul@multiplier+2
  8229  0092' 0021               	movlb	1	; select bank1
  8230  0093' 0800'              	movf	_kd_ventoinha^(0+128),w
  8231  0094' 0083'              	movwf	___tmul@multiplicand
  8232  0095' 0800'              	movf	(_kd_ventoinha+1)^(0+128),w
  8233  0096' 0084'              	movwf	___tmul@multiplicand+1
  8234  0097' 0800'              	movf	(_kd_ventoinha+2)^(0+128),w
  8235  0098' 0085'              	movwf	___tmul@multiplicand+2
  8236  0099' 3180' 2000' 3180'  	fcall	___tmul
  8237  009C' 0800'              	movf	?___tmul,w
  8238  009D' 0020               	movlb	0	; select bank0
  8239  009E' 0083'              	movwf	___atdiv@dividend
  8240  009F' 0801'              	movf	?___tmul+1,w
  8241  00A0' 0084'              	movwf	___atdiv@dividend+1
  8242  00A1' 0802'              	movf	?___tmul+2,w
  8243  00A2' 0085'              	movwf	___atdiv@dividend+2
  8244  00A3' 3180' 2000' 3180'  	fcall	___atdiv
  8245  00A6' 0020               	movlb	0	; select bank0
  8246  00A7' 0800'              	movf	?___atdiv,w
  8247  00A8' 0021               	movlb	1	; select bank1
  8248  00A9' 0080'              	movwf	_derivativo^(0+128)
  8249  00AA' 0020               	movlb	0	; select bank0
  8250  00AB' 0801'              	movf	?___atdiv+1,w
  8251  00AC' 0021               	movlb	1	; select bank1
  8252  00AD' 0080'              	movwf	(_derivativo+1)^(0+128)
  8253  00AE' 0020               	movlb	0	; select bank0
  8254  00AF' 0802'              	movf	?___atdiv+2,w
  8255  00B0' 0021               	movlb	1	; select bank1
  8256  00B1' 0080'              	movwf	(_derivativo+2)^(0+128)
  8257  00B2'                    i1l2363:
  8258                           
  8259                           ;funcoes.c: 356:     soma_PID = proporcional + integrativo + derivativo;
  8260  00B2' 0800'              	movf	_derivativo^(0+128),w
  8261  00B3' 0020               	movlb	0	; select bank0
  8262  00B4' 00B1'              	movwf	??_modo_ventoinha
  8263  00B5' 0021               	movlb	1	; select bank1
  8264  00B6' 0800'              	movf	(_derivativo+1)^(0+128),w
  8265  00B7' 0020               	movlb	0	; select bank0
  8266  00B8' 00B2'              	movwf	??_modo_ventoinha+1
  8267  00B9' 0021               	movlb	1	; select bank1
  8268  00BA' 0800'              	movf	(_derivativo+2)^(0+128),w
  8269  00BB' 0020               	movlb	0	; select bank0
  8270  00BC' 00B3'              	movwf	??_modo_ventoinha+2
  8271  00BD' 0021               	movlb	1	; select bank1
  8272  00BE' 0800'              	movf	_proporcional^(0+128),w
  8273  00BF' 0020               	movlb	0	; select bank0
  8274  00C0' 0703'              	addwf	_integrativo,w
  8275  00C1' 00B4'              	movwf	??_modo_ventoinha+3
  8276  00C2' 0021               	movlb	1	; select bank1
  8277  00C3' 0800'              	movf	(_proporcional+1)^(0+128),w
  8278  00C4' 0020               	movlb	0	; select bank0
  8279  00C5' 3D04'              	addwfc	_integrativo+1,w
  8280  00C6' 00B5'              	movwf	??_modo_ventoinha+4
  8281  00C7' 0021               	movlb	1	; select bank1
  8282  00C8' 0800'              	movf	(_proporcional+2)^(0+128),w
  8283  00C9' 0020               	movlb	0	; select bank0
  8284  00CA' 3D05'              	addwfc	_integrativo+2,w
  8285  00CB' 00B6'              	movwf	??_modo_ventoinha+5
  8286  00CC' 0834'              	movf	??_modo_ventoinha+3,w
  8287  00CD' 07B1'              	addwf	??_modo_ventoinha,f
  8288  00CE' 0835'              	movf	??_modo_ventoinha+4,w
  8289  00CF' 3DB2'              	addwfc	??_modo_ventoinha+1,f
  8290  00D0' 0836'              	movf	??_modo_ventoinha+5,w
  8291  00D1' 3DB3'              	addwfc	??_modo_ventoinha+2,f
  8292  00D2' 0831'              	movf	??_modo_ventoinha,w
  8293  00D3' 0080'              	movwf	_soma_PID
  8294  00D4' 0832'              	movf	??_modo_ventoinha+1,w
  8295  00D5' 0081'              	movwf	_soma_PID+1
  8296  00D6' 0833'              	movf	??_modo_ventoinha+2,w
  8297  00D7' 0082'              	movwf	_soma_PID+2
  8298  00D8'                    i1l2365:
  8299                           
  8300                           ;funcoes.c: 359:     if(soma_PID < 0) soma_PID = 0;
  8301  00D8' 1F82'              	btfss	_soma_PID+2,7
  8302  00D9' 2800'              	goto	u127_21
  8303  00DA' 2800'              	goto	u127_20
  8304  00DB'                    u127_21:
  8305  00DB' 2800'              	goto	i1l2369
  8306  00DC'                    u127_20:
  8307  00DC'                    i1l2367:
  8308  00DC' 3000               	movlw	0
  8309  00DD' 0080'              	movwf	_soma_PID
  8310  00DE' 3000               	movlw	0
  8311  00DF' 0081'              	movwf	_soma_PID+1
  8312  00E0' 3000               	movlw	0
  8313  00E1' 0082'              	movwf	_soma_PID+2
  8314  00E2'                    i1l2369:
  8315                           
  8316                           ;funcoes.c: 360:     if(soma_PID > 42000) soma_PID = 42000;
  8317  00E2' 1B82'              	btfsc	_soma_PID+2,7
  8318  00E3' 2800'              	goto	u128_21
  8319  00E4' 0802'              	movf	_soma_PID+2,w
  8320  00E5' 1D03               	btfss	3,2
  8321  00E6' 2800'              	goto	u128_20
  8322  00E7' 3011               	movlw	17
  8323  00E8' 0200'              	subwf	_soma_PID,w
  8324  00E9' 30A4               	movlw	164
  8325  00EA' 3B01'              	subwfb	_soma_PID+1,w
  8326  00EB' 1C03               	btfss	3,0
  8327  00EC' 2800'              	goto	u128_21
  8328  00ED' 2800'              	goto	u128_20
  8329  00EE'                    u128_21:
  8330  00EE' 2800'              	goto	i1l2373
  8331  00EF'                    u128_20:
  8332  00EF'                    i1l2371:
  8333  00EF' 3010               	movlw	16
  8334  00F0' 0020               	movlb	0	; select bank0
  8335  00F1' 0080'              	movwf	_soma_PID
  8336  00F2' 30A4               	movlw	164
  8337  00F3' 0081'              	movwf	_soma_PID+1
  8338  00F4' 3000               	movlw	0
  8339  00F5' 0082'              	movwf	_soma_PID+2
  8340  00F6'                    i1l2373:
  8341                           
  8342                           ;funcoes.c: 363:     ciclo_util_futuro = (int16_t)map_value(soma_PID, 0, 42000, 600, 102
      +                          3);
  8343  00F6' 0020               	movlb	0	; select bank0
  8344  00F7' 0800'              	movf	_soma_PID,w
  8345  00F8' 008E'              	movwf	map_value@x
  8346  00F9' 0801'              	movf	_soma_PID+1,w
  8347  00FA' 008F'              	movwf	map_value@x+1
  8348  00FB' 0802'              	movf	_soma_PID+2,w
  8349  00FC' 0090'              	movwf	map_value@x+2
  8350  00FD' 0D89               	rlf	9,f
  8351  00FE' 3B89               	subwfb	9,f
  8352  00FF' 0989               	comf	9,f
  8353  0100' 0091'              	movwf	map_value@x+3
  8354  0101' 3000               	movlw	0
  8355  0102' 0095'              	movwf	map_value@in_min+3
  8356  0103' 3000               	movlw	0
  8357  0104' 0094'              	movwf	map_value@in_min+2
  8358  0105' 3000               	movlw	0
  8359  0106' 0093'              	movwf	map_value@in_min+1
  8360  0107' 3000               	movlw	0
  8361  0108' 0092'              	movwf	map_value@in_min
  8362  0109' 3000               	movlw	0
  8363  010A' 0099'              	movwf	map_value@in_max+3
  8364  010B' 3000               	movlw	0
  8365  010C' 0098'              	movwf	map_value@in_max+2
  8366  010D' 30A4               	movlw	164
  8367  010E' 0097'              	movwf	map_value@in_max+1
  8368  010F' 3010               	movlw	16
  8369  0110' 0096'              	movwf	map_value@in_max
  8370  0111' 3000               	movlw	0
  8371  0112' 009D'              	movwf	map_value@out_min+3
  8372  0113' 3000               	movlw	0
  8373  0114' 009C'              	movwf	map_value@out_min+2
  8374  0115' 3002               	movlw	2
  8375  0116' 009B'              	movwf	map_value@out_min+1
  8376  0117' 3058               	movlw	88
  8377  0118' 009A'              	movwf	map_value@out_min
  8378  0119' 3000               	movlw	0
  8379  011A' 00A1'              	movwf	map_value@out_max+3
  8380  011B' 3000               	movlw	0
  8381  011C' 00A0'              	movwf	map_value@out_max+2
  8382  011D' 3003               	movlw	3
  8383  011E' 009F'              	movwf	map_value@out_max+1
  8384  011F' 30FF               	movlw	255
  8385  0120' 009E'              	movwf	map_value@out_max
  8386  0121' 3180' 2000' 3180'  	fcall	_map_value
  8387  0124' 0020               	movlb	0	; select bank0
  8388  0125' 080F'              	movf	?_map_value+1,w
  8389  0126' 008A'              	movwf	_ciclo_util_futuro+1
  8390  0127' 080E'              	movf	?_map_value,w
  8391  0128' 0089'              	movwf	_ciclo_util_futuro
  8392  0129'                    i1l2375:
  8393                           
  8394                           ;funcoes.c: 364:     EPWM1_LoadDutyValue(ciclo_util_futuro);
  8395  0129' 080A'              	movf	_ciclo_util_futuro+1,w
  8396  012A' 0081'              	movwf	EPWM1_LoadDutyValue@dutyValue+1
  8397  012B' 0809'              	movf	_ciclo_util_futuro,w
  8398  012C' 0080'              	movwf	EPWM1_LoadDutyValue@dutyValue
  8399  012D' 3180' 2000' 3180'  	fcall	_EPWM1_LoadDutyValue
  8400                           
  8401                           ;funcoes.c: 365:     erro_anterior = erro_atual;
  8402  0130' 0020               	movlb	0	; select bank0
  8403  0131' 0806'              	movf	_erro_atual,w
  8404  0132' 0021               	movlb	1	; select bank1
  8405  0133' 0080'              	movwf	_erro_anterior^(0+128)
  8406  0134' 0020               	movlb	0	; select bank0
  8407  0135' 0807'              	movf	_erro_atual+1,w
  8408  0136' 0021               	movlb	1	; select bank1
  8409  0137' 0080'              	movwf	(_erro_anterior+1)^(0+128)
  8410  0138' 0020               	movlb	0	; select bank0
  8411  0139' 0808'              	movf	_erro_atual+2,w
  8412  013A' 0021               	movlb	1	; select bank1
  8413  013B' 0080'              	movwf	(_erro_anterior+2)^(0+128)
  8414  013C'                    i1l831:
  8415  013C' 0008               	return
  8416  013D'                    __end_of_modo_ventoinha:
  8417                           
  8418                           	psect	text50
  8419  0000'                    __ptext50:	
  8420 ;; *************** function _EPWM1_LoadDutyValue *****************
  8421 ;; Defined at:
  8422 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  dutyValue       2    0[COMMON] unsigned short 
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;		None
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      void 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8436 ;;      Params:         2       0       0       0       0       0
  8437 ;;      Locals:         0       0       0       0       0       0
  8438 ;;      Temps:          2       0       0       0       0       0
  8439 ;;      Totals:         4       0       0       0       0       0
  8440 ;;Total ram usage:        4 bytes
  8441 ;; Hardware stack levels used: 1
  8442 ;; This function calls:
  8443 ;;		Nothing
  8444 ;; This function is called by:
  8445 ;;		_selecao_do_modo
  8446 ;;		_modo_ventoinha
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450  0000'                    _EPWM1_LoadDutyValue:	
  8451                           ;psect for function _EPWM1_LoadDutyValue
  8452                           
  8453  0000'                    i1l2263:	
  8454                           ;incstack = 0
  8455                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  8456                           
  8457                           
  8458                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  8459  0000' 0801'              	movf	EPWM1_LoadDutyValue@dutyValue+1,w
  8460  0001' 0083'              	movwf	??_EPWM1_LoadDutyValue+1
  8461  0002' 0800'              	movf	EPWM1_LoadDutyValue@dutyValue,w
  8462  0003' 0082'              	movwf	??_EPWM1_LoadDutyValue
  8463  0004' 3683'              	lsrf	??_EPWM1_LoadDutyValue+1,f
  8464  0005' 0C82'              	rrf	??_EPWM1_LoadDutyValue,f
  8465  0006' 3683'              	lsrf	??_EPWM1_LoadDutyValue+1,f
  8466  0007' 0C82'              	rrf	??_EPWM1_LoadDutyValue,f
  8467  0008' 0802'              	movf	??_EPWM1_LoadDutyValue,w
  8468  0009' 0025               	movlb	5	; select bank5
  8469  000A' 0091               	movwf	17	;volatile
  8470                           
  8471                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  8472  000B' 0800'              	movf	EPWM1_LoadDutyValue@dutyValue,w
  8473  000C' 3903               	andlw	3
  8474  000D' 0082'              	movwf	??_EPWM1_LoadDutyValue
  8475  000E' 3004               	movlw	4
  8476  000F'                    u106_25:
  8477  000F' 3582'              	lslf	??_EPWM1_LoadDutyValue,f
  8478  0010' 0B89               	decfsz	9,f
  8479  0011' 2800'              	goto	u106_25
  8480  0012' 0813               	movf	19,w	;volatile
  8481  0013' 39CF               	andlw	207
  8482  0014' 0402'              	iorwf	??_EPWM1_LoadDutyValue,w
  8483  0015' 0093               	movwf	19	;volatile
  8484  0016'                    i1l357:
  8485  0016' 0008               	return
  8486  0017'                    __end_of_EPWM1_LoadDutyValue:
  8487                           
  8488                           	psect	text51
  8489  0000'                    __ptext51:	
  8490 ;; *************** function _modo_valvula *****************
  8491 ;; Defined at:
  8492 ;;		line 373 in file "funcoes.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;		None
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0, pclath, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8506 ;;      Params:         0       0       0       0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0
  8508 ;;      Temps:          0       3       0       0       0       0
  8509 ;;      Totals:         0       3       0       0       0       0
  8510 ;;Total ram usage:        3 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 2
  8513 ;; This function calls:
  8514 ;;		___atdiv
  8515 ;;		___tmul
  8516 ;;		_map_value
  8517 ;; This function is called by:
  8518 ;;		_Comando_PIeD
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522  0000'                    _modo_valvula:	
  8523                           ;psect for function _modo_valvula
  8524                           
  8525  0000'                    i1l2377:	
  8526                           ;incstack = 0
  8527                           ; Regs used in _modo_valvula: [wreg+status,2+status,0+pclath+cstack]
  8528                           
  8529                           
  8530                           ;funcoes.c: 374:     erro_atual = (int24_t)(((int24_t)Set_altura.Dado) - ((int24_t)(altu
      +                          ra_bola)));
  8531  0000' 0020               	movlb	0	; select bank0
  8532  0001' 080F'              	movf	_Set_altura,w
  8533  0002' 00B1'              	movwf	??_modo_valvula
  8534  0003' 0810'              	movf	_Set_altura+1,w
  8535  0004' 00B2'              	movwf	??_modo_valvula+1
  8536  0005' 01B3'              	clrf	??_modo_valvula+2
  8537  0006' 0021               	movlb	1	; select bank1
  8538  0007' 0800'              	movf	_altura_bola^(0+128),w
  8539  0008' 0020               	movlb	0	; select bank0
  8540  0009' 02B1'              	subwf	??_modo_valvula,f
  8541  000A' 0021               	movlb	1	; select bank1
  8542  000B' 0800'              	movf	(_altura_bola+1)^(0+128),w
  8543  000C' 0020               	movlb	0	; select bank0
  8544  000D' 3BB2'              	subwfb	??_modo_valvula+1,f
  8545  000E' 0021               	movlb	1	; select bank1
  8546  000F' 0800'              	movf	(_altura_bola+2)^(0+128),w
  8547  0010' 0020               	movlb	0	; select bank0
  8548  0011' 3BB3'              	subwfb	??_modo_valvula+2,f
  8549  0012' 0831'              	movf	??_modo_valvula,w
  8550  0013' 0086'              	movwf	_erro_atual
  8551  0014' 0832'              	movf	??_modo_valvula+1,w
  8552  0015' 0087'              	movwf	_erro_atual+1
  8553  0016' 0833'              	movf	??_modo_valvula+2,w
  8554  0017' 0088'              	movwf	_erro_atual+2
  8555  0018'                    i1l2379:
  8556                           
  8557                           ;funcoes.c: 375:     integrativo += ((ki_valvula / 1000) * (erro_atual));
  8558  0018' 30E8               	movlw	232
  8559  0019' 0080'              	movwf	___atdiv@divisor
  8560  001A' 3003               	movlw	3
  8561  001B' 0081'              	movwf	___atdiv@divisor+1
  8562  001C' 3000               	movlw	0
  8563  001D' 0082'              	movwf	___atdiv@divisor+2
  8564  001E' 0021               	movlb	1	; select bank1
  8565  001F' 0800'              	movf	_ki_valvula^(0+128),w
  8566  0020' 0020               	movlb	0	; select bank0
  8567  0021' 0083'              	movwf	___atdiv@dividend
  8568  0022' 0021               	movlb	1	; select bank1
  8569  0023' 0800'              	movf	(_ki_valvula+1)^(0+128),w
  8570  0024' 0020               	movlb	0	; select bank0
  8571  0025' 0084'              	movwf	___atdiv@dividend+1
  8572  0026' 0021               	movlb	1	; select bank1
  8573  0027' 0800'              	movf	(_ki_valvula+2)^(0+128),w
  8574  0028' 0020               	movlb	0	; select bank0
  8575  0029' 0085'              	movwf	___atdiv@dividend+2
  8576  002A' 3180' 2000' 3180'  	fcall	___atdiv
  8577  002D' 0020               	movlb	0	; select bank0
  8578  002E' 0800'              	movf	?___atdiv,w
  8579  002F' 0080'              	movwf	___tmul@multiplier
  8580  0030' 0801'              	movf	?___atdiv+1,w
  8581  0031' 0081'              	movwf	___tmul@multiplier+1
  8582  0032' 0802'              	movf	?___atdiv+2,w
  8583  0033' 0082'              	movwf	___tmul@multiplier+2
  8584  0034' 0806'              	movf	_erro_atual,w
  8585  0035' 0083'              	movwf	___tmul@multiplicand
  8586  0036' 0807'              	movf	_erro_atual+1,w
  8587  0037' 0084'              	movwf	___tmul@multiplicand+1
  8588  0038' 0808'              	movf	_erro_atual+2,w
  8589  0039' 0085'              	movwf	___tmul@multiplicand+2
  8590  003A' 3180' 2000' 3180'  	fcall	___tmul
  8591  003D' 0800'              	movf	?___tmul,w
  8592  003E' 0020               	movlb	0	; select bank0
  8593  003F' 0783'              	addwf	_integrativo,f
  8594  0040' 0801'              	movf	?___tmul+1,w
  8595  0041' 3D84'              	addwfc	_integrativo+1,f
  8596  0042' 0802'              	movf	?___tmul+2,w
  8597  0043' 3D85'              	addwfc	_integrativo+2,f
  8598  0044'                    i1l2381:
  8599                           
  8600                           ;funcoes.c: 378:     if(integrativo > 350) { integrativo = 350; }
  8601  0044' 1B85'              	btfsc	_integrativo+2,7
  8602  0045' 2800'              	goto	u129_21
  8603  0046' 0805'              	movf	_integrativo+2,w
  8604  0047' 1D03               	btfss	3,2
  8605  0048' 2800'              	goto	u129_20
  8606  0049' 305F               	movlw	95
  8607  004A' 0203'              	subwf	_integrativo,w
  8608  004B' 3001               	movlw	1
  8609  004C' 3B04'              	subwfb	_integrativo+1,w
  8610  004D' 1C03               	btfss	3,0
  8611  004E' 2800'              	goto	u129_21
  8612  004F' 2800'              	goto	u129_20
  8613  0050'                    u129_21:
  8614  0050' 2800'              	goto	i1l2385
  8615  0051'                    u129_20:
  8616  0051'                    i1l2383:
  8617  0051' 305E               	movlw	94
  8618  0052' 0020               	movlb	0	; select bank0
  8619  0053' 0083'              	movwf	_integrativo
  8620  0054' 3001               	movlw	1
  8621  0055' 0084'              	movwf	_integrativo+1
  8622  0056' 3000               	movlw	0
  8623  0057' 0085'              	movwf	_integrativo+2
  8624  0058'                    i1l2385:
  8625                           
  8626                           ;funcoes.c: 379:     if(integrativo < -350) { integrativo = -350; }
  8627  0058' 0020               	movlb	0	; select bank0
  8628  0059' 1F85'              	btfss	_integrativo+2,7
  8629  005A' 2800'              	goto	u130_21
  8630  005B' 30A2               	movlw	162
  8631  005C' 0203'              	subwf	_integrativo,w
  8632  005D' 30FE               	movlw	254
  8633  005E' 3B04'              	subwfb	_integrativo+1,w
  8634  005F' 30FF               	movlw	255
  8635  0060' 3B05'              	subwfb	_integrativo+2,w
  8636  0061' 1803               	btfsc	3,0
  8637  0062' 2800'              	goto	u130_21
  8638  0063' 2800'              	goto	u130_20
  8639  0064'                    u130_21:
  8640  0064' 2800'              	goto	i1l2389
  8641  0065'                    u130_20:
  8642  0065'                    i1l2387:
  8643  0065' 30A2               	movlw	162
  8644  0066' 0020               	movlb	0	; select bank0
  8645  0067' 0083'              	movwf	_integrativo
  8646  0068' 30FE               	movlw	254
  8647  0069' 0084'              	movwf	_integrativo+1
  8648  006A' 30FF               	movlw	255
  8649  006B' 0085'              	movwf	_integrativo+2
  8650  006C'                    i1l2389:
  8651                           
  8652                           ;funcoes.c: 381:     proporcional = ((kp_valvula / 1000) * erro_atual);
  8653  006C' 30E8               	movlw	232
  8654  006D' 0020               	movlb	0	; select bank0
  8655  006E' 0080'              	movwf	___atdiv@divisor
  8656  006F' 3003               	movlw	3
  8657  0070' 0081'              	movwf	___atdiv@divisor+1
  8658  0071' 3000               	movlw	0
  8659  0072' 0082'              	movwf	___atdiv@divisor+2
  8660  0073' 0021               	movlb	1	; select bank1
  8661  0074' 0800'              	movf	_kp_valvula^(0+128),w
  8662  0075' 0020               	movlb	0	; select bank0
  8663  0076' 0083'              	movwf	___atdiv@dividend
  8664  0077' 0021               	movlb	1	; select bank1
  8665  0078' 0800'              	movf	(_kp_valvula+1)^(0+128),w
  8666  0079' 0020               	movlb	0	; select bank0
  8667  007A' 0084'              	movwf	___atdiv@dividend+1
  8668  007B' 0021               	movlb	1	; select bank1
  8669  007C' 0800'              	movf	(_kp_valvula+2)^(0+128),w
  8670  007D' 0020               	movlb	0	; select bank0
  8671  007E' 0085'              	movwf	___atdiv@dividend+2
  8672  007F' 3180' 2000' 3180'  	fcall	___atdiv
  8673  0082' 0020               	movlb	0	; select bank0
  8674  0083' 0800'              	movf	?___atdiv,w
  8675  0084' 0080'              	movwf	___tmul@multiplier
  8676  0085' 0801'              	movf	?___atdiv+1,w
  8677  0086' 0081'              	movwf	___tmul@multiplier+1
  8678  0087' 0802'              	movf	?___atdiv+2,w
  8679  0088' 0082'              	movwf	___tmul@multiplier+2
  8680  0089' 0806'              	movf	_erro_atual,w
  8681  008A' 0083'              	movwf	___tmul@multiplicand
  8682  008B' 0807'              	movf	_erro_atual+1,w
  8683  008C' 0084'              	movwf	___tmul@multiplicand+1
  8684  008D' 0808'              	movf	_erro_atual+2,w
  8685  008E' 0085'              	movwf	___tmul@multiplicand+2
  8686  008F' 3180' 2000' 3180'  	fcall	___tmul
  8687  0092' 0800'              	movf	?___tmul,w
  8688  0093' 0021               	movlb	1	; select bank1
  8689  0094' 0080'              	movwf	_proporcional^(0+128)
  8690  0095' 0801'              	movf	?___tmul+1,w
  8691  0096' 0080'              	movwf	(_proporcional+1)^(0+128)
  8692  0097' 0802'              	movf	?___tmul+2,w
  8693  0098' 0080'              	movwf	(_proporcional+2)^(0+128)
  8694  0099'                    i1l2391:
  8695                           
  8696                           ;funcoes.c: 382:     soma_PID = proporcional + integrativo;
  8697  0099' 0800'              	movf	_proporcional^(0+128),w
  8698  009A' 0020               	movlb	0	; select bank0
  8699  009B' 0703'              	addwf	_integrativo,w
  8700  009C' 00B1'              	movwf	??_modo_valvula
  8701  009D' 0021               	movlb	1	; select bank1
  8702  009E' 0800'              	movf	(_proporcional+1)^(0+128),w
  8703  009F' 0020               	movlb	0	; select bank0
  8704  00A0' 3D04'              	addwfc	_integrativo+1,w
  8705  00A1' 00B2'              	movwf	??_modo_valvula+1
  8706  00A2' 0021               	movlb	1	; select bank1
  8707  00A3' 0800'              	movf	(_proporcional+2)^(0+128),w
  8708  00A4' 0020               	movlb	0	; select bank0
  8709  00A5' 3D05'              	addwfc	_integrativo+2,w
  8710  00A6' 00B3'              	movwf	??_modo_valvula+2
  8711  00A7' 0831'              	movf	??_modo_valvula,w
  8712  00A8' 0080'              	movwf	_soma_PID
  8713  00A9' 0832'              	movf	??_modo_valvula+1,w
  8714  00AA' 0081'              	movwf	_soma_PID+1
  8715  00AB' 0833'              	movf	??_modo_valvula+2,w
  8716  00AC' 0082'              	movwf	_soma_PID+2
  8717  00AD'                    i1l2393:
  8718                           
  8719                           ;funcoes.c: 385:     if(soma_PID < 0) soma_PID = 0;
  8720  00AD' 1F82'              	btfss	_soma_PID+2,7
  8721  00AE' 2800'              	goto	u131_21
  8722  00AF' 2800'              	goto	u131_20
  8723  00B0'                    u131_21:
  8724  00B0' 2800'              	goto	i1l2397
  8725  00B1'                    u131_20:
  8726  00B1'                    i1l2395:
  8727  00B1' 3000               	movlw	0
  8728  00B2' 0080'              	movwf	_soma_PID
  8729  00B3' 3000               	movlw	0
  8730  00B4' 0081'              	movwf	_soma_PID+1
  8731  00B5' 3000               	movlw	0
  8732  00B6' 0082'              	movwf	_soma_PID+2
  8733  00B7'                    i1l2397:
  8734                           
  8735                           ;funcoes.c: 386:     if(soma_PID > 42000) soma_PID = 42000;
  8736  00B7' 1B82'              	btfsc	_soma_PID+2,7
  8737  00B8' 2800'              	goto	u132_21
  8738  00B9' 0802'              	movf	_soma_PID+2,w
  8739  00BA' 1D03               	btfss	3,2
  8740  00BB' 2800'              	goto	u132_20
  8741  00BC' 3011               	movlw	17
  8742  00BD' 0200'              	subwf	_soma_PID,w
  8743  00BE' 30A4               	movlw	164
  8744  00BF' 3B01'              	subwfb	_soma_PID+1,w
  8745  00C0' 1C03               	btfss	3,0
  8746  00C1' 2800'              	goto	u132_21
  8747  00C2' 2800'              	goto	u132_20
  8748  00C3'                    u132_21:
  8749  00C3' 2800'              	goto	i1l2401
  8750  00C4'                    u132_20:
  8751  00C4'                    i1l2399:
  8752  00C4' 3010               	movlw	16
  8753  00C5' 0020               	movlb	0	; select bank0
  8754  00C6' 0080'              	movwf	_soma_PID
  8755  00C7' 30A4               	movlw	164
  8756  00C8' 0081'              	movwf	_soma_PID+1
  8757  00C9' 3000               	movlw	0
  8758  00CA' 0082'              	movwf	_soma_PID+2
  8759  00CB'                    i1l2401:
  8760                           
  8761                           ;funcoes.c: 389:     posicao_val_futura = (int16_t)map_value(soma_PID, 0, 42000, 460, 0)
      +                          ;
  8762  00CB' 0020               	movlb	0	; select bank0
  8763  00CC' 0800'              	movf	_soma_PID,w
  8764  00CD' 008E'              	movwf	map_value@x
  8765  00CE' 0801'              	movf	_soma_PID+1,w
  8766  00CF' 008F'              	movwf	map_value@x+1
  8767  00D0' 0802'              	movf	_soma_PID+2,w
  8768  00D1' 0090'              	movwf	map_value@x+2
  8769  00D2' 0D89               	rlf	9,f
  8770  00D3' 3B89               	subwfb	9,f
  8771  00D4' 0989               	comf	9,f
  8772  00D5' 0091'              	movwf	map_value@x+3
  8773  00D6' 3000               	movlw	0
  8774  00D7' 0095'              	movwf	map_value@in_min+3
  8775  00D8' 3000               	movlw	0
  8776  00D9' 0094'              	movwf	map_value@in_min+2
  8777  00DA' 3000               	movlw	0
  8778  00DB' 0093'              	movwf	map_value@in_min+1
  8779  00DC' 3000               	movlw	0
  8780  00DD' 0092'              	movwf	map_value@in_min
  8781  00DE' 3000               	movlw	0
  8782  00DF' 0099'              	movwf	map_value@in_max+3
  8783  00E0' 3000               	movlw	0
  8784  00E1' 0098'              	movwf	map_value@in_max+2
  8785  00E2' 30A4               	movlw	164
  8786  00E3' 0097'              	movwf	map_value@in_max+1
  8787  00E4' 3010               	movlw	16
  8788  00E5' 0096'              	movwf	map_value@in_max
  8789  00E6' 3000               	movlw	0
  8790  00E7' 009D'              	movwf	map_value@out_min+3
  8791  00E8' 3000               	movlw	0
  8792  00E9' 009C'              	movwf	map_value@out_min+2
  8793  00EA' 3001               	movlw	1
  8794  00EB' 009B'              	movwf	map_value@out_min+1
  8795  00EC' 30CC               	movlw	204
  8796  00ED' 009A'              	movwf	map_value@out_min
  8797  00EE' 3000               	movlw	0
  8798  00EF' 00A1'              	movwf	map_value@out_max+3
  8799  00F0' 3000               	movlw	0
  8800  00F1' 00A0'              	movwf	map_value@out_max+2
  8801  00F2' 3000               	movlw	0
  8802  00F3' 009F'              	movwf	map_value@out_max+1
  8803  00F4' 3000               	movlw	0
  8804  00F5' 009E'              	movwf	map_value@out_max
  8805  00F6' 3180' 2000' 3180'  	fcall	_map_value
  8806  00F9' 0020               	movlb	0	; select bank0
  8807  00FA' 080F'              	movf	?_map_value+1,w
  8808  00FB' 0021               	movlb	1	; select bank1
  8809  00FC' 0080'              	movwf	(_posicao_val_futura+1)^(0+128)
  8810  00FD' 0020               	movlb	0	; select bank0
  8811  00FE' 080E'              	movf	?_map_value,w
  8812  00FF' 0021               	movlb	1	; select bank1
  8813  0100' 0080'              	movwf	_posicao_val_futura^(0+128)
  8814  0101'                    i1l2403:
  8815                           
  8816                           ;funcoes.c: 390:     erro_anterior = erro_atual;
  8817  0101' 0020               	movlb	0	; select bank0
  8818  0102' 0806'              	movf	_erro_atual,w
  8819  0103' 0021               	movlb	1	; select bank1
  8820  0104' 0080'              	movwf	_erro_anterior^(0+128)
  8821  0105' 0020               	movlb	0	; select bank0
  8822  0106' 0807'              	movf	_erro_atual+1,w
  8823  0107' 0021               	movlb	1	; select bank1
  8824  0108' 0080'              	movwf	(_erro_anterior+1)^(0+128)
  8825  0109' 0020               	movlb	0	; select bank0
  8826  010A' 0808'              	movf	_erro_atual+2,w
  8827  010B' 0021               	movlb	1	; select bank1
  8828  010C' 0080'              	movwf	(_erro_anterior+2)^(0+128)
  8829  010D'                    i1l838:
  8830  010D' 0008               	return
  8831  010E'                    __end_of_modo_valvula:
  8832                           
  8833                           	psect	text52
  8834  0000'                    __ptext52:	
  8835 ;; *************** function _map_value *****************
  8836 ;; Defined at:
  8837 ;;		line 397 in file "funcoes.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  x               4   14[BANK0 ] long 
  8840 ;;  in_min          4   18[BANK0 ] long 
  8841 ;;  in_max          4   22[BANK0 ] long 
  8842 ;;  out_min         4   26[BANK0 ] long 
  8843 ;;  out_max         4   30[BANK0 ] long 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  3   14[BANK0 ] m
  8848 ;; Registers used:
  8849 ;;		wreg, status,2, status,0, pclath, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8855 ;;      Params:         0      20       0       0       0       0
  8856 ;;      Locals:         0       0       0       0       0       0
  8857 ;;      Temps:          0      15       0       0       0       0
  8858 ;;      Totals:         0      35       0       0       0       0
  8859 ;;Total ram usage:       35 bytes
  8860 ;; Hardware stack levels used: 1
  8861 ;; Hardware stack levels required when called: 1
  8862 ;; This function calls:
  8863 ;;		___aldiv
  8864 ;;		___lmul
  8865 ;; This function is called by:
  8866 ;;		_modo_ventoinha
  8867 ;;		_modo_valvula
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871  0000'                    _map_value:	
  8872                           ;psect for function _map_value
  8873                           
  8874  0000'                    i1l2265:	
  8875                           ;incstack = 0
  8876                           ; Regs used in _map_value: [wreg+status,2+status,0+pclath+cstack]
  8877                           
  8878                           
  8879                           ;funcoes.c: 398:     return ((x - in_min) * (out_max - out_min) / (in_max - in_min)) + o
      +                          ut_min;
  8880  0000' 0020               	movlb	0	; select bank0
  8881  0001' 0812'              	movf	map_value@in_min,w
  8882  0002' 0216'              	subwf	map_value@in_max,w
  8883  0003' 00A2'              	movwf	??_map_value
  8884  0004' 0813'              	movf	map_value@in_min+1,w
  8885  0005' 3B17'              	subwfb	map_value@in_max+1,w
  8886  0006' 00A3'              	movwf	??_map_value+1
  8887  0007' 0814'              	movf	map_value@in_min+2,w
  8888  0008' 3B18'              	subwfb	map_value@in_max+2,w
  8889  0009' 00A4'              	movwf	??_map_value+2
  8890  000A' 0815'              	movf	map_value@in_min+3,w
  8891  000B' 3B19'              	subwfb	map_value@in_max+3,w
  8892  000C' 00A5'              	movwf	??_map_value+3
  8893  000D' 0825'              	movf	??_map_value+3,w
  8894  000E' 0083'              	movwf	___aldiv@divisor+3
  8895  000F' 0824'              	movf	??_map_value+2,w
  8896  0010' 0082'              	movwf	___aldiv@divisor+2
  8897  0011' 0823'              	movf	??_map_value+1,w
  8898  0012' 0081'              	movwf	___aldiv@divisor+1
  8899  0013' 0822'              	movf	??_map_value,w
  8900  0014' 0080'              	movwf	___aldiv@divisor
  8901  0015' 0812'              	movf	map_value@in_min,w
  8902  0016' 020E'              	subwf	map_value@x,w
  8903  0017' 00A6'              	movwf	??_map_value+4
  8904  0018' 0813'              	movf	map_value@in_min+1,w
  8905  0019' 3B0F'              	subwfb	map_value@x+1,w
  8906  001A' 00A7'              	movwf	??_map_value+5
  8907  001B' 0814'              	movf	map_value@in_min+2,w
  8908  001C' 3B10'              	subwfb	map_value@x+2,w
  8909  001D' 00A8'              	movwf	??_map_value+6
  8910  001E' 0815'              	movf	map_value@in_min+3,w
  8911  001F' 3B11'              	subwfb	map_value@x+3,w
  8912  0020' 00A9'              	movwf	??_map_value+7
  8913  0021' 0829'              	movf	??_map_value+7,w
  8914  0022' 0083'              	movwf	___lmul@multiplier+3
  8915  0023' 0828'              	movf	??_map_value+6,w
  8916  0024' 0082'              	movwf	___lmul@multiplier+2
  8917  0025' 0827'              	movf	??_map_value+5,w
  8918  0026' 0081'              	movwf	___lmul@multiplier+1
  8919  0027' 0826'              	movf	??_map_value+4,w
  8920  0028' 0080'              	movwf	___lmul@multiplier
  8921  0029' 081A'              	movf	map_value@out_min,w
  8922  002A' 021E'              	subwf	map_value@out_max,w
  8923  002B' 00AA'              	movwf	??_map_value+8
  8924  002C' 081B'              	movf	map_value@out_min+1,w
  8925  002D' 3B1F'              	subwfb	map_value@out_max+1,w
  8926  002E' 00AB'              	movwf	??_map_value+9
  8927  002F' 081C'              	movf	map_value@out_min+2,w
  8928  0030' 3B20'              	subwfb	map_value@out_max+2,w
  8929  0031' 00AC'              	movwf	??_map_value+10
  8930  0032' 081D'              	movf	map_value@out_min+3,w
  8931  0033' 3B21'              	subwfb	map_value@out_max+3,w
  8932  0034' 00AD'              	movwf	??_map_value+11
  8933  0035' 082D'              	movf	??_map_value+11,w
  8934  0036' 0087'              	movwf	___lmul@multiplicand+3
  8935  0037' 082C'              	movf	??_map_value+10,w
  8936  0038' 0086'              	movwf	___lmul@multiplicand+2
  8937  0039' 082B'              	movf	??_map_value+9,w
  8938  003A' 0085'              	movwf	___lmul@multiplicand+1
  8939  003B' 082A'              	movf	??_map_value+8,w
  8940  003C' 0084'              	movwf	___lmul@multiplicand
  8941  003D' 3180' 2000' 3180'  	fcall	___lmul
  8942  0040' 0803'              	movf	?___lmul+3,w
  8943  0041' 0020               	movlb	0	; select bank0
  8944  0042' 0087'              	movwf	___aldiv@dividend+3
  8945  0043' 0802'              	movf	?___lmul+2,w
  8946  0044' 0086'              	movwf	___aldiv@dividend+2
  8947  0045' 0801'              	movf	?___lmul+1,w
  8948  0046' 0085'              	movwf	___aldiv@dividend+1
  8949  0047' 0800'              	movf	?___lmul,w
  8950  0048' 0084'              	movwf	___aldiv@dividend
  8951  0049' 3180' 2000' 3180'  	fcall	___aldiv
  8952  004C' 0020               	movlb	0	; select bank0
  8953  004D' 0800'              	movf	?___aldiv,w
  8954  004E' 071A'              	addwf	map_value@out_min,w
  8955  004F' 00AE'              	movwf	??_map_value+12
  8956  0050' 0801'              	movf	?___aldiv+1,w
  8957  0051' 3D1B'              	addwfc	map_value@out_min+1,w
  8958  0052' 00AF'              	movwf	??_map_value+13
  8959  0053' 0802'              	movf	?___aldiv+2,w
  8960  0054' 3D1C'              	addwfc	map_value@out_min+2,w
  8961  0055' 00B0'              	movwf	??_map_value+14
  8962  0056' 082E'              	movf	??_map_value+12,w
  8963  0057' 008E'              	movwf	?_map_value
  8964  0058' 082F'              	movf	??_map_value+13,w
  8965  0059' 008F'              	movwf	?_map_value+1
  8966  005A' 0830'              	movf	??_map_value+14,w
  8967  005B' 0090'              	movwf	?_map_value+2
  8968  005C'                    i1l841:
  8969  005C' 0008               	return
  8970  005D'                    __end_of_map_value:
  8971                           
  8972                           	psect	text53
  8973  0000'                    __ptext53:	
  8974 ;; *************** function ___lmul *****************
  8975 ;; Defined at:
  8976 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  multiplier      4    0[COMMON] unsigned long 
  8979 ;;  multiplicand    4    4[COMMON] unsigned long 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;  product         4    8[COMMON] unsigned long 
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  4    0[COMMON] unsigned long 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8991 ;;      Params:         8       0       0       0       0       0
  8992 ;;      Locals:         4       0       0       0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0
  8994 ;;      Totals:        12       0       0       0       0       0
  8995 ;;Total ram usage:       12 bytes
  8996 ;; Hardware stack levels used: 1
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_map_value
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004  0000'                    ___lmul:	
  9005                           ;psect for function ___lmul
  9006                           
  9007  0000'                    i1l2209:	
  9008                           ;incstack = 0
  9009                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  9010                           
  9011  0000' 3000               	movlw	0
  9012  0001' 008B'              	movwf	___lmul@product+3
  9013  0002' 3000               	movlw	0
  9014  0003' 008A'              	movwf	___lmul@product+2
  9015  0004' 3000               	movlw	0
  9016  0005' 0089'              	movwf	___lmul@product+1
  9017  0006' 3000               	movlw	0
  9018  0007' 0088'              	movwf	___lmul@product
  9019  0008'                    i1l2211:
  9020  0008' 1C00'              	btfss	___lmul@multiplier,0
  9021  0009' 2800'              	goto	u92_21
  9022  000A' 2800'              	goto	u92_20
  9023  000B'                    u92_21:
  9024  000B' 2800'              	goto	i1l2215
  9025  000C'                    u92_20:
  9026  000C'                    i1l2213:
  9027  000C' 0804'              	movf	___lmul@multiplicand,w
  9028  000D' 0788'              	addwf	___lmul@product,f
  9029  000E' 0805'              	movf	___lmul@multiplicand+1,w
  9030  000F' 3D89'              	addwfc	___lmul@product+1,f
  9031  0010' 0806'              	movf	___lmul@multiplicand+2,w
  9032  0011' 3D8A'              	addwfc	___lmul@product+2,f
  9033  0012' 0807'              	movf	___lmul@multiplicand+3,w
  9034  0013' 3D8B'              	addwfc	___lmul@product+3,f
  9035  0014'                    i1l2215:
  9036  0014' 3001               	movlw	1
  9037  0015'                    u93_25:
  9038  0015' 3584'              	lslf	___lmul@multiplicand,f
  9039  0016' 0D85'              	rlf	___lmul@multiplicand+1,f
  9040  0017' 0D86'              	rlf	___lmul@multiplicand+2,f
  9041  0018' 0D87'              	rlf	___lmul@multiplicand+3,f
  9042  0019' 0B89               	decfsz	9,f
  9043  001A' 2800'              	goto	u93_25
  9044  001B'                    i1l2217:
  9045  001B' 3001               	movlw	1
  9046  001C'                    u94_25:
  9047  001C' 3683'              	lsrf	___lmul@multiplier+3,f
  9048  001D' 0C82'              	rrf	___lmul@multiplier+2,f
  9049  001E' 0C81'              	rrf	___lmul@multiplier+1,f
  9050  001F' 0C80'              	rrf	___lmul@multiplier,f
  9051  0020' 0B89               	decfsz	9,f
  9052  0021' 2800'              	goto	u94_25
  9053  0022' 0803'              	movf	___lmul@multiplier+3,w
  9054  0023' 0402'              	iorwf	___lmul@multiplier+2,w
  9055  0024' 0401'              	iorwf	___lmul@multiplier+1,w
  9056  0025' 0400'              	iorwf	___lmul@multiplier,w
  9057  0026' 1D03               	skipz
  9058  0027' 2800'              	goto	u95_21
  9059  0028' 2800'              	goto	u95_20
  9060  0029'                    u95_21:
  9061  0029' 2800'              	goto	i1l2211
  9062  002A'                    u95_20:
  9063  002A'                    i1l2219:
  9064  002A' 080B'              	movf	___lmul@product+3,w
  9065  002B' 0083'              	movwf	?___lmul+3
  9066  002C' 080A'              	movf	___lmul@product+2,w
  9067  002D' 0082'              	movwf	?___lmul+2
  9068  002E' 0809'              	movf	___lmul@product+1,w
  9069  002F' 0081'              	movwf	?___lmul+1
  9070  0030' 0808'              	movf	___lmul@product,w
  9071  0031' 0080'              	movwf	?___lmul
  9072  0032'                    i1l1005:
  9073  0032' 0008               	return
  9074  0033'                    __end_of___lmul:
  9075                           
  9076                           	psect	text54
  9077  0000'                    __ptext54:	
  9078 ;; *************** function ___aldiv *****************
  9079 ;; Defined at:
  9080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  divisor         4    0[BANK0 ] long 
  9083 ;;  dividend        4    4[BANK0 ] long 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  quotient        4   10[BANK0 ] long 
  9086 ;;  sign            1    9[BANK0 ] unsigned char 
  9087 ;;  counter         1    8[BANK0 ] unsigned char 
  9088 ;; Return value:  Size  Location     Type
  9089 ;;                  4    0[BANK0 ] long 
  9090 ;; Registers used:
  9091 ;;		wreg, status,2, status,0
  9092 ;; Tracked objects:
  9093 ;;		On entry : 0/0
  9094 ;;		On exit  : 0/0
  9095 ;;		Unchanged: 0/0
  9096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9097 ;;      Params:         0       8       0       0       0       0
  9098 ;;      Locals:         0       6       0       0       0       0
  9099 ;;      Temps:          1       0       0       0       0       0
  9100 ;;      Totals:         1      14       0       0       0       0
  9101 ;;Total ram usage:       15 bytes
  9102 ;; Hardware stack levels used: 1
  9103 ;; This function calls:
  9104 ;;		Nothing
  9105 ;; This function is called by:
  9106 ;;		_map_value
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110  0000'                    ___aldiv:	
  9111                           ;psect for function ___aldiv
  9112                           
  9113  0000'                    i1l2223:	
  9114                           ;incstack = 0
  9115                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9116                           
  9117  0000' 0020               	movlb	0	; select bank0
  9118  0001' 0189'              	clrf	___aldiv@sign
  9119  0002'                    i1l2225:
  9120  0002' 1F83'              	btfss	___aldiv@divisor+3,7
  9121  0003' 2800'              	goto	u96_21
  9122  0004' 2800'              	goto	u96_20
  9123  0005'                    u96_21:
  9124  0005' 2800'              	goto	i1l1056
  9125  0006'                    u96_20:
  9126  0006'                    i1l2227:
  9127  0006' 0980'              	comf	___aldiv@divisor,f
  9128  0007' 0981'              	comf	___aldiv@divisor+1,f
  9129  0008' 0982'              	comf	___aldiv@divisor+2,f
  9130  0009' 0983'              	comf	___aldiv@divisor+3,f
  9131  000A' 0A80'              	incf	___aldiv@divisor,f
  9132  000B' 1903               	skipnz
  9133  000C' 0A81'              	incf	___aldiv@divisor+1,f
  9134  000D' 1903               	skipnz
  9135  000E' 0A82'              	incf	___aldiv@divisor+2,f
  9136  000F' 1903               	skipnz
  9137  0010' 0A83'              	incf	___aldiv@divisor+3,f
  9138  0011' 0189'              	clrf	___aldiv@sign
  9139  0012' 0A89'              	incf	___aldiv@sign,f
  9140  0013'                    i1l1056:
  9141  0013' 1F87'              	btfss	___aldiv@dividend+3,7
  9142  0014' 2800'              	goto	u97_21
  9143  0015' 2800'              	goto	u97_20
  9144  0016'                    u97_21:
  9145  0016' 2800'              	goto	i1l2233
  9146  0017'                    u97_20:
  9147  0017'                    i1l2229:
  9148  0017' 0984'              	comf	___aldiv@dividend,f
  9149  0018' 0985'              	comf	___aldiv@dividend+1,f
  9150  0019' 0986'              	comf	___aldiv@dividend+2,f
  9151  001A' 0987'              	comf	___aldiv@dividend+3,f
  9152  001B' 0A84'              	incf	___aldiv@dividend,f
  9153  001C' 1903               	skipnz
  9154  001D' 0A85'              	incf	___aldiv@dividend+1,f
  9155  001E' 1903               	skipnz
  9156  001F' 0A86'              	incf	___aldiv@dividend+2,f
  9157  0020' 1903               	skipnz
  9158  0021' 0A87'              	incf	___aldiv@dividend+3,f
  9159  0022'                    i1l2231:
  9160  0022' 3001               	movlw	1
  9161  0023' 008C'              	movwf	??___aldiv
  9162  0024' 080C'              	movf	??___aldiv,w
  9163  0025' 0689'              	xorwf	___aldiv@sign,f
  9164  0026'                    i1l2233:
  9165  0026' 3000               	movlw	0
  9166  0027' 008D'              	movwf	___aldiv@quotient+3
  9167  0028' 3000               	movlw	0
  9168  0029' 008C'              	movwf	___aldiv@quotient+2
  9169  002A' 3000               	movlw	0
  9170  002B' 008B'              	movwf	___aldiv@quotient+1
  9171  002C' 3000               	movlw	0
  9172  002D' 008A'              	movwf	___aldiv@quotient
  9173  002E'                    i1l2235:
  9174  002E' 0803'              	movf	___aldiv@divisor+3,w
  9175  002F' 0402'              	iorwf	___aldiv@divisor+2,w
  9176  0030' 0401'              	iorwf	___aldiv@divisor+1,w
  9177  0031' 0400'              	iorwf	___aldiv@divisor,w
  9178  0032' 1903               	skipnz
  9179  0033' 2800'              	goto	u98_21
  9180  0034' 2800'              	goto	u98_20
  9181  0035'                    u98_21:
  9182  0035' 2800'              	goto	i1l2255
  9183  0036'                    u98_20:
  9184  0036'                    i1l2237:
  9185  0036' 0188'              	clrf	___aldiv@counter
  9186  0037' 0A88'              	incf	___aldiv@counter,f
  9187  0038' 2800'              	goto	i1l2241
  9188  0039'                    i1l2239:
  9189  0039' 3001               	movlw	1
  9190  003A'                    u99_25:
  9191  003A' 3580'              	lslf	___aldiv@divisor,f
  9192  003B' 0D81'              	rlf	___aldiv@divisor+1,f
  9193  003C' 0D82'              	rlf	___aldiv@divisor+2,f
  9194  003D' 0D83'              	rlf	___aldiv@divisor+3,f
  9195  003E' 0B89               	decfsz	9,f
  9196  003F' 2800'              	goto	u99_25
  9197  0040' 3001               	movlw	1
  9198  0041' 008C'              	movwf	??___aldiv
  9199  0042' 080C'              	movf	??___aldiv,w
  9200  0043' 0788'              	addwf	___aldiv@counter,f
  9201  0044'                    i1l2241:
  9202  0044' 1F83'              	btfss	___aldiv@divisor+3,7
  9203  0045' 2800'              	goto	u100_21
  9204  0046' 2800'              	goto	u100_20
  9205  0047'                    u100_21:
  9206  0047' 2800'              	goto	i1l2239
  9207  0048'                    u100_20:
  9208  0048'                    i1l2243:
  9209  0048' 3001               	movlw	1
  9210  0049'                    u101_25:
  9211  0049' 358A'              	lslf	___aldiv@quotient,f
  9212  004A' 0D8B'              	rlf	___aldiv@quotient+1,f
  9213  004B' 0D8C'              	rlf	___aldiv@quotient+2,f
  9214  004C' 0D8D'              	rlf	___aldiv@quotient+3,f
  9215  004D' 0B89               	decfsz	9,f
  9216  004E' 2800'              	goto	u101_25
  9217  004F'                    i1l2245:
  9218  004F' 0803'              	movf	___aldiv@divisor+3,w
  9219  0050' 0207'              	subwf	___aldiv@dividend+3,w
  9220  0051' 1D03               	skipz
  9221  0052' 2800'              	goto	u102_25
  9222  0053' 0802'              	movf	___aldiv@divisor+2,w
  9223  0054' 0206'              	subwf	___aldiv@dividend+2,w
  9224  0055' 1D03               	skipz
  9225  0056' 2800'              	goto	u102_25
  9226  0057' 0801'              	movf	___aldiv@divisor+1,w
  9227  0058' 0205'              	subwf	___aldiv@dividend+1,w
  9228  0059' 1D03               	skipz
  9229  005A' 2800'              	goto	u102_25
  9230  005B' 0800'              	movf	___aldiv@divisor,w
  9231  005C' 0204'              	subwf	___aldiv@dividend,w
  9232  005D'                    u102_25:
  9233  005D' 1C03               	skipc
  9234  005E' 2800'              	goto	u102_21
  9235  005F' 2800'              	goto	u102_20
  9236  0060'                    u102_21:
  9237  0060' 2800'              	goto	i1l2251
  9238  0061'                    u102_20:
  9239  0061'                    i1l2247:
  9240  0061' 0800'              	movf	___aldiv@divisor,w
  9241  0062' 0284'              	subwf	___aldiv@dividend,f
  9242  0063' 0801'              	movf	___aldiv@divisor+1,w
  9243  0064' 3B85'              	subwfb	___aldiv@dividend+1,f
  9244  0065' 0802'              	movf	___aldiv@divisor+2,w
  9245  0066' 3B86'              	subwfb	___aldiv@dividend+2,f
  9246  0067' 0803'              	movf	___aldiv@divisor+3,w
  9247  0068' 3B87'              	subwfb	___aldiv@dividend+3,f
  9248  0069'                    i1l2249:
  9249  0069' 140A'              	bsf	___aldiv@quotient,0
  9250  006A'                    i1l2251:
  9251  006A' 3001               	movlw	1
  9252  006B'                    u103_25:
  9253  006B' 3683'              	lsrf	___aldiv@divisor+3,f
  9254  006C' 0C82'              	rrf	___aldiv@divisor+2,f
  9255  006D' 0C81'              	rrf	___aldiv@divisor+1,f
  9256  006E' 0C80'              	rrf	___aldiv@divisor,f
  9257  006F' 0B89               	decfsz	9,f
  9258  0070' 2800'              	goto	u103_25
  9259  0071'                    i1l2253:
  9260  0071' 3001               	movlw	1
  9261  0072' 0288'              	subwf	___aldiv@counter,f
  9262  0073' 1D03               	btfss	3,2
  9263  0074' 2800'              	goto	u104_21
  9264  0075' 2800'              	goto	u104_20
  9265  0076'                    u104_21:
  9266  0076' 2800'              	goto	i1l2243
  9267  0077'                    u104_20:
  9268  0077'                    i1l2255:
  9269  0077' 0809'              	movf	___aldiv@sign,w
  9270  0078' 1903               	btfsc	3,2
  9271  0079' 2800'              	goto	u105_21
  9272  007A' 2800'              	goto	u105_20
  9273  007B'                    u105_21:
  9274  007B' 2800'              	goto	i1l2259
  9275  007C'                    u105_20:
  9276  007C'                    i1l2257:
  9277  007C' 098A'              	comf	___aldiv@quotient,f
  9278  007D' 098B'              	comf	___aldiv@quotient+1,f
  9279  007E' 098C'              	comf	___aldiv@quotient+2,f
  9280  007F' 098D'              	comf	___aldiv@quotient+3,f
  9281  0080' 0A8A'              	incf	___aldiv@quotient,f
  9282  0081' 1903               	skipnz
  9283  0082' 0A8B'              	incf	___aldiv@quotient+1,f
  9284  0083' 1903               	skipnz
  9285  0084' 0A8C'              	incf	___aldiv@quotient+2,f
  9286  0085' 1903               	skipnz
  9287  0086' 0A8D'              	incf	___aldiv@quotient+3,f
  9288  0087'                    i1l2259:
  9289  0087' 080D'              	movf	___aldiv@quotient+3,w
  9290  0088' 0083'              	movwf	?___aldiv+3
  9291  0089' 080C'              	movf	___aldiv@quotient+2,w
  9292  008A' 0082'              	movwf	?___aldiv+2
  9293  008B' 080B'              	movf	___aldiv@quotient+1,w
  9294  008C' 0081'              	movwf	?___aldiv+1
  9295  008D' 080A'              	movf	___aldiv@quotient,w
  9296  008E' 0080'              	movwf	?___aldiv
  9297  008F'                    i1l1066:
  9298  008F' 0008               	return
  9299  0090'                    __end_of___aldiv:
  9300                           
  9301                           	psect	text55
  9302  0000'                    __ptext55:	
  9303 ;; *************** function ___tmul *****************
  9304 ;; Defined at:
  9305 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;  multiplier      3    0[COMMON] unsigned um
  9308 ;;  multiplicand    3    3[COMMON] unsigned um
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;  product         3    6[COMMON] unsigned um
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  3    0[COMMON] unsigned um
  9313 ;; Registers used:
  9314 ;;		wreg, status,2, status,0
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9320 ;;      Params:         6       0       0       0       0       0
  9321 ;;      Locals:         3       0       0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0
  9323 ;;      Totals:         9       0       0       0       0       0
  9324 ;;Total ram usage:        9 bytes
  9325 ;; Hardware stack levels used: 1
  9326 ;; This function calls:
  9327 ;;		Nothing
  9328 ;; This function is called by:
  9329 ;;		_modo_ventoinha
  9330 ;;		_modo_valvula
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334  0000'                    ___tmul:	
  9335                           ;psect for function ___tmul
  9336                           
  9337  0000'                    i1l2285:	
  9338                           ;incstack = 0
  9339                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  9340                           
  9341  0000' 3000               	movlw	0
  9342  0001' 0086'              	movwf	___tmul@product
  9343  0002' 3000               	movlw	0
  9344  0003' 0087'              	movwf	___tmul@product+1
  9345  0004' 3000               	movlw	0
  9346  0005' 0088'              	movwf	___tmul@product+2
  9347  0006'                    i1l2287:
  9348  0006' 1C00'              	btfss	___tmul@multiplier,0
  9349  0007' 2800'              	goto	u110_21
  9350  0008' 2800'              	goto	u110_20
  9351  0009'                    u110_21:
  9352  0009' 2800'              	goto	i1l2291
  9353  000A'                    u110_20:
  9354  000A'                    i1l2289:
  9355  000A' 0803'              	movf	___tmul@multiplicand,w
  9356  000B' 0786'              	addwf	___tmul@product,f
  9357  000C' 0804'              	movf	___tmul@multiplicand+1,w
  9358  000D' 3D87'              	addwfc	___tmul@product+1,f
  9359  000E' 0805'              	movf	___tmul@multiplicand+2,w
  9360  000F' 3D88'              	addwfc	___tmul@product+2,f
  9361  0010'                    i1l2291:
  9362  0010' 3001               	movlw	1
  9363  0011'                    u111_25:
  9364  0011' 3583'              	lslf	___tmul@multiplicand,f
  9365  0012' 0D84'              	rlf	___tmul@multiplicand+1,f
  9366  0013' 0D85'              	rlf	___tmul@multiplicand+2,f
  9367  0014' 0B89               	decfsz	9,f
  9368  0015' 2800'              	goto	u111_25
  9369  0016'                    i1l2293:
  9370  0016' 3001               	movlw	1
  9371  0017'                    u112_25:
  9372  0017' 3682'              	lsrf	___tmul@multiplier+2,f
  9373  0018' 0C81'              	rrf	___tmul@multiplier+1,f
  9374  0019' 0C80'              	rrf	___tmul@multiplier,f
  9375  001A' 0B89               	decfsz	9,f
  9376  001B' 2800'              	goto	u112_25
  9377  001C' 0802'              	movf	___tmul@multiplier+2,w
  9378  001D' 0401'              	iorwf	___tmul@multiplier+1,w
  9379  001E' 0400'              	iorwf	___tmul@multiplier,w
  9380  001F' 1D03               	skipz
  9381  0020' 2800'              	goto	u113_21
  9382  0021' 2800'              	goto	u113_20
  9383  0022'                    u113_21:
  9384  0022' 2800'              	goto	i1l2287
  9385  0023'                    u113_20:
  9386  0023'                    i1l2295:
  9387  0023' 0806'              	movf	___tmul@product,w
  9388  0024' 0080'              	movwf	?___tmul
  9389  0025' 0807'              	movf	___tmul@product+1,w
  9390  0026' 0081'              	movwf	?___tmul+1
  9391  0027' 0808'              	movf	___tmul@product+2,w
  9392  0028' 0082'              	movwf	?___tmul+2
  9393  0029'                    i1l999:
  9394  0029' 0008               	return
  9395  002A'                    __end_of___tmul:
  9396                           
  9397                           	psect	text56
  9398  0000'                    __ptext56:	
  9399 ;; *************** function ___atdiv *****************
  9400 ;; Defined at:
  9401 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;  divisor         3    0[BANK0 ] m
  9404 ;;  dividend        3    3[BANK0 ] m
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  quotient        3    8[BANK0 ] m
  9407 ;;  sign            1    7[BANK0 ] unsigned char 
  9408 ;;  counter         1    6[BANK0 ] unsigned char 
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  3    0[BANK0 ] m
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9418 ;;      Params:         0       6       0       0       0       0
  9419 ;;      Locals:         0       5       0       0       0       0
  9420 ;;      Temps:          1       0       0       0       0       0
  9421 ;;      Totals:         1      11       0       0       0       0
  9422 ;;Total ram usage:       12 bytes
  9423 ;; Hardware stack levels used: 1
  9424 ;; This function calls:
  9425 ;;		Nothing
  9426 ;; This function is called by:
  9427 ;;		_modo_ventoinha
  9428 ;;		_modo_valvula
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432  0000'                    ___atdiv:	
  9433                           ;psect for function ___atdiv
  9434                           
  9435  0000'                    i1l2299:	
  9436                           ;incstack = 0
  9437                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  9438                           
  9439  0000' 0020               	movlb	0	; select bank0
  9440  0001' 0187'              	clrf	___atdiv@sign
  9441  0002'                    i1l2301:
  9442  0002' 1F82'              	btfss	___atdiv@divisor+2,7
  9443  0003' 2800'              	goto	u114_21
  9444  0004' 2800'              	goto	u114_20
  9445  0005'                    u114_21:
  9446  0005' 2800'              	goto	i1l1108
  9447  0006'                    u114_20:
  9448  0006'                    i1l2303:
  9449  0006' 0980'              	comf	___atdiv@divisor,f
  9450  0007' 0981'              	comf	___atdiv@divisor+1,f
  9451  0008' 0982'              	comf	___atdiv@divisor+2,f
  9452  0009' 0A80'              	incf	___atdiv@divisor,f
  9453  000A' 1903               	skipnz
  9454  000B' 0A81'              	incf	___atdiv@divisor+1,f
  9455  000C' 1903               	skipnz
  9456  000D' 0A82'              	incf	___atdiv@divisor+2,f
  9457  000E' 0187'              	clrf	___atdiv@sign
  9458  000F' 0A87'              	incf	___atdiv@sign,f
  9459  0010'                    i1l1108:
  9460  0010' 1F85'              	btfss	___atdiv@dividend+2,7
  9461  0011' 2800'              	goto	u115_21
  9462  0012' 2800'              	goto	u115_20
  9463  0013'                    u115_21:
  9464  0013' 2800'              	goto	i1l2309
  9465  0014'                    u115_20:
  9466  0014'                    i1l2305:
  9467  0014' 0983'              	comf	___atdiv@dividend,f
  9468  0015' 0984'              	comf	___atdiv@dividend+1,f
  9469  0016' 0985'              	comf	___atdiv@dividend+2,f
  9470  0017' 0A83'              	incf	___atdiv@dividend,f
  9471  0018' 1903               	skipnz
  9472  0019' 0A84'              	incf	___atdiv@dividend+1,f
  9473  001A' 1903               	skipnz
  9474  001B' 0A85'              	incf	___atdiv@dividend+2,f
  9475  001C'                    i1l2307:
  9476  001C' 3001               	movlw	1
  9477  001D' 0089'              	movwf	??___atdiv
  9478  001E' 0809'              	movf	??___atdiv,w
  9479  001F' 0687'              	xorwf	___atdiv@sign,f
  9480  0020'                    i1l2309:
  9481  0020' 3000               	movlw	0
  9482  0021' 0088'              	movwf	___atdiv@quotient
  9483  0022' 3000               	movlw	0
  9484  0023' 0089'              	movwf	___atdiv@quotient+1
  9485  0024' 3000               	movlw	0
  9486  0025' 008A'              	movwf	___atdiv@quotient+2
  9487  0026'                    i1l2311:
  9488  0026' 0802'              	movf	___atdiv@divisor+2,w
  9489  0027' 0401'              	iorwf	___atdiv@divisor+1,w
  9490  0028' 0400'              	iorwf	___atdiv@divisor,w
  9491  0029' 1903               	skipnz
  9492  002A' 2800'              	goto	u116_21
  9493  002B' 2800'              	goto	u116_20
  9494  002C'                    u116_21:
  9495  002C' 2800'              	goto	i1l2331
  9496  002D'                    u116_20:
  9497  002D'                    i1l2313:
  9498  002D' 0186'              	clrf	___atdiv@counter
  9499  002E' 0A86'              	incf	___atdiv@counter,f
  9500  002F' 2800'              	goto	i1l2317
  9501  0030'                    i1l2315:
  9502  0030' 3001               	movlw	1
  9503  0031'                    u117_25:
  9504  0031' 3580'              	lslf	___atdiv@divisor,f
  9505  0032' 0D81'              	rlf	___atdiv@divisor+1,f
  9506  0033' 0D82'              	rlf	___atdiv@divisor+2,f
  9507  0034' 0B89               	decfsz	9,f
  9508  0035' 2800'              	goto	u117_25
  9509  0036' 3001               	movlw	1
  9510  0037' 0089'              	movwf	??___atdiv
  9511  0038' 0809'              	movf	??___atdiv,w
  9512  0039' 0786'              	addwf	___atdiv@counter,f
  9513  003A'                    i1l2317:
  9514  003A' 1F82'              	btfss	___atdiv@divisor+2,7
  9515  003B' 2800'              	goto	u118_21
  9516  003C' 2800'              	goto	u118_20
  9517  003D'                    u118_21:
  9518  003D' 2800'              	goto	i1l2315
  9519  003E'                    u118_20:
  9520  003E'                    i1l2319:
  9521  003E' 3001               	movlw	1
  9522  003F'                    u119_25:
  9523  003F' 3588'              	lslf	___atdiv@quotient,f
  9524  0040' 0D89'              	rlf	___atdiv@quotient+1,f
  9525  0041' 0D8A'              	rlf	___atdiv@quotient+2,f
  9526  0042' 0B89               	decfsz	9,f
  9527  0043' 2800'              	goto	u119_25
  9528  0044'                    i1l2321:
  9529  0044' 0802'              	movf	___atdiv@divisor+2,w
  9530  0045' 0205'              	subwf	___atdiv@dividend+2,w
  9531  0046' 1D03               	skipz
  9532  0047' 2800'              	goto	u120_25
  9533  0048' 0801'              	movf	___atdiv@divisor+1,w
  9534  0049' 0204'              	subwf	___atdiv@dividend+1,w
  9535  004A' 1D03               	skipz
  9536  004B' 2800'              	goto	u120_25
  9537  004C' 0800'              	movf	___atdiv@divisor,w
  9538  004D' 0203'              	subwf	___atdiv@dividend,w
  9539  004E'                    u120_25:
  9540  004E' 1C03               	skipc
  9541  004F' 2800'              	goto	u120_21
  9542  0050' 2800'              	goto	u120_20
  9543  0051'                    u120_21:
  9544  0051' 2800'              	goto	i1l2327
  9545  0052'                    u120_20:
  9546  0052'                    i1l2323:
  9547  0052' 0800'              	movf	___atdiv@divisor,w
  9548  0053' 0283'              	subwf	___atdiv@dividend,f
  9549  0054' 0801'              	movf	___atdiv@divisor+1,w
  9550  0055' 3B84'              	subwfb	___atdiv@dividend+1,f
  9551  0056' 0802'              	movf	___atdiv@divisor+2,w
  9552  0057' 3B85'              	subwfb	___atdiv@dividend+2,f
  9553  0058'                    i1l2325:
  9554  0058' 1408'              	bsf	___atdiv@quotient,0
  9555  0059'                    i1l2327:
  9556  0059' 3001               	movlw	1
  9557  005A'                    u121_25:
  9558  005A' 3682'              	lsrf	___atdiv@divisor+2,f
  9559  005B' 0C81'              	rrf	___atdiv@divisor+1,f
  9560  005C' 0C80'              	rrf	___atdiv@divisor,f
  9561  005D' 0B89               	decfsz	9,f
  9562  005E' 2800'              	goto	u121_25
  9563  005F'                    i1l2329:
  9564  005F' 3001               	movlw	1
  9565  0060' 0286'              	subwf	___atdiv@counter,f
  9566  0061' 1D03               	btfss	3,2
  9567  0062' 2800'              	goto	u122_21
  9568  0063' 2800'              	goto	u122_20
  9569  0064'                    u122_21:
  9570  0064' 2800'              	goto	i1l2319
  9571  0065'                    u122_20:
  9572  0065'                    i1l2331:
  9573  0065' 0807'              	movf	___atdiv@sign,w
  9574  0066' 1903               	btfsc	3,2
  9575  0067' 2800'              	goto	u123_21
  9576  0068' 2800'              	goto	u123_20
  9577  0069'                    u123_21:
  9578  0069' 2800'              	goto	i1l2335
  9579  006A'                    u123_20:
  9580  006A'                    i1l2333:
  9581  006A' 0988'              	comf	___atdiv@quotient,f
  9582  006B' 0989'              	comf	___atdiv@quotient+1,f
  9583  006C' 098A'              	comf	___atdiv@quotient+2,f
  9584  006D' 0A88'              	incf	___atdiv@quotient,f
  9585  006E' 1903               	skipnz
  9586  006F' 0A89'              	incf	___atdiv@quotient+1,f
  9587  0070' 1903               	skipnz
  9588  0071' 0A8A'              	incf	___atdiv@quotient+2,f
  9589  0072'                    i1l2335:
  9590  0072' 0808'              	movf	___atdiv@quotient,w
  9591  0073' 0080'              	movwf	?___atdiv
  9592  0074' 0809'              	movf	___atdiv@quotient+1,w
  9593  0075' 0081'              	movwf	?___atdiv+1
  9594  0076' 080A'              	movf	___atdiv@quotient+2,w
  9595  0077' 0082'              	movwf	?___atdiv+2
  9596  0078'                    i1l1118:
  9597  0078' 0008               	return
  9598  0079'                    __end_of___atdiv:
  9599                           
  9600                           	psect	text57
  9601  0000'                    __ptext57:	
  9602 ;; *************** function _TMR0_ISR *****************
  9603 ;; Defined at:
  9604 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;		None
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, pclath, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9618 ;;      Params:         0       0       0       0       0       0
  9619 ;;      Locals:         0       0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0
  9621 ;;      Totals:         0       0       0       0       0       0
  9622 ;;Total ram usage:        0 bytes
  9623 ;; Hardware stack levels used: 1
  9624 ;; Hardware stack levels required when called: 3
  9625 ;; This function calls:
  9626 ;;		NULL
  9627 ;;		_TMR0_DefaultInterruptHandler
  9628 ;;		_inicia_ultrasom
  9629 ;; This function is called by:
  9630 ;;		_INTERRUPT_InterruptManager
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634  0000'                    _TMR0_ISR:	
  9635                           ;psect for function _TMR0_ISR
  9636                           
  9637  0000'                    i1l2779:	
  9638                           ;incstack = 0
  9639                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9640                           
  9641                           
  9642                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  9643  0000' 110B               	bcf	11,2	;volatile
  9644  0001'                    i1l2781:
  9645                           
  9646                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  9647  0001' 0021               	movlb	1	; select bank1
  9648  0002' 0800'              	movf	_timer0ReloadVal^(0+128),w	;volatile
  9649  0003' 0020               	movlb	0	; select bank0
  9650  0004' 0095               	movwf	21	;volatile
  9651  0005'                    i1l2783:
  9652                           
  9653                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  9654  0005' 0021               	movlb	1	; select bank1
  9655  0006' 0800'              	movf	_TMR0_InterruptHandler^(0+128),w
  9656  0007' 0400'              	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  9657  0008' 1903               	btfsc	3,2
  9658  0009' 2800'              	goto	u163_21
  9659  000A' 2800'              	goto	u163_20
  9660  000B'                    u163_21:
  9661  000B' 2800'              	goto	i1l458
  9662  000C'                    u163_20:
  9663  000C'                    i1l2785:
  9664                           
  9665                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  9666  000C' 0800'              	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  9667  000D' 008A               	movwf	10
  9668  000E' 0800'              	movf	_TMR0_InterruptHandler^(0+128),w
  9669  000F' 000A               	callw
  9670  0010' 3180'              	pagesel	$
  9671  0011'                    i1l458:
  9672  0011' 0008               	return
  9673  0012'                    __end_of_TMR0_ISR:
  9674                           
  9675                           	psect	text58
  9676  0000'                    __ptext58:	
  9677 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9678 ;; Defined at:
  9679 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;		None
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		None
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9693 ;;      Params:         0       0       0       0       0       0
  9694 ;;      Locals:         0       0       0       0       0       0
  9695 ;;      Temps:          0       0       0       0       0       0
  9696 ;;      Totals:         0       0       0       0       0       0
  9697 ;;Total ram usage:        0 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_TMR0_Initialize
  9703 ;;		_TMR0_ISR
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707  0000'                    _TMR0_DefaultInterruptHandler:	
  9708                           ;psect for function _TMR0_DefaultInterruptHandler
  9709                           
  9710  0000'                    i1l464:	
  9711                           ;incstack = 0
  9712                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9713                           
  9714  0000' 0008               	return
  9715  0001'                    __end_of_TMR0_DefaultInterruptHandler:
  9716                           
  9717                           	psect	text59
  9718  0000'                    __ptext59:	
  9719 ;; *************** function _inicia_ultrasom *****************
  9720 ;; Defined at:
  9721 ;;		line 25 in file "funcoes.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;		None
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  1    wreg      void 
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9735 ;;      Params:         0       0       0       0       0       0
  9736 ;;      Locals:         2       0       0       0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0
  9738 ;;      Totals:         2       0       0       0       0       0
  9739 ;;Total ram usage:        2 bytes
  9740 ;; Hardware stack levels used: 1
  9741 ;; Hardware stack levels required when called: 2
  9742 ;; This function calls:
  9743 ;;		_EnviaTx
  9744 ;;		_TMR1_WriteTimer
  9745 ;; This function is called by:
  9746 ;;		_main
  9747 ;;		_TMR0_ISR
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751  0000'                    _inicia_ultrasom:	
  9752                           ;psect for function _inicia_ultrasom
  9753                           
  9754  0000'                    i1l2691:	
  9755                           ;incstack = 0
  9756                           ; Regs used in _inicia_ultrasom: [wreg+status,2+status,0+pclath+cstack]
  9757                           
  9758                           
  9759                           ;funcoes.c: 26:     static uint8_t j = 0;;funcoes.c: 27:     if(j == 9){
  9760  0000' 3009               	movlw	9
  9761  0001' 0020               	movlb	0	; select bank0
  9762  0002' 0612'              	xorwf	inicia_ultrasom@j,w
  9763  0003' 1D03               	btfss	3,2
  9764  0004' 2800'              	goto	u153_21
  9765  0005' 2800'              	goto	u153_20
  9766  0006'                    u153_21:
  9767  0006' 2800'              	goto	i1l2695
  9768  0007'                    u153_20:
  9769  0007'                    i1l2693:
  9770                           
  9771                           ;funcoes.c: 28:         EnviaTx();
  9772  0007' 3180' 2000' 3180'  	fcall	_EnviaTx
  9773  000A'                    i1l2695:
  9774                           
  9775                           ;funcoes.c: 30:     j = (j == 9) ? 0 : (j + 1);
  9776  000A' 3009               	movlw	9
  9777  000B' 0020               	movlb	0	; select bank0
  9778  000C' 0612'              	xorwf	inicia_ultrasom@j,w
  9779  000D' 1903               	btfsc	3,2
  9780  000E' 2800'              	goto	u154_21
  9781  000F' 2800'              	goto	u154_20
  9782  0010'                    u154_21:
  9783  0010' 2800'              	goto	i1l2699
  9784  0011'                    u154_20:
  9785  0011'                    i1l2697:
  9786  0011' 0812'              	movf	inicia_ultrasom@j,w
  9787  0012' 3E01               	addlw	1
  9788  0013' 0082'              	movwf	_inicia_ultrasom$1287
  9789  0014' 3000               	movlw	0
  9790  0015' 1803               	skipnc
  9791  0016' 3001               	movlw	1
  9792  0017' 0083'              	movwf	_inicia_ultrasom$1287+1
  9793  0018' 2800'              	goto	i1l2701
  9794  0019'                    i1l2699:
  9795  0019' 0182'              	clrf	_inicia_ultrasom$1287
  9796  001A' 0183'              	clrf	_inicia_ultrasom$1287+1
  9797  001B'                    i1l2701:
  9798  001B' 0802'              	movf	_inicia_ultrasom$1287,w
  9799  001C' 0092'              	movwf	inicia_ultrasom@j
  9800  001D'                    i1l2703:
  9801  001D' 0022               	movlb	2	; select bank2
  9802  001E' 170C               	bsf	12,6	;volatile
  9803  001F'                    i1l2705:
  9804                           
  9805                           ;funcoes.c: 33:     TMR1_WriteTimer(0);
  9806  001F' 3000               	movlw	0
  9807  0020' 0080'              	movwf	TMR1_WriteTimer@timerVal
  9808  0021' 0081'              	movwf	TMR1_WriteTimer@timerVal+1
  9809  0022' 3180' 2000' 3180'  	fcall	_TMR1_WriteTimer
  9810  0025'                    i1l2707:
  9811                           
  9812                           ;funcoes.c: 34:     _delay((unsigned long)((12)*(16000000/4000000.0)));
  9813  0025' 3010               	movlw	16
  9814  0026'                    u182_27:
  9815  0026' 0B89               	decfsz	9,f
  9816  0027' 2800'              	goto	u182_27
  9817  0028'                    i1l2709:
  9818  0028' 0022               	movlb	2	; select bank2
  9819  0029' 130C               	bcf	12,6	;volatile
  9820  002A'                    i1l720:
  9821  002A' 0008               	return
  9822  002B'                    __end_of_inicia_ultrasom:
  9823                           
  9824                           	psect	text60
  9825  0000'                    __ptext60:	
  9826 ;; *************** function _TMR1_WriteTimer *****************
  9827 ;; Defined at:
  9828 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  timerVal        2    0[COMMON] unsigned short 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg, status,2
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9842 ;;      Params:         2       0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0
  9844 ;;      Temps:          0       0       0       0       0       0
  9845 ;;      Totals:         2       0       0       0       0       0
  9846 ;;Total ram usage:        2 bytes
  9847 ;; Hardware stack levels used: 1
  9848 ;; This function calls:
  9849 ;;		Nothing
  9850 ;; This function is called by:
  9851 ;;		_inicia_ultrasom
  9852 ;;		_posicao_bola_tubo
  9853 ;;		_TMR1_Reload
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857  0000'                    _TMR1_WriteTimer:	
  9858                           ;psect for function _TMR1_WriteTimer
  9859                           
  9860  0000'                    i1l2443:	
  9861                           ;incstack = 0
  9862                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  9863                           
  9864                           
  9865                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9866  0000' 0020               	movlb	0	; select bank0
  9867  0001' 1D18               	btfss	24,2	;volatile
  9868  0002' 2800'              	goto	u140_21
  9869  0003' 2800'              	goto	u140_20
  9870  0004'                    u140_21:
  9871  0004' 2800'              	goto	i1l2453
  9872  0005'                    u140_20:
  9873  0005'                    i1l2445:
  9874                           
  9875                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9876  0005' 1018               	bcf	24,0	;volatile
  9877  0006'                    i1l2447:
  9878                           
  9879                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9880  0006' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
  9881  0007' 0097               	movwf	23	;volatile
  9882  0008'                    i1l2449:
  9883                           
  9884                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9885  0008' 0800'              	movf	TMR1_WriteTimer@timerVal,w
  9886  0009' 0096               	movwf	22	;volatile
  9887  000A'                    i1l2451:
  9888                           
  9889                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9890  000A' 1418               	bsf	24,0	;volatile
  9891                           
  9892                           ;mcc_generated_files/tmr1.c: 137:     }
  9893  000B' 2800'              	goto	i1l162
  9894  000C'                    i1l2453:
  9895                           
  9896                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9897  000C' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
  9898  000D' 0097               	movwf	23	;volatile
  9899  000E'                    i1l2455:
  9900                           
  9901                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9902  000E' 0800'              	movf	TMR1_WriteTimer@timerVal,w
  9903  000F' 0096               	movwf	22	;volatile
  9904  0010'                    i1l162:
  9905  0010' 0008               	return
  9906  0011'                    __end_of_TMR1_WriteTimer:
  9907                           
  9908                           	psect	text61
  9909  0000'                    __ptext61:	
  9910 ;; *************** function _EnviaTx *****************
  9911 ;; Defined at:
  9912 ;;		line 267 in file "funcoes.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;		None
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;		None
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		wreg, status,2, status,0, pclath, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9926 ;;      Params:         0       0       0       0       0       0
  9927 ;;      Locals:         0       0       0       0       0       0
  9928 ;;      Temps:          0       0       0       0       0       0
  9929 ;;      Totals:         0       0       0       0       0       0
  9930 ;;Total ram usage:        0 bytes
  9931 ;; Hardware stack levels used: 1
  9932 ;; Hardware stack levels required when called: 1
  9933 ;; This function calls:
  9934 ;;		_EUSART_Write
  9935 ;; This function is called by:
  9936 ;;		_inicia_ultrasom
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940  0000'                    _EnviaTx:	
  9941                           ;psect for function _EnviaTx
  9942                           
  9943  0000'                    i1l2469:	
  9944                           ;incstack = 0
  9945                           ; Regs used in _EnviaTx: [wreg+status,2+status,0+pclath+cstack]
  9946                           
  9947                           
  9948                           ;funcoes.c: 308:     EUSART_Write(modo);
  9949  0000' 0020               	movlb	0	; select bank0
  9950  0001' 0814'              	movf	_modo,w
  9951  0002' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9952                           
  9953                           ;funcoes.c: 309:     EUSART_Write((uint16_t)Set_altura.bmsb);
  9954  0005' 0020               	movlb	0	; select bank0
  9955  0006' 0810'              	movf	_Set_altura+1,w
  9956  0007' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9957                           
  9958                           ;funcoes.c: 310:     EUSART_Write((uint16_t)Set_altura.blsb);
  9959  000A' 0020               	movlb	0	; select bank0
  9960  000B' 080F'              	movf	_Set_altura,w
  9961  000C' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9962                           
  9963                           ;funcoes.c: 311:     EUSART_Write(((uint16_t)(altura_bola & 0xFF00)) >> 8);
  9964  000F' 0021               	movlb	1	; select bank1
  9965  0010' 0800'              	movf	(_altura_bola+1)^(0+128),w
  9966  0011' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9967                           
  9968                           ;funcoes.c: 312:     EUSART_Write(altura_bola & 0x00FF);
  9969  0014' 0021               	movlb	1	; select bank1
  9970  0015' 0800'              	movf	_altura_bola^(0+128),w
  9971  0016' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9972                           
  9973                           ;funcoes.c: 313:     EUSART_Write(((uint16_t)(tempo_medio & 0xFF00)) >> 8);
  9974  0019' 0021               	movlb	1	; select bank1
  9975  001A' 0800'              	movf	(_tempo_medio+1)^(0+128),w
  9976  001B' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9977                           
  9978                           ;funcoes.c: 314:     EUSART_Write(tempo_medio & 0x00FF);
  9979  001E' 0021               	movlb	1	; select bank1
  9980  001F' 0800'              	movf	_tempo_medio^(0+128),w
  9981  0020' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9982                           
  9983                           ;funcoes.c: 315:     EUSART_Write(((uint16_t)(temperatura & 0xFF00)) >> 8);
  9984  0023' 0021               	movlb	1	; select bank1
  9985  0024' 0800'              	movf	(_temperatura+1)^(0+128),w
  9986  0025' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9987                           
  9988                           ;funcoes.c: 316:     EUSART_Write(temperatura & 0x00FF);
  9989  0028' 0021               	movlb	1	; select bank1
  9990  0029' 0800'              	movf	_temperatura^(0+128),w
  9991  002A' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9992                           
  9993                           ;funcoes.c: 317:     EUSART_Write((uint16_t)Set_valvula.bmsb);
  9994  002D' 0020               	movlb	0	; select bank0
  9995  002E' 080E'              	movf	_Set_valvula+1,w
  9996  002F' 3180' 2000' 3180'  	fcall	_EUSART_Write
  9997                           
  9998                           ;funcoes.c: 318:     EUSART_Write((uint16_t)Set_valvula.blsb);
  9999  0032' 0020               	movlb	0	; select bank0
 10000  0033' 080D'              	movf	_Set_valvula,w
 10001  0034' 3180' 2000' 3180'  	fcall	_EUSART_Write
 10002                           
 10003                           ;funcoes.c: 319:     EUSART_Write(((uint16_t)(posicao_val_atual & 0xFF00)) >> 8);
 10004  0037' 0021               	movlb	1	; select bank1
 10005  0038' 0800'              	movf	(_posicao_val_atual+1)^(0+128),w
 10006  0039' 3180' 2000' 3180'  	fcall	_EUSART_Write
 10007                           
 10008                           ;funcoes.c: 320:     EUSART_Write(posicao_val_atual & 0x00FF);
 10009  003C' 0021               	movlb	1	; select bank1
 10010  003D' 0800'              	movf	_posicao_val_atual^(0+128),w
 10011  003E' 3180' 2000' 3180'  	fcall	_EUSART_Write
 10012                           
 10013                           ;funcoes.c: 321:     EUSART_Write(((uint16_t)(ciclo_util_futuro & 0xFF00)) >> 8);
 10014  0041' 0020               	movlb	0	; select bank0
 10015  0042' 080A'              	movf	_ciclo_util_futuro+1,w
 10016  0043' 3180' 2000' 3180'  	fcall	_EUSART_Write
 10017                           
 10018                           ;funcoes.c: 322:     EUSART_Write(ciclo_util_futuro & 0x00FF);
 10019  0046' 0020               	movlb	0	; select bank0
 10020  0047' 0809'              	movf	_ciclo_util_futuro,w
 10021  0048' 3180' 2000' 3180'  	fcall	_EUSART_Write
 10022                           
 10023                           ;funcoes.c: 323:     EUSART_Write('\r');
 10024  004B' 300D               	movlw	13
 10025  004C' 3180' 2000' 3180'  	fcall	_EUSART_Write
 10026                           
 10027                           ;funcoes.c: 324:     EUSART_Write('\n');
 10028  004F' 300A               	movlw	10
 10029  0050' 3180' 2000' 3180'  	fcall	_EUSART_Write
 10030  0053'                    i1l818:
 10031  0053' 0008               	return
 10032  0054'                    __end_of_EnviaTx:
 10033                           
 10034                           	psect	text62
 10035  0000'                    __ptext62:	
 10036 ;; *************** function _EUSART_Write *****************
 10037 ;; Defined at:
 10038 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  txData          1    wreg     unsigned char 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;  txData          1    0[COMMON] unsigned char 
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      void 
 10045 ;; Registers used:
 10046 ;;		wreg
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10052 ;;      Params:         0       0       0       0       0       0
 10053 ;;      Locals:         1       0       0       0       0       0
 10054 ;;      Temps:          0       0       0       0       0       0
 10055 ;;      Totals:         1       0       0       0       0       0
 10056 ;;Total ram usage:        1 bytes
 10057 ;; Hardware stack levels used: 1
 10058 ;; This function calls:
 10059 ;;		Nothing
 10060 ;; This function is called by:
 10061 ;;		_EnviaTx
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065  0000'                    _EUSART_Write:	
 10066                           ;psect for function _EUSART_Write
 10067                           
 10068                           
 10069                           ;incstack = 0
 10070                           ; Regs used in _EUSART_Write: [wreg]
 10071                           ;EUSART_Write@txData stored from wreg
 10072  0000' 0080'              	movwf	EUSART_Write@txData
 10073  0001'                    i1l2351:
 10074  0001'                    i1l284:	
 10075                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10076                           
 10077                           
 10078                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10079  0001' 0020               	movlb	0	; select bank0
 10080  0002' 1E11               	btfss	17,4	;volatile
 10081  0003' 2800'              	goto	u125_21
 10082  0004' 2800'              	goto	u125_20
 10083  0005'                    u125_21:
 10084  0005' 2800'              	goto	i1l284
 10085  0006'                    u125_20:
 10086  0006'                    i1l2353:
 10087                           
 10088                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10089  0006' 0800'              	movf	EUSART_Write@txData,w
 10090  0007' 0023               	movlb	3	; select bank3
 10091  0008' 009A               	movwf	26	;volatile
 10092  0009'                    i1l287:
 10093  0009' 0008               	return
 10094  000A'                    __end_of_EUSART_Write:
 10095  007E                     btemp	set	126	;btemp
 10096  007E                     int$flags	set	126
 10097  007E                     wtemp0	set	126
 10098                           
 10099                           	psect	config
 10100                           
 10101                           ;Config register CONFIG1 @ 0x8007
 10102                           ;	Oscillator Selection
 10103                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 10104                           ;	Watchdog Timer Enable
 10105                           ;	WDTE = OFF, WDT disabled
 10106                           ;	Power-up Timer Enable
 10107                           ;	PWRTE = OFF, PWRT disabled
 10108                           ;	MCLR Pin Function Select
 10109                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 10110                           ;	Flash Program Memory Code Protection
 10111                           ;	CP = OFF, Program memory code protection is disabled
 10112                           ;	Data Memory Code Protection
 10113                           ;	CPD = OFF, Data memory code protection is disabled
 10114                           ;	Brown-out Reset Enable
 10115                           ;	BOREN = ON, Brown-out Reset enabled
 10116                           ;	Clock Out Enable
 10117                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 10118                           ;	Internal/External Switchover
 10119                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10120                           ;	Fail-Safe Clock Monitor Enable
 10121                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10122  8007                     	org	32775
 10123  8007  3FE4               	dw	16356
 10124                           
 10125                           ;Config register CONFIG2 @ 0x8008
 10126                           ;	Flash Memory Self-Write Protection
 10127                           ;	WRT = OFF, Write protection off
 10128                           ;	PLL Enable
 10129                           ;	PLLEN = OFF, 4x PLL disabled
 10130                           ;	Stack Overflow/Underflow Reset Enable
 10131                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 10132                           ;	Brown-out Reset Voltage Selection
 10133                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 10134                           ;	In-Circuit Debugger Mode
 10135                           ;	DEBUG = 0x1, unprogrammed default
 10136                           ;	Low-Voltage Programming Enable
 10137                           ;	LVP = ON, Low-voltage programming enabled
 10138  8008                     	org	32776
 10139  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        117
    BSS         79
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      79
    BANK1            80      4      75
    BANK2            80      0      15
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetoc@data(COMMON[1]), __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoi@data(COMMON[2]), 
		 -> __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), __eetoo@data(COMMON[8]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 102
		 -> relacao_som_temperatura(EEDATA[102]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetoc@data(COMMON[1]), __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoi@data(COMMON[2]), 
		 -> __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), __eetoo@data(COMMON[8]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> inicia_ultrasom(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> inicia_ultrasom(), TMR0_DefaultInterruptHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> posicao_bola_tubo(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> posicao_bola_tubo(), TMR1_DefaultGateInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ProcessaDados(), TMR4_DefaultInterruptHandler(), NULL(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ProcessaDados(), TMR4_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DRMotordePassos(), TMR6_DefaultInterruptHandler(), NULL(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DRMotordePassos(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_ISR->_DRMotordePassos
    _DRMotordePassos->_muda_passos
    _selecao_do_modo->_EPWM1_LoadDutyValue
    _posicao_bola_tubo->_velocidade_som
    _velocidade_som->___lwdiv
    ___lwdiv->_ADC_GetConversion
    ___eetoi->___eecpymem
    _media->_TMR1_ReadTimer
    ___wmul->_velocidade_som
    _map_value->___aldiv
    ___aldiv->___lmul
    ___atdiv->___tmul
    _TMR0_ISR->_inicia_ultrasom
    _inicia_ultrasom->_TMR1_WriteTimer
    _EnviaTx->_EUSART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_posicao_bola_tubo
    _Comando_PIeD->_modo_ventoinha
    _modo_ventoinha->_map_value
    _modo_valvula->_map_value
    _map_value->___aldiv

Critical Paths under _main in BANK1

    _main->_Dados_recebidos
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Dados_recebidos->_TMR4_WriteTimer

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1731
                                              3 BANK1      1     1      0
               _CMP1_GetOutputStatus
                    _Dados_recebidos
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
       _TMR1_SetGateInterruptHandler
           _TMR4_SetInterruptHandler
           _TMR6_SetInterruptHandler
          _funcao_diminui_num_passos
 ---------------------------------------------------------------------------------
 (1) _funcao_diminui_num_passos                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     990
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dados_recebidos                                      2     2      0      45
                                              1 BANK1      2     2      0
                        _EUSART_Read
                    _TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR4_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   11436
                           _TMR0_ISR
                      _TMR1_GATE_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                                NULL *
                    _DRMotordePassos *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _DRMotordePassos                                      1     1      0       0
                                              1 COMMON     1     1      0
                        _muda_passos
 ---------------------------------------------------------------------------------
 (7) _muda_passos                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0     272
                                NULL *
                      _ProcessaDados *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ProcessaDados                                        0     0      0     272
                    _selecao_do_modo
 ---------------------------------------------------------------------------------
 (7) _selecao_do_modo                                      0     0      0     272
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0   10802
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                  _posicao_bola_tubo *
 ---------------------------------------------------------------------------------
 (6) _posicao_bola_tubo                                    2     2      0   10802
                                             55 BANK0      2     2      0
                  _ADC_GetConversion
                       _Comando_PIeD
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
                            ___lwdiv
                             ___wmul
                              _media
                     _velocidade_som
 ---------------------------------------------------------------------------------
 (7) _velocidade_som                                       2     0      2    1944
                                             12 COMMON     2     0      2
                  _ADC_GetConversion
                            ___eetoi
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     618
                                              4 COMMON     8     4      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (8) ___eetoi                                              5     3      2    1304
                                              6 COMMON     5     3      2
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (9) ___eecpymem                                           6     4      2    1229
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _media                                                4     2      2      98
                                             11 COMMON     2     0      2
                                              0 BANK0      2     2      0
                     _TMR1_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
                  _ADC_GetConversion (ARG)
                            ___lwdiv (ARG)
                     _velocidade_som (ARG)
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (7) _Comando_PIeD                                         0     0      0    7316
                       _modo_valvula
                     _modo_ventoinha
 ---------------------------------------------------------------------------------
 (8) _modo_ventoinha                                       6     6      0    3794
                                             49 BANK0      6     6      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                             ___tmul
                          _map_value
 ---------------------------------------------------------------------------------
 (8) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _modo_valvula                                         3     3      0    3522
                                             49 BANK0      3     3      0
                            ___atdiv
                             ___tmul
                          _map_value
 ---------------------------------------------------------------------------------
 (9) _map_value                                           35    15     20    1610
                                             14 BANK0     35    15     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (10) ___lmul                                             12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___aldiv                                            15     7      8     452
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___tmul                                               9     3      6     852
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (9) ___atdiv                                             12     6      6    1060
                                              9 COMMON     1     1      0
                                              0 BANK0     11     5      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     362
                                NULL *
       _TMR0_DefaultInterruptHandler *
                    _inicia_ultrasom *
 ---------------------------------------------------------------------------------
 (6) _inicia_ultrasom                                      2     2      0     362
                                              2 COMMON     2     2      0
                            _EnviaTx
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     316
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _EnviaTx                                              0     0      0      22
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _Dados_recebidos
     _EUSART_Read
     _TMR4_WriteTimer
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetGateInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _funcao_diminui_num_passos

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _inicia_ultrasom *
       _EnviaTx
         _EUSART_Write
       _TMR1_WriteTimer
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _posicao_bola_tubo *
       _ADC_GetConversion
       _Comando_PIeD
         _modo_valvula
           ___atdiv
             ___tmul (ARG)
           ___tmul
           _map_value
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _modo_ventoinha
           _EPWM1_LoadDutyValue
           ___atdiv
           ___tmul
           _map_value
       _TMR1_ReadTimer
       _TMR1_WriteTimer
       ___lwdiv
         _ADC_GetConversion (ARG)
       ___wmul
         _ADC_GetConversion (ARG)
         ___lwdiv (ARG)
         _velocidade_som (ARG)
           _ADC_GetConversion
           ___eetoi
             ___eecpymem
           ___lwdiv
       _media
         _TMR1_ReadTimer (ARG)
       _velocidade_som
   _TMR4_ISR
     NULL(Fake) *
     _ProcessaDados *
       _selecao_do_modo
         _EPWM1_LoadDutyValue
     _TMR4_DefaultInterruptHandler *
   _TMR6_ISR
     NULL(Fake) *
     _DRMotordePassos *
       _muda_passos
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0      66       0       39.8%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       F      10       18.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      B7      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Feb 20 13:26:31 2025

                             ?_DRMotordePassos 0000                                             l42 0006  
                                           l45 0003                                             l70 0015  
                                           l39 002A                                             l90 0007  
                            ??_CMP1_Initialize 0000                               ___atdiv@quotient 0008  
                       __end_of_FVR_Initialize 0004                            ___wmul@multiplicand 0002  
                              _timer0ReloadVal 0028                                            l302 0005  
                                          l118 0003                                            l305 0005  
                                          l403 0012                                            l260 0024  
                                          l148 001D                                            l181 0005  
                                          l318 0007                                            l415 0005  
                                          l281 000F                                            l425 0005  
                                          l354 000C                                            l507 0005  
                                          l268 0004                                            l277 0000  
                                          l461 0005                                            l445 0014  
                                          l366 0005                                            l376 0005  
                                          l369 0003                                            l299 0005  
                                          l485 0012                                            l790 0026  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                 _modo_ventoinha 0000  
                              _timer1ReloadVal 0022                 ?_EUSART_SetFramingErrorHandler 0000  
                              _TMR2_Initialize 0000                                            wreg 0009  
                                 _proporcional 000F       __end_of_TMR1_DefaultGateInterruptHandler 0001  
           ??_TMR1_DefaultGateInterruptHandler 0000              ?_TMR1_DefaultGateInterruptHandler 0000  
             _TMR1_DefaultGateInterruptHandler 0000                                   ?_EUSART_Read 0000  
                                         l2601 0003                                           l2611 0008  
                                         l2603 0004                                           l2461 0000  
                                         l2613 000B                                           l2437 0000  
                                         l2605 0005                                           l2621 0003  
                                         l2631 0000                                           l2615 000C  
                                         l2607 0000                                           l2463 0000  
                                         l2623 0004                                           l2633 0000  
                                         l2641 0003                                           l2457 0000  
                                         l2465 0000                                           l2617 000D  
                                         l2609 0005                                           l2625 0006  
                                         l2803 0000                                           l2811 0008  
                                         l2635 0003                                           l2651 000A  
                                         l2643 0004                                           l2459 0000  
                                         l2571 000B                                           l2563 0000  
                                         l2467 0000                                           l2627 0008  
                                         l2619 0000                                           l2821 0022  
                                         l2813 000F                                           l2637 0004  
                                         l2645 0006                                           l2573 0010  
                                         l2565 0003                                           l2661 0013  
                                         l2653 0000                                           l2629 000F  
                                         l2581 0000                                           l2815 0015  
                                         l2807 0000                                           l2583 0000  
                                         l2647 0008                                           l2639 0000  
                                         l2671 0012                                           l2575 0000  
                                         l2567 0006                                           l2663 001A  
                                         l2655 0007                                           l2591 0004  
                                         l2681 0007                                           l2817 0019  
                                         l2809 0003                                           l2649 0009  
                                         l2673 001A                                           l2665 0000  
                                         l2585 0000                                           l2577 0003  
                                         l2569 0008                                           l2657 000F  
                                         l2593 0006                                           l2683 000C  
                                         l2819 001E                                           l2675 0022  
                                         l2667 0009                                           l2579 0004  
                                         l2659 0011                                           l2595 0008  
                                         l2587 0000                                           l2771 0000  
                                         l2851 0004                                           l2685 000E  
                                         l2677 0000                                           l2669 000A  
                                         l2597 000F                                           l2589 0003  
                                         l2861 003D                                           l2853 0026  
                                         l2679 0005                                           l2599 0000  
                                         l2863 0049                                           l2855 0029  
                                         l2847 0000                                           l2689 0002  
                                         l2865 0051                                           l2857 0032  
                                         l2849 0003                                           l2859 003A  
                                         l2799 0000                                           _LATA 010C  
                                         u1510 0005                                           _LATB 010D  
                                         u1511 0004                                           u1520 000C  
                                         u1521 000B                                           u1660 000F  
                                         u1661 000E                                           u1807 002D  
                                         u1760 003A                                           u1761 0039  
                                         u1770 0047                                           u1771 0044  
                                         u1790 0051                                           u1791 0050  
                                         u1784 0049                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                  ?_TMR1_SetGateInterruptHandler 0000  
                                         _main 0000                                           _modo 0014  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0000* 
                        ??_EPWM1_LoadDutyValue 0002                     ??_TMR4_SetInterruptHandler 0002  
                              __end_of_EnviaTx 0054                                    media@indice 0011  
                      __end_of_TMR0_Initialize 0015                 ??_TMR0_DefaultInterruptHandler 0000  
                              ?_FVR_Initialize 0000                                  ?_EUSART_Write 0000  
                       __end_of_modo_ventoinha 013D                  __end_of_OSCILLATOR_Initialize 0007  
                              __end_of___aldiv 0090                                          ?_main 0000  
                              __end_of___atdiv 0079                                __end_of___eetoi 000E  
                                        _EEADR 0191                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 003C  
                                        i1l105 0012                                          i1l210 0020  
                                        i1l211 003C                                          i1l108 001A  
                                        i1l212 002E                                          i1l207 000E  
                                        i1l217 003C                                          i1l162 0010  
                                        i1l157 0018                                          i1l422 000E  
                                        i1l510 0000                                          i1l184 0000  
                                        i1l504 000E                                          i1l178 000E  
                                        i1l284 0001                                          i1l428 0000  
                                        i1l357 0016                                          i1l287 0009  
                                        i1l720 002A                                          i1l464 0000  
                                        i1l458 0011                                          i1l730 0020  
                                        i1l723 001D                                          i1l811 003C  
                                        i1l733 0062                                          i1l813 0071  
                                        i1l741 0058                                          i1l750 0004  
                                        i1l831 013C                                          i1l815 00A9  
                                        i1l807 000E                                          i1l808 0027  
                                        i1l760 000A                                          i1l752 0005  
                                        i1l736 0013                                          i1l841 005C  
                                        i1l737 0026                                          i1l818 0053  
                                        i1l826 0012                                          i1l762 000B  
                                        i1l746 0001                                          i1l771 0011  
                                        i1l780 0017                                          i1l756 0007  
                                        i1l748 0003                                          i1l765 000D  
                                        i1l838 010D                                          i1l774 0013  
                                        i1l758 0009                                          i1l863 0010  
                                        i1l767 000F                                          i1l776 0015  
                                        i1l785 0042                                          i1l769 0010  
                                        i1l858 0003                                          i1l794 005F  
                                        i1l778 0016                                          i1l867 002D  
                                        i1l991 000B                                          i1l887 000D  
                                        i1l993 001F                                          i1l999 0029  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        u92_20 000C                                          u92_21 000B  
                                        u93_25 0015                                          u94_25 001C  
                                        u95_20 002A                                          u95_21 0029  
                                        u96_20 0006                                          u96_21 0005  
                                        u97_20 0017                                          u97_21 0016  
                                        _TXREG 019A                                          u98_20 0036  
                                        u98_21 0035                                          u99_25 003A  
                                        _TXSTA 019E                                _TMR4_Initialize 0000  
                          ___lmul@multiplicand 0004                      ?_TMR0_SetInterruptHandler 0000  
                    ?_TMR6_SetInterruptHandler 0000                               __end_of_TMR0_ISR 0012  
                             __end_of_TMR4_ISR 000F                               __end_of_TMR6_ISR 000F  
                                        _media 0000                                 _WDT_Initialize 0000  
                             inicia_ultrasom@j 0012                        __end_of_TMR1_Initialize 001E  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                           __end_of_Comando_PIeD 0013  
                              _TMR1_WriteTimer 0000                 ??_TMR6_DefaultInterruptHandler 0000  
                             ??_DAC_Initialize 0000                   __end_of_CMP1_GetOutputStatus 0004  
                              __initialization 0000                                   __end_of_main 0057  
                               ??_EUSART_Write 0000                        __end_of_TMR2_Initialize 0008  
                  ?_INTERRUPT_InterruptManager 0000                                ?_modo_ventoinha 0000  
                                       ??_main 0003                              ??_selecao_do_modo 0004  
                                 ?_muda_passos 0000                         __end_of_WDT_Initialize 0004  
                              _TMR6_Initialize 0000                               ??_velocidade_som 000E  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         ?_media 000B  
                   _EUSART_OverrunErrorHandler 0008                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _EEDATA 0193  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _EECON1 0195                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0005  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       u100_20 0048                                         u100_21 0047  
                                       u101_25 0049                                         i1l1005 0032  
                                       u110_20 000A                                         u102_20 0061  
                                       u110_21 0009                                         u102_21 0060  
                      TMR1_WriteTimer@timerVal 0000                                         i1l1108 0010  
                                       u102_25 005D                                         i1l1118 0078  
                                       i1l1056 0013                                         i1l1066 008F  
                                       i1l2211 0008                                         i1l2301 0002  
                                       u111_25 0011                                         u103_25 006B  
                                       i1l2213 000C                                         i1l2311 0026  
                                       i1l2303 0006                                         i1l2231 0022  
                                       i1l2223 0000                                         i1l2215 0014  
                                       i1l1271 003B                                         u120_20 0052  
                                       u104_20 0077                                         u120_21 0051  
                                       i1l2321 0044                                         i1l2313 002D  
                                       i1l2305 0014                                         u104_21 0076  
                                       i1l2241 0044                                         i1l2233 0026  
                                       i1l2225 0002                                         i1l2217 001B  
                                       i1l2209 0000                                         i1l2401 00CB  
                                       i1l2323 0052                                         i1l2315 0030  
                                       i1l2331 0065                                         i1l2307 001C  
                                       i1l2251 006A                                         i1l2243 0048  
                                       i1l2235 002E                                         i1l2227 0006  
                                       i1l2219 002A                                         i1l2403 0101  
                                       i1l2411 0000                                         i1l2333 006A  
                                       i1l2325 0058                                         u120_25 004E  
                                       i1l2317 003A                                         i1l2309 0020  
                                       u112_25 0017                                         i1l2253 0071  
                                       i1l2245 004F                                         i1l2237 0036  
                                       i1l2229 0017                                         i1l2341 000B  
                                       i1l2405 0001                                         i1l2421 0014  
                                       i1l2413 0002                                         i1l2501 002E  
                                       i1l2351 0001                                         i1l2335 0072  
                                       i1l2327 0059                                         i1l2319 003E  
                                       i1l2247 0061                                         i1l2239 0039  
                                       i1l2255 0077                                         i1l2263 0000  
                                       i1l2343 000C                                         i1l2271 0008  
                                       i1l2407 0009                                         i1l2431 0031  
                                       i1l2423 0018                                         i1l2415 0008  
                                       i1l2503 0033                                         u113_20 0023  
                                       u105_20 007C                                         i1l2353 0006  
                                       i1l2329 005F                                         u113_21 0022  
                                       i1l2257 007C                                         u105_21 007B  
                                       i1l2249 0069                                         i1l2265 0000  
                                       i1l2361 006C                                         i1l2345 0010  
                                       i1l2281 0022                                         i1l2273 0014  
                                       i1l2425 0027                                         i1l2417 000B  
                                       i1l2433 0037                                         i1l2521 0019  
                                       i1l2513 0000                                         i1l2505 0035  
                                       i1l2451 000A                                         i1l2443 0000  
                                       i1l2291 0010                                         i1l2259 0087  
                                       i1l2371 00EF                                         i1l2363 00B2  
                                       i1l2355 0000                                         i1l2347 0016  
                                       i1l2339 0001                                         i1l2275 0018  
                                       i1l2283 0026                                         i1l2427 002B  
                                       i1l2419 0010                                         i1l2531 006D  
                                       i1l2523 0023                                         i1l2515 0001  
                                       i1l2507 0039                                         i1l2445 0005  
                                       i1l2453 000C                                         i1l2701 001B  
                                       u121_25 005A                                         i1l2293 0016  
                                       i1l2285 0000                                         i1l2381 0044  
                                       i1l2373 00F6                                         i1l2365 00D8  
                                       i1l2357 0018                                         i1l2277 0019  
                                       i1l2269 0001                                         i1l2429 002C  
                                       i1l2541 008F                                         i1l2533 0075  
                                       i1l2525 002F                                         i1l2517 000A  
                                       i1l2509 003D                                         i1l2455 000E  
                                       i1l2447 0006                                         i1l2703 001D  
                                       i1l2295 0023                                         i1l2287 0006  
                                       i1l2391 0099                                         i1l2383 0051  
                                       i1l2375 0129                                         i1l2367 00DC  
                                       i1l2359 0040                                         i1l2439 0000  
                                       i1l2551 0003                                         i1l2279 001E  
                                       i1l2471 0000                                         i1l2711 0000  
                                       i1l2543 0096                                         i1l2535 007C  
                                       i1l2527 0038                                         i1l2519 0012  
                                       u122_20 0065                                         u114_20 0006  
                                       u130_20 0065                                         i1l2449 0008  
                                       i1l2705 001F                                         u122_21 0064  
                                       u114_21 0005                                         i1l2289 000A  
                                       i1l2393 00AD                                         u130_21 0064  
                                       i1l2385 0058                                         i1l2377 0000  
                                       i1l2369 00E2                                         i1l2553 0007  
                                       i1l2481 000D                                         i1l2473 0014  
                                       i1l2713 0012                                         i1l2537 0083  
                                       i1l2529 0064                                         i1l2721 0000  
                                       i1l2707 0025                                         i1l2299 0000  
                                       i1l2395 00B1                                         i1l2387 0065  
                                       i1l2379 0018                                         i1l2491 0009  
                                       i1l2483 0000                                         i1l2555 0010  
                                       i1l2715 0036                                         i1l2539 0089  
                                       i1l2547 009D                                         i1l2731 003C  
                                       i1l2723 000E                                         i1l2469 0000  
                                       i1l2709 0028                                         i1l2397 00B7  
                                       i1l2389 006C                                         u106_25 000F  
                                       i1l2485 0001                                         i1l2557 0015  
                                       i1l2549 0000                                         i1l2477 0000  
                                       i1l2717 0039                                         i1l2741 0000  
                                       i1l2493 0000                                         i1l2733 0040  
                                       i1l2725 0021                                         i1l2399 00C4  
                                       i1l2487 0005                                         i1l2559 001B  
                                       i1l2479 0009                                         i1l2719 005C  
                                       i1l2735 004F                                         i1l2727 0035  
                                       i1l2831 0012                                         u123_20 006A  
                                       u115_20 0014                                         u131_20 00B1  
                                       u107_20 0008                                         u123_21 0069  
                                       u115_21 0013                                         u131_21 00B0  
                                       u107_21 0007                                         i1l2753 0013  
                                       i1l2761 0046                                         i1l2745 0007  
                                       i1l2497 0019                                         i1l2737 0054  
                                       i1l2729 003A                                         i1l2841 0033  
                                       i1l2833 0017                                         i1l2825 0002  
                                       i1l2691 0000                                         i1l2755 0024  
                                       i1l2763 0052                                         i1l2747 0008  
                                       i1l2499 0028                                         i1l2843 0038  
                                       i1l2835 001C                                         i1l2827 0006  
                                       i1l2693 0007                                         i1l2781 0001  
                                       i1l2773 0000                                         i1l2757 0035  
                                       i1l2765 0055                                         i1l2749 000B  
                                       i1l2837 0025                                         i1l2829 000A  
                                       i1l2695 000A                                         i1l2783 0005  
                                       i1l2775 0002                                         i1l2767 005C  
                                       i1l2791 0009                                         i1l2839 002A  
                                       u140_20 0005                                         u116_20 002D  
                                       u132_20 00C4                                         u124_20 0016  
                                       u108_20 0014                                         u140_21 0004  
                                       i1l2697 0011                                         i1l2785 000C  
                                       u116_21 002C                                         u132_21 00C3  
                                       u124_21 0015                                         u108_21 0013  
                                       i1l2777 0009                                         i1l2769 005D  
                                       i1l2793 0000                                         i1l2699 0019  
                                       i1l2779 0000                                         i1l2795 0002  
                                       i1l2787 0000                                         i1l2797 0009  
                                       i1l2789 0002                                         u125_20 0006  
                                       u109_20 002D                                         u133_20 0008  
                                       u141_20 002E                                         u125_21 0005  
                                       u109_21 002C                                         u133_21 0007  
                                       u141_21 002D                                         u117_25 0031  
                                       u118_20 003E                                         u150_20 001B  
                                       u142_20 0033                                         u118_21 003D  
                                       u126_21 0080                                         u150_21 001A  
                                       u142_21 0032                                         u126_22 0082  
                                       u126_23 008A                                         u126_24 008C  
                                       u134_25 000C                                         u127_20 00DC  
                                       u135_20 0018                                         u143_20 000A  
                                       u127_21 00DB                                         u135_21 0017  
                                       u143_21 0009                                         u119_25 003F  
                                       u128_20 00EF                                         u144_20 0023  
                                       u160_20 0012                                         u128_21 00EE  
                                       u144_21 0022                                         u160_21 0011  
                                       u136_25 0019                                         u153_20 0007  
                                       u129_20 0051                                         u137_20 0027  
                                       u145_20 0038                                         u161_20 005C  
                                       u153_21 0006                                         u129_21 0050  
                                       u137_21 0026                                         u145_21 0037  
                                       u161_21 005B                                         u137_25 0023  
                      TMR4_WriteTimer@timerVal 0000                                         u154_20 0011  
                                       u162_20 0009                                         u146_20 006D  
                                       u170_20 0017                                         u154_21 0010  
                                       u162_21 0008                                         u146_21 006C  
                                       u170_21 0016                                         u138_25 002D  
                                       u163_20 000C                                         u147_20 0007  
                                       u139_20 0037                                         u155_20 000E  
                                       u171_20 001C                                         _FVRCON 0117  
                                       u163_21 000B                                         u147_21 0006  
                                       u139_21 0036                                         u155_21 000D  
                                       u171_21 001B                                         u155_25 000A  
                                       u156_20 0021                                         u164_20 0009  
                                       u172_20 0025                                         u156_21 0020  
                                       u164_21 0008                                         u172_21 0024  
                                       u148_25 000C                                         u156_25 001D  
                                       u165_20 0009                                         u157_20 0035  
                                       u173_20 002A                                         u165_21 0008  
                                       u157_21 0034                                         u173_21 0029  
                                       u149_25 0011                                         u157_25 0031  
                                       u181_27 000D                                         u158_20 004F  
                                       u174_20 0033                                         u158_21 004E  
                                       u174_21 0032                                         u158_25 004B  
                                       u182_27 0026                                         u159_20 0006  
                                       u175_20 0038                                         u167_20 0006  
                                       u159_21 0005                                         u175_21 0037  
                                       u167_21 0005                                         u168_20 000A  
                                       u168_21 0009                                         u169_20 0012  
                                       u169_21 0011                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                      ??_EnviaTx 0001  
                                   _Set_altura 000F                          __end_of_TMR1_GATE_ISR 000F  
               ??_TMR1_SetGateInterruptHandler 0002                                _Dados_recebidos 0000  
                                 _CCPTMRS0bits 029E                                         ___lmul 0000  
                                    ??___aldiv 000C                                         ___tmul 0000  
                                       ___wmul 0000                                      ??___atdiv 0009  
                                    ??___eetoi 0008                              _posicao_bola_tubo 0000  
                                    ??___lwdiv 0008                               ?_TMR0_Initialize 0000  
                      __end_of_TMR4_Initialize 0013                             ?_posicao_bola_tubo 0000  
                                 __pdataEEDATA 0000           __end_of_TMR4_DefaultInterruptHandler 0001  
                 _TMR4_DefaultInterruptHandler 0000                                _TMR4_WriteTimer 0000  
                              ?_WDT_Initialize 0000                            ??_posicao_bola_tubo 000E  
                     ADC_GetConversion@channel 0003       TMR6_SetInterruptHandler@InterruptHandler 0000  
     TMR0_SetInterruptHandler@InterruptHandler 0000       TMR4_SetInterruptHandler@InterruptHandler 0000  
 TMR1_SetGateInterruptHandler@InterruptHandler 0000                        __end_of_TMR1_WriteTimer 0011  
                   ?_funcao_diminui_num_passos 0000                                     ___eecpymem 0000  
                             ?_TMR1_Initialize 0000                              _SYSTEM_Initialize 0000  
                      __end_of__initialization 0024                                _CMP1_Initialize 0000  
                           ?_SYSTEM_Initialize 0000                              _posicao_val_atual 001C  
                            ?_EPWM1_Initialize 0000                      __end_of_posicao_bola_tubo 0063  
                               __pcstackCOMMON 0000                                   __pidataBANK1 0000  
                          ??_SYSTEM_Initialize 0002                                  _erro_anterior 0012  
                                    ?_TMR0_ISR 0000                                      ?_TMR4_ISR 0000  
                                    ?_TMR6_ISR 0000                             ??_EPWM1_Initialize 0000  
                        __end_of_ProcessaDados 0060                                  __end_of_media 0021  
                             ?_TMR2_Initialize 0000                        __end_of_TMR6_Initialize 0013  
                                ?_modo_valvula 0000                                 _OPTION_REGbits 0095  
                ?_TMR4_DefaultInterruptHandler 0000                                     _dado_atual 0027  
              ??_EUSART_SetOverrunErrorHandler 0002                           _CMP1_GetOutputStatus 0000  
                                      ??_media 0000                      __end_of_SYSTEM_Initialize 002B  
                                   __pbssBANK0 0000                                     __pbssBANK1 0000  
                                   __pbssBANK2 0000                           __end_of_EUSART_Write 000A  
                      __end_of_Dados_recebidos 0027                                 _subtrai_passos 0013  
                        _TMR4_InterruptHandler 0004                               ??_FVR_Initialize 0000  
                                   __pmaintext 0000               __end_of_TMR0_SetInterruptHandler 0006  
                                      ?___lmul 0000                                        ?___tmul 0000  
                                      ?___wmul 0000                                     ??_TMR0_ISR 0004  
             __end_of_TMR6_SetInterruptHandler 0006                                     ??_TMR4_ISR 0004  
                                   ??_TMR6_ISR 0002                                     __pintentry 0000  
                      __end_of_TMR4_WriteTimer 0006                                        _DACCON0 0118  
                                      _DACCON1 0119                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CCP1CON 0293  
                                      _ECCP1AS 0295                                        _BAUDCON 019F  
                               ___lmul@product 0008                                 ??_modo_valvula 0031  
                             ?_TMR4_Initialize 0000                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _derivativo 000C  
                              map_value@in_max 0016                                map_value@in_min 0012  
                                 _Comando_PIeD 0000                          ?_CMP1_GetOutputStatus 0000  
                                      _OSCTUNE 0098                                        _PWM1CON 0294  
                      __end_of_CMP1_Initialize 0006                       ??_EUSART_SetErrorHandler 0002  
                             ?_TMR1_WriteTimer 0000                                    ?___eecpymem 0000  
                  __end_of_EPWM1_LoadDutyValue 0017                                        _EnviaTx 0000  
                                   _ki_valvula 0003                           _ADC_InterruptHandler 0024  
                             ??_modo_ventoinha 0031                                _selecao_do_modo 0000  
                                  _Set_valvula 000D                                        ___aldiv 0000  
                                      ___atdiv 0000                                        ___eetoi 0000  
                                   _erro_atual 0006                                        ___lwdiv 0000  
                             ?_TMR6_Initialize 0000                       TMR1_ReadTimer@readValLow 000A  
                            __end_of_map_value 005D                                        __ptext1 0000  
                                      __ptext2 0000                                        __ptext3 0000  
                                      __ptext4 0000                                        __ptext5 0000  
                                      __ptext6 0000                                        __ptext7 0000  
                                      __ptext8 0000                                        __ptext9 0000  
                    TMR1_ReadTimer@readValHigh 0009                                     _kp_valvula 0000  
                                    _T1CONbits 0018                                        _countRx 0026  
                        _OSCILLATOR_Initialize 0000                                      _T2CONbits 001C  
                                    _CMOUTbits 0115                               ___aldiv@dividend 0004  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 0000  
                                      _npassos 0015                      ?_TMR4_SetInterruptHandler 0000  
                                    _T6CONbits 041E                                        _tempo_s 0020  
                                      clrloop0 0001                           end_of_initialization 0024  
               ??_TMR4_DefaultInterruptHandler 0000          __end_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0000                                        init_ram 0000  
                             ?_Dados_recebidos 0000                                        initloop 0001  
                            _EUSART_Initialize 0000                             ?_EUSART_Initialize 0000  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0000  
                             ___aldiv@quotient 000A                               ?_TMR4_WriteTimer 0000  
                          ??_EUSART_Initialize 0002                               ??_WDT_Initialize 0000  
                     _TMR0_SetInterruptHandler 0000                            ?_EUSART_is_rx_ready 0000  
                     _TMR6_SetInterruptHandler 0000                              ??_inicia_ultrasom 0002  
                       ??_CMP1_GetOutputStatus 0000                                 _TMR1_ReadTimer 0000  
                                 _kd_ventoinha 0009                               ?_CMP1_Initialize 0000  
                  ??_funcao_diminui_num_passos 0000                              ??_DRMotordePassos 0001  
                    __end_of_EUSART_Initialize 0025                           ??_EUSART_is_rx_ready 0000  
                         __end_of_modo_valvula 010E                        __end_of_selecao_do_modo 00AA  
                                    _TXSTAbits 019E                             _posicao_val_futura 0018  
                                   media@timer 000B                                 __end_of___lmul 0033  
                   _EUSART_DefaultErrorHandler 0000                        _relacao_som_temperatura 0000  
                                __pidataEEDATA 0000                                 __end_of___tmul 002A  
                               __end_of___wmul 0020                                   _EUSART_Write 0000  
                               _ADC_Initialize 0000                         ?_OSCILLATOR_Initialize 0000  
                       __end_of_TMR1_ReadTimer 0019                           _inicia_ultrasom$1287 0002  
                          start_initialization 0000                                  ??_EUSART_Read 0000  
                                   map_value@x 000E                   EPWM1_LoadDutyValue@dutyValue 0000  
                                 _ki_ventoinha 000C                                      _Set_ciclo 000B  
               ?_EUSART_SetOverrunErrorHandler 0000                     _EUSART_FramingErrorHandler 000A  
                                     ??___lmul 0008                                       ??___tmul 0006  
                                     ??___wmul 000E                            media@tempo_recebido 0005  
                       _EUSART_SetErrorHandler 0000                      _funcao_diminui_num_passos 0000* 
                       __end_of_ADC_Initialize 0008                                    __pdataBANK1 0000  
                               ___tmul@product 0006                                ?_TMR1_ReadTimer 0000  
                                    ___latbits 0001                                  __pcstackBANK0 0000  
                                __pcstackBANK1 0000                                   ??___eecpymem 0002  
                             ?_selecao_do_modo 0000                            __end_of_EUSART_Read 0010  
                                     ?_EnviaTx 0000                          _TMR0_InterruptHandler 0002  
                        _TMR6_InterruptHandler 0000                                      __pnvBANK1 0000  
                             ___lwdiv@dividend 0006                         _PIN_MANAGER_Initialize 0000  
                       _posicao_bola_tubo$2070 0037                                  _TMR1_GATE_ISR 0000  
                                     ?___aldiv 0000               __end_of_TMR4_SetInterruptHandler 0006  
                                     ?___atdiv 0000                                       ?___eetoi 0006  
                                     ?___lwdiv 0004                                ?_ADC_Initialize 0000  
                 ??_INTERRUPT_InterruptManager 000E                             __end_of___eecpymem 002E  
                                ??_muda_passos 0000                                      _map_value 0000  
                                 _kp_ventoinha 0006                               ___lwdiv@quotient 0009  
                              ___aldiv@divisor 0000                              ??_TMR0_Initialize 0002  
                              ___aldiv@counter 0008                                 ___wmul@product 0004  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0000  
                             map_value@out_max 001E                               map_value@out_min 001A  
                                    clear_ram0 0000                                       _PIE1bits 0091  
                                     _PIE3bits 0093                              _eusartRxLastError 0029  
                   ??_TMR0_SetInterruptHandler 0002                                 ?_TMR1_GATE_ISR 0000  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0002  
                                     _PIR3bits 0013                     ??_TMR6_SetInterruptHandler 0002  
                                  _altura_bola 0009                                _inicia_ultrasom 0000  
                                     _TMR0_ISR 0000              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR4_ISR 0000                                       _PSTR1CON 0296  
                                     _TMR6_ISR 0000                      _TMR1_GateInterruptHandler 000C  
                                _ProcessaDados 0000                              ??_TMR1_Initialize 0002  
                                   _ADCON0bits 009D                                   _modo_valvula 0000  
                            ___wmul@multiplier 0000                                 _DAC_Initialize 0000  
                              _DRMotordePassos 0000                               _EPWM1_Initialize 0000  
                                   ?_map_value 000E                            ___tmul@multiplicand 0003  
                                  _EUSART_Read 0000                          Dados_recebidos@rxData 0002  
                            ___lmul@multiplier 0000                            __end_of_muda_passos 0043  
                            ??_TMR2_Initialize 0000                                 _velocidade_som 0000  
                                   _EECON1bits 0195                                       _RxBuffer 0000  
                            _ADC_GetConversion 0000                          TMR1_ReadTimer@readVal 0007  
                      ??_OSCILLATOR_Initialize 0000                            _EUSART_ErrorHandler 0006  
                           ?_ADC_GetConversion 0000                                 ?_ProcessaDados 0000  
                       __end_of_DAC_Initialize 0006                       _TMR4_SetInterruptHandler 0000  
                          ??_ADC_GetConversion 0002                                ___lwdiv@divisor 0004  
                              ___lwdiv@counter 000B                                       __ptext10 0000  
                                     __ptext11 0000                                       __ptext20 0000  
                                     __ptext12 0000                                       __ptext21 0000  
                                     __ptext13 0000                                     _T1GCONbits 0019  
                                     __ptext30 0000                                       __ptext22 0000  
                                     __ptext14 0000                                       __ptext31 0000  
                                     __ptext23 0000                                       __ptext15 0000  
                                     __ptext40 0000                                       __ptext32 0000  
                                     __ptext24 0000                                       __ptext16 0000  
                                     __ptext41 0000                                       __ptext33 0000  
                                     __ptext25 0000                                       __ptext17 0000  
                                     __ptext50 0000                                       __ptext42 0000  
                                     __ptext34 0000                                       __ptext26 0000  
                                     __ptext18 0000                                       __ptext51 0000  
                                     __ptext43 0000                                       __ptext35 0000  
                                     __ptext27 0000                                       __ptext19 0000  
                                     __ptext60 0000                                       __ptext52 0000  
                                     __ptext44 0000                                       __ptext36 0000  
                                     __ptext61 0000                                       __ptext53 0000  
                                     __ptext45 0000                                       __ptext37 0000  
                                     __ptext29 0000                                       __ptext62 0000  
                                     __ptext54 0000                                       __ptext46 0000  
                                     __ptext38 0000                                       __ptext55 0000  
                                     __ptext47 0000                                       __ptext39 0000  
                                     __ptext56 0000                                       __ptext48 0000  
                                     __ptext57 0000                                       __ptext49 0000  
                                     __ptext58 0000                                       __ptext59 0000  
                       __end_of_velocidade_som 001E                              ??_TMR4_Initialize 0002  
                                  _integrativo 0003                        __end_of_inicia_ultrasom 002B  
                              ??_TMR1_GATE_ISR 000E           __end_of_TMR0_DefaultInterruptHandler 0001  
                 _TMR0_DefaultInterruptHandler 0000                      __end_of_ADC_GetConversion 001B  
                      ?_EUSART_SetErrorHandler 0000  EUSART_SetOverrunErrorHandler@interruptHandler 0000  
                                     _soma_PID 0000                        __end_of_DRMotordePassos 0059  
                             ??_TMR1_ReadTimer 0002                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 003E                     _INTERRUPT_InterruptManager 0000  
        __end_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0000  
                              ?_DAC_Initialize 0000                              ??_TMR1_WriteTimer 0002  
                                ?_Comando_PIeD 0000                                ___eecpymem@from 0000  
                              ___eecpymem@size 0001                                     _INTCONbits 000B  
                                  _muda_passos 0000                                    ??_map_value 0022  
                                   _FVRCONbits 0117                                 _dados_de_envio 0000  
         __end_of_TMR6_DefaultInterruptHandler 0001                   _TMR6_DefaultInterruptHandler 0000  
                                     intlevel1 0000*                               ?_velocidade_som 000C  
                                _soma_anterior 0015                        ?_PIN_MANAGER_Initialize 0000  
                            ??_TMR6_Initialize 0002                 __end_of_EUSART_SetErrorHandler 0006  
                             ??_ADC_Initialize 0000                  ?_TMR0_DefaultInterruptHandler 0000  
                              ??_ProcessaDados 0004                              ___tmul@multiplier 0000  
EUSART_SetFramingErrorHandler@interruptHandler 0000                                 ??_Comando_PIeD 000D  
                               _FVR_Initialize 0000                                     _OPTION_REG 0095  
                                  _temperatura 001A                                    _tempo_medio 001E  
                            ??_Dados_recebidos 0001                                _TMR0_Initialize 0000  
                                 ___aldiv@sign 0009                            _EPWM1_LoadDutyValue 0000  
                             ___atdiv@dividend 0003                                  ___eecpymem@cp 0004  
                                ___eecpymem@to 0005                             EUSART_Write@txData 0000  
         __end_of_TMR1_SetGateInterruptHandler 0006                   _TMR1_SetGateInterruptHandler 0000  
               __end_of_PIN_MANAGER_Initialize 0016                  ?_TMR6_DefaultInterruptHandler 0000  
                            ??_TMR4_WriteTimer 0000                                ___atdiv@divisor 0000  
                             ?_inicia_ultrasom 0000                                ___atdiv@counter 0006  
                            _ciclo_util_futuro 0009                                _TMR1_Initialize 0000  
                     __end_of_EPWM1_Initialize 000D                           ?_EPWM1_LoadDutyValue 0000  
                                 ___atdiv@sign 0007                                   ___eetoi@addr 0008  
                                 ___eetoi@data 0009  
