

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan 19 21:30:20 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,space=0,delta=2
    33                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=1
    39                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Generated 07/09/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1827 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0008                     bsr             equ	8
    79     0005                     fsr0h           equ	5
    80     0004                     fsr0l           equ	4
    81     0007                     fsr1h           equ	7
    82     0006                     fsr1l           equ	6
    83     0000                     indf            equ	0
    84     0000                     indf0           equ	0
    85     0001                     indf1           equ	1
    86     000B                     intcon          equ	11
    87     0002                     pc              equ	2
    88     0002                     pcl             equ	2
    89     000A                     pclath          equ	10
    90     0003                     status          equ	3
    91     0009                     wreg            equ	9
    92     0000                     INDF0           equ	0	;# 
    93     0001                     INDF1           equ	1	;# 
    94     0002                     PCL             equ	2	;# 
    95     0003                     STATUS          equ	3	;# 
    96     0004                     FSR0L           equ	4	;# 
    97     0005                     FSR0H           equ	5	;# 
    98     0006                     FSR1L           equ	6	;# 
    99     0007                     FSR1H           equ	7	;# 
   100     0008                     BSR             equ	8	;# 
   101     0009                     WREG            equ	9	;# 
   102     000A                     PCLATH          equ	10	;# 
   103     000B                     INTCON          equ	11	;# 
   104     000C                     PORTA           equ	12	;# 
   105     000D                     PORTB           equ	13	;# 
   106     0011                     PIR1            equ	17	;# 
   107     0012                     PIR2            equ	18	;# 
   108     0013                     PIR3            equ	19	;# 
   109     0014                     PIR4            equ	20	;# 
   110     0015                     TMR0            equ	21	;# 
   111     0016                     TMR1            equ	22	;# 
   112     0016                     TMR1L           equ	22	;# 
   113     0017                     TMR1H           equ	23	;# 
   114     0018                     T1CON           equ	24	;# 
   115     0019                     T1GCON          equ	25	;# 
   116     001A                     TMR2            equ	26	;# 
   117     001B                     PR2             equ	27	;# 
   118     001C                     T2CON           equ	28	;# 
   119     001E                     CPSCON0         equ	30	;# 
   120     001F                     CPSCON1         equ	31	;# 
   121     008C                     TRISA           equ	140	;# 
   122     008D                     TRISB           equ	141	;# 
   123     0091                     PIE1            equ	145	;# 
   124     0092                     PIE2            equ	146	;# 
   125     0093                     PIE3            equ	147	;# 
   126     0094                     PIE4            equ	148	;# 
   127     0095                     OPTION_REG      equ	149	;# 
   128     0096                     PCON            equ	150	;# 
   129     0097                     WDTCON          equ	151	;# 
   130     0098                     OSCTUNE         equ	152	;# 
   131     0099                     OSCCON          equ	153	;# 
   132     009A                     OSCSTAT         equ	154	;# 
   133     009B                     ADRES           equ	155	;# 
   134     009B                     ADRESL          equ	155	;# 
   135     009C                     ADRESH          equ	156	;# 
   136     009D                     ADCON0          equ	157	;# 
   137     009E                     ADCON1          equ	158	;# 
   138     010C                     LATA            equ	268	;# 
   139     010D                     LATB            equ	269	;# 
   140     0111                     CM1CON0         equ	273	;# 
   141     0112                     CM1CON1         equ	274	;# 
   142     0113                     CM2CON0         equ	275	;# 
   143     0114                     CM2CON1         equ	276	;# 
   144     0115                     CMOUT           equ	277	;# 
   145     0116                     BORCON          equ	278	;# 
   146     0117                     FVRCON          equ	279	;# 
   147     0118                     DACCON0         equ	280	;# 
   148     0119                     DACCON1         equ	281	;# 
   149     011A                     SRCON0          equ	282	;# 
   150     011B                     SRCON1          equ	283	;# 
   151     011D                     APFCON0         equ	285	;# 
   152     011E                     APFCON1         equ	286	;# 
   153     018C                     ANSELA          equ	396	;# 
   154     018D                     ANSELB          equ	397	;# 
   155     0191                     EEADR           equ	401	;# 
   156     0191                     EEADRL          equ	401	;# 
   157     0192                     EEADRH          equ	402	;# 
   158     0193                     EEDAT           equ	403	;# 
   159     0193                     EEDATL          equ	403	;# 
   160     0193                     EEDATA          equ	403	;# 
   161     0194                     EEDATH          equ	404	;# 
   162     0195                     EECON1          equ	405	;# 
   163     0196                     EECON2          equ	406	;# 
   164     0199                     RCREG           equ	409	;# 
   165     019A                     TXREG           equ	410	;# 
   166     019B                     SP1BRG          equ	411	;# 
   167     019B                     SP1BRGL         equ	411	;# 
   168     019B                     SPBRG           equ	411	;# 
   169     019B                     SPBRGL          equ	411	;# 
   170     019C                     SP1BRGH         equ	412	;# 
   171     019C                     SPBRGH          equ	412	;# 
   172     019D                     RCSTA           equ	413	;# 
   173     019E                     TXSTA           equ	414	;# 
   174     019F                     BAUDCON         equ	415	;# 
   175     020C                     WPUA            equ	524	;# 
   176     020D                     WPUB            equ	525	;# 
   177     0211                     SSP1BUF         equ	529	;# 
   178     0211                     SSPBUF          equ	529	;# 
   179     0212                     SSP1ADD         equ	530	;# 
   180     0212                     SSPADD          equ	530	;# 
   181     0213                     SSP1MSK         equ	531	;# 
   182     0213                     SSPMSK          equ	531	;# 
   183     0214                     SSP1STAT        equ	532	;# 
   184     0214                     SSPSTAT         equ	532	;# 
   185     0215                     SSP1CON1        equ	533	;# 
   186     0215                     SSPCON1         equ	533	;# 
   187     0215                     SSPCON          equ	533	;# 
   188     0216                     SSP1CON2        equ	534	;# 
   189     0216                     SSPCON2         equ	534	;# 
   190     0217                     SSP1CON3        equ	535	;# 
   191     0217                     SSPCON3         equ	535	;# 
   192     0219                     SSP2BUF         equ	537	;# 
   193     021A                     SSP2ADD         equ	538	;# 
   194     021B                     SSP2MSK         equ	539	;# 
   195     021C                     SSP2STAT        equ	540	;# 
   196     021D                     SSP2CON1        equ	541	;# 
   197     021E                     SSP2CON2        equ	542	;# 
   198     021F                     SSP2CON3        equ	543	;# 
   199     0291                     CCPR1           equ	657	;# 
   200     0291                     CCPR1L          equ	657	;# 
   201     0292                     CCPR1H          equ	658	;# 
   202     0293                     CCP1CON         equ	659	;# 
   203     0294                     PWM1CON         equ	660	;# 
   204     0295                     CCP1AS          equ	661	;# 
   205     0295                     ECCP1AS         equ	661	;# 
   206     0296                     PSTR1CON        equ	662	;# 
   207     0298                     CCPR2           equ	664	;# 
   208     0298                     CCPR2L          equ	664	;# 
   209     0299                     CCPR2H          equ	665	;# 
   210     029A                     CCP2CON         equ	666	;# 
   211     029B                     PWM2CON         equ	667	;# 
   212     029C                     CCP2AS          equ	668	;# 
   213     029C                     ECCP2AS         equ	668	;# 
   214     029D                     PSTR2CON        equ	669	;# 
   215     029E                     CCPTMRS         equ	670	;# 
   216     029E                     CCPTMRS0        equ	670	;# 
   217     0311                     CCPR3           equ	785	;# 
   218     0311                     CCPR3L          equ	785	;# 
   219     0312                     CCPR3H          equ	786	;# 
   220     0313                     CCP3CON         equ	787	;# 
   221     0318                     CCPR4           equ	792	;# 
   222     0318                     CCPR4L          equ	792	;# 
   223     0319                     CCPR4H          equ	793	;# 
   224     031A                     CCP4CON         equ	794	;# 
   225     0394                     IOCBP           equ	916	;# 
   226     0395                     IOCBN           equ	917	;# 
   227     0396                     IOCBF           equ	918	;# 
   228     039A                     CLKRCON         equ	922	;# 
   229     039C                     MDCON           equ	924	;# 
   230     039D                     MDSRC           equ	925	;# 
   231     039E                     MDCARL          equ	926	;# 
   232     039F                     MDCARH          equ	927	;# 
   233     0415                     TMR4            equ	1045	;# 
   234     0416                     PR4             equ	1046	;# 
   235     0417                     T4CON           equ	1047	;# 
   236     041C                     TMR6            equ	1052	;# 
   237     041D                     PR6             equ	1053	;# 
   238     041E                     T6CON           equ	1054	;# 
   239     0FE4                     STATUS_SHAD     equ	4068	;# 
   240     0FE5                     WREG_SHAD       equ	4069	;# 
   241     0FE6                     BSR_SHAD        equ	4070	;# 
   242     0FE7                     PCLATH_SHAD     equ	4071	;# 
   243     0FE8                     FSR0L_SHAD      equ	4072	;# 
   244     0FE9                     FSR0H_SHAD      equ	4073	;# 
   245     0FEA                     FSR1L_SHAD      equ	4074	;# 
   246     0FEB                     FSR1H_SHAD      equ	4075	;# 
   247     0FED                     STKPTR          equ	4077	;# 
   248     0FEE                     TOSL            equ	4078	;# 
   249     0FEF                     TOSH            equ	4079	;# 
   250     0000                     INDF0           equ	0	;# 
   251     0001                     INDF1           equ	1	;# 
   252     0002                     PCL             equ	2	;# 
   253     0003                     STATUS          equ	3	;# 
   254     0004                     FSR0L           equ	4	;# 
   255     0005                     FSR0H           equ	5	;# 
   256     0006                     FSR1L           equ	6	;# 
   257     0007                     FSR1H           equ	7	;# 
   258     0008                     BSR             equ	8	;# 
   259     0009                     WREG            equ	9	;# 
   260     000A                     PCLATH          equ	10	;# 
   261     000B                     INTCON          equ	11	;# 
   262     000C                     PORTA           equ	12	;# 
   263     000D                     PORTB           equ	13	;# 
   264     0011                     PIR1            equ	17	;# 
   265     0012                     PIR2            equ	18	;# 
   266     0013                     PIR3            equ	19	;# 
   267     0014                     PIR4            equ	20	;# 
   268     0015                     TMR0            equ	21	;# 
   269     0016                     TMR1            equ	22	;# 
   270     0016                     TMR1L           equ	22	;# 
   271     0017                     TMR1H           equ	23	;# 
   272     0018                     T1CON           equ	24	;# 
   273     0019                     T1GCON          equ	25	;# 
   274     001A                     TMR2            equ	26	;# 
   275     001B                     PR2             equ	27	;# 
   276     001C                     T2CON           equ	28	;# 
   277     001E                     CPSCON0         equ	30	;# 
   278     001F                     CPSCON1         equ	31	;# 
   279     008C                     TRISA           equ	140	;# 
   280     008D                     TRISB           equ	141	;# 
   281     0091                     PIE1            equ	145	;# 
   282     0092                     PIE2            equ	146	;# 
   283     0093                     PIE3            equ	147	;# 
   284     0094                     PIE4            equ	148	;# 
   285     0095                     OPTION_REG      equ	149	;# 
   286     0096                     PCON            equ	150	;# 
   287     0097                     WDTCON          equ	151	;# 
   288     0098                     OSCTUNE         equ	152	;# 
   289     0099                     OSCCON          equ	153	;# 
   290     009A                     OSCSTAT         equ	154	;# 
   291     009B                     ADRES           equ	155	;# 
   292     009B                     ADRESL          equ	155	;# 
   293     009C                     ADRESH          equ	156	;# 
   294     009D                     ADCON0          equ	157	;# 
   295     009E                     ADCON1          equ	158	;# 
   296     010C                     LATA            equ	268	;# 
   297     010D                     LATB            equ	269	;# 
   298     0111                     CM1CON0         equ	273	;# 
   299     0112                     CM1CON1         equ	274	;# 
   300     0113                     CM2CON0         equ	275	;# 
   301     0114                     CM2CON1         equ	276	;# 
   302     0115                     CMOUT           equ	277	;# 
   303     0116                     BORCON          equ	278	;# 
   304     0117                     FVRCON          equ	279	;# 
   305     0118                     DACCON0         equ	280	;# 
   306     0119                     DACCON1         equ	281	;# 
   307     011A                     SRCON0          equ	282	;# 
   308     011B                     SRCON1          equ	283	;# 
   309     011D                     APFCON0         equ	285	;# 
   310     011E                     APFCON1         equ	286	;# 
   311     018C                     ANSELA          equ	396	;# 
   312     018D                     ANSELB          equ	397	;# 
   313     0191                     EEADR           equ	401	;# 
   314     0191                     EEADRL          equ	401	;# 
   315     0192                     EEADRH          equ	402	;# 
   316     0193                     EEDAT           equ	403	;# 
   317     0193                     EEDATL          equ	403	;# 
   318     0193                     EEDATA          equ	403	;# 
   319     0194                     EEDATH          equ	404	;# 
   320     0195                     EECON1          equ	405	;# 
   321     0196                     EECON2          equ	406	;# 
   322     0199                     RCREG           equ	409	;# 
   323     019A                     TXREG           equ	410	;# 
   324     019B                     SP1BRG          equ	411	;# 
   325     019B                     SP1BRGL         equ	411	;# 
   326     019B                     SPBRG           equ	411	;# 
   327     019B                     SPBRGL          equ	411	;# 
   328     019C                     SP1BRGH         equ	412	;# 
   329     019C                     SPBRGH          equ	412	;# 
   330     019D                     RCSTA           equ	413	;# 
   331     019E                     TXSTA           equ	414	;# 
   332     019F                     BAUDCON         equ	415	;# 
   333     020C                     WPUA            equ	524	;# 
   334     020D                     WPUB            equ	525	;# 
   335     0211                     SSP1BUF         equ	529	;# 
   336     0211                     SSPBUF          equ	529	;# 
   337     0212                     SSP1ADD         equ	530	;# 
   338     0212                     SSPADD          equ	530	;# 
   339     0213                     SSP1MSK         equ	531	;# 
   340     0213                     SSPMSK          equ	531	;# 
   341     0214                     SSP1STAT        equ	532	;# 
   342     0214                     SSPSTAT         equ	532	;# 
   343     0215                     SSP1CON1        equ	533	;# 
   344     0215                     SSPCON1         equ	533	;# 
   345     0215                     SSPCON          equ	533	;# 
   346     0216                     SSP1CON2        equ	534	;# 
   347     0216                     SSPCON2         equ	534	;# 
   348     0217                     SSP1CON3        equ	535	;# 
   349     0217                     SSPCON3         equ	535	;# 
   350     0219                     SSP2BUF         equ	537	;# 
   351     021A                     SSP2ADD         equ	538	;# 
   352     021B                     SSP2MSK         equ	539	;# 
   353     021C                     SSP2STAT        equ	540	;# 
   354     021D                     SSP2CON1        equ	541	;# 
   355     021E                     SSP2CON2        equ	542	;# 
   356     021F                     SSP2CON3        equ	543	;# 
   357     0291                     CCPR1           equ	657	;# 
   358     0291                     CCPR1L          equ	657	;# 
   359     0292                     CCPR1H          equ	658	;# 
   360     0293                     CCP1CON         equ	659	;# 
   361     0294                     PWM1CON         equ	660	;# 
   362     0295                     CCP1AS          equ	661	;# 
   363     0295                     ECCP1AS         equ	661	;# 
   364     0296                     PSTR1CON        equ	662	;# 
   365     0298                     CCPR2           equ	664	;# 
   366     0298                     CCPR2L          equ	664	;# 
   367     0299                     CCPR2H          equ	665	;# 
   368     029A                     CCP2CON         equ	666	;# 
   369     029B                     PWM2CON         equ	667	;# 
   370     029C                     CCP2AS          equ	668	;# 
   371     029C                     ECCP2AS         equ	668	;# 
   372     029D                     PSTR2CON        equ	669	;# 
   373     029E                     CCPTMRS         equ	670	;# 
   374     029E                     CCPTMRS0        equ	670	;# 
   375     0311                     CCPR3           equ	785	;# 
   376     0311                     CCPR3L          equ	785	;# 
   377     0312                     CCPR3H          equ	786	;# 
   378     0313                     CCP3CON         equ	787	;# 
   379     0318                     CCPR4           equ	792	;# 
   380     0318                     CCPR4L          equ	792	;# 
   381     0319                     CCPR4H          equ	793	;# 
   382     031A                     CCP4CON         equ	794	;# 
   383     0394                     IOCBP           equ	916	;# 
   384     0395                     IOCBN           equ	917	;# 
   385     0396                     IOCBF           equ	918	;# 
   386     039A                     CLKRCON         equ	922	;# 
   387     039C                     MDCON           equ	924	;# 
   388     039D                     MDSRC           equ	925	;# 
   389     039E                     MDCARL          equ	926	;# 
   390     039F                     MDCARH          equ	927	;# 
   391     0415                     TMR4            equ	1045	;# 
   392     0416                     PR4             equ	1046	;# 
   393     0417                     T4CON           equ	1047	;# 
   394     041C                     TMR6            equ	1052	;# 
   395     041D                     PR6             equ	1053	;# 
   396     041E                     T6CON           equ	1054	;# 
   397     0FE4                     STATUS_SHAD     equ	4068	;# 
   398     0FE5                     WREG_SHAD       equ	4069	;# 
   399     0FE6                     BSR_SHAD        equ	4070	;# 
   400     0FE7                     PCLATH_SHAD     equ	4071	;# 
   401     0FE8                     FSR0L_SHAD      equ	4072	;# 
   402     0FE9                     FSR0H_SHAD      equ	4073	;# 
   403     0FEA                     FSR1L_SHAD      equ	4074	;# 
   404     0FEB                     FSR1H_SHAD      equ	4075	;# 
   405     0FED                     STKPTR          equ	4077	;# 
   406     0FEE                     TOSL            equ	4078	;# 
   407     0FEF                     TOSH            equ	4079	;# 
   408     0000                     INDF0           equ	0	;# 
   409     0001                     INDF1           equ	1	;# 
   410     0002                     PCL             equ	2	;# 
   411     0003                     STATUS          equ	3	;# 
   412     0004                     FSR0L           equ	4	;# 
   413     0005                     FSR0H           equ	5	;# 
   414     0006                     FSR1L           equ	6	;# 
   415     0007                     FSR1H           equ	7	;# 
   416     0008                     BSR             equ	8	;# 
   417     0009                     WREG            equ	9	;# 
   418     000A                     PCLATH          equ	10	;# 
   419     000B                     INTCON          equ	11	;# 
   420     000C                     PORTA           equ	12	;# 
   421     000D                     PORTB           equ	13	;# 
   422     0011                     PIR1            equ	17	;# 
   423     0012                     PIR2            equ	18	;# 
   424     0013                     PIR3            equ	19	;# 
   425     0014                     PIR4            equ	20	;# 
   426     0015                     TMR0            equ	21	;# 
   427     0016                     TMR1            equ	22	;# 
   428     0016                     TMR1L           equ	22	;# 
   429     0017                     TMR1H           equ	23	;# 
   430     0018                     T1CON           equ	24	;# 
   431     0019                     T1GCON          equ	25	;# 
   432     001A                     TMR2            equ	26	;# 
   433     001B                     PR2             equ	27	;# 
   434     001C                     T2CON           equ	28	;# 
   435     001E                     CPSCON0         equ	30	;# 
   436     001F                     CPSCON1         equ	31	;# 
   437     008C                     TRISA           equ	140	;# 
   438     008D                     TRISB           equ	141	;# 
   439     0091                     PIE1            equ	145	;# 
   440     0092                     PIE2            equ	146	;# 
   441     0093                     PIE3            equ	147	;# 
   442     0094                     PIE4            equ	148	;# 
   443     0095                     OPTION_REG      equ	149	;# 
   444     0096                     PCON            equ	150	;# 
   445     0097                     WDTCON          equ	151	;# 
   446     0098                     OSCTUNE         equ	152	;# 
   447     0099                     OSCCON          equ	153	;# 
   448     009A                     OSCSTAT         equ	154	;# 
   449     009B                     ADRES           equ	155	;# 
   450     009B                     ADRESL          equ	155	;# 
   451     009C                     ADRESH          equ	156	;# 
   452     009D                     ADCON0          equ	157	;# 
   453     009E                     ADCON1          equ	158	;# 
   454     010C                     LATA            equ	268	;# 
   455     010D                     LATB            equ	269	;# 
   456     0111                     CM1CON0         equ	273	;# 
   457     0112                     CM1CON1         equ	274	;# 
   458     0113                     CM2CON0         equ	275	;# 
   459     0114                     CM2CON1         equ	276	;# 
   460     0115                     CMOUT           equ	277	;# 
   461     0116                     BORCON          equ	278	;# 
   462     0117                     FVRCON          equ	279	;# 
   463     0118                     DACCON0         equ	280	;# 
   464     0119                     DACCON1         equ	281	;# 
   465     011A                     SRCON0          equ	282	;# 
   466     011B                     SRCON1          equ	283	;# 
   467     011D                     APFCON0         equ	285	;# 
   468     011E                     APFCON1         equ	286	;# 
   469     018C                     ANSELA          equ	396	;# 
   470     018D                     ANSELB          equ	397	;# 
   471     0191                     EEADR           equ	401	;# 
   472     0191                     EEADRL          equ	401	;# 
   473     0192                     EEADRH          equ	402	;# 
   474     0193                     EEDAT           equ	403	;# 
   475     0193                     EEDATL          equ	403	;# 
   476     0193                     EEDATA          equ	403	;# 
   477     0194                     EEDATH          equ	404	;# 
   478     0195                     EECON1          equ	405	;# 
   479     0196                     EECON2          equ	406	;# 
   480     0199                     RCREG           equ	409	;# 
   481     019A                     TXREG           equ	410	;# 
   482     019B                     SP1BRG          equ	411	;# 
   483     019B                     SP1BRGL         equ	411	;# 
   484     019B                     SPBRG           equ	411	;# 
   485     019B                     SPBRGL          equ	411	;# 
   486     019C                     SP1BRGH         equ	412	;# 
   487     019C                     SPBRGH          equ	412	;# 
   488     019D                     RCSTA           equ	413	;# 
   489     019E                     TXSTA           equ	414	;# 
   490     019F                     BAUDCON         equ	415	;# 
   491     020C                     WPUA            equ	524	;# 
   492     020D                     WPUB            equ	525	;# 
   493     0211                     SSP1BUF         equ	529	;# 
   494     0211                     SSPBUF          equ	529	;# 
   495     0212                     SSP1ADD         equ	530	;# 
   496     0212                     SSPADD          equ	530	;# 
   497     0213                     SSP1MSK         equ	531	;# 
   498     0213                     SSPMSK          equ	531	;# 
   499     0214                     SSP1STAT        equ	532	;# 
   500     0214                     SSPSTAT         equ	532	;# 
   501     0215                     SSP1CON1        equ	533	;# 
   502     0215                     SSPCON1         equ	533	;# 
   503     0215                     SSPCON          equ	533	;# 
   504     0216                     SSP1CON2        equ	534	;# 
   505     0216                     SSPCON2         equ	534	;# 
   506     0217                     SSP1CON3        equ	535	;# 
   507     0217                     SSPCON3         equ	535	;# 
   508     0219                     SSP2BUF         equ	537	;# 
   509     021A                     SSP2ADD         equ	538	;# 
   510     021B                     SSP2MSK         equ	539	;# 
   511     021C                     SSP2STAT        equ	540	;# 
   512     021D                     SSP2CON1        equ	541	;# 
   513     021E                     SSP2CON2        equ	542	;# 
   514     021F                     SSP2CON3        equ	543	;# 
   515     0291                     CCPR1           equ	657	;# 
   516     0291                     CCPR1L          equ	657	;# 
   517     0292                     CCPR1H          equ	658	;# 
   518     0293                     CCP1CON         equ	659	;# 
   519     0294                     PWM1CON         equ	660	;# 
   520     0295                     CCP1AS          equ	661	;# 
   521     0295                     ECCP1AS         equ	661	;# 
   522     0296                     PSTR1CON        equ	662	;# 
   523     0298                     CCPR2           equ	664	;# 
   524     0298                     CCPR2L          equ	664	;# 
   525     0299                     CCPR2H          equ	665	;# 
   526     029A                     CCP2CON         equ	666	;# 
   527     029B                     PWM2CON         equ	667	;# 
   528     029C                     CCP2AS          equ	668	;# 
   529     029C                     ECCP2AS         equ	668	;# 
   530     029D                     PSTR2CON        equ	669	;# 
   531     029E                     CCPTMRS         equ	670	;# 
   532     029E                     CCPTMRS0        equ	670	;# 
   533     0311                     CCPR3           equ	785	;# 
   534     0311                     CCPR3L          equ	785	;# 
   535     0312                     CCPR3H          equ	786	;# 
   536     0313                     CCP3CON         equ	787	;# 
   537     0318                     CCPR4           equ	792	;# 
   538     0318                     CCPR4L          equ	792	;# 
   539     0319                     CCPR4H          equ	793	;# 
   540     031A                     CCP4CON         equ	794	;# 
   541     0394                     IOCBP           equ	916	;# 
   542     0395                     IOCBN           equ	917	;# 
   543     0396                     IOCBF           equ	918	;# 
   544     039A                     CLKRCON         equ	922	;# 
   545     039C                     MDCON           equ	924	;# 
   546     039D                     MDSRC           equ	925	;# 
   547     039E                     MDCARL          equ	926	;# 
   548     039F                     MDCARH          equ	927	;# 
   549     0415                     TMR4            equ	1045	;# 
   550     0416                     PR4             equ	1046	;# 
   551     0417                     T4CON           equ	1047	;# 
   552     041C                     TMR6            equ	1052	;# 
   553     041D                     PR6             equ	1053	;# 
   554     041E                     T6CON           equ	1054	;# 
   555     0FE4                     STATUS_SHAD     equ	4068	;# 
   556     0FE5                     WREG_SHAD       equ	4069	;# 
   557     0FE6                     BSR_SHAD        equ	4070	;# 
   558     0FE7                     PCLATH_SHAD     equ	4071	;# 
   559     0FE8                     FSR0L_SHAD      equ	4072	;# 
   560     0FE9                     FSR0H_SHAD      equ	4073	;# 
   561     0FEA                     FSR1L_SHAD      equ	4074	;# 
   562     0FEB                     FSR1H_SHAD      equ	4075	;# 
   563     0FED                     STKPTR          equ	4077	;# 
   564     0FEE                     TOSL            equ	4078	;# 
   565     0FEF                     TOSH            equ	4079	;# 
   566     0000                     INDF0           equ	0	;# 
   567     0001                     INDF1           equ	1	;# 
   568     0002                     PCL             equ	2	;# 
   569     0003                     STATUS          equ	3	;# 
   570     0004                     FSR0L           equ	4	;# 
   571     0005                     FSR0H           equ	5	;# 
   572     0006                     FSR1L           equ	6	;# 
   573     0007                     FSR1H           equ	7	;# 
   574     0008                     BSR             equ	8	;# 
   575     0009                     WREG            equ	9	;# 
   576     000A                     PCLATH          equ	10	;# 
   577     000B                     INTCON          equ	11	;# 
   578     000C                     PORTA           equ	12	;# 
   579     000D                     PORTB           equ	13	;# 
   580     0011                     PIR1            equ	17	;# 
   581     0012                     PIR2            equ	18	;# 
   582     0013                     PIR3            equ	19	;# 
   583     0014                     PIR4            equ	20	;# 
   584     0015                     TMR0            equ	21	;# 
   585     0016                     TMR1            equ	22	;# 
   586     0016                     TMR1L           equ	22	;# 
   587     0017                     TMR1H           equ	23	;# 
   588     0018                     T1CON           equ	24	;# 
   589     0019                     T1GCON          equ	25	;# 
   590     001A                     TMR2            equ	26	;# 
   591     001B                     PR2             equ	27	;# 
   592     001C                     T2CON           equ	28	;# 
   593     001E                     CPSCON0         equ	30	;# 
   594     001F                     CPSCON1         equ	31	;# 
   595     008C                     TRISA           equ	140	;# 
   596     008D                     TRISB           equ	141	;# 
   597     0091                     PIE1            equ	145	;# 
   598     0092                     PIE2            equ	146	;# 
   599     0093                     PIE3            equ	147	;# 
   600     0094                     PIE4            equ	148	;# 
   601     0095                     OPTION_REG      equ	149	;# 
   602     0096                     PCON            equ	150	;# 
   603     0097                     WDTCON          equ	151	;# 
   604     0098                     OSCTUNE         equ	152	;# 
   605     0099                     OSCCON          equ	153	;# 
   606     009A                     OSCSTAT         equ	154	;# 
   607     009B                     ADRES           equ	155	;# 
   608     009B                     ADRESL          equ	155	;# 
   609     009C                     ADRESH          equ	156	;# 
   610     009D                     ADCON0          equ	157	;# 
   611     009E                     ADCON1          equ	158	;# 
   612     010C                     LATA            equ	268	;# 
   613     010D                     LATB            equ	269	;# 
   614     0111                     CM1CON0         equ	273	;# 
   615     0112                     CM1CON1         equ	274	;# 
   616     0113                     CM2CON0         equ	275	;# 
   617     0114                     CM2CON1         equ	276	;# 
   618     0115                     CMOUT           equ	277	;# 
   619     0116                     BORCON          equ	278	;# 
   620     0117                     FVRCON          equ	279	;# 
   621     0118                     DACCON0         equ	280	;# 
   622     0119                     DACCON1         equ	281	;# 
   623     011A                     SRCON0          equ	282	;# 
   624     011B                     SRCON1          equ	283	;# 
   625     011D                     APFCON0         equ	285	;# 
   626     011E                     APFCON1         equ	286	;# 
   627     018C                     ANSELA          equ	396	;# 
   628     018D                     ANSELB          equ	397	;# 
   629     0191                     EEADR           equ	401	;# 
   630     0191                     EEADRL          equ	401	;# 
   631     0192                     EEADRH          equ	402	;# 
   632     0193                     EEDAT           equ	403	;# 
   633     0193                     EEDATL          equ	403	;# 
   634     0193                     EEDATA          equ	403	;# 
   635     0194                     EEDATH          equ	404	;# 
   636     0195                     EECON1          equ	405	;# 
   637     0196                     EECON2          equ	406	;# 
   638     0199                     RCREG           equ	409	;# 
   639     019A                     TXREG           equ	410	;# 
   640     019B                     SP1BRG          equ	411	;# 
   641     019B                     SP1BRGL         equ	411	;# 
   642     019B                     SPBRG           equ	411	;# 
   643     019B                     SPBRGL          equ	411	;# 
   644     019C                     SP1BRGH         equ	412	;# 
   645     019C                     SPBRGH          equ	412	;# 
   646     019D                     RCSTA           equ	413	;# 
   647     019E                     TXSTA           equ	414	;# 
   648     019F                     BAUDCON         equ	415	;# 
   649     020C                     WPUA            equ	524	;# 
   650     020D                     WPUB            equ	525	;# 
   651     0211                     SSP1BUF         equ	529	;# 
   652     0211                     SSPBUF          equ	529	;# 
   653     0212                     SSP1ADD         equ	530	;# 
   654     0212                     SSPADD          equ	530	;# 
   655     0213                     SSP1MSK         equ	531	;# 
   656     0213                     SSPMSK          equ	531	;# 
   657     0214                     SSP1STAT        equ	532	;# 
   658     0214                     SSPSTAT         equ	532	;# 
   659     0215                     SSP1CON1        equ	533	;# 
   660     0215                     SSPCON1         equ	533	;# 
   661     0215                     SSPCON          equ	533	;# 
   662     0216                     SSP1CON2        equ	534	;# 
   663     0216                     SSPCON2         equ	534	;# 
   664     0217                     SSP1CON3        equ	535	;# 
   665     0217                     SSPCON3         equ	535	;# 
   666     0219                     SSP2BUF         equ	537	;# 
   667     021A                     SSP2ADD         equ	538	;# 
   668     021B                     SSP2MSK         equ	539	;# 
   669     021C                     SSP2STAT        equ	540	;# 
   670     021D                     SSP2CON1        equ	541	;# 
   671     021E                     SSP2CON2        equ	542	;# 
   672     021F                     SSP2CON3        equ	543	;# 
   673     0291                     CCPR1           equ	657	;# 
   674     0291                     CCPR1L          equ	657	;# 
   675     0292                     CCPR1H          equ	658	;# 
   676     0293                     CCP1CON         equ	659	;# 
   677     0294                     PWM1CON         equ	660	;# 
   678     0295                     CCP1AS          equ	661	;# 
   679     0295                     ECCP1AS         equ	661	;# 
   680     0296                     PSTR1CON        equ	662	;# 
   681     0298                     CCPR2           equ	664	;# 
   682     0298                     CCPR2L          equ	664	;# 
   683     0299                     CCPR2H          equ	665	;# 
   684     029A                     CCP2CON         equ	666	;# 
   685     029B                     PWM2CON         equ	667	;# 
   686     029C                     CCP2AS          equ	668	;# 
   687     029C                     ECCP2AS         equ	668	;# 
   688     029D                     PSTR2CON        equ	669	;# 
   689     029E                     CCPTMRS         equ	670	;# 
   690     029E                     CCPTMRS0        equ	670	;# 
   691     0311                     CCPR3           equ	785	;# 
   692     0311                     CCPR3L          equ	785	;# 
   693     0312                     CCPR3H          equ	786	;# 
   694     0313                     CCP3CON         equ	787	;# 
   695     0318                     CCPR4           equ	792	;# 
   696     0318                     CCPR4L          equ	792	;# 
   697     0319                     CCPR4H          equ	793	;# 
   698     031A                     CCP4CON         equ	794	;# 
   699     0394                     IOCBP           equ	916	;# 
   700     0395                     IOCBN           equ	917	;# 
   701     0396                     IOCBF           equ	918	;# 
   702     039A                     CLKRCON         equ	922	;# 
   703     039C                     MDCON           equ	924	;# 
   704     039D                     MDSRC           equ	925	;# 
   705     039E                     MDCARL          equ	926	;# 
   706     039F                     MDCARH          equ	927	;# 
   707     0415                     TMR4            equ	1045	;# 
   708     0416                     PR4             equ	1046	;# 
   709     0417                     T4CON           equ	1047	;# 
   710     041C                     TMR6            equ	1052	;# 
   711     041D                     PR6             equ	1053	;# 
   712     041E                     T6CON           equ	1054	;# 
   713     0FE4                     STATUS_SHAD     equ	4068	;# 
   714     0FE5                     WREG_SHAD       equ	4069	;# 
   715     0FE6                     BSR_SHAD        equ	4070	;# 
   716     0FE7                     PCLATH_SHAD     equ	4071	;# 
   717     0FE8                     FSR0L_SHAD      equ	4072	;# 
   718     0FE9                     FSR0H_SHAD      equ	4073	;# 
   719     0FEA                     FSR1L_SHAD      equ	4074	;# 
   720     0FEB                     FSR1H_SHAD      equ	4075	;# 
   721     0FED                     STKPTR          equ	4077	;# 
   722     0FEE                     TOSL            equ	4078	;# 
   723     0FEF                     TOSH            equ	4079	;# 
   724     0000                     INDF0           equ	0	;# 
   725     0001                     INDF1           equ	1	;# 
   726     0002                     PCL             equ	2	;# 
   727     0003                     STATUS          equ	3	;# 
   728     0004                     FSR0L           equ	4	;# 
   729     0005                     FSR0H           equ	5	;# 
   730     0006                     FSR1L           equ	6	;# 
   731     0007                     FSR1H           equ	7	;# 
   732     0008                     BSR             equ	8	;# 
   733     0009                     WREG            equ	9	;# 
   734     000A                     PCLATH          equ	10	;# 
   735     000B                     INTCON          equ	11	;# 
   736     000C                     PORTA           equ	12	;# 
   737     000D                     PORTB           equ	13	;# 
   738     0011                     PIR1            equ	17	;# 
   739     0012                     PIR2            equ	18	;# 
   740     0013                     PIR3            equ	19	;# 
   741     0014                     PIR4            equ	20	;# 
   742     0015                     TMR0            equ	21	;# 
   743     0016                     TMR1            equ	22	;# 
   744     0016                     TMR1L           equ	22	;# 
   745     0017                     TMR1H           equ	23	;# 
   746     0018                     T1CON           equ	24	;# 
   747     0019                     T1GCON          equ	25	;# 
   748     001A                     TMR2            equ	26	;# 
   749     001B                     PR2             equ	27	;# 
   750     001C                     T2CON           equ	28	;# 
   751     001E                     CPSCON0         equ	30	;# 
   752     001F                     CPSCON1         equ	31	;# 
   753     008C                     TRISA           equ	140	;# 
   754     008D                     TRISB           equ	141	;# 
   755     0091                     PIE1            equ	145	;# 
   756     0092                     PIE2            equ	146	;# 
   757     0093                     PIE3            equ	147	;# 
   758     0094                     PIE4            equ	148	;# 
   759     0095                     OPTION_REG      equ	149	;# 
   760     0096                     PCON            equ	150	;# 
   761     0097                     WDTCON          equ	151	;# 
   762     0098                     OSCTUNE         equ	152	;# 
   763     0099                     OSCCON          equ	153	;# 
   764     009A                     OSCSTAT         equ	154	;# 
   765     009B                     ADRES           equ	155	;# 
   766     009B                     ADRESL          equ	155	;# 
   767     009C                     ADRESH          equ	156	;# 
   768     009D                     ADCON0          equ	157	;# 
   769     009E                     ADCON1          equ	158	;# 
   770     010C                     LATA            equ	268	;# 
   771     010D                     LATB            equ	269	;# 
   772     0111                     CM1CON0         equ	273	;# 
   773     0112                     CM1CON1         equ	274	;# 
   774     0113                     CM2CON0         equ	275	;# 
   775     0114                     CM2CON1         equ	276	;# 
   776     0115                     CMOUT           equ	277	;# 
   777     0116                     BORCON          equ	278	;# 
   778     0117                     FVRCON          equ	279	;# 
   779     0118                     DACCON0         equ	280	;# 
   780     0119                     DACCON1         equ	281	;# 
   781     011A                     SRCON0          equ	282	;# 
   782     011B                     SRCON1          equ	283	;# 
   783     011D                     APFCON0         equ	285	;# 
   784     011E                     APFCON1         equ	286	;# 
   785     018C                     ANSELA          equ	396	;# 
   786     018D                     ANSELB          equ	397	;# 
   787     0191                     EEADR           equ	401	;# 
   788     0191                     EEADRL          equ	401	;# 
   789     0192                     EEADRH          equ	402	;# 
   790     0193                     EEDAT           equ	403	;# 
   791     0193                     EEDATL          equ	403	;# 
   792     0193                     EEDATA          equ	403	;# 
   793     0194                     EEDATH          equ	404	;# 
   794     0195                     EECON1          equ	405	;# 
   795     0196                     EECON2          equ	406	;# 
   796     0199                     RCREG           equ	409	;# 
   797     019A                     TXREG           equ	410	;# 
   798     019B                     SP1BRG          equ	411	;# 
   799     019B                     SP1BRGL         equ	411	;# 
   800     019B                     SPBRG           equ	411	;# 
   801     019B                     SPBRGL          equ	411	;# 
   802     019C                     SP1BRGH         equ	412	;# 
   803     019C                     SPBRGH          equ	412	;# 
   804     019D                     RCSTA           equ	413	;# 
   805     019E                     TXSTA           equ	414	;# 
   806     019F                     BAUDCON         equ	415	;# 
   807     020C                     WPUA            equ	524	;# 
   808     020D                     WPUB            equ	525	;# 
   809     0211                     SSP1BUF         equ	529	;# 
   810     0211                     SSPBUF          equ	529	;# 
   811     0212                     SSP1ADD         equ	530	;# 
   812     0212                     SSPADD          equ	530	;# 
   813     0213                     SSP1MSK         equ	531	;# 
   814     0213                     SSPMSK          equ	531	;# 
   815     0214                     SSP1STAT        equ	532	;# 
   816     0214                     SSPSTAT         equ	532	;# 
   817     0215                     SSP1CON1        equ	533	;# 
   818     0215                     SSPCON1         equ	533	;# 
   819     0215                     SSPCON          equ	533	;# 
   820     0216                     SSP1CON2        equ	534	;# 
   821     0216                     SSPCON2         equ	534	;# 
   822     0217                     SSP1CON3        equ	535	;# 
   823     0217                     SSPCON3         equ	535	;# 
   824     0219                     SSP2BUF         equ	537	;# 
   825     021A                     SSP2ADD         equ	538	;# 
   826     021B                     SSP2MSK         equ	539	;# 
   827     021C                     SSP2STAT        equ	540	;# 
   828     021D                     SSP2CON1        equ	541	;# 
   829     021E                     SSP2CON2        equ	542	;# 
   830     021F                     SSP2CON3        equ	543	;# 
   831     0291                     CCPR1           equ	657	;# 
   832     0291                     CCPR1L          equ	657	;# 
   833     0292                     CCPR1H          equ	658	;# 
   834     0293                     CCP1CON         equ	659	;# 
   835     0294                     PWM1CON         equ	660	;# 
   836     0295                     CCP1AS          equ	661	;# 
   837     0295                     ECCP1AS         equ	661	;# 
   838     0296                     PSTR1CON        equ	662	;# 
   839     0298                     CCPR2           equ	664	;# 
   840     0298                     CCPR2L          equ	664	;# 
   841     0299                     CCPR2H          equ	665	;# 
   842     029A                     CCP2CON         equ	666	;# 
   843     029B                     PWM2CON         equ	667	;# 
   844     029C                     CCP2AS          equ	668	;# 
   845     029C                     ECCP2AS         equ	668	;# 
   846     029D                     PSTR2CON        equ	669	;# 
   847     029E                     CCPTMRS         equ	670	;# 
   848     029E                     CCPTMRS0        equ	670	;# 
   849     0311                     CCPR3           equ	785	;# 
   850     0311                     CCPR3L          equ	785	;# 
   851     0312                     CCPR3H          equ	786	;# 
   852     0313                     CCP3CON         equ	787	;# 
   853     0318                     CCPR4           equ	792	;# 
   854     0318                     CCPR4L          equ	792	;# 
   855     0319                     CCPR4H          equ	793	;# 
   856     031A                     CCP4CON         equ	794	;# 
   857     0394                     IOCBP           equ	916	;# 
   858     0395                     IOCBN           equ	917	;# 
   859     0396                     IOCBF           equ	918	;# 
   860     039A                     CLKRCON         equ	922	;# 
   861     039C                     MDCON           equ	924	;# 
   862     039D                     MDSRC           equ	925	;# 
   863     039E                     MDCARL          equ	926	;# 
   864     039F                     MDCARH          equ	927	;# 
   865     0415                     TMR4            equ	1045	;# 
   866     0416                     PR4             equ	1046	;# 
   867     0417                     T4CON           equ	1047	;# 
   868     041C                     TMR6            equ	1052	;# 
   869     041D                     PR6             equ	1053	;# 
   870     041E                     T6CON           equ	1054	;# 
   871     0FE4                     STATUS_SHAD     equ	4068	;# 
   872     0FE5                     WREG_SHAD       equ	4069	;# 
   873     0FE6                     BSR_SHAD        equ	4070	;# 
   874     0FE7                     PCLATH_SHAD     equ	4071	;# 
   875     0FE8                     FSR0L_SHAD      equ	4072	;# 
   876     0FE9                     FSR0H_SHAD      equ	4073	;# 
   877     0FEA                     FSR1L_SHAD      equ	4074	;# 
   878     0FEB                     FSR1H_SHAD      equ	4075	;# 
   879     0FED                     STKPTR          equ	4077	;# 
   880     0FEE                     TOSL            equ	4078	;# 
   881     0FEF                     TOSH            equ	4079	;# 
   882     0000                     INDF0           equ	0	;# 
   883     0001                     INDF1           equ	1	;# 
   884     0002                     PCL             equ	2	;# 
   885     0003                     STATUS          equ	3	;# 
   886     0004                     FSR0L           equ	4	;# 
   887     0005                     FSR0H           equ	5	;# 
   888     0006                     FSR1L           equ	6	;# 
   889     0007                     FSR1H           equ	7	;# 
   890     0008                     BSR             equ	8	;# 
   891     0009                     WREG            equ	9	;# 
   892     000A                     PCLATH          equ	10	;# 
   893     000B                     INTCON          equ	11	;# 
   894     000C                     PORTA           equ	12	;# 
   895     000D                     PORTB           equ	13	;# 
   896     0011                     PIR1            equ	17	;# 
   897     0012                     PIR2            equ	18	;# 
   898     0013                     PIR3            equ	19	;# 
   899     0014                     PIR4            equ	20	;# 
   900     0015                     TMR0            equ	21	;# 
   901     0016                     TMR1            equ	22	;# 
   902     0016                     TMR1L           equ	22	;# 
   903     0017                     TMR1H           equ	23	;# 
   904     0018                     T1CON           equ	24	;# 
   905     0019                     T1GCON          equ	25	;# 
   906     001A                     TMR2            equ	26	;# 
   907     001B                     PR2             equ	27	;# 
   908     001C                     T2CON           equ	28	;# 
   909     001E                     CPSCON0         equ	30	;# 
   910     001F                     CPSCON1         equ	31	;# 
   911     008C                     TRISA           equ	140	;# 
   912     008D                     TRISB           equ	141	;# 
   913     0091                     PIE1            equ	145	;# 
   914     0092                     PIE2            equ	146	;# 
   915     0093                     PIE3            equ	147	;# 
   916     0094                     PIE4            equ	148	;# 
   917     0095                     OPTION_REG      equ	149	;# 
   918     0096                     PCON            equ	150	;# 
   919     0097                     WDTCON          equ	151	;# 
   920     0098                     OSCTUNE         equ	152	;# 
   921     0099                     OSCCON          equ	153	;# 
   922     009A                     OSCSTAT         equ	154	;# 
   923     009B                     ADRES           equ	155	;# 
   924     009B                     ADRESL          equ	155	;# 
   925     009C                     ADRESH          equ	156	;# 
   926     009D                     ADCON0          equ	157	;# 
   927     009E                     ADCON1          equ	158	;# 
   928     010C                     LATA            equ	268	;# 
   929     010D                     LATB            equ	269	;# 
   930     0111                     CM1CON0         equ	273	;# 
   931     0112                     CM1CON1         equ	274	;# 
   932     0113                     CM2CON0         equ	275	;# 
   933     0114                     CM2CON1         equ	276	;# 
   934     0115                     CMOUT           equ	277	;# 
   935     0116                     BORCON          equ	278	;# 
   936     0117                     FVRCON          equ	279	;# 
   937     0118                     DACCON0         equ	280	;# 
   938     0119                     DACCON1         equ	281	;# 
   939     011A                     SRCON0          equ	282	;# 
   940     011B                     SRCON1          equ	283	;# 
   941     011D                     APFCON0         equ	285	;# 
   942     011E                     APFCON1         equ	286	;# 
   943     018C                     ANSELA          equ	396	;# 
   944     018D                     ANSELB          equ	397	;# 
   945     0191                     EEADR           equ	401	;# 
   946     0191                     EEADRL          equ	401	;# 
   947     0192                     EEADRH          equ	402	;# 
   948     0193                     EEDAT           equ	403	;# 
   949     0193                     EEDATL          equ	403	;# 
   950     0193                     EEDATA          equ	403	;# 
   951     0194                     EEDATH          equ	404	;# 
   952     0195                     EECON1          equ	405	;# 
   953     0196                     EECON2          equ	406	;# 
   954     0199                     RCREG           equ	409	;# 
   955     019A                     TXREG           equ	410	;# 
   956     019B                     SP1BRG          equ	411	;# 
   957     019B                     SP1BRGL         equ	411	;# 
   958     019B                     SPBRG           equ	411	;# 
   959     019B                     SPBRGL          equ	411	;# 
   960     019C                     SP1BRGH         equ	412	;# 
   961     019C                     SPBRGH          equ	412	;# 
   962     019D                     RCSTA           equ	413	;# 
   963     019E                     TXSTA           equ	414	;# 
   964     019F                     BAUDCON         equ	415	;# 
   965     020C                     WPUA            equ	524	;# 
   966     020D                     WPUB            equ	525	;# 
   967     0211                     SSP1BUF         equ	529	;# 
   968     0211                     SSPBUF          equ	529	;# 
   969     0212                     SSP1ADD         equ	530	;# 
   970     0212                     SSPADD          equ	530	;# 
   971     0213                     SSP1MSK         equ	531	;# 
   972     0213                     SSPMSK          equ	531	;# 
   973     0214                     SSP1STAT        equ	532	;# 
   974     0214                     SSPSTAT         equ	532	;# 
   975     0215                     SSP1CON1        equ	533	;# 
   976     0215                     SSPCON1         equ	533	;# 
   977     0215                     SSPCON          equ	533	;# 
   978     0216                     SSP1CON2        equ	534	;# 
   979     0216                     SSPCON2         equ	534	;# 
   980     0217                     SSP1CON3        equ	535	;# 
   981     0217                     SSPCON3         equ	535	;# 
   982     0219                     SSP2BUF         equ	537	;# 
   983     021A                     SSP2ADD         equ	538	;# 
   984     021B                     SSP2MSK         equ	539	;# 
   985     021C                     SSP2STAT        equ	540	;# 
   986     021D                     SSP2CON1        equ	541	;# 
   987     021E                     SSP2CON2        equ	542	;# 
   988     021F                     SSP2CON3        equ	543	;# 
   989     0291                     CCPR1           equ	657	;# 
   990     0291                     CCPR1L          equ	657	;# 
   991     0292                     CCPR1H          equ	658	;# 
   992     0293                     CCP1CON         equ	659	;# 
   993     0294                     PWM1CON         equ	660	;# 
   994     0295                     CCP1AS          equ	661	;# 
   995     0295                     ECCP1AS         equ	661	;# 
   996     0296                     PSTR1CON        equ	662	;# 
   997     0298                     CCPR2           equ	664	;# 
   998     0298                     CCPR2L          equ	664	;# 
   999     0299                     CCPR2H          equ	665	;# 
  1000     029A                     CCP2CON         equ	666	;# 
  1001     029B                     PWM2CON         equ	667	;# 
  1002     029C                     CCP2AS          equ	668	;# 
  1003     029C                     ECCP2AS         equ	668	;# 
  1004     029D                     PSTR2CON        equ	669	;# 
  1005     029E                     CCPTMRS         equ	670	;# 
  1006     029E                     CCPTMRS0        equ	670	;# 
  1007     0311                     CCPR3           equ	785	;# 
  1008     0311                     CCPR3L          equ	785	;# 
  1009     0312                     CCPR3H          equ	786	;# 
  1010     0313                     CCP3CON         equ	787	;# 
  1011     0318                     CCPR4           equ	792	;# 
  1012     0318                     CCPR4L          equ	792	;# 
  1013     0319                     CCPR4H          equ	793	;# 
  1014     031A                     CCP4CON         equ	794	;# 
  1015     0394                     IOCBP           equ	916	;# 
  1016     0395                     IOCBN           equ	917	;# 
  1017     0396                     IOCBF           equ	918	;# 
  1018     039A                     CLKRCON         equ	922	;# 
  1019     039C                     MDCON           equ	924	;# 
  1020     039D                     MDSRC           equ	925	;# 
  1021     039E                     MDCARL          equ	926	;# 
  1022     039F                     MDCARH          equ	927	;# 
  1023     0415                     TMR4            equ	1045	;# 
  1024     0416                     PR4             equ	1046	;# 
  1025     0417                     T4CON           equ	1047	;# 
  1026     041C                     TMR6            equ	1052	;# 
  1027     041D                     PR6             equ	1053	;# 
  1028     041E                     T6CON           equ	1054	;# 
  1029     0FE4                     STATUS_SHAD     equ	4068	;# 
  1030     0FE5                     WREG_SHAD       equ	4069	;# 
  1031     0FE6                     BSR_SHAD        equ	4070	;# 
  1032     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1033     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1034     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1035     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1036     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1037     0FED                     STKPTR          equ	4077	;# 
  1038     0FEE                     TOSL            equ	4078	;# 
  1039     0FEF                     TOSH            equ	4079	;# 
  1040     0000                     INDF0           equ	0	;# 
  1041     0001                     INDF1           equ	1	;# 
  1042     0002                     PCL             equ	2	;# 
  1043     0003                     STATUS          equ	3	;# 
  1044     0004                     FSR0L           equ	4	;# 
  1045     0005                     FSR0H           equ	5	;# 
  1046     0006                     FSR1L           equ	6	;# 
  1047     0007                     FSR1H           equ	7	;# 
  1048     0008                     BSR             equ	8	;# 
  1049     0009                     WREG            equ	9	;# 
  1050     000A                     PCLATH          equ	10	;# 
  1051     000B                     INTCON          equ	11	;# 
  1052     000C                     PORTA           equ	12	;# 
  1053     000D                     PORTB           equ	13	;# 
  1054     0011                     PIR1            equ	17	;# 
  1055     0012                     PIR2            equ	18	;# 
  1056     0013                     PIR3            equ	19	;# 
  1057     0014                     PIR4            equ	20	;# 
  1058     0015                     TMR0            equ	21	;# 
  1059     0016                     TMR1            equ	22	;# 
  1060     0016                     TMR1L           equ	22	;# 
  1061     0017                     TMR1H           equ	23	;# 
  1062     0018                     T1CON           equ	24	;# 
  1063     0019                     T1GCON          equ	25	;# 
  1064     001A                     TMR2            equ	26	;# 
  1065     001B                     PR2             equ	27	;# 
  1066     001C                     T2CON           equ	28	;# 
  1067     001E                     CPSCON0         equ	30	;# 
  1068     001F                     CPSCON1         equ	31	;# 
  1069     008C                     TRISA           equ	140	;# 
  1070     008D                     TRISB           equ	141	;# 
  1071     0091                     PIE1            equ	145	;# 
  1072     0092                     PIE2            equ	146	;# 
  1073     0093                     PIE3            equ	147	;# 
  1074     0094                     PIE4            equ	148	;# 
  1075     0095                     OPTION_REG      equ	149	;# 
  1076     0096                     PCON            equ	150	;# 
  1077     0097                     WDTCON          equ	151	;# 
  1078     0098                     OSCTUNE         equ	152	;# 
  1079     0099                     OSCCON          equ	153	;# 
  1080     009A                     OSCSTAT         equ	154	;# 
  1081     009B                     ADRES           equ	155	;# 
  1082     009B                     ADRESL          equ	155	;# 
  1083     009C                     ADRESH          equ	156	;# 
  1084     009D                     ADCON0          equ	157	;# 
  1085     009E                     ADCON1          equ	158	;# 
  1086     010C                     LATA            equ	268	;# 
  1087     010D                     LATB            equ	269	;# 
  1088     0111                     CM1CON0         equ	273	;# 
  1089     0112                     CM1CON1         equ	274	;# 
  1090     0113                     CM2CON0         equ	275	;# 
  1091     0114                     CM2CON1         equ	276	;# 
  1092     0115                     CMOUT           equ	277	;# 
  1093     0116                     BORCON          equ	278	;# 
  1094     0117                     FVRCON          equ	279	;# 
  1095     0118                     DACCON0         equ	280	;# 
  1096     0119                     DACCON1         equ	281	;# 
  1097     011A                     SRCON0          equ	282	;# 
  1098     011B                     SRCON1          equ	283	;# 
  1099     011D                     APFCON0         equ	285	;# 
  1100     011E                     APFCON1         equ	286	;# 
  1101     018C                     ANSELA          equ	396	;# 
  1102     018D                     ANSELB          equ	397	;# 
  1103     0191                     EEADR           equ	401	;# 
  1104     0191                     EEADRL          equ	401	;# 
  1105     0192                     EEADRH          equ	402	;# 
  1106     0193                     EEDAT           equ	403	;# 
  1107     0193                     EEDATL          equ	403	;# 
  1108     0193                     EEDATA          equ	403	;# 
  1109     0194                     EEDATH          equ	404	;# 
  1110     0195                     EECON1          equ	405	;# 
  1111     0196                     EECON2          equ	406	;# 
  1112     0199                     RCREG           equ	409	;# 
  1113     019A                     TXREG           equ	410	;# 
  1114     019B                     SP1BRG          equ	411	;# 
  1115     019B                     SP1BRGL         equ	411	;# 
  1116     019B                     SPBRG           equ	411	;# 
  1117     019B                     SPBRGL          equ	411	;# 
  1118     019C                     SP1BRGH         equ	412	;# 
  1119     019C                     SPBRGH          equ	412	;# 
  1120     019D                     RCSTA           equ	413	;# 
  1121     019E                     TXSTA           equ	414	;# 
  1122     019F                     BAUDCON         equ	415	;# 
  1123     020C                     WPUA            equ	524	;# 
  1124     020D                     WPUB            equ	525	;# 
  1125     0211                     SSP1BUF         equ	529	;# 
  1126     0211                     SSPBUF          equ	529	;# 
  1127     0212                     SSP1ADD         equ	530	;# 
  1128     0212                     SSPADD          equ	530	;# 
  1129     0213                     SSP1MSK         equ	531	;# 
  1130     0213                     SSPMSK          equ	531	;# 
  1131     0214                     SSP1STAT        equ	532	;# 
  1132     0214                     SSPSTAT         equ	532	;# 
  1133     0215                     SSP1CON1        equ	533	;# 
  1134     0215                     SSPCON1         equ	533	;# 
  1135     0215                     SSPCON          equ	533	;# 
  1136     0216                     SSP1CON2        equ	534	;# 
  1137     0216                     SSPCON2         equ	534	;# 
  1138     0217                     SSP1CON3        equ	535	;# 
  1139     0217                     SSPCON3         equ	535	;# 
  1140     0219                     SSP2BUF         equ	537	;# 
  1141     021A                     SSP2ADD         equ	538	;# 
  1142     021B                     SSP2MSK         equ	539	;# 
  1143     021C                     SSP2STAT        equ	540	;# 
  1144     021D                     SSP2CON1        equ	541	;# 
  1145     021E                     SSP2CON2        equ	542	;# 
  1146     021F                     SSP2CON3        equ	543	;# 
  1147     0291                     CCPR1           equ	657	;# 
  1148     0291                     CCPR1L          equ	657	;# 
  1149     0292                     CCPR1H          equ	658	;# 
  1150     0293                     CCP1CON         equ	659	;# 
  1151     0294                     PWM1CON         equ	660	;# 
  1152     0295                     CCP1AS          equ	661	;# 
  1153     0295                     ECCP1AS         equ	661	;# 
  1154     0296                     PSTR1CON        equ	662	;# 
  1155     0298                     CCPR2           equ	664	;# 
  1156     0298                     CCPR2L          equ	664	;# 
  1157     0299                     CCPR2H          equ	665	;# 
  1158     029A                     CCP2CON         equ	666	;# 
  1159     029B                     PWM2CON         equ	667	;# 
  1160     029C                     CCP2AS          equ	668	;# 
  1161     029C                     ECCP2AS         equ	668	;# 
  1162     029D                     PSTR2CON        equ	669	;# 
  1163     029E                     CCPTMRS         equ	670	;# 
  1164     029E                     CCPTMRS0        equ	670	;# 
  1165     0311                     CCPR3           equ	785	;# 
  1166     0311                     CCPR3L          equ	785	;# 
  1167     0312                     CCPR3H          equ	786	;# 
  1168     0313                     CCP3CON         equ	787	;# 
  1169     0318                     CCPR4           equ	792	;# 
  1170     0318                     CCPR4L          equ	792	;# 
  1171     0319                     CCPR4H          equ	793	;# 
  1172     031A                     CCP4CON         equ	794	;# 
  1173     0394                     IOCBP           equ	916	;# 
  1174     0395                     IOCBN           equ	917	;# 
  1175     0396                     IOCBF           equ	918	;# 
  1176     039A                     CLKRCON         equ	922	;# 
  1177     039C                     MDCON           equ	924	;# 
  1178     039D                     MDSRC           equ	925	;# 
  1179     039E                     MDCARL          equ	926	;# 
  1180     039F                     MDCARH          equ	927	;# 
  1181     0415                     TMR4            equ	1045	;# 
  1182     0416                     PR4             equ	1046	;# 
  1183     0417                     T4CON           equ	1047	;# 
  1184     041C                     TMR6            equ	1052	;# 
  1185     041D                     PR6             equ	1053	;# 
  1186     041E                     T6CON           equ	1054	;# 
  1187     0FE4                     STATUS_SHAD     equ	4068	;# 
  1188     0FE5                     WREG_SHAD       equ	4069	;# 
  1189     0FE6                     BSR_SHAD        equ	4070	;# 
  1190     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1191     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1192     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1193     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1194     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1195     0FED                     STKPTR          equ	4077	;# 
  1196     0FEE                     TOSL            equ	4078	;# 
  1197     0FEF                     TOSH            equ	4079	;# 
  1198     0000                     INDF0           equ	0	;# 
  1199     0001                     INDF1           equ	1	;# 
  1200     0002                     PCL             equ	2	;# 
  1201     0003                     STATUS          equ	3	;# 
  1202     0004                     FSR0L           equ	4	;# 
  1203     0005                     FSR0H           equ	5	;# 
  1204     0006                     FSR1L           equ	6	;# 
  1205     0007                     FSR1H           equ	7	;# 
  1206     0008                     BSR             equ	8	;# 
  1207     0009                     WREG            equ	9	;# 
  1208     000A                     PCLATH          equ	10	;# 
  1209     000B                     INTCON          equ	11	;# 
  1210     000C                     PORTA           equ	12	;# 
  1211     000D                     PORTB           equ	13	;# 
  1212     0011                     PIR1            equ	17	;# 
  1213     0012                     PIR2            equ	18	;# 
  1214     0013                     PIR3            equ	19	;# 
  1215     0014                     PIR4            equ	20	;# 
  1216     0015                     TMR0            equ	21	;# 
  1217     0016                     TMR1            equ	22	;# 
  1218     0016                     TMR1L           equ	22	;# 
  1219     0017                     TMR1H           equ	23	;# 
  1220     0018                     T1CON           equ	24	;# 
  1221     0019                     T1GCON          equ	25	;# 
  1222     001A                     TMR2            equ	26	;# 
  1223     001B                     PR2             equ	27	;# 
  1224     001C                     T2CON           equ	28	;# 
  1225     001E                     CPSCON0         equ	30	;# 
  1226     001F                     CPSCON1         equ	31	;# 
  1227     008C                     TRISA           equ	140	;# 
  1228     008D                     TRISB           equ	141	;# 
  1229     0091                     PIE1            equ	145	;# 
  1230     0092                     PIE2            equ	146	;# 
  1231     0093                     PIE3            equ	147	;# 
  1232     0094                     PIE4            equ	148	;# 
  1233     0095                     OPTION_REG      equ	149	;# 
  1234     0096                     PCON            equ	150	;# 
  1235     0097                     WDTCON          equ	151	;# 
  1236     0098                     OSCTUNE         equ	152	;# 
  1237     0099                     OSCCON          equ	153	;# 
  1238     009A                     OSCSTAT         equ	154	;# 
  1239     009B                     ADRES           equ	155	;# 
  1240     009B                     ADRESL          equ	155	;# 
  1241     009C                     ADRESH          equ	156	;# 
  1242     009D                     ADCON0          equ	157	;# 
  1243     009E                     ADCON1          equ	158	;# 
  1244     010C                     LATA            equ	268	;# 
  1245     010D                     LATB            equ	269	;# 
  1246     0111                     CM1CON0         equ	273	;# 
  1247     0112                     CM1CON1         equ	274	;# 
  1248     0113                     CM2CON0         equ	275	;# 
  1249     0114                     CM2CON1         equ	276	;# 
  1250     0115                     CMOUT           equ	277	;# 
  1251     0116                     BORCON          equ	278	;# 
  1252     0117                     FVRCON          equ	279	;# 
  1253     0118                     DACCON0         equ	280	;# 
  1254     0119                     DACCON1         equ	281	;# 
  1255     011A                     SRCON0          equ	282	;# 
  1256     011B                     SRCON1          equ	283	;# 
  1257     011D                     APFCON0         equ	285	;# 
  1258     011E                     APFCON1         equ	286	;# 
  1259     018C                     ANSELA          equ	396	;# 
  1260     018D                     ANSELB          equ	397	;# 
  1261     0191                     EEADR           equ	401	;# 
  1262     0191                     EEADRL          equ	401	;# 
  1263     0192                     EEADRH          equ	402	;# 
  1264     0193                     EEDAT           equ	403	;# 
  1265     0193                     EEDATL          equ	403	;# 
  1266     0193                     EEDATA          equ	403	;# 
  1267     0194                     EEDATH          equ	404	;# 
  1268     0195                     EECON1          equ	405	;# 
  1269     0196                     EECON2          equ	406	;# 
  1270     0199                     RCREG           equ	409	;# 
  1271     019A                     TXREG           equ	410	;# 
  1272     019B                     SP1BRG          equ	411	;# 
  1273     019B                     SP1BRGL         equ	411	;# 
  1274     019B                     SPBRG           equ	411	;# 
  1275     019B                     SPBRGL          equ	411	;# 
  1276     019C                     SP1BRGH         equ	412	;# 
  1277     019C                     SPBRGH          equ	412	;# 
  1278     019D                     RCSTA           equ	413	;# 
  1279     019E                     TXSTA           equ	414	;# 
  1280     019F                     BAUDCON         equ	415	;# 
  1281     020C                     WPUA            equ	524	;# 
  1282     020D                     WPUB            equ	525	;# 
  1283     0211                     SSP1BUF         equ	529	;# 
  1284     0211                     SSPBUF          equ	529	;# 
  1285     0212                     SSP1ADD         equ	530	;# 
  1286     0212                     SSPADD          equ	530	;# 
  1287     0213                     SSP1MSK         equ	531	;# 
  1288     0213                     SSPMSK          equ	531	;# 
  1289     0214                     SSP1STAT        equ	532	;# 
  1290     0214                     SSPSTAT         equ	532	;# 
  1291     0215                     SSP1CON1        equ	533	;# 
  1292     0215                     SSPCON1         equ	533	;# 
  1293     0215                     SSPCON          equ	533	;# 
  1294     0216                     SSP1CON2        equ	534	;# 
  1295     0216                     SSPCON2         equ	534	;# 
  1296     0217                     SSP1CON3        equ	535	;# 
  1297     0217                     SSPCON3         equ	535	;# 
  1298     0219                     SSP2BUF         equ	537	;# 
  1299     021A                     SSP2ADD         equ	538	;# 
  1300     021B                     SSP2MSK         equ	539	;# 
  1301     021C                     SSP2STAT        equ	540	;# 
  1302     021D                     SSP2CON1        equ	541	;# 
  1303     021E                     SSP2CON2        equ	542	;# 
  1304     021F                     SSP2CON3        equ	543	;# 
  1305     0291                     CCPR1           equ	657	;# 
  1306     0291                     CCPR1L          equ	657	;# 
  1307     0292                     CCPR1H          equ	658	;# 
  1308     0293                     CCP1CON         equ	659	;# 
  1309     0294                     PWM1CON         equ	660	;# 
  1310     0295                     CCP1AS          equ	661	;# 
  1311     0295                     ECCP1AS         equ	661	;# 
  1312     0296                     PSTR1CON        equ	662	;# 
  1313     0298                     CCPR2           equ	664	;# 
  1314     0298                     CCPR2L          equ	664	;# 
  1315     0299                     CCPR2H          equ	665	;# 
  1316     029A                     CCP2CON         equ	666	;# 
  1317     029B                     PWM2CON         equ	667	;# 
  1318     029C                     CCP2AS          equ	668	;# 
  1319     029C                     ECCP2AS         equ	668	;# 
  1320     029D                     PSTR2CON        equ	669	;# 
  1321     029E                     CCPTMRS         equ	670	;# 
  1322     029E                     CCPTMRS0        equ	670	;# 
  1323     0311                     CCPR3           equ	785	;# 
  1324     0311                     CCPR3L          equ	785	;# 
  1325     0312                     CCPR3H          equ	786	;# 
  1326     0313                     CCP3CON         equ	787	;# 
  1327     0318                     CCPR4           equ	792	;# 
  1328     0318                     CCPR4L          equ	792	;# 
  1329     0319                     CCPR4H          equ	793	;# 
  1330     031A                     CCP4CON         equ	794	;# 
  1331     0394                     IOCBP           equ	916	;# 
  1332     0395                     IOCBN           equ	917	;# 
  1333     0396                     IOCBF           equ	918	;# 
  1334     039A                     CLKRCON         equ	922	;# 
  1335     039C                     MDCON           equ	924	;# 
  1336     039D                     MDSRC           equ	925	;# 
  1337     039E                     MDCARL          equ	926	;# 
  1338     039F                     MDCARH          equ	927	;# 
  1339     0415                     TMR4            equ	1045	;# 
  1340     0416                     PR4             equ	1046	;# 
  1341     0417                     T4CON           equ	1047	;# 
  1342     041C                     TMR6            equ	1052	;# 
  1343     041D                     PR6             equ	1053	;# 
  1344     041E                     T6CON           equ	1054	;# 
  1345     0FE4                     STATUS_SHAD     equ	4068	;# 
  1346     0FE5                     WREG_SHAD       equ	4069	;# 
  1347     0FE6                     BSR_SHAD        equ	4070	;# 
  1348     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1349     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1350     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1351     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1352     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1353     0FED                     STKPTR          equ	4077	;# 
  1354     0FEE                     TOSL            equ	4078	;# 
  1355     0FEF                     TOSH            equ	4079	;# 
  1356     0000                     INDF0           equ	0	;# 
  1357     0001                     INDF1           equ	1	;# 
  1358     0002                     PCL             equ	2	;# 
  1359     0003                     STATUS          equ	3	;# 
  1360     0004                     FSR0L           equ	4	;# 
  1361     0005                     FSR0H           equ	5	;# 
  1362     0006                     FSR1L           equ	6	;# 
  1363     0007                     FSR1H           equ	7	;# 
  1364     0008                     BSR             equ	8	;# 
  1365     0009                     WREG            equ	9	;# 
  1366     000A                     PCLATH          equ	10	;# 
  1367     000B                     INTCON          equ	11	;# 
  1368     000C                     PORTA           equ	12	;# 
  1369     000D                     PORTB           equ	13	;# 
  1370     0011                     PIR1            equ	17	;# 
  1371     0012                     PIR2            equ	18	;# 
  1372     0013                     PIR3            equ	19	;# 
  1373     0014                     PIR4            equ	20	;# 
  1374     0015                     TMR0            equ	21	;# 
  1375     0016                     TMR1            equ	22	;# 
  1376     0016                     TMR1L           equ	22	;# 
  1377     0017                     TMR1H           equ	23	;# 
  1378     0018                     T1CON           equ	24	;# 
  1379     0019                     T1GCON          equ	25	;# 
  1380     001A                     TMR2            equ	26	;# 
  1381     001B                     PR2             equ	27	;# 
  1382     001C                     T2CON           equ	28	;# 
  1383     001E                     CPSCON0         equ	30	;# 
  1384     001F                     CPSCON1         equ	31	;# 
  1385     008C                     TRISA           equ	140	;# 
  1386     008D                     TRISB           equ	141	;# 
  1387     0091                     PIE1            equ	145	;# 
  1388     0092                     PIE2            equ	146	;# 
  1389     0093                     PIE3            equ	147	;# 
  1390     0094                     PIE4            equ	148	;# 
  1391     0095                     OPTION_REG      equ	149	;# 
  1392     0096                     PCON            equ	150	;# 
  1393     0097                     WDTCON          equ	151	;# 
  1394     0098                     OSCTUNE         equ	152	;# 
  1395     0099                     OSCCON          equ	153	;# 
  1396     009A                     OSCSTAT         equ	154	;# 
  1397     009B                     ADRES           equ	155	;# 
  1398     009B                     ADRESL          equ	155	;# 
  1399     009C                     ADRESH          equ	156	;# 
  1400     009D                     ADCON0          equ	157	;# 
  1401     009E                     ADCON1          equ	158	;# 
  1402     010C                     LATA            equ	268	;# 
  1403     010D                     LATB            equ	269	;# 
  1404     0111                     CM1CON0         equ	273	;# 
  1405     0112                     CM1CON1         equ	274	;# 
  1406     0113                     CM2CON0         equ	275	;# 
  1407     0114                     CM2CON1         equ	276	;# 
  1408     0115                     CMOUT           equ	277	;# 
  1409     0116                     BORCON          equ	278	;# 
  1410     0117                     FVRCON          equ	279	;# 
  1411     0118                     DACCON0         equ	280	;# 
  1412     0119                     DACCON1         equ	281	;# 
  1413     011A                     SRCON0          equ	282	;# 
  1414     011B                     SRCON1          equ	283	;# 
  1415     011D                     APFCON0         equ	285	;# 
  1416     011E                     APFCON1         equ	286	;# 
  1417     018C                     ANSELA          equ	396	;# 
  1418     018D                     ANSELB          equ	397	;# 
  1419     0191                     EEADR           equ	401	;# 
  1420     0191                     EEADRL          equ	401	;# 
  1421     0192                     EEADRH          equ	402	;# 
  1422     0193                     EEDAT           equ	403	;# 
  1423     0193                     EEDATL          equ	403	;# 
  1424     0193                     EEDATA          equ	403	;# 
  1425     0194                     EEDATH          equ	404	;# 
  1426     0195                     EECON1          equ	405	;# 
  1427     0196                     EECON2          equ	406	;# 
  1428     0199                     RCREG           equ	409	;# 
  1429     019A                     TXREG           equ	410	;# 
  1430     019B                     SP1BRG          equ	411	;# 
  1431     019B                     SP1BRGL         equ	411	;# 
  1432     019B                     SPBRG           equ	411	;# 
  1433     019B                     SPBRGL          equ	411	;# 
  1434     019C                     SP1BRGH         equ	412	;# 
  1435     019C                     SPBRGH          equ	412	;# 
  1436     019D                     RCSTA           equ	413	;# 
  1437     019E                     TXSTA           equ	414	;# 
  1438     019F                     BAUDCON         equ	415	;# 
  1439     020C                     WPUA            equ	524	;# 
  1440     020D                     WPUB            equ	525	;# 
  1441     0211                     SSP1BUF         equ	529	;# 
  1442     0211                     SSPBUF          equ	529	;# 
  1443     0212                     SSP1ADD         equ	530	;# 
  1444     0212                     SSPADD          equ	530	;# 
  1445     0213                     SSP1MSK         equ	531	;# 
  1446     0213                     SSPMSK          equ	531	;# 
  1447     0214                     SSP1STAT        equ	532	;# 
  1448     0214                     SSPSTAT         equ	532	;# 
  1449     0215                     SSP1CON1        equ	533	;# 
  1450     0215                     SSPCON1         equ	533	;# 
  1451     0215                     SSPCON          equ	533	;# 
  1452     0216                     SSP1CON2        equ	534	;# 
  1453     0216                     SSPCON2         equ	534	;# 
  1454     0217                     SSP1CON3        equ	535	;# 
  1455     0217                     SSPCON3         equ	535	;# 
  1456     0219                     SSP2BUF         equ	537	;# 
  1457     021A                     SSP2ADD         equ	538	;# 
  1458     021B                     SSP2MSK         equ	539	;# 
  1459     021C                     SSP2STAT        equ	540	;# 
  1460     021D                     SSP2CON1        equ	541	;# 
  1461     021E                     SSP2CON2        equ	542	;# 
  1462     021F                     SSP2CON3        equ	543	;# 
  1463     0291                     CCPR1           equ	657	;# 
  1464     0291                     CCPR1L          equ	657	;# 
  1465     0292                     CCPR1H          equ	658	;# 
  1466     0293                     CCP1CON         equ	659	;# 
  1467     0294                     PWM1CON         equ	660	;# 
  1468     0295                     CCP1AS          equ	661	;# 
  1469     0295                     ECCP1AS         equ	661	;# 
  1470     0296                     PSTR1CON        equ	662	;# 
  1471     0298                     CCPR2           equ	664	;# 
  1472     0298                     CCPR2L          equ	664	;# 
  1473     0299                     CCPR2H          equ	665	;# 
  1474     029A                     CCP2CON         equ	666	;# 
  1475     029B                     PWM2CON         equ	667	;# 
  1476     029C                     CCP2AS          equ	668	;# 
  1477     029C                     ECCP2AS         equ	668	;# 
  1478     029D                     PSTR2CON        equ	669	;# 
  1479     029E                     CCPTMRS         equ	670	;# 
  1480     029E                     CCPTMRS0        equ	670	;# 
  1481     0311                     CCPR3           equ	785	;# 
  1482     0311                     CCPR3L          equ	785	;# 
  1483     0312                     CCPR3H          equ	786	;# 
  1484     0313                     CCP3CON         equ	787	;# 
  1485     0318                     CCPR4           equ	792	;# 
  1486     0318                     CCPR4L          equ	792	;# 
  1487     0319                     CCPR4H          equ	793	;# 
  1488     031A                     CCP4CON         equ	794	;# 
  1489     0394                     IOCBP           equ	916	;# 
  1490     0395                     IOCBN           equ	917	;# 
  1491     0396                     IOCBF           equ	918	;# 
  1492     039A                     CLKRCON         equ	922	;# 
  1493     039C                     MDCON           equ	924	;# 
  1494     039D                     MDSRC           equ	925	;# 
  1495     039E                     MDCARL          equ	926	;# 
  1496     039F                     MDCARH          equ	927	;# 
  1497     0415                     TMR4            equ	1045	;# 
  1498     0416                     PR4             equ	1046	;# 
  1499     0417                     T4CON           equ	1047	;# 
  1500     041C                     TMR6            equ	1052	;# 
  1501     041D                     PR6             equ	1053	;# 
  1502     041E                     T6CON           equ	1054	;# 
  1503     0FE4                     STATUS_SHAD     equ	4068	;# 
  1504     0FE5                     WREG_SHAD       equ	4069	;# 
  1505     0FE6                     BSR_SHAD        equ	4070	;# 
  1506     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1507     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1508     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1509     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1510     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1511     0FED                     STKPTR          equ	4077	;# 
  1512     0FEE                     TOSL            equ	4078	;# 
  1513     0FEF                     TOSH            equ	4079	;# 
  1514     0000                     INDF0           equ	0	;# 
  1515     0001                     INDF1           equ	1	;# 
  1516     0002                     PCL             equ	2	;# 
  1517     0003                     STATUS          equ	3	;# 
  1518     0004                     FSR0L           equ	4	;# 
  1519     0005                     FSR0H           equ	5	;# 
  1520     0006                     FSR1L           equ	6	;# 
  1521     0007                     FSR1H           equ	7	;# 
  1522     0008                     BSR             equ	8	;# 
  1523     0009                     WREG            equ	9	;# 
  1524     000A                     PCLATH          equ	10	;# 
  1525     000B                     INTCON          equ	11	;# 
  1526     000C                     PORTA           equ	12	;# 
  1527     000D                     PORTB           equ	13	;# 
  1528     0011                     PIR1            equ	17	;# 
  1529     0012                     PIR2            equ	18	;# 
  1530     0013                     PIR3            equ	19	;# 
  1531     0014                     PIR4            equ	20	;# 
  1532     0015                     TMR0            equ	21	;# 
  1533     0016                     TMR1            equ	22	;# 
  1534     0016                     TMR1L           equ	22	;# 
  1535     0017                     TMR1H           equ	23	;# 
  1536     0018                     T1CON           equ	24	;# 
  1537     0019                     T1GCON          equ	25	;# 
  1538     001A                     TMR2            equ	26	;# 
  1539     001B                     PR2             equ	27	;# 
  1540     001C                     T2CON           equ	28	;# 
  1541     001E                     CPSCON0         equ	30	;# 
  1542     001F                     CPSCON1         equ	31	;# 
  1543     008C                     TRISA           equ	140	;# 
  1544     008D                     TRISB           equ	141	;# 
  1545     0091                     PIE1            equ	145	;# 
  1546     0092                     PIE2            equ	146	;# 
  1547     0093                     PIE3            equ	147	;# 
  1548     0094                     PIE4            equ	148	;# 
  1549     0095                     OPTION_REG      equ	149	;# 
  1550     0096                     PCON            equ	150	;# 
  1551     0097                     WDTCON          equ	151	;# 
  1552     0098                     OSCTUNE         equ	152	;# 
  1553     0099                     OSCCON          equ	153	;# 
  1554     009A                     OSCSTAT         equ	154	;# 
  1555     009B                     ADRES           equ	155	;# 
  1556     009B                     ADRESL          equ	155	;# 
  1557     009C                     ADRESH          equ	156	;# 
  1558     009D                     ADCON0          equ	157	;# 
  1559     009E                     ADCON1          equ	158	;# 
  1560     010C                     LATA            equ	268	;# 
  1561     010D                     LATB            equ	269	;# 
  1562     0111                     CM1CON0         equ	273	;# 
  1563     0112                     CM1CON1         equ	274	;# 
  1564     0113                     CM2CON0         equ	275	;# 
  1565     0114                     CM2CON1         equ	276	;# 
  1566     0115                     CMOUT           equ	277	;# 
  1567     0116                     BORCON          equ	278	;# 
  1568     0117                     FVRCON          equ	279	;# 
  1569     0118                     DACCON0         equ	280	;# 
  1570     0119                     DACCON1         equ	281	;# 
  1571     011A                     SRCON0          equ	282	;# 
  1572     011B                     SRCON1          equ	283	;# 
  1573     011D                     APFCON0         equ	285	;# 
  1574     011E                     APFCON1         equ	286	;# 
  1575     018C                     ANSELA          equ	396	;# 
  1576     018D                     ANSELB          equ	397	;# 
  1577     0191                     EEADR           equ	401	;# 
  1578     0191                     EEADRL          equ	401	;# 
  1579     0192                     EEADRH          equ	402	;# 
  1580     0193                     EEDAT           equ	403	;# 
  1581     0193                     EEDATL          equ	403	;# 
  1582     0193                     EEDATA          equ	403	;# 
  1583     0194                     EEDATH          equ	404	;# 
  1584     0195                     EECON1          equ	405	;# 
  1585     0196                     EECON2          equ	406	;# 
  1586     0199                     RCREG           equ	409	;# 
  1587     019A                     TXREG           equ	410	;# 
  1588     019B                     SP1BRG          equ	411	;# 
  1589     019B                     SP1BRGL         equ	411	;# 
  1590     019B                     SPBRG           equ	411	;# 
  1591     019B                     SPBRGL          equ	411	;# 
  1592     019C                     SP1BRGH         equ	412	;# 
  1593     019C                     SPBRGH          equ	412	;# 
  1594     019D                     RCSTA           equ	413	;# 
  1595     019E                     TXSTA           equ	414	;# 
  1596     019F                     BAUDCON         equ	415	;# 
  1597     020C                     WPUA            equ	524	;# 
  1598     020D                     WPUB            equ	525	;# 
  1599     0211                     SSP1BUF         equ	529	;# 
  1600     0211                     SSPBUF          equ	529	;# 
  1601     0212                     SSP1ADD         equ	530	;# 
  1602     0212                     SSPADD          equ	530	;# 
  1603     0213                     SSP1MSK         equ	531	;# 
  1604     0213                     SSPMSK          equ	531	;# 
  1605     0214                     SSP1STAT        equ	532	;# 
  1606     0214                     SSPSTAT         equ	532	;# 
  1607     0215                     SSP1CON1        equ	533	;# 
  1608     0215                     SSPCON1         equ	533	;# 
  1609     0215                     SSPCON          equ	533	;# 
  1610     0216                     SSP1CON2        equ	534	;# 
  1611     0216                     SSPCON2         equ	534	;# 
  1612     0217                     SSP1CON3        equ	535	;# 
  1613     0217                     SSPCON3         equ	535	;# 
  1614     0219                     SSP2BUF         equ	537	;# 
  1615     021A                     SSP2ADD         equ	538	;# 
  1616     021B                     SSP2MSK         equ	539	;# 
  1617     021C                     SSP2STAT        equ	540	;# 
  1618     021D                     SSP2CON1        equ	541	;# 
  1619     021E                     SSP2CON2        equ	542	;# 
  1620     021F                     SSP2CON3        equ	543	;# 
  1621     0291                     CCPR1           equ	657	;# 
  1622     0291                     CCPR1L          equ	657	;# 
  1623     0292                     CCPR1H          equ	658	;# 
  1624     0293                     CCP1CON         equ	659	;# 
  1625     0294                     PWM1CON         equ	660	;# 
  1626     0295                     CCP1AS          equ	661	;# 
  1627     0295                     ECCP1AS         equ	661	;# 
  1628     0296                     PSTR1CON        equ	662	;# 
  1629     0298                     CCPR2           equ	664	;# 
  1630     0298                     CCPR2L          equ	664	;# 
  1631     0299                     CCPR2H          equ	665	;# 
  1632     029A                     CCP2CON         equ	666	;# 
  1633     029B                     PWM2CON         equ	667	;# 
  1634     029C                     CCP2AS          equ	668	;# 
  1635     029C                     ECCP2AS         equ	668	;# 
  1636     029D                     PSTR2CON        equ	669	;# 
  1637     029E                     CCPTMRS         equ	670	;# 
  1638     029E                     CCPTMRS0        equ	670	;# 
  1639     0311                     CCPR3           equ	785	;# 
  1640     0311                     CCPR3L          equ	785	;# 
  1641     0312                     CCPR3H          equ	786	;# 
  1642     0313                     CCP3CON         equ	787	;# 
  1643     0318                     CCPR4           equ	792	;# 
  1644     0318                     CCPR4L          equ	792	;# 
  1645     0319                     CCPR4H          equ	793	;# 
  1646     031A                     CCP4CON         equ	794	;# 
  1647     0394                     IOCBP           equ	916	;# 
  1648     0395                     IOCBN           equ	917	;# 
  1649     0396                     IOCBF           equ	918	;# 
  1650     039A                     CLKRCON         equ	922	;# 
  1651     039C                     MDCON           equ	924	;# 
  1652     039D                     MDSRC           equ	925	;# 
  1653     039E                     MDCARL          equ	926	;# 
  1654     039F                     MDCARH          equ	927	;# 
  1655     0415                     TMR4            equ	1045	;# 
  1656     0416                     PR4             equ	1046	;# 
  1657     0417                     T4CON           equ	1047	;# 
  1658     041C                     TMR6            equ	1052	;# 
  1659     041D                     PR6             equ	1053	;# 
  1660     041E                     T6CON           equ	1054	;# 
  1661     0FE4                     STATUS_SHAD     equ	4068	;# 
  1662     0FE5                     WREG_SHAD       equ	4069	;# 
  1663     0FE6                     BSR_SHAD        equ	4070	;# 
  1664     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1665     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1666     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1667     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1668     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1669     0FED                     STKPTR          equ	4077	;# 
  1670     0FEE                     TOSL            equ	4078	;# 
  1671     0FEF                     TOSH            equ	4079	;# 
  1672                           
  1673 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1674     0000                     _EUSART_DefaultFramingErrorHandler equ	0
  1675                           
  1676 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1677     0000                     _EUSART_DefaultOverrunErrorHandler equ	0
  1678                           
  1679 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1680     0000                     _EUSART_DefaultErrorHandler equ	0
  1681                           
  1682                           	psect	idataBANK0
  1683     035D                     __pidataBANK0:
  1684                           
  1685                           ;initializer for _vGAINt
  1686     035D  3401               	retlw	1
  1687     035E  3400               	retlw	0
  1688                           
  1689                           ;initializer for _vGAINl
  1690     035F  3401               	retlw	1
  1691     0360  3400               	retlw	0
  1692                           
  1693                           ;initializer for _swit
  1694     0361  3401               	retlw	1
  1695                           
  1696                           	psect	nvBANK0
  1697     0043                     __pnvBANK0:
  1698     0043                     _TMR1_InterruptHandler:
  1699     0043                     	ds	2
  1700     0045                     _EUSART_ErrorHandler:
  1701     0045                     	ds	2
  1702     0047                     _EUSART_OverrunErrorHandler:
  1703     0047                     	ds	2
  1704     0049                     _EUSART_FramingErrorHandler:
  1705     0049                     	ds	2
  1706     001C                     _T2CONbits      set	28
  1707     001C                     _T2CON          set	28
  1708     001A                     _TMR2           set	26
  1709     001B                     _PR2            set	27
  1710     0019                     _T1GCONbits     set	25
  1711     0018                     _T1CONbits      set	24
  1712     0018                     _T1CON          set	24
  1713     0016                     _TMR1L          set	22
  1714     0017                     _TMR1H          set	23
  1715     0019                     _T1GCON         set	25
  1716     000B                     _INTCONbits     set	11
  1717     0011                     _PIR1bits       set	17
  1718     0091                     _PIE1bits       set	145
  1719     009D                     _ADCON0bits     set	157
  1720     009D                     _ADCON0         set	157
  1721     009C                     _ADRESH         set	156
  1722     009B                     _ADRESL         set	155
  1723     009E                     _ADCON1         set	158
  1724     0097                     _WDTCON         set	151
  1725     0098                     _OSCTUNE        set	152
  1726     0099                     _OSCCON         set	153
  1727     0095                     _OPTION_REGbits set	149
  1728     008D                     _TRISB          set	141
  1729     008C                     _TRISA          set	140
  1730     0116                     _BORCON         set	278
  1731     011E                     _APFCON1        set	286
  1732     011D                     _APFCON0        set	285
  1733     010D                     _LATB           set	269
  1734     010C                     _LATA           set	268
  1735     019A                     _TXREG          set	410
  1736     0199                     _RCREG          set	409
  1737     019D                     _RCSTAbits      set	413
  1738     019E                     _TXSTAbits      set	414
  1739     019C                     _SPBRGH         set	412
  1740     019B                     _SPBRGL         set	411
  1741     019E                     _TXSTA          set	414
  1742     019D                     _RCSTA          set	413
  1743     019F                     _BAUDCON        set	415
  1744     018C                     _ANSELA         set	396
  1745     018D                     _ANSELB         set	397
  1746     020C                     _WPUA           set	524
  1747     020D                     _WPUB           set	525
  1748     029E                     _CCPTMRS0bits   set	670
  1749     0298                     _CCPR2L         set	664
  1750     0299                     _CCPR2H         set	665
  1751     029D                     _PSTR2CON       set	669
  1752     029B                     _PWM2CON        set	667
  1753     029C                     _ECCP2AS        set	668
  1754     029A                     _CCP2CON        set	666
  1755                           
  1756                           	psect	cinit
  1757     001B                     start_initialization:	
  1758                           ; #config settings
  1759                           
  1760     001B                     __initialization:
  1761                           
  1762                           ; Initialize objects allocated to BANK0
  1763     001B  305D               	movlw	low __pidataBANK0
  1764     001C  0084               	movwf	4
  1765     001D  3083               	movlw	(high __pidataBANK0)| (0+128)
  1766     001E  0085               	movwf	5
  1767     001F  0012               	moviw fsr0++
  1768     0020  00CB               	movwf	__pdataBANK0& (0+127)
  1769     0021  0012               	moviw fsr0++
  1770     0022  00CC               	movwf	(__pdataBANK0+1)& (0+127)
  1771     0023  0012               	moviw fsr0++
  1772     0024  00CD               	movwf	(__pdataBANK0+2)& (0+127)
  1773     0025  0012               	moviw fsr0++
  1774     0026  00CE               	movwf	(__pdataBANK0+3)& (0+127)
  1775     0027  0012               	moviw fsr0++
  1776     0028  00CF               	movwf	(__pdataBANK0+4)& (0+127)
  1777                           
  1778                           ; Clear objects allocated to BANK0
  1779     0029  3020               	movlw	low __pbssBANK0
  1780     002A  0084               	movwf	4
  1781     002B  3000               	movlw	high __pbssBANK0
  1782     002C  0085               	movwf	5
  1783     002D  3016               	movlw	22
  1784     002E  3183  233F  3180   	fcall	clear_ram0
  1785     0031                     end_of_initialization:	
  1786                           ;End of C runtime variable initialization code
  1787                           
  1788     0031                     __end_of__initialization:
  1789     0031  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1790     0032  0020               	movlb	0
  1791     0033  3181  295B         	ljmp	_main	;jump to C main() function
  1792                           
  1793                           	psect	bssBANK0
  1794     0020                     __pbssBANK0:
  1795     0020                     _ByteRx:
  1796     0020                     	ds	3
  1797     0023                     _vAUX:
  1798     0023                     	ds	2
  1799     0025                     _vPWM:
  1800     0025                     	ds	2
  1801     0027                     _TX2dados:
  1802     0027                     	ds	2
  1803     0029                     _TX1dados:
  1804     0029                     	ds	2
  1805     002B                     _RXdados:
  1806     002B                     	ds	2
  1807     002D                     TMR1_ISR@CountCallBack:
  1808     002D                     	ds	2
  1809     002F                     _timer1ReloadVal:
  1810     002F                     	ds	2
  1811     0031                     _ADC_InterruptHandler:
  1812     0031                     	ds	2
  1813     0033                     _countRx:
  1814     0033                     	ds	1
  1815     0034                     _readrx:
  1816     0034                     	ds	1
  1817     0035                     _eusartRxLastError:
  1818     0035                     	ds	1
  1819                           
  1820                           	psect	dataBANK0
  1821     004B                     __pdataBANK0:
  1822     004B                     _vGAINt:
  1823     004B                     	ds	2
  1824     004D                     _vGAINl:
  1825     004D                     	ds	2
  1826     004F                     _swit:
  1827     004F                     	ds	1
  1828                           
  1829                           	psect	clrtext
  1830     033F                     clear_ram0:	
  1831                           ;	Called with FSR0 containing the base address, and
  1832                           ;	WREG with the size to clear
  1833                           
  1834     033F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1835     0340                     clrloop0:
  1836     0340  0180               	clrf	0	;clear RAM location pointed to by FSR
  1837     0341  3101               	addfsr 0,1
  1838     0342  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1839     0343  2B40               	goto	clrloop0	;have we reached the end yet?
  1840     0344  3400               	retlw	0	;all done for this memory range, return
  1841                           
  1842                           	psect	cstackCOMMON
  1843     0070                     __pcstackCOMMON:
  1844     0070                     ?_OSCILLATOR_Initialize:
  1845     0070                     ?_WDT_Initialize:	
  1846                           ; 1 bytes @ 0x0
  1847                           
  1848     0070                     ?_EPWM2_Initialize:	
  1849                           ; 1 bytes @ 0x0
  1850                           
  1851     0070                     ?_ADC_Initialize:	
  1852                           ; 1 bytes @ 0x0
  1853                           
  1854     0070                     ?_TMR2_Initialize:	
  1855                           ; 1 bytes @ 0x0
  1856                           
  1857     0070                     ?_TMR1_Initialize:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860     0070                     ?_EUSART_Initialize:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863     0070                     ?_TMR1_ISR:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866     0070                     ?_TMR1_DefaultInterruptHandler:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869     0070                     ?_TMR1_CallBack:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872     0070                     ?_PIN_MANAGER_Initialize:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875     0070                     ?_SYSTEM_Initialize:	
  1876                           ; 1 bytes @ 0x0
  1877                           
  1878     0070                     ?_EUSART_is_rx_ready:	
  1879                           ; 1 bytes @ 0x0
  1880                           
  1881     0070                     ?_EUSART_Read:	
  1882                           ; 1 bytes @ 0x0
  1883                           
  1884     0070                     ?_EUSART_Write:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887     0070                     ?_INTERRUPT_InterruptManager:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890     0070                     ?_TMR1_WriteTimer:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893     0070                     ?_TRUSART:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896     0070                     ?_selecaoRX:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899     0070                     ?_desloca:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902     0070                     ?_main:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905     0070                     ?_ADC_GetConversion:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908     0070                     EUSART_Write@txData:	
  1909                           ; 2 bytes @ 0x0
  1910                           
  1911     0070                     TMR1_WriteTimer@timerVal:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914     0070                     ??_TMR1_DefaultInterruptHandler:	
  1915                           ; 2 bytes @ 0x0
  1916                           
  1917     0070                     ??_EUSART_Write:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920                           
  1921                           ; 1 bytes @ 0x0
  1922     0070                     	ds	2
  1923     0072                     ??_ADC_GetConversion:
  1924     0072                     ??_TMR1_WriteTimer:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927                           
  1928                           ; 1 bytes @ 0x2
  1929     0072                     	ds	1
  1930     0073                     ADC_GetConversion@channel:
  1931                           
  1932                           ; 1 bytes @ 0x3
  1933     0073                     	ds	1
  1934     0074                     ?___wmul:
  1935     0074                     ___wmul@multiplier:	
  1936                           ; 2 bytes @ 0x4
  1937                           
  1938                           
  1939                           ; 2 bytes @ 0x4
  1940     0074                     	ds	2
  1941     0076                     ___wmul@multiplicand:
  1942                           
  1943                           ; 2 bytes @ 0x6
  1944     0076                     	ds	2
  1945     0078                     ___wmul@product:
  1946     0078                     ??___wmul:	
  1947                           ; 2 bytes @ 0x8
  1948                           
  1949                           
  1950                           ; 1 bytes @ 0x8
  1951     0078                     	ds	2
  1952     007A                     ??_TRUSART:
  1953                           
  1954                           ; 1 bytes @ 0xA
  1955     007A                     	ds	2
  1956     007C                     _TRUSART$1488:
  1957                           
  1958                           ; 2 bytes @ 0xC
  1959     007C                     	ds	2
  1960     007E                     ??_TMR1_ISR:
  1961     007E                     ??_TMR1_CallBack:	
  1962                           ; 1 bytes @ 0xE
  1963                           
  1964     007E                     ??_INTERRUPT_InterruptManager:	
  1965                           ; 1 bytes @ 0xE
  1966                           
  1967                           
  1968                           	psect	cstackBANK0
  1969     0036                     __pcstackBANK0:	
  1970                           ; 1 bytes @ 0xE
  1971                           
  1972     0036                     ?_EUSART_SetFramingErrorHandler:
  1973     0036                     ?_EUSART_SetOverrunErrorHandler:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976     0036                     ?_EUSART_SetErrorHandler:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979     0036                     ?_TMR1_SetInterruptHandler:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982     0036                     ?_EPWM2_LoadDutyValue:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985     0036                     ?___lwdiv:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0036                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1989                           ; 2 bytes @ 0x0
  1990                           
  1991     0036                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1992                           ; 2 bytes @ 0x0
  1993                           
  1994     0036                     EUSART_SetErrorHandler@interruptHandler:	
  1995                           ; 2 bytes @ 0x0
  1996                           
  1997     0036                     EPWM2_LoadDutyValue@dutyValue:	
  1998                           ; 2 bytes @ 0x0
  1999                           
  2000     0036                     TMR1_SetInterruptHandler@InterruptHandler:	
  2001                           ; 2 bytes @ 0x0
  2002                           
  2003     0036                     ___lwdiv@divisor:	
  2004                           ; 2 bytes @ 0x0
  2005                           
  2006     0036                     ??_OSCILLATOR_Initialize:	
  2007                           ; 2 bytes @ 0x0
  2008                           
  2009     0036                     ??_WDT_Initialize:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012     0036                     ??_EPWM2_Initialize:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015     0036                     ??_ADC_Initialize:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018     0036                     ??_TMR2_Initialize:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021     0036                     ??_PIN_MANAGER_Initialize:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024     0036                     ??_EUSART_is_rx_ready:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027     0036                     ??_EUSART_Read:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030                           
  2031                           ; 1 bytes @ 0x0
  2032     0036                     	ds	2
  2033     0038                     ___lwdiv@dividend:
  2034     0038                     ??_TMR1_Initialize:	
  2035                           ; 2 bytes @ 0x2
  2036                           
  2037     0038                     ??_EUSART_Initialize:	
  2038                           ; 1 bytes @ 0x2
  2039                           
  2040     0038                     ??_EUSART_SetFramingErrorHandler:	
  2041                           ; 1 bytes @ 0x2
  2042                           
  2043     0038                     ??_EUSART_SetOverrunErrorHandler:	
  2044                           ; 1 bytes @ 0x2
  2045                           
  2046     0038                     ??_EUSART_SetErrorHandler:	
  2047                           ; 1 bytes @ 0x2
  2048                           
  2049     0038                     ??_TMR1_SetInterruptHandler:	
  2050                           ; 1 bytes @ 0x2
  2051                           
  2052     0038                     ??_SYSTEM_Initialize:	
  2053                           ; 1 bytes @ 0x2
  2054                           
  2055     0038                     ??_EPWM2_LoadDutyValue:	
  2056                           ; 1 bytes @ 0x2
  2057                           
  2058                           
  2059                           ; 1 bytes @ 0x2
  2060     0038                     	ds	2
  2061     003A                     ___lwdiv@quotient:
  2062     003A                     ??___lwdiv:	
  2063                           ; 2 bytes @ 0x4
  2064                           
  2065                           
  2066                           ; 1 bytes @ 0x4
  2067     003A                     	ds	2
  2068     003C                     ___lwdiv@counter:
  2069                           
  2070                           ; 1 bytes @ 0x6
  2071     003C                     	ds	1
  2072     003D                     ??_selecaoRX:
  2073                           
  2074                           ; 1 bytes @ 0x7
  2075     003D                     	ds	2
  2076     003F                     ??_desloca:
  2077                           
  2078                           ; 1 bytes @ 0x9
  2079     003F                     	ds	2
  2080     0041                     ??_main:
  2081                           
  2082                           ; 1 bytes @ 0xB
  2083     0041                     	ds	2
  2084                           
  2085                           	psect	maintext
  2086     015B                     __pmaintext:	
  2087 ;;
  2088 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2089 ;;
  2090 ;; *************** function _main *****************
  2091 ;; Defined at:
  2092 ;;		line 148 in file "main.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : B1F/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2106 ;;      Params:         0       0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0
  2108 ;;      Temps:          0       2       0       0       0       0
  2109 ;;      Totals:         0       2       0       0       0       0
  2110 ;;Total ram usage:        2 bytes
  2111 ;; Hardware stack levels required when called: 8
  2112 ;; This function calls:
  2113 ;;		_EUSART_Read
  2114 ;;		_EUSART_is_rx_ready
  2115 ;;		_SYSTEM_Initialize
  2116 ;;		_TMR1_SetInterruptHandler
  2117 ;;		_desloca
  2118 ;; This function is called by:
  2119 ;;		Startup code after reset
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123     015B                     _main:	
  2124                           ;psect for function _main
  2125                           
  2126     015B                     l1685:	
  2127                           ;incstack = 0
  2128                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2129                           
  2130                           
  2131                           ;main.c: 151:     SYSTEM_Initialize();
  2132     015B  3182  2299  3181   	fcall	_SYSTEM_Initialize
  2133     015E                     l1687:
  2134                           
  2135                           ;main.c: 157:     (INTCONbits.GIE = 1);
  2136     015E  178B               	bsf	11,7	;volatile
  2137     015F                     l1689:
  2138                           
  2139                           ;main.c: 160:     (INTCONbits.PEIE = 1);
  2140     015F  170B               	bsf	11,6	;volatile
  2141                           
  2142                           ;main.c: 169:     TMR1_SetInterruptHandler(TRUSART);
  2143     0160  3035               	movlw	low _TRUSART
  2144     0161  0020               	movlb	0	; select bank0
  2145     0162  00B6               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2146     0163  3000               	movlw	high _TRUSART
  2147     0164  00B7               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2148     0165  3183  2345  3181   	fcall	_TMR1_SetInterruptHandler
  2149     0168                     l398:	
  2150                           ;main.c: 171:     while (1)
  2151                           
  2152                           
  2153                           ;main.c: 172:     {;main.c: 173:         if(EUSART_is_rx_ready()){
  2154     0168  3183  2362  3181   	fcall	_EUSART_is_rx_ready
  2155     016B  3A00               	xorlw	0
  2156     016C  1903               	skipnz
  2157     016D  296F               	goto	u791
  2158     016E  2970               	goto	u790
  2159     016F                     u791:
  2160     016F  2968               	goto	l398
  2161     0170                     u790:
  2162     0170                     l1691:
  2163                           
  2164                           ;main.c: 174:             readrx = EUSART_Read();
  2165     0170  3182  22F5  3181   	fcall	_EUSART_Read
  2166     0173  0020               	movlb	0	; select bank0
  2167     0174  00B4               	movwf	_readrx
  2168     0175                     l1693:
  2169                           
  2170                           ;main.c: 175:             if(countRx < 3){
  2171     0175  3003               	movlw	3
  2172     0176  0233               	subwf	_countRx,w
  2173     0177  1803               	skipnc
  2174     0178  297A               	goto	u801
  2175     0179  297B               	goto	u800
  2176     017A                     u801:
  2177     017A  298D               	goto	l1703
  2178     017B                     u800:
  2179     017B                     l1695:
  2180                           
  2181                           ;main.c: 176:                 ByteRx[countRx] = readrx;
  2182     017B  0833               	movf	_countRx,w
  2183     017C  3E20               	addlw	(low (_ByteRx| 0))& (0+255)
  2184     017D  0086               	movwf	6
  2185     017E  0187               	clrf	7
  2186     017F  0834               	movf	_readrx,w
  2187     0180  0081               	movwf	1
  2188     0181                     l1697:
  2189                           
  2190                           ;main.c: 177:                 countRx++;
  2191     0181  3001               	movlw	1
  2192     0182  07B3               	addwf	_countRx,f
  2193     0183                     l1699:
  2194                           
  2195                           ;main.c: 178:                 if(countRx == 3){
  2196     0183  3003               	movlw	3
  2197     0184  0633               	xorwf	_countRx,w
  2198     0185  1D03               	btfss	3,2
  2199     0186  2988               	goto	u811
  2200     0187  2989               	goto	u810
  2201     0188                     u811:
  2202     0188  299C               	goto	l399
  2203     0189                     u810:
  2204     0189                     l1701:
  2205                           
  2206                           ;main.c: 179:                     desloca();
  2207     0189  3181  21DA  3181   	fcall	_desloca
  2208     018C  2968               	goto	l398
  2209     018D                     l1703:
  2210                           
  2211                           ;main.c: 182:                 _delay((unsigned long)((200)*(8000000/4000.0)));
  2212     018D  3003               	movlw	3
  2213     018E  0020               	movlb	0	; select bank0
  2214     018F  00C2               	movwf	??_main+1
  2215     0190  3008               	movlw	8
  2216     0191  00C1               	movwf	??_main
  2217     0192  3077               	movlw	119
  2218     0193                     u827:
  2219     0193  0B89               	decfsz	9,f
  2220     0194  2993               	goto	u827
  2221     0195  0BC1               	decfsz	??_main,f
  2222     0196  2993               	goto	u827
  2223     0197  0BC2               	decfsz	??_main+1,f
  2224     0198  2993               	goto	u827
  2225     0199                     l1705:
  2226                           
  2227                           ;main.c: 183:                 countRx = 0;
  2228     0199  0020               	movlb	0	; select bank0
  2229     019A  01B3               	clrf	_countRx
  2230     019B  2968               	goto	l398
  2231     019C                     l399:	
  2232                           ;main.c: 185:         }
  2233                           
  2234     019C  2968               	goto	l398
  2235     019D  3180  2819         	ljmp	start
  2236     019F                     __end_of_main:
  2237                           
  2238                           	psect	text1
  2239     01DA                     __ptext1:	
  2240 ;; *************** function _desloca *****************
  2241 ;; Defined at:
  2242 ;;		line 137 in file "main.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2256 ;;      Params:         0       0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0
  2258 ;;      Temps:          0       2       0       0       0       0
  2259 ;;      Totals:         0       2       0       0       0       0
  2260 ;;Total ram usage:        2 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 7
  2263 ;; This function calls:
  2264 ;;		_selecaoRX
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270     01DA                     _desloca:	
  2271                           ;psect for function _desloca
  2272                           
  2273     01DA                     l1661:	
  2274                           ;incstack = 0
  2275                           ; Regs used in _desloca: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2276                           
  2277                           
  2278                           ;main.c: 138:     RXdados.vHx = ByteRx[1];
  2279     01DA  0020               	movlb	0	; select bank0
  2280     01DB  0821               	movf	_ByteRx+1,w
  2281     01DC  00AC               	movwf	_RXdados+1
  2282                           
  2283                           ;main.c: 139:     RXdados.vLx = ByteRx[2];
  2284     01DD  0822               	movf	_ByteRx+2,w
  2285     01DE  00AB               	movwf	_RXdados
  2286                           
  2287                           ;main.c: 140:     if(RXdados.vLx>0x7F){return;}
  2288     01DF  3080               	movlw	128
  2289     01E0  022B               	subwf	_RXdados,w
  2290     01E1  1C03               	skipc
  2291     01E2  29E4               	goto	u741
  2292     01E3  29E5               	goto	u740
  2293     01E4                     u741:
  2294     01E4  29E6               	goto	l1665
  2295     01E5                     u740:
  2296     01E5  29FF               	goto	l392
  2297     01E6                     l1665:
  2298                           
  2299                           ;main.c: 141:     if(RXdados.vHx>0x7F){return;}
  2300     01E6  3080               	movlw	128
  2301     01E7  022C               	subwf	_RXdados+1,w
  2302     01E8  1C03               	skipc
  2303     01E9  29EB               	goto	u751
  2304     01EA  29EC               	goto	u750
  2305     01EB                     u751:
  2306     01EB  29ED               	goto	l1669
  2307     01EC                     u750:
  2308     01EC  29FF               	goto	l392
  2309     01ED                     l1669:
  2310                           
  2311                           ;main.c: 142:     RXdados.vLx = RXdados.vLx << 1;
  2312     01ED  352B               	lslf	_RXdados,w
  2313     01EE  00AB               	movwf	_RXdados
  2314                           
  2315                           ;main.c: 143:     RXdados.Rtx = (RXdados.Rtx >> 1);
  2316     01EF  082C               	movf	_RXdados+1,w
  2317     01F0  00C0               	movwf	??_desloca+1
  2318     01F1  082B               	movf	_RXdados,w
  2319     01F2  00BF               	movwf	??_desloca
  2320     01F3  36C0               	lsrf	??_desloca+1,f
  2321     01F4  0CBF               	rrf	??_desloca,f
  2322     01F5  083F               	movf	??_desloca,w
  2323     01F6  00AB               	movwf	_RXdados
  2324     01F7  0840               	movf	??_desloca+1,w
  2325     01F8  00AC               	movwf	_RXdados+1
  2326     01F9                     l1671:
  2327                           
  2328                           ;main.c: 144:     RXdados.vHx = RXdados.vHx & 0x7F;
  2329     01F9  082C               	movf	_RXdados+1,w
  2330     01FA  397F               	andlw	127
  2331     01FB  00AC               	movwf	_RXdados+1
  2332     01FC                     l1673:
  2333                           
  2334                           ;main.c: 145:     selecaoRX();
  2335     01FC  3180  20CC  3181   	fcall	_selecaoRX
  2336     01FF                     l392:
  2337     01FF  0008               	return
  2338     0200                     __end_of_desloca:
  2339                           
  2340                           	psect	text2
  2341     00CC                     __ptext2:	
  2342 ;; *************** function _selecaoRX *****************
  2343 ;; Defined at:
  2344 ;;		line 87 in file "main.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2358 ;;      Params:         0       0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0
  2360 ;;      Temps:          0       2       0       0       0       0
  2361 ;;      Totals:         0       2       0       0       0       0
  2362 ;;Total ram usage:        2 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 6
  2365 ;; This function calls:
  2366 ;;		_EPWM2_LoadDutyValue
  2367 ;;		___lwdiv
  2368 ;; This function is called by:
  2369 ;;		_desloca
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373     00CC                     _selecaoRX:	
  2374                           ;psect for function _selecaoRX
  2375                           
  2376     00CC                     l1571:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _selecaoRX: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2379                           
  2380                           
  2381                           ;main.c: 88:     switch(ByteRx[0]){
  2382     00CC  294B               	goto	l1621
  2383     00CD                     l1573:
  2384                           
  2385                           ;main.c: 93:             if(RXdados.vHx== 0x00){
  2386     00CD  082C               	movf	_RXdados+1,w
  2387     00CE  1D03               	btfss	3,2
  2388     00CF  28D1               	goto	u621
  2389     00D0  28D2               	goto	u620
  2390     00D1                     u621:
  2391     00D1  28E0               	goto	l1583
  2392     00D2                     u620:
  2393     00D2                     l1575:
  2394                           
  2395                           ;main.c: 94:             if(RXdados.vLx == 0x00){ swit = 0;}
  2396     00D2  082B               	movf	_RXdados,w
  2397     00D3  1D03               	btfss	3,2
  2398     00D4  28D6               	goto	u631
  2399     00D5  28D7               	goto	u630
  2400     00D6                     u631:
  2401     00D6  28D9               	goto	l1579
  2402     00D7                     u630:
  2403     00D7                     l1577:
  2404     00D7  01CF               	clrf	_swit
  2405     00D8  28E0               	goto	l1583
  2406     00D9                     l1579:
  2407     00D9  032B               	decf	_RXdados,w
  2408     00DA  1D03               	btfss	3,2
  2409     00DB  28DD               	goto	u641
  2410     00DC  28DE               	goto	u640
  2411     00DD                     u641:
  2412     00DD  28E0               	goto	l1583
  2413     00DE                     u640:
  2414     00DE                     l1581:
  2415     00DE  3001               	movlw	1
  2416     00DF  00CF               	movwf	_swit
  2417     00E0                     l1583:
  2418                           
  2419                           ;main.c: 97:             countRx = 0;
  2420     00E0  0020               	movlb	0	; select bank0
  2421     00E1  01B3               	clrf	_countRx
  2422                           
  2423                           ;main.c: 98:             break;
  2424     00E2  295A               	goto	l388
  2425     00E3                     l1585:
  2426                           
  2427                           ;main.c: 102:             if(countRx == 3){
  2428     00E3  3003               	movlw	3
  2429     00E4  0633               	xorwf	_countRx,w
  2430     00E5  1D03               	btfss	3,2
  2431     00E6  28E8               	goto	u651
  2432     00E7  28E9               	goto	u650
  2433     00E8                     u651:
  2434     00E8  28E0               	goto	l1583
  2435     00E9                     u650:
  2436     00E9                     l1587:
  2437                           
  2438                           ;main.c: 103:                 if(RXdados.vHx<0x08){
  2439     00E9  3008               	movlw	8
  2440     00EA  022C               	subwf	_RXdados+1,w
  2441     00EB  1803               	skipnc
  2442     00EC  28EE               	goto	u661
  2443     00ED  28EF               	goto	u660
  2444     00EE                     u661:
  2445     00EE  28E0               	goto	l1583
  2446     00EF                     u660:
  2447     00EF                     l1589:
  2448                           
  2449                           ;main.c: 104:                     vPWM = RXdados.Rtx;
  2450     00EF  082C               	movf	_RXdados+1,w
  2451     00F0  00A6               	movwf	_vPWM+1
  2452     00F1  082B               	movf	_RXdados,w
  2453     00F2  00A5               	movwf	_vPWM
  2454     00F3                     l1591:
  2455                           
  2456                           ;main.c: 105:                     EPWM2_LoadDutyValue(vPWM);
  2457     00F3  0826               	movf	_vPWM+1,w
  2458     00F4  00B7               	movwf	EPWM2_LoadDutyValue@dutyValue+1
  2459     00F5  0825               	movf	_vPWM,w
  2460     00F6  00B6               	movwf	EPWM2_LoadDutyValue@dutyValue
  2461     00F7  3182  2262  3180   	fcall	_EPWM2_LoadDutyValue
  2462     00FA  28E0               	goto	l1583
  2463     00FB                     l1595:
  2464                           
  2465                           ;main.c: 112:             if(countRx == 3){
  2466     00FB  3003               	movlw	3
  2467     00FC  0633               	xorwf	_countRx,w
  2468     00FD  1D03               	btfss	3,2
  2469     00FE  2900               	goto	u671
  2470     00FF  2901               	goto	u670
  2471     0100                     u671:
  2472     0100  28E0               	goto	l1583
  2473     0101                     u670:
  2474     0101                     l1597:
  2475                           
  2476                           ;main.c: 113:                 if(RXdados.vHx<0x80){
  2477     0101  3080               	movlw	128
  2478     0102  022C               	subwf	_RXdados+1,w
  2479     0103  1803               	skipnc
  2480     0104  2906               	goto	u681
  2481     0105  2907               	goto	u680
  2482     0106                     u681:
  2483     0106  28E0               	goto	l1583
  2484     0107                     u680:
  2485     0107                     l1599:
  2486                           
  2487                           ;main.c: 114:                     vGAINl = RXdados.Rtx;
  2488     0107  082C               	movf	_RXdados+1,w
  2489     0108  00CE               	movwf	_vGAINl+1
  2490     0109  082B               	movf	_RXdados,w
  2491     010A  00CD               	movwf	_vGAINl
  2492     010B                     l1601:
  2493                           
  2494                           ;main.c: 115:                     vGAINl = vGAINl/1000;
  2495     010B  30E8               	movlw	232
  2496     010C  00B6               	movwf	___lwdiv@divisor
  2497     010D  3003               	movlw	3
  2498     010E  00B7               	movwf	___lwdiv@divisor+1
  2499     010F  084E               	movf	_vGAINl+1,w
  2500     0110  00B9               	movwf	___lwdiv@dividend+1
  2501     0111  084D               	movf	_vGAINl,w
  2502     0112  00B8               	movwf	___lwdiv@dividend
  2503     0113  3181  219F  3180   	fcall	___lwdiv
  2504     0116  0020               	movlb	0	; select bank0
  2505     0117  0837               	movf	?___lwdiv+1,w
  2506     0118  00CE               	movwf	_vGAINl+1
  2507     0119  0836               	movf	?___lwdiv,w
  2508     011A  00CD               	movwf	_vGAINl
  2509     011B  28E0               	goto	l1583
  2510     011C                     l1605:
  2511                           
  2512                           ;main.c: 122:             if(countRx == 3){
  2513     011C  3003               	movlw	3
  2514     011D  0633               	xorwf	_countRx,w
  2515     011E  1D03               	btfss	3,2
  2516     011F  2921               	goto	u691
  2517     0120  2922               	goto	u690
  2518     0121                     u691:
  2519     0121  28E0               	goto	l1583
  2520     0122                     u690:
  2521     0122                     l1607:
  2522                           
  2523                           ;main.c: 123:                 if(RXdados.vHx<0x80){
  2524     0122  3080               	movlw	128
  2525     0123  022C               	subwf	_RXdados+1,w
  2526     0124  1803               	skipnc
  2527     0125  2927               	goto	u701
  2528     0126  2928               	goto	u700
  2529     0127                     u701:
  2530     0127  28E0               	goto	l1583
  2531     0128                     u700:
  2532     0128                     l1609:
  2533                           
  2534                           ;main.c: 124:                     vGAINt = RXdados.Rtx;
  2535     0128  082C               	movf	_RXdados+1,w
  2536     0129  00CC               	movwf	_vGAINt+1
  2537     012A  082B               	movf	_RXdados,w
  2538     012B  00CB               	movwf	_vGAINt
  2539     012C                     l1611:
  2540                           
  2541                           ;main.c: 125:                     vGAINt = vGAINt/1000;
  2542     012C  30E8               	movlw	232
  2543     012D  00B6               	movwf	___lwdiv@divisor
  2544     012E  3003               	movlw	3
  2545     012F  00B7               	movwf	___lwdiv@divisor+1
  2546     0130  084C               	movf	_vGAINt+1,w
  2547     0131  00B9               	movwf	___lwdiv@dividend+1
  2548     0132  084B               	movf	_vGAINt,w
  2549     0133  00B8               	movwf	___lwdiv@dividend
  2550     0134  3181  219F  3180   	fcall	___lwdiv
  2551     0137  0020               	movlb	0	; select bank0
  2552     0138  0837               	movf	?___lwdiv+1,w
  2553     0139  00CC               	movwf	_vGAINt+1
  2554     013A  0836               	movf	?___lwdiv,w
  2555     013B  00CB               	movwf	_vGAINt
  2556     013C  28E0               	goto	l1583
  2557     013D                     l1615:
  2558                           
  2559                           ;main.c: 131:             countRx = 0;
  2560     013D  01B3               	clrf	_countRx
  2561     013E                     l1617:
  2562                           
  2563                           ;main.c: 132:             _delay((unsigned long)((200)*(8000000/4000.0)));
  2564     013E  3003               	movlw	3
  2565     013F  0020               	movlb	0	; select bank0
  2566     0140  00BE               	movwf	??_selecaoRX+1
  2567     0141  3008               	movlw	8
  2568     0142  00BD               	movwf	??_selecaoRX
  2569     0143  3077               	movlw	119
  2570     0144                     u837:
  2571     0144  0B89               	decfsz	9,f
  2572     0145  2944               	goto	u837
  2573     0146  0BBD               	decfsz	??_selecaoRX,f
  2574     0147  2944               	goto	u837
  2575     0148  0BBE               	decfsz	??_selecaoRX+1,f
  2576     0149  2944               	goto	u837
  2577                           
  2578                           ;main.c: 133:             break;
  2579     014A  295A               	goto	l388
  2580     014B                     l1621:
  2581     014B  0020               	movlb	0	; select bank0
  2582     014C  0820               	movf	_ByteRx,w
  2583                           
  2584                           ; Switch size 1, requested type "simple"
  2585                           ; Number of cases is 4, Range of values is 128 to 131
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte           13     7 (average)
  2589                           ; direct_byte           17     9 (fixed)
  2590                           ; jumptable            263     9 (fixed)
  2591                           ;	Chosen strategy is simple_byte
  2592     014D  3A80               	xorlw	128	; case 128
  2593     014E  1903               	skipnz
  2594     014F  28CD               	goto	l1573
  2595     0150  3A01               	xorlw	1	; case 129
  2596     0151  1903               	skipnz
  2597     0152  28E3               	goto	l1585
  2598     0153  3A03               	xorlw	3	; case 130
  2599     0154  1903               	skipnz
  2600     0155  28FB               	goto	l1595
  2601     0156  3A01               	xorlw	1	; case 131
  2602     0157  1903               	skipnz
  2603     0158  291C               	goto	l1605
  2604     0159  293D               	goto	l1615
  2605     015A                     l388:
  2606     015A  0008               	return
  2607     015B                     __end_of_selecaoRX:
  2608                           
  2609                           	psect	text3
  2610     019F                     __ptext3:	
  2611 ;; *************** function ___lwdiv *****************
  2612 ;; Defined at:
  2613 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  divisor         2    0[BANK0 ] unsigned int 
  2616 ;;  dividend        2    2[BANK0 ] unsigned int 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  quotient        2    4[BANK0 ] unsigned int 
  2619 ;;  counter         1    6[BANK0 ] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  2    0[BANK0 ] unsigned int 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2629 ;;      Params:         0       4       0       0       0       0
  2630 ;;      Locals:         0       3       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0
  2632 ;;      Totals:         0       7       0       0       0       0
  2633 ;;Total ram usage:        7 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 5
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_selecaoRX
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643     019F                     ___lwdiv:	
  2644                           ;psect for function ___lwdiv
  2645                           
  2646     019F                     l1451:	
  2647                           ;incstack = 0
  2648                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2649                           
  2650     019F  0020               	movlb	0	; select bank0
  2651     01A0  01BA               	clrf	___lwdiv@quotient
  2652     01A1  01BB               	clrf	___lwdiv@quotient+1
  2653     01A2                     l1453:
  2654     01A2  0836               	movf	___lwdiv@divisor,w
  2655     01A3  0437               	iorwf	___lwdiv@divisor+1,w
  2656     01A4  1903               	btfsc	3,2
  2657     01A5  29A7               	goto	u531
  2658     01A6  29A8               	goto	u530
  2659     01A7                     u531:
  2660     01A7  29D5               	goto	l1473
  2661     01A8                     u530:
  2662     01A8                     l1455:
  2663     01A8  3001               	movlw	1
  2664     01A9  00BC               	movwf	___lwdiv@counter
  2665     01AA  29B2               	goto	l1461
  2666     01AB                     l1457:
  2667     01AB  3001               	movlw	1
  2668     01AC                     u545:
  2669     01AC  35B6               	lslf	___lwdiv@divisor,f
  2670     01AD  0DB7               	rlf	___lwdiv@divisor+1,f
  2671     01AE  0B89               	decfsz	9,f
  2672     01AF  29AC               	goto	u545
  2673     01B0                     l1459:
  2674     01B0  3001               	movlw	1
  2675     01B1  07BC               	addwf	___lwdiv@counter,f
  2676     01B2                     l1461:
  2677     01B2  1FB7               	btfss	___lwdiv@divisor+1,7
  2678     01B3  29B5               	goto	u551
  2679     01B4  29B6               	goto	u550
  2680     01B5                     u551:
  2681     01B5  29AB               	goto	l1457
  2682     01B6                     u550:
  2683     01B6                     l1463:
  2684     01B6  3001               	movlw	1
  2685     01B7                     u565:
  2686     01B7  35BA               	lslf	___lwdiv@quotient,f
  2687     01B8  0DBB               	rlf	___lwdiv@quotient+1,f
  2688     01B9  0B89               	decfsz	9,f
  2689     01BA  29B7               	goto	u565
  2690     01BB  0837               	movf	___lwdiv@divisor+1,w
  2691     01BC  0239               	subwf	___lwdiv@dividend+1,w
  2692     01BD  1D03               	skipz
  2693     01BE  29C1               	goto	u575
  2694     01BF  0836               	movf	___lwdiv@divisor,w
  2695     01C0  0238               	subwf	___lwdiv@dividend,w
  2696     01C1                     u575:
  2697     01C1  1C03               	skipc
  2698     01C2  29C4               	goto	u571
  2699     01C3  29C5               	goto	u570
  2700     01C4                     u571:
  2701     01C4  29CA               	goto	l1469
  2702     01C5                     u570:
  2703     01C5                     l1465:
  2704     01C5  0836               	movf	___lwdiv@divisor,w
  2705     01C6  02B8               	subwf	___lwdiv@dividend,f
  2706     01C7  0837               	movf	___lwdiv@divisor+1,w
  2707     01C8  3BB9               	subwfb	___lwdiv@dividend+1,f
  2708     01C9                     l1467:
  2709     01C9  143A               	bsf	___lwdiv@quotient,0
  2710     01CA                     l1469:
  2711     01CA  3001               	movlw	1
  2712     01CB                     u585:
  2713     01CB  36B7               	lsrf	___lwdiv@divisor+1,f
  2714     01CC  0CB6               	rrf	___lwdiv@divisor,f
  2715     01CD  0B89               	decfsz	9,f
  2716     01CE  29CB               	goto	u585
  2717     01CF                     l1471:
  2718     01CF  3001               	movlw	1
  2719     01D0  02BC               	subwf	___lwdiv@counter,f
  2720     01D1  1D03               	btfss	3,2
  2721     01D2  29D4               	goto	u591
  2722     01D3  29D5               	goto	u590
  2723     01D4                     u591:
  2724     01D4  29B6               	goto	l1463
  2725     01D5                     u590:
  2726     01D5                     l1473:
  2727     01D5  083B               	movf	___lwdiv@quotient+1,w
  2728     01D6  00B7               	movwf	?___lwdiv+1
  2729     01D7  083A               	movf	___lwdiv@quotient,w
  2730     01D8  00B6               	movwf	?___lwdiv
  2731     01D9                     l835:
  2732     01D9  0008               	return
  2733     01DA                     __end_of___lwdiv:
  2734                           
  2735                           	psect	text4
  2736     0262                     __ptext4:	
  2737 ;; *************** function _EPWM2_LoadDutyValue *****************
  2738 ;; Defined at:
  2739 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2753 ;;      Params:         0       2       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0
  2755 ;;      Temps:          0       2       0       0       0       0
  2756 ;;      Totals:         0       4       0       0       0       0
  2757 ;;Total ram usage:        4 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 5
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_selecaoRX
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767     0262                     _EPWM2_LoadDutyValue:	
  2768                           ;psect for function _EPWM2_LoadDutyValue
  2769                           
  2770     0262                     l1427:	
  2771                           ;incstack = 0
  2772                           ; Regs used in _EPWM2_LoadDutyValue: [wreg+status,2+status,0]
  2773                           
  2774                           
  2775                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  2776     0262  0020               	movlb	0	; select bank0
  2777     0263  0837               	movf	EPWM2_LoadDutyValue@dutyValue+1,w
  2778     0264  00B9               	movwf	??_EPWM2_LoadDutyValue+1
  2779     0265  0836               	movf	EPWM2_LoadDutyValue@dutyValue,w
  2780     0266  00B8               	movwf	??_EPWM2_LoadDutyValue
  2781     0267  36B9               	lsrf	??_EPWM2_LoadDutyValue+1,f
  2782     0268  0CB8               	rrf	??_EPWM2_LoadDutyValue,f
  2783     0269  36B9               	lsrf	??_EPWM2_LoadDutyValue+1,f
  2784     026A  0CB8               	rrf	??_EPWM2_LoadDutyValue,f
  2785     026B  0838               	movf	??_EPWM2_LoadDutyValue,w
  2786     026C  0025               	movlb	5	; select bank5
  2787     026D  0098               	movwf	24	;volatile
  2788                           
  2789                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  2790     026E  0020               	movlb	0	; select bank0
  2791     026F  0836               	movf	EPWM2_LoadDutyValue@dutyValue,w
  2792     0270  3903               	andlw	3
  2793     0271  00B8               	movwf	??_EPWM2_LoadDutyValue
  2794     0272  3004               	movlw	4
  2795     0273                     u495:
  2796     0273  35B8               	lslf	??_EPWM2_LoadDutyValue,f
  2797     0274  0B89               	decfsz	9,f
  2798     0275  2A73               	goto	u495
  2799     0276  0025               	movlb	5	; select bank5
  2800     0277  081A               	movf	26,w	;volatile
  2801     0278  39CF               	andlw	207
  2802     0279  0020               	movlb	0	; select bank0
  2803     027A  0438               	iorwf	??_EPWM2_LoadDutyValue,w
  2804     027B  0025               	movlb	5	; select bank5
  2805     027C  009A               	movwf	26	;volatile
  2806     027D                     l207:
  2807     027D  0008               	return
  2808     027E                     __end_of_EPWM2_LoadDutyValue:
  2809                           
  2810                           	psect	text5
  2811     0299                     __ptext5:	
  2812 ;; *************** function _SYSTEM_Initialize *****************
  2813 ;; Defined at:
  2814 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2828 ;;      Params:         0       0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 7
  2835 ;; This function calls:
  2836 ;;		_ADC_Initialize
  2837 ;;		_EPWM2_Initialize
  2838 ;;		_EUSART_Initialize
  2839 ;;		_OSCILLATOR_Initialize
  2840 ;;		_PIN_MANAGER_Initialize
  2841 ;;		_TMR1_Initialize
  2842 ;;		_TMR2_Initialize
  2843 ;;		_WDT_Initialize
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849     0299                     _SYSTEM_Initialize:	
  2850                           ;psect for function _SYSTEM_Initialize
  2851                           
  2852     0299                     l1623:	
  2853                           ;incstack = 0
  2854                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2855                           
  2856                           
  2857                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2858     0299  3182  22CB  3182   	fcall	_PIN_MANAGER_Initialize
  2859                           
  2860                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2861     029C  3183  2338  3182   	fcall	_OSCILLATOR_Initialize
  2862                           
  2863                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2864     029F  3183  2367  3182   	fcall	_WDT_Initialize
  2865     02A2                     l1625:
  2866                           
  2867                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  2868     02A2  3183  2304  3182   	fcall	_EPWM2_Initialize
  2869     02A5                     l1627:
  2870                           
  2871                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2872     02A5  3183  2330  3182   	fcall	_ADC_Initialize
  2873     02A8                     l1629:
  2874                           
  2875                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2876     02A8  3183  2328  3182   	fcall	_TMR2_Initialize
  2877     02AB                     l1631:
  2878                           
  2879                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  2880     02AB  3182  22B2  3182   	fcall	_TMR1_Initialize
  2881     02AE                     l1633:
  2882                           
  2883                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
  2884     02AE  3182  2200  3182   	fcall	_EUSART_Initialize
  2885     02B1                     l55:
  2886     02B1  0008               	return
  2887     02B2                     __end_of_SYSTEM_Initialize:
  2888                           
  2889                           	psect	text6
  2890     0367                     __ptext6:	
  2891 ;; *************** function _WDT_Initialize *****************
  2892 ;; Defined at:
  2893 ;;		line 73 in file "mcc_generated_files/mcc.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		None
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2907 ;;      Params:         0       0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0
  2910 ;;      Totals:         0       0       0       0       0       0
  2911 ;;Total ram usage:        0 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 5
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_SYSTEM_Initialize
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921     0367                     _WDT_Initialize:	
  2922                           ;psect for function _WDT_Initialize
  2923                           
  2924     0367                     l1499:	
  2925                           ;incstack = 0
  2926                           ; Regs used in _WDT_Initialize: []
  2927                           
  2928                           
  2929                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  2930     0367  3016               	movlw	22
  2931     0368  0021               	movlb	1	; select bank1
  2932     0369  0097               	movwf	23	;volatile
  2933     036A                     l61:
  2934     036A  0008               	return
  2935     036B                     __end_of_WDT_Initialize:
  2936                           
  2937                           	psect	text7
  2938     0328                     __ptext7:	
  2939 ;; *************** function _TMR2_Initialize *****************
  2940 ;; Defined at:
  2941 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		status,2
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2955 ;;      Params:         0       0       0       0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0
  2958 ;;      Totals:         0       0       0       0       0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 5
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_SYSTEM_Initialize
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969     0328                     _TMR2_Initialize:	
  2970                           ;psect for function _TMR2_Initialize
  2971                           
  2972     0328                     l1517:	
  2973                           ;incstack = 0
  2974                           ; Regs used in _TMR2_Initialize: [status,2]
  2975                           
  2976                           
  2977                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  2978     0328  30FF               	movlw	255
  2979     0329  0020               	movlb	0	; select bank0
  2980     032A  009B               	movwf	27	;volatile
  2981     032B                     l1519:
  2982                           
  2983                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  2984     032B  019A               	clrf	26	;volatile
  2985     032C                     l1521:
  2986                           
  2987                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  2988     032C  1091               	bcf	17,1	;volatile
  2989     032D                     l1523:
  2990                           
  2991                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  2992     032D  3004               	movlw	4
  2993     032E  009C               	movwf	28	;volatile
  2994     032F                     l305:
  2995     032F  0008               	return
  2996     0330                     __end_of_TMR2_Initialize:
  2997                           
  2998                           	psect	text8
  2999     02B2                     __ptext8:	
  3000 ;; *************** function _TMR1_Initialize *****************
  3001 ;; Defined at:
  3002 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0, pclath, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3016 ;;      Params:         0       0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0
  3019 ;;      Totals:         0       0       0       0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 6
  3023 ;; This function calls:
  3024 ;;		_TMR1_SetInterruptHandler
  3025 ;; This function is called by:
  3026 ;;		_SYSTEM_Initialize
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030     02B2                     _TMR1_Initialize:	
  3031                           ;psect for function _TMR1_Initialize
  3032                           
  3033     02B2                     l1525:	
  3034                           ;incstack = 0
  3035                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3036                           
  3037                           
  3038                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3039     02B2  0020               	movlb	0	; select bank0
  3040     02B3  0199               	clrf	25	;volatile
  3041     02B4                     l1527:
  3042                           
  3043                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x0B;
  3044     02B4  300B               	movlw	11
  3045     02B5  0097               	movwf	23	;volatile
  3046     02B6                     l1529:
  3047                           
  3048                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xDC;
  3049     02B6  30DC               	movlw	220
  3050     02B7  0096               	movwf	22	;volatile
  3051     02B8                     l1531:
  3052                           
  3053                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3054     02B8  1011               	bcf	17,0	;volatile
  3055     02B9                     l1533:
  3056                           
  3057                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3058     02B9  0817               	movf	23,w	;volatile
  3059     02BA  00B0               	movwf	_timer1ReloadVal+1	;volatile
  3060     02BB  0816               	movf	22,w	;volatile
  3061     02BC  00AF               	movwf	_timer1ReloadVal	;volatile
  3062     02BD                     l1535:
  3063                           
  3064                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3065     02BD  0021               	movlb	1	; select bank1
  3066     02BE  1411               	bsf	17,0	;volatile
  3067     02BF                     l1537:
  3068                           
  3069                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3070     02BF  306B               	movlw	low _TMR1_DefaultInterruptHandler
  3071     02C0  0020               	movlb	0	; select bank0
  3072     02C1  00B6               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3073     02C2  3003               	movlw	high _TMR1_DefaultInterruptHandler
  3074     02C3  00B7               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3075     02C4  3183  2345  3182   	fcall	_TMR1_SetInterruptHandler
  3076     02C7                     l1539:
  3077                           
  3078                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  3079     02C7  3031               	movlw	49
  3080     02C8  0020               	movlb	0	; select bank0
  3081     02C9  0098               	movwf	24	;volatile
  3082     02CA                     l253:
  3083     02CA  0008               	return
  3084     02CB                     __end_of_TMR1_Initialize:
  3085                           
  3086                           	psect	text9
  3087     0345                     __ptext9:	
  3088 ;; *************** function _TMR1_SetInterruptHandler *****************
  3089 ;; Defined at:
  3090 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3093 ;;		 -> TRUSART(1), TMR1_DefaultInterruptHandler(1), 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3105 ;;      Params:         0       2       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0
  3108 ;;      Totals:         0       2       0       0       0       0
  3109 ;;Total ram usage:        2 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 5
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_TMR1_Initialize
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120     0345                     _TMR1_SetInterruptHandler:	
  3121                           ;psect for function _TMR1_SetInterruptHandler
  3122                           
  3123     0345                     l1429:	
  3124                           ;incstack = 0
  3125                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3126                           
  3127                           
  3128                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
  3129     0345  0020               	movlb	0	; select bank0
  3130     0346  0837               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3131     0347  00C4               	movwf	_TMR1_InterruptHandler+1
  3132     0348  0836               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3133     0349  00C3               	movwf	_TMR1_InterruptHandler
  3134     034A                     l289:
  3135     034A  0008               	return
  3136     034B                     __end_of_TMR1_SetInterruptHandler:
  3137                           
  3138                           	psect	text10
  3139     02CB                     __ptext10:	
  3140 ;; *************** function _PIN_MANAGER_Initialize *****************
  3141 ;; Defined at:
  3142 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		status,2
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3156 ;;      Params:         0       0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 5
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_SYSTEM_Initialize
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170     02CB                     _PIN_MANAGER_Initialize:	
  3171                           ;psect for function _PIN_MANAGER_Initialize
  3172                           
  3173     02CB                     l1477:	
  3174                           ;incstack = 0
  3175                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  3176                           
  3177                           
  3178                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3179     02CB  0022               	movlb	2	; select bank2
  3180     02CC  018C               	clrf	12	;volatile
  3181                           
  3182                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3183     02CD  018D               	clrf	13	;volatile
  3184     02CE                     l1479:
  3185                           
  3186                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x7F;
  3187     02CE  307F               	movlw	127
  3188     02CF  0021               	movlb	1	; select bank1
  3189     02D0  008C               	movwf	12	;volatile
  3190     02D1                     l1481:
  3191                           
  3192                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  3193     02D1  30FF               	movlw	255
  3194     02D2  008D               	movwf	13	;volatile
  3195     02D3                     l1483:
  3196                           
  3197                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xDA;
  3198     02D3  30DA               	movlw	218
  3199     02D4  0023               	movlb	3	; select bank3
  3200     02D5  008D               	movwf	13	;volatile
  3201     02D6                     l1485:
  3202                           
  3203                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  3204     02D6  301F               	movlw	31
  3205     02D7  008C               	movwf	12	;volatile
  3206     02D8                     l1487:
  3207                           
  3208                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x02;
  3209     02D8  3002               	movlw	2
  3210     02D9  0024               	movlb	4	; select bank4
  3211     02DA  008D               	movwf	13	;volatile
  3212                           
  3213                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3214     02DB  018C               	clrf	12	;volatile
  3215     02DC                     l1489:
  3216                           
  3217                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 0;
  3218     02DC  0021               	movlb	1	; select bank1
  3219     02DD  1395               	bcf	21,7	;volatile
  3220     02DE                     l1491:
  3221                           
  3222                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x88;
  3223     02DE  3088               	movlw	136
  3224     02DF  0022               	movlb	2	; select bank2
  3225     02E0  009D               	movwf	29	;volatile
  3226     02E1                     l1493:
  3227                           
  3228                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  3229     02E1  3001               	movlw	1
  3230     02E2  009E               	movwf	30	;volatile
  3231     02E3                     l25:
  3232     02E3  0008               	return
  3233     02E4                     __end_of_PIN_MANAGER_Initialize:
  3234                           
  3235                           	psect	text11
  3236     0338                     __ptext11:	
  3237 ;; *************** function _OSCILLATOR_Initialize *****************
  3238 ;; Defined at:
  3239 ;;		line 63 in file "mcc_generated_files/mcc.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		status,2
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3253 ;;      Params:         0       0       0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0
  3256 ;;      Totals:         0       0       0       0       0       0
  3257 ;;Total ram usage:        0 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 5
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_SYSTEM_Initialize
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267     0338                     _OSCILLATOR_Initialize:	
  3268                           ;psect for function _OSCILLATOR_Initialize
  3269                           
  3270     0338                     l1495:	
  3271                           ;incstack = 0
  3272                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  3273                           
  3274                           
  3275                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  3276     0338  3070               	movlw	112
  3277     0339  0021               	movlb	1	; select bank1
  3278     033A  0099               	movwf	25	;volatile
  3279     033B                     l1497:
  3280                           
  3281                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  3282     033B  0198               	clrf	24	;volatile
  3283                           
  3284                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  3285     033C  0022               	movlb	2	; select bank2
  3286     033D  0196               	clrf	22	;volatile
  3287     033E                     l58:
  3288     033E  0008               	return
  3289     033F                     __end_of_OSCILLATOR_Initialize:
  3290                           
  3291                           	psect	text12
  3292     0200                     __ptext12:	
  3293 ;; *************** function _EUSART_Initialize *****************
  3294 ;; Defined at:
  3295 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3309 ;;      Params:         0       0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 6
  3316 ;; This function calls:
  3317 ;;		_EUSART_SetErrorHandler
  3318 ;;		_EUSART_SetFramingErrorHandler
  3319 ;;		_EUSART_SetOverrunErrorHandler
  3320 ;; This function is called by:
  3321 ;;		_SYSTEM_Initialize
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325     0200                     _EUSART_Initialize:	
  3326                           ;psect for function _EUSART_Initialize
  3327                           
  3328     0200                     l1541:	
  3329                           ;incstack = 0
  3330                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3331                           
  3332                           
  3333                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3334     0200  3008               	movlw	8
  3335     0201  0023               	movlb	3	; select bank3
  3336     0202  009F               	movwf	31	;volatile
  3337                           
  3338                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  3339     0203  3090               	movlw	144
  3340     0204  009D               	movwf	29	;volatile
  3341                           
  3342                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3343     0205  3024               	movlw	36
  3344     0206  009E               	movwf	30	;volatile
  3345                           
  3346                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  3347     0207  3067               	movlw	103
  3348     0208  009B               	movwf	27	;volatile
  3349     0209                     l1543:
  3350                           
  3351                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  3352     0209  019C               	clrf	28	;volatile
  3353     020A                     l1545:
  3354                           
  3355                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3356     020A  3000               	movlw	0
  3357     020B  0020               	movlb	0	; select bank0
  3358     020C  00B6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3359     020D  3000               	movlw	0
  3360     020E  00B7               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3361     020F  3183  2351  3182   	fcall	_EUSART_SetFramingErrorHandler
  3362     0212                     l1547:
  3363                           
  3364                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3365     0212  3000               	movlw	0
  3366     0213  0020               	movlb	0	; select bank0
  3367     0214  00B6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3368     0215  3000               	movlw	0
  3369     0216  00B7               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3370     0217  3183  234B  3182   	fcall	_EUSART_SetOverrunErrorHandler
  3371     021A                     l1549:
  3372                           
  3373                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3374     021A  3000               	movlw	0
  3375     021B  0020               	movlb	0	; select bank0
  3376     021C  00B6               	movwf	EUSART_SetErrorHandler@interruptHandler
  3377     021D  3000               	movlw	0
  3378     021E  00B7               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3379     021F  3183  2357  3182   	fcall	_EUSART_SetErrorHandler
  3380     0222                     l1551:
  3381                           
  3382                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3383     0222  0020               	movlb	0	; select bank0
  3384     0223  01B5               	clrf	_eusartRxLastError	;volatile
  3385     0224                     l104:
  3386     0224  0008               	return
  3387     0225                     __end_of_EUSART_Initialize:
  3388                           
  3389                           	psect	text13
  3390     034B                     __ptext13:	
  3391 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3392 ;; Defined at:
  3393 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3396 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3408 ;;      Params:         0       2       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0
  3411 ;;      Totals:         0       2       0       0       0       0
  3412 ;;Total ram usage:        2 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 5
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_EUSART_Initialize
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422     034B                     _EUSART_SetOverrunErrorHandler:	
  3423                           ;psect for function _EUSART_SetOverrunErrorHandler
  3424                           
  3425     034B                     l1423:	
  3426                           ;incstack = 0
  3427                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3428                           
  3429                           
  3430                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  3431     034B  0020               	movlb	0	; select bank0
  3432     034C  0837               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3433     034D  00C8               	movwf	_EUSART_OverrunErrorHandler+1
  3434     034E  0836               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3435     034F  00C7               	movwf	_EUSART_OverrunErrorHandler
  3436     0350                     l146:
  3437     0350  0008               	return
  3438     0351                     __end_of_EUSART_SetOverrunErrorHandler:
  3439                           
  3440                           	psect	text14
  3441     0351                     __ptext14:	
  3442 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3443 ;; Defined at:
  3444 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3447 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3459 ;;      Params:         0       2       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0       0
  3462 ;;      Totals:         0       2       0       0       0       0
  3463 ;;Total ram usage:        2 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 5
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_EUSART_Initialize
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     0351                     _EUSART_SetFramingErrorHandler:	
  3474                           ;psect for function _EUSART_SetFramingErrorHandler
  3475                           
  3476     0351                     l1421:	
  3477                           ;incstack = 0
  3478                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3479                           
  3480                           
  3481                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  3482     0351  0020               	movlb	0	; select bank0
  3483     0352  0837               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3484     0353  00CA               	movwf	_EUSART_FramingErrorHandler+1
  3485     0354  0836               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3486     0355  00C9               	movwf	_EUSART_FramingErrorHandler
  3487     0356                     l143:
  3488     0356  0008               	return
  3489     0357                     __end_of_EUSART_SetFramingErrorHandler:
  3490                           
  3491                           	psect	text15
  3492     0357                     __ptext15:	
  3493 ;; *************** function _EUSART_SetErrorHandler *****************
  3494 ;; Defined at:
  3495 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3498 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3510 ;;      Params:         0       2       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0
  3513 ;;      Totals:         0       2       0       0       0       0
  3514 ;;Total ram usage:        2 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 5
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_EUSART_Initialize
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524     0357                     _EUSART_SetErrorHandler:	
  3525                           ;psect for function _EUSART_SetErrorHandler
  3526                           
  3527     0357                     l1425:	
  3528                           ;incstack = 0
  3529                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3530                           
  3531                           
  3532                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  3533     0357  0020               	movlb	0	; select bank0
  3534     0358  0837               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3535     0359  00C6               	movwf	_EUSART_ErrorHandler+1
  3536     035A  0836               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3537     035B  00C5               	movwf	_EUSART_ErrorHandler
  3538     035C                     l149:
  3539     035C  0008               	return
  3540     035D                     __end_of_EUSART_SetErrorHandler:
  3541                           
  3542                           	psect	text16
  3543     0304                     __ptext16:	
  3544 ;; *************** function _EPWM2_Initialize *****************
  3545 ;; Defined at:
  3546 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3560 ;;      Params:         0       0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 5
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_SYSTEM_Initialize
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574     0304                     _EPWM2_Initialize:	
  3575                           ;psect for function _EPWM2_Initialize
  3576                           
  3577     0304                     l1501:	
  3578                           ;incstack = 0
  3579                           ; Regs used in _EPWM2_Initialize: [wreg+status,2+status,0]
  3580                           
  3581                           
  3582                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x0C;
  3583     0304  300C               	movlw	12
  3584     0305  0025               	movlb	5	; select bank5
  3585     0306  009A               	movwf	26	;volatile
  3586     0307                     l1503:
  3587                           
  3588                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  3589     0307  019C               	clrf	28	;volatile
  3590     0308                     l1505:
  3591                           
  3592                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  3593     0308  3080               	movlw	128
  3594     0309  009B               	movwf	27	;volatile
  3595     030A                     l1507:
  3596                           
  3597                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  3598     030A  3001               	movlw	1
  3599     030B  009D               	movwf	29	;volatile
  3600                           
  3601                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  3602     030C  0199               	clrf	25	;volatile
  3603                           
  3604                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x00;
  3605     030D  0198               	clrf	24	;volatile
  3606     030E                     l1509:
  3607                           
  3608                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  3609     030E  30F3               	movlw	-13
  3610     030F  059E               	andwf	30,f	;volatile
  3611     0310                     l204:
  3612     0310  0008               	return
  3613     0311                     __end_of_EPWM2_Initialize:
  3614                           
  3615                           	psect	text17
  3616     0330                     __ptext17:	
  3617 ;; *************** function _ADC_Initialize *****************
  3618 ;; Defined at:
  3619 ;;		line 67 in file "mcc_generated_files/adc.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		status,2
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3633 ;;      Params:         0       0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 5
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_SYSTEM_Initialize
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647     0330                     _ADC_Initialize:	
  3648                           ;psect for function _ADC_Initialize
  3649                           
  3650     0330                     l1511:	
  3651                           ;incstack = 0
  3652                           ; Regs used in _ADC_Initialize: [status,2]
  3653                           
  3654                           
  3655                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x90;
  3656     0330  3090               	movlw	144
  3657     0331  0021               	movlb	1	; select bank1
  3658     0332  009E               	movwf	30	;volatile
  3659     0333                     l1513:
  3660                           
  3661                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3662     0333  019B               	clrf	27	;volatile
  3663                           
  3664                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3665     0334  019C               	clrf	28	;volatile
  3666     0335                     l1515:
  3667                           
  3668                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  3669     0335  3001               	movlw	1
  3670     0336  009D               	movwf	29	;volatile
  3671     0337                     l166:
  3672     0337  0008               	return
  3673     0338                     __end_of_ADC_Initialize:
  3674                           
  3675                           	psect	text18
  3676     0362                     __ptext18:	
  3677 ;; *************** function _EUSART_is_rx_ready *****************
  3678 ;; Defined at:
  3679 ;;		line 99 in file "mcc_generated_files/eusart.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      _Bool 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3693 ;;      Params:         0       0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 5
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707     0362                     _EUSART_is_rx_ready:	
  3708                           ;psect for function _EUSART_is_rx_ready
  3709                           
  3710     0362                     l1635:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3713                           
  3714                           
  3715                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  3716     0362  0020               	movlb	0	; select bank0
  3717     0363  0E11               	swapf	17,w	;volatile
  3718     0364  0C89               	rrf	9,f
  3719     0365  3901               	andlw	1
  3720     0366                     l112:
  3721     0366  0008               	return
  3722     0367                     __end_of_EUSART_is_rx_ready:
  3723                           
  3724                           	psect	text19
  3725     02F5                     __ptext19:	
  3726 ;; *************** function _EUSART_Read *****************
  3727 ;; Defined at:
  3728 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      unsigned char 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3742 ;;      Params:         0       0       0       0       0       0
  3743 ;;      Locals:         0       0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0
  3745 ;;      Totals:         0       0       0       0       0       0
  3746 ;;Total ram usage:        0 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 5
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756     02F5                     _EUSART_Read:	
  3757                           ;psect for function _EUSART_Read
  3758                           
  3759     02F5                     l1639:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _EUSART_Read: [wreg+status,2]
  3762                           
  3763     02F5                     l121:	
  3764                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  3765                           
  3766                           
  3767                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  3768     02F5  0020               	movlb	0	; select bank0
  3769     02F6  1E91               	btfss	17,5	;volatile
  3770     02F7  2AF9               	goto	u711
  3771     02F8  2AFA               	goto	u710
  3772     02F9                     u711:
  3773     02F9  2AF5               	goto	l121
  3774     02FA                     u710:
  3775     02FA                     l1641:
  3776                           
  3777                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  3778     02FA  01B5               	clrf	_eusartRxLastError	;volatile
  3779     02FB                     l1643:
  3780                           
  3781                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  3782     02FB  0023               	movlb	3	; select bank3
  3783     02FC  1C9D               	btfss	29,1	;volatile
  3784     02FD  2AFF               	goto	u721
  3785     02FE  2B00               	goto	u720
  3786     02FF                     u721:
  3787     02FF  2B02               	goto	l1647
  3788     0300                     u720:
  3789     0300                     l1645:
  3790                           
  3791                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  3792     0300  121D               	bcf	29,4	;volatile
  3793                           
  3794                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  3795     0301  161D               	bsf	29,4	;volatile
  3796     0302                     l1647:
  3797                           
  3798                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  3799     0302  0819               	movf	25,w	;volatile
  3800     0303                     l125:
  3801     0303  0008               	return
  3802     0304                     __end_of_EUSART_Read:
  3803                           
  3804                           	psect	intentry
  3805     0004                     __pintentry:	
  3806 ;; *************** function _INTERRUPT_InterruptManager *****************
  3807 ;; Defined at:
  3808 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3822 ;;      Params:         0       0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0
  3825 ;;      Totals:         0       0       0       0       0       0
  3826 ;;Total ram usage:        0 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 4
  3829 ;; This function calls:
  3830 ;;		_TMR1_ISR
  3831 ;; This function is called by:
  3832 ;;		Interrupt level 1
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836     0004                     _INTERRUPT_InterruptManager:
  3837                           
  3838                           ;incstack = 0
  3839     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3840                           
  3841                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3842     0005  3180               	pagesel	$
  3843     0006                     i1l1675:
  3844                           
  3845                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3846     0006  1F0B               	btfss	11,6	;volatile
  3847     0007  2809               	goto	u76_21
  3848     0008  280A               	goto	u76_20
  3849     0009                     u76_21:
  3850     0009  2817               	goto	i1l224
  3851     000A                     u76_20:
  3852     000A                     i1l1677:
  3853                           
  3854                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3855     000A  0021               	movlb	1	; select bank1
  3856     000B  1C11               	btfss	17,0	;volatile
  3857     000C  280E               	goto	u77_21
  3858     000D  280F               	goto	u77_20
  3859     000E                     u77_21:
  3860     000E  2817               	goto	i1l224
  3861     000F                     u77_20:
  3862     000F                     i1l1679:
  3863     000F  0020               	movlb	0	; select bank0
  3864     0010  1C11               	btfss	17,0	;volatile
  3865     0011  2813               	goto	u78_21
  3866     0012  2814               	goto	u78_20
  3867     0013                     u78_21:
  3868     0013  2817               	goto	i1l224
  3869     0014                     u78_20:
  3870     0014                     i1l1681:
  3871                           
  3872                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  3873     0014  3182  2244  3180   	fcall	_TMR1_ISR
  3874     0017                     i1l224:	
  3875                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3876                           
  3877     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3878     0018  0009               	retfie
  3879     0019                     __end_of_INTERRUPT_InterruptManager:
  3880                           
  3881                           	psect	text21
  3882     0244                     __ptext21:	
  3883 ;; *************** function _TMR1_ISR *****************
  3884 ;; Defined at:
  3885 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, pclath, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3899 ;;      Params:         0       0       0       0       0       0
  3900 ;;      Locals:         0       0       0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0
  3902 ;;      Totals:         0       0       0       0       0       0
  3903 ;;Total ram usage:        0 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 3
  3906 ;; This function calls:
  3907 ;;		_TMR1_CallBack
  3908 ;;		_TMR1_WriteTimer
  3909 ;; This function is called by:
  3910 ;;		_INTERRUPT_InterruptManager
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914     0244                     _TMR1_ISR:	
  3915                           ;psect for function _TMR1_ISR
  3916                           
  3917     0244                     i1l1651:	
  3918                           ;incstack = 0
  3919                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3920                           
  3921                           
  3922                           ;mcc_generated_files/tmr1.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  3923     0244  0020               	movlb	0	; select bank0
  3924     0245  1011               	bcf	17,0	;volatile
  3925     0246                     i1l1653:
  3926                           
  3927                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  3928     0246  0830               	movf	_timer1ReloadVal+1,w	;volatile
  3929     0247  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  3930     0248  082F               	movf	_timer1ReloadVal,w	;volatile
  3931     0249  00F0               	movwf	TMR1_WriteTimer@timerVal
  3932     024A  3182  22E4  3182   	fcall	_TMR1_WriteTimer
  3933     024D                     i1l1655:
  3934                           
  3935                           ;mcc_generated_files/tmr1.c: 166:     if (++CountCallBack >= 4)
  3936     024D  3001               	movlw	1
  3937     024E  0020               	movlb	0	; select bank0
  3938     024F  07AD               	addwf	TMR1_ISR@CountCallBack,f	;volatile
  3939     0250  3000               	movlw	0
  3940     0251  3DAE               	addwfc	TMR1_ISR@CountCallBack+1,f	;volatile
  3941     0252  3000               	movlw	0
  3942     0253  022E               	subwf	TMR1_ISR@CountCallBack+1,w	;volatile
  3943     0254  3004               	movlw	4
  3944     0255  1903               	skipnz
  3945     0256  022D               	subwf	TMR1_ISR@CountCallBack,w	;volatile
  3946     0257  1C03               	skipc
  3947     0258  2A5A               	goto	u73_21
  3948     0259  2A5B               	goto	u73_20
  3949     025A                     u73_21:
  3950     025A  2A61               	goto	i1l282
  3951     025B                     u73_20:
  3952     025B                     i1l1657:
  3953                           
  3954                           ;mcc_generated_files/tmr1.c: 167:     {;mcc_generated_files/tmr1.c: 169:         TMR1_Ca
      +                          llBack();
  3955     025B  3183  2311  3182   	fcall	_TMR1_CallBack
  3956     025E                     i1l1659:
  3957                           
  3958                           ;mcc_generated_files/tmr1.c: 172:         CountCallBack = 0;
  3959     025E  0020               	movlb	0	; select bank0
  3960     025F  01AD               	clrf	TMR1_ISR@CountCallBack	;volatile
  3961     0260  01AE               	clrf	TMR1_ISR@CountCallBack+1	;volatile
  3962     0261                     i1l282:
  3963     0261  0008               	return
  3964     0262                     __end_of_TMR1_ISR:
  3965                           
  3966                           	psect	text22
  3967     02E4                     __ptext22:	
  3968 ;; *************** function _TMR1_WriteTimer *****************
  3969 ;; Defined at:
  3970 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  timerVal        2    0[COMMON] unsigned short 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3984 ;;      Params:         2       0       0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0
  3987 ;;      Totals:         2       0       0       0       0       0
  3988 ;;Total ram usage:        2 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_TMR1_ISR
  3994 ;;		_TMR1_Reload
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998     02E4                     _TMR1_WriteTimer:	
  3999                           ;psect for function _TMR1_WriteTimer
  4000                           
  4001     02E4                     i1l1553:	
  4002                           ;incstack = 0
  4003                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4004                           
  4005                           
  4006                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  4007     02E4  0020               	movlb	0	; select bank0
  4008     02E5  1D18               	btfss	24,2	;volatile
  4009     02E6  2AE8               	goto	u60_21
  4010     02E7  2AE9               	goto	u60_20
  4011     02E8                     u60_21:
  4012     02E8  2AF0               	goto	i1l1563
  4013     02E9                     u60_20:
  4014     02E9                     i1l1555:
  4015                           
  4016                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4017     02E9  1018               	bcf	24,0	;volatile
  4018     02EA                     i1l1557:
  4019                           
  4020                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  4021     02EA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4022     02EB  0097               	movwf	23	;volatile
  4023     02EC                     i1l1559:
  4024                           
  4025                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4026     02EC  0870               	movf	TMR1_WriteTimer@timerVal,w
  4027     02ED  0096               	movwf	22	;volatile
  4028     02EE                     i1l1561:
  4029                           
  4030                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4031     02EE  1418               	bsf	24,0	;volatile
  4032                           
  4033                           ;mcc_generated_files/tmr1.c: 133:     }
  4034     02EF  2AF4               	goto	i1l267
  4035     02F0                     i1l1563:
  4036                           
  4037                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4038     02F0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4039     02F1  0097               	movwf	23	;volatile
  4040     02F2                     i1l1565:
  4041                           
  4042                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  4043     02F2  0870               	movf	TMR1_WriteTimer@timerVal,w
  4044     02F3  0096               	movwf	22	;volatile
  4045     02F4                     i1l267:
  4046     02F4  0008               	return
  4047     02F5                     __end_of_TMR1_WriteTimer:
  4048                           
  4049                           	psect	text23
  4050     0311                     __ptext23:	
  4051 ;; *************** function _TMR1_CallBack *****************
  4052 ;; Defined at:
  4053 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4067 ;;      Params:         0       0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 2
  4074 ;; This function calls:
  4075 ;;		NULL
  4076 ;;		_TMR1_DefaultInterruptHandler
  4077 ;;		_TRUSART
  4078 ;; This function is called by:
  4079 ;;		_TMR1_ISR
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083     0311                     _TMR1_CallBack:	
  4084                           ;psect for function _TMR1_CallBack
  4085                           
  4086     0311                     i1l1567:	
  4087                           ;incstack = 0
  4088                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4089                           
  4090                           
  4091                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
  4092     0311  0020               	movlb	0	; select bank0
  4093     0312  0843               	movf	_TMR1_InterruptHandler,w
  4094     0313  0444               	iorwf	_TMR1_InterruptHandler+1,w
  4095     0314  1903               	btfsc	3,2
  4096     0315  2B17               	goto	u61_21
  4097     0316  2B18               	goto	u61_20
  4098     0317                     u61_21:
  4099     0317  2B1D               	goto	i1l286
  4100     0318                     u61_20:
  4101     0318                     i1l1569:
  4102                           
  4103                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
  4104     0318  0844               	movf	_TMR1_InterruptHandler+1,w
  4105     0319  008A               	movwf	10
  4106     031A  0843               	movf	_TMR1_InterruptHandler,w
  4107     031B  000A               	callw
  4108     031C  3183               	pagesel	$
  4109     031D                     i1l286:
  4110     031D  0008               	return
  4111     031E                     __end_of_TMR1_CallBack:
  4112                           
  4113                           	psect	text24
  4114     036B                     __ptext24:	
  4115 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4116 ;; Defined at:
  4117 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		None
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4131 ;;      Params:         0       0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0
  4134 ;;      Totals:         0       0       0       0       0       0
  4135 ;;Total ram usage:        0 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_TMR1_Initialize
  4141 ;;		_TMR1_CallBack
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145     036B                     _TMR1_DefaultInterruptHandler:	
  4146                           ;psect for function _TMR1_DefaultInterruptHandler
  4147                           
  4148     036B                     i1l292:	
  4149                           ;incstack = 0
  4150                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4151                           
  4152     036B  0008               	return
  4153     036C                     __end_of_TMR1_DefaultInterruptHandler:
  4154                           
  4155                           	psect	text25
  4156     0035                     __ptext25:	
  4157 ;; *************** function _TRUSART *****************
  4158 ;; Defined at:
  4159 ;;		line 56 in file "main.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, pclath, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4173 ;;      Params:         0       0       0       0       0       0
  4174 ;;      Locals:         2       0       0       0       0       0
  4175 ;;      Temps:          2       0       0       0       0       0
  4176 ;;      Totals:         4       0       0       0       0       0
  4177 ;;Total ram usage:        4 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 1
  4180 ;; This function calls:
  4181 ;;		_ADC_GetConversion
  4182 ;;		_EUSART_Write
  4183 ;;		___wmul
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;;		_TMR1_CallBack
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190     0035                     _TRUSART:	
  4191                           ;psect for function _TRUSART
  4192                           
  4193     0035                     i1l1431:	
  4194                           ;incstack = 0
  4195                           ; Regs used in _TRUSART: [wreg+status,2+status,0+pclath+cstack]
  4196                           
  4197                           
  4198                           ;main.c: 57:     if(swit){
  4199     0035  0020               	movlb	0	; select bank0
  4200     0036  084F               	movf	_swit,w
  4201     0037  1903               	btfsc	3,2
  4202     0038  283A               	goto	u50_21
  4203     0039  283B               	goto	u50_20
  4204     003A                     u50_21:
  4205     003A  28CB               	goto	i1l368
  4206     003B                     u50_20:
  4207     003B                     i1l1433:
  4208                           
  4209                           ;main.c: 59:     TX1dados.Tx1 = (uint16_t)((ADC_GetConversion(channel_AN0)* 1000 /1024) 
      +                          * vGAINt);
  4210     003B  30E8               	movlw	232
  4211     003C  00F6               	movwf	___wmul@multiplicand
  4212     003D  3003               	movlw	3
  4213     003E  00F7               	movwf	___wmul@multiplicand+1
  4214     003F  3000               	movlw	0
  4215     0040  3182  227E  3180   	fcall	_ADC_GetConversion
  4216     0043  0871               	movf	?_ADC_GetConversion+1,w
  4217     0044  00F5               	movwf	___wmul@multiplier+1
  4218     0045  0870               	movf	?_ADC_GetConversion,w
  4219     0046  00F4               	movwf	___wmul@multiplier
  4220     0047  3182  2225  3180   	fcall	___wmul
  4221     004A  0874               	movf	?___wmul,w
  4222     004B  00FA               	movwf	??_TRUSART
  4223     004C  0875               	movf	?___wmul+1,w
  4224     004D  00FB               	movwf	??_TRUSART+1
  4225     004E  300A               	movlw	10
  4226     004F                     u51_25:
  4227     004F  36FB               	lsrf	??_TRUSART+1,f
  4228     0050  0CFA               	rrf	??_TRUSART,f
  4229     0051  0B89               	decfsz	9,f
  4230     0052  284F               	goto	u51_25
  4231     0053  087A               	movf	??_TRUSART,w
  4232     0054  00FC               	movwf	_TRUSART$1488
  4233     0055  087B               	movf	??_TRUSART+1,w
  4234     0056  00FD               	movwf	_TRUSART$1488+1
  4235                           
  4236                           ;main.c: 59:     TX1dados.Tx1 = (uint16_t)((ADC_GetConversion(channel_AN0)* 1000 /1024) 
      +                          * vGAINt);
  4237     0057  087D               	movf	_TRUSART$1488+1,w
  4238     0058  00F5               	movwf	___wmul@multiplier+1
  4239     0059  087C               	movf	_TRUSART$1488,w
  4240     005A  00F4               	movwf	___wmul@multiplier
  4241     005B  0020               	movlb	0	; select bank0
  4242     005C  084C               	movf	_vGAINt+1,w
  4243     005D  00F7               	movwf	___wmul@multiplicand+1
  4244     005E  084B               	movf	_vGAINt,w
  4245     005F  00F6               	movwf	___wmul@multiplicand
  4246     0060  3182  2225  3180   	fcall	___wmul
  4247     0063  0875               	movf	?___wmul+1,w
  4248     0064  0020               	movlb	0	; select bank0
  4249     0065  00AA               	movwf	_TX1dados+1
  4250     0066  0874               	movf	?___wmul,w
  4251     0067  00A9               	movwf	_TX1dados
  4252     0068                     i1l1435:
  4253                           
  4254                           ;main.c: 63:     TX1dados.vL1 = TX1dados.vL1 << 1;
  4255     0068  3529               	lslf	_TX1dados,w
  4256     0069  00A9               	movwf	_TX1dados
  4257     006A                     i1l1437:
  4258                           
  4259                           ;main.c: 64:     TX1dados.Tx1 = (TX1dados.Tx1 >> 1);
  4260     006A  082A               	movf	_TX1dados+1,w
  4261     006B  00FB               	movwf	??_TRUSART+1
  4262     006C  0829               	movf	_TX1dados,w
  4263     006D  00FA               	movwf	??_TRUSART
  4264     006E  36FB               	lsrf	??_TRUSART+1,f
  4265     006F  0CFA               	rrf	??_TRUSART,f
  4266     0070  087A               	movf	??_TRUSART,w
  4267     0071  00A9               	movwf	_TX1dados
  4268     0072  087B               	movf	??_TRUSART+1,w
  4269     0073  00AA               	movwf	_TX1dados+1
  4270     0074                     i1l1439:
  4271                           
  4272                           ;main.c: 65:     TX1dados.vH1 = TX1dados.vH1 & 0x7F;
  4273     0074  082A               	movf	_TX1dados+1,w
  4274     0075  397F               	andlw	127
  4275     0076  00AA               	movwf	_TX1dados+1
  4276     0077                     i1l1441:
  4277                           
  4278                           ;main.c: 69:     TX2dados.Tx2 = (uint16_t)((ADC_GetConversion(channel_AN1)* 1000 /1024) 
      +                          * vGAINl);
  4279     0077  30E8               	movlw	232
  4280     0078  00F6               	movwf	___wmul@multiplicand
  4281     0079  3003               	movlw	3
  4282     007A  00F7               	movwf	___wmul@multiplicand+1
  4283     007B  3001               	movlw	1
  4284     007C  3182  227E  3180   	fcall	_ADC_GetConversion
  4285     007F  0871               	movf	?_ADC_GetConversion+1,w
  4286     0080  00F5               	movwf	___wmul@multiplier+1
  4287     0081  0870               	movf	?_ADC_GetConversion,w
  4288     0082  00F4               	movwf	___wmul@multiplier
  4289     0083  3182  2225  3180   	fcall	___wmul
  4290     0086  0874               	movf	?___wmul,w
  4291     0087  00FA               	movwf	??_TRUSART
  4292     0088  0875               	movf	?___wmul+1,w
  4293     0089  00FB               	movwf	??_TRUSART+1
  4294     008A  300A               	movlw	10
  4295     008B                     u52_25:
  4296     008B  36FB               	lsrf	??_TRUSART+1,f
  4297     008C  0CFA               	rrf	??_TRUSART,f
  4298     008D  0B89               	decfsz	9,f
  4299     008E  288B               	goto	u52_25
  4300     008F  087A               	movf	??_TRUSART,w
  4301     0090  00FC               	movwf	_TRUSART$1488
  4302     0091  087B               	movf	??_TRUSART+1,w
  4303     0092  00FD               	movwf	_TRUSART$1488+1
  4304     0093                     i1l1443:
  4305                           
  4306                           ;main.c: 69:     TX2dados.Tx2 = (uint16_t)((ADC_GetConversion(channel_AN1)* 1000 /1024) 
      +                          * vGAINl);
  4307     0093  087D               	movf	_TRUSART$1488+1,w
  4308     0094  00F5               	movwf	___wmul@multiplier+1
  4309     0095  087C               	movf	_TRUSART$1488,w
  4310     0096  00F4               	movwf	___wmul@multiplier
  4311     0097  0020               	movlb	0	; select bank0
  4312     0098  084E               	movf	_vGAINl+1,w
  4313     0099  00F7               	movwf	___wmul@multiplicand+1
  4314     009A  084D               	movf	_vGAINl,w
  4315     009B  00F6               	movwf	___wmul@multiplicand
  4316     009C  3182  2225  3180   	fcall	___wmul
  4317     009F  0875               	movf	?___wmul+1,w
  4318     00A0  0020               	movlb	0	; select bank0
  4319     00A1  00A8               	movwf	_TX2dados+1
  4320     00A2  0874               	movf	?___wmul,w
  4321     00A3  00A7               	movwf	_TX2dados
  4322     00A4                     i1l1445:
  4323                           
  4324                           ;main.c: 72:     TX2dados.vL2 = TX2dados.vL2 << 1;
  4325     00A4  3527               	lslf	_TX2dados,w
  4326     00A5  00A7               	movwf	_TX2dados
  4327     00A6                     i1l1447:
  4328                           
  4329                           ;main.c: 73:     TX2dados.Tx2 = (TX2dados.Tx2 >> 1);
  4330     00A6  0828               	movf	_TX2dados+1,w
  4331     00A7  00FB               	movwf	??_TRUSART+1
  4332     00A8  0827               	movf	_TX2dados,w
  4333     00A9  00FA               	movwf	??_TRUSART
  4334     00AA  36FB               	lsrf	??_TRUSART+1,f
  4335     00AB  0CFA               	rrf	??_TRUSART,f
  4336     00AC  087A               	movf	??_TRUSART,w
  4337     00AD  00A7               	movwf	_TX2dados
  4338     00AE  087B               	movf	??_TRUSART+1,w
  4339     00AF  00A8               	movwf	_TX2dados+1
  4340     00B0                     i1l1449:
  4341                           
  4342                           ;main.c: 74:     TX2dados.vH2 = TX2dados.vH2 & 0x7F;
  4343     00B0  0828               	movf	_TX2dados+1,w
  4344     00B1  397F               	andlw	127
  4345     00B2  00A8               	movwf	_TX2dados+1
  4346                           
  4347                           ;main.c: 78:     EUSART_Write(0x80);
  4348     00B3  3080               	movlw	128
  4349     00B4  3183  231E  3180   	fcall	_EUSART_Write
  4350                           
  4351                           ;main.c: 79:     EUSART_Write(TX1dados.vH1);
  4352     00B7  0020               	movlb	0	; select bank0
  4353     00B8  082A               	movf	_TX1dados+1,w
  4354     00B9  3183  231E  3180   	fcall	_EUSART_Write
  4355                           
  4356                           ;main.c: 80:     EUSART_Write(TX1dados.vL1);
  4357     00BC  0020               	movlb	0	; select bank0
  4358     00BD  0829               	movf	_TX1dados,w
  4359     00BE  3183  231E  3180   	fcall	_EUSART_Write
  4360                           
  4361                           ;main.c: 81:     EUSART_Write(TX2dados.vH2);
  4362     00C1  0020               	movlb	0	; select bank0
  4363     00C2  0828               	movf	_TX2dados+1,w
  4364     00C3  3183  231E  3180   	fcall	_EUSART_Write
  4365                           
  4366                           ;main.c: 82:     EUSART_Write(TX2dados.vL2);
  4367     00C6  0020               	movlb	0	; select bank0
  4368     00C7  0827               	movf	_TX2dados,w
  4369     00C8  3183  231E  3180   	fcall	_EUSART_Write
  4370     00CB                     i1l368:
  4371     00CB  0008               	return
  4372     00CC                     __end_of_TRUSART:
  4373                           
  4374                           	psect	text26
  4375     0225                     __ptext26:	
  4376 ;; *************** function ___wmul *****************
  4377 ;; Defined at:
  4378 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  multiplier      2    4[COMMON] unsigned int 
  4381 ;;  multiplicand    2    6[COMMON] unsigned int 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  product         2    8[COMMON] unsigned int 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  2    4[COMMON] unsigned int 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4393 ;;      Params:         4       0       0       0       0       0
  4394 ;;      Locals:         2       0       0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0
  4396 ;;      Totals:         6       0       0       0       0       0
  4397 ;;Total ram usage:        6 bytes
  4398 ;; Hardware stack levels used: 1
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_TRUSART
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406     0225                     ___wmul:	
  4407                           ;psect for function ___wmul
  4408                           
  4409     0225                     i1l1407:	
  4410                           ;incstack = 0
  4411                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4412                           
  4413     0225  01F8               	clrf	___wmul@product
  4414     0226  01F9               	clrf	___wmul@product+1
  4415     0227                     i1l1409:
  4416     0227  1C74               	btfss	___wmul@multiplier,0
  4417     0228  2A2A               	goto	u45_21
  4418     0229  2A2B               	goto	u45_20
  4419     022A                     u45_21:
  4420     022A  2A2F               	goto	i1l555
  4421     022B                     u45_20:
  4422     022B                     i1l1411:
  4423     022B  0876               	movf	___wmul@multiplicand,w
  4424     022C  07F8               	addwf	___wmul@product,f
  4425     022D  0877               	movf	___wmul@multiplicand+1,w
  4426     022E  3DF9               	addwfc	___wmul@product+1,f
  4427     022F                     i1l555:
  4428     022F  3001               	movlw	1
  4429     0230                     u46_25:
  4430     0230  35F6               	lslf	___wmul@multiplicand,f
  4431     0231  0DF7               	rlf	___wmul@multiplicand+1,f
  4432     0232  0B89               	decfsz	9,f
  4433     0233  2A30               	goto	u46_25
  4434     0234                     i1l1413:
  4435     0234  3001               	movlw	1
  4436     0235                     u47_25:
  4437     0235  36F5               	lsrf	___wmul@multiplier+1,f
  4438     0236  0CF4               	rrf	___wmul@multiplier,f
  4439     0237  0B89               	decfsz	9,f
  4440     0238  2A35               	goto	u47_25
  4441     0239                     i1l1415:
  4442     0239  0874               	movf	___wmul@multiplier,w
  4443     023A  0475               	iorwf	___wmul@multiplier+1,w
  4444     023B  1D03               	btfss	3,2
  4445     023C  2A3E               	goto	u48_21
  4446     023D  2A3F               	goto	u48_20
  4447     023E                     u48_21:
  4448     023E  2A27               	goto	i1l1409
  4449     023F                     u48_20:
  4450     023F                     i1l1417:
  4451     023F  0879               	movf	___wmul@product+1,w
  4452     0240  00F5               	movwf	?___wmul+1
  4453     0241  0878               	movf	___wmul@product,w
  4454     0242  00F4               	movwf	?___wmul
  4455     0243                     i1l557:
  4456     0243  0008               	return
  4457     0244                     __end_of___wmul:
  4458                           
  4459                           	psect	text27
  4460     031E                     __ptext27:	
  4461 ;; *************** function _EUSART_Write *****************
  4462 ;; Defined at:
  4463 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  txData          1    wreg     unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  txData          1    0[COMMON] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4477 ;;      Params:         0       0       0       0       0       0
  4478 ;;      Locals:         1       0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0
  4480 ;;      Totals:         1       0       0       0       0       0
  4481 ;;Total ram usage:        1 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_TRUSART
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490     031E                     _EUSART_Write:	
  4491                           ;psect for function _EUSART_Write
  4492                           
  4493                           
  4494                           ;incstack = 0
  4495                           ; Regs used in _EUSART_Write: [wreg]
  4496                           ;EUSART_Write@txData stored from wreg
  4497     031E  00F0               	movwf	EUSART_Write@txData
  4498     031F                     i1l1391:
  4499     031F                     i1l128:	
  4500                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4501                           
  4502                           
  4503                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4504     031F  0020               	movlb	0	; select bank0
  4505     0320  1E11               	btfss	17,4	;volatile
  4506     0321  2B23               	goto	u43_21
  4507     0322  2B24               	goto	u43_20
  4508     0323                     u43_21:
  4509     0323  2B1F               	goto	i1l128
  4510     0324                     u43_20:
  4511     0324                     i1l1393:
  4512                           
  4513                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4514     0324  0870               	movf	EUSART_Write@txData,w
  4515     0325  0023               	movlb	3	; select bank3
  4516     0326  009A               	movwf	26	;volatile
  4517     0327                     i1l131:
  4518     0327  0008               	return
  4519     0328                     __end_of_EUSART_Write:
  4520                           
  4521                           	psect	text28
  4522     027E                     __ptext28:	
  4523 ;; *************** function _ADC_GetConversion *****************
  4524 ;; Defined at:
  4525 ;;		line 112 in file "mcc_generated_files/adc.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  channel         1    wreg     enum E2495
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  channel         1    3[COMMON] enum E2495
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2    0[COMMON] unsigned short 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4539 ;;      Params:         2       0       0       0       0       0
  4540 ;;      Locals:         1       0       0       0       0       0
  4541 ;;      Temps:          1       0       0       0       0       0
  4542 ;;      Totals:         4       0       0       0       0       0
  4543 ;;Total ram usage:        4 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_TRUSART
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552     027E                     _ADC_GetConversion:	
  4553                           ;psect for function _ADC_GetConversion
  4554                           
  4555                           
  4556                           ;incstack = 0
  4557                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4558                           ;ADC_GetConversion@channel stored from wreg
  4559     027E  00F3               	movwf	ADC_GetConversion@channel
  4560     027F                     i1l1395:
  4561                           
  4562                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  4563     027F  0873               	movf	ADC_GetConversion@channel,w
  4564     0280  00F2               	movwf	??_ADC_GetConversion
  4565     0281  0DF2               	rlf	??_ADC_GetConversion,f
  4566     0282  0DF2               	rlf	??_ADC_GetConversion,f
  4567     0283  0021               	movlb	1	; select bank1
  4568     0284  081D               	movf	29,w	;volatile
  4569     0285  0672               	xorwf	??_ADC_GetConversion,w
  4570     0286  3983               	andlw	-125
  4571     0287  0672               	xorwf	??_ADC_GetConversion,w
  4572     0288  009D               	movwf	29	;volatile
  4573     0289                     i1l1397:
  4574                           
  4575                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  4576     0289  141D               	bsf	29,0	;volatile
  4577     028A                     i1l1399:
  4578                           
  4579                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  4580     028A  3003               	movlw	3
  4581     028B                     u84_27:
  4582     028B  0B89               	decfsz	9,f
  4583     028C  2A8B               	goto	u84_27
  4584     028D  0000               	nop
  4585     028E                     i1l1401:
  4586                           
  4587                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  4588     028E  0021               	movlb	1	; select bank1
  4589     028F  149D               	bsf	29,1	;volatile
  4590     0290                     i1l181:	
  4591                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  4592                           
  4593                           
  4594                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  4595     0290  189D               	btfsc	29,1	;volatile
  4596     0291  2A93               	goto	u44_21
  4597     0292  2A94               	goto	u44_20
  4598     0293                     u44_21:
  4599     0293  2A90               	goto	i1l181
  4600     0294                     u44_20:
  4601     0294                     i1l1403:
  4602                           
  4603                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4604     0294  081C               	movf	28,w	;volatile
  4605     0295  00F1               	movwf	?_ADC_GetConversion+1
  4606     0296  081B               	movf	27,w	;volatile
  4607     0297  00F0               	movwf	?_ADC_GetConversion
  4608     0298                     i1l184:
  4609     0298  0008               	return
  4610     0299                     __end_of_ADC_GetConversion:
  4611     0001                     ___latbits      equ	1
  4612     007E                     btemp           set	126	;btemp
  4613     007E                     int$flags       set	126
  4614     007E                     wtemp0          set	126
  4615                           
  4616                           	psect	config
  4617                           
  4618                           ;Config register CONFIG1 @ 0x8007
  4619                           ;	Oscillator Selection
  4620                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4621                           ;	Watchdog Timer Enable
  4622                           ;	WDTE = OFF, WDT disabled
  4623                           ;	Power-up Timer Enable
  4624                           ;	PWRTE = OFF, PWRT disabled
  4625                           ;	MCLR Pin Function Select
  4626                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4627                           ;	Flash Program Memory Code Protection
  4628                           ;	CP = OFF, Program memory code protection is disabled
  4629                           ;	Data Memory Code Protection
  4630                           ;	CPD = OFF, Data memory code protection is disabled
  4631                           ;	Brown-out Reset Enable
  4632                           ;	BOREN = ON, Brown-out Reset enabled
  4633                           ;	Clock Out Enable
  4634                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4635                           ;	Internal/External Switchover
  4636                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4637                           ;	Fail-Safe Clock Monitor Enable
  4638                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4639     8007                     	org	32775
  4640     8007  3FE4               	dw	16356
  4641                           
  4642                           ;Config register CONFIG2 @ 0x8008
  4643                           ;	Flash Memory Self-Write Protection
  4644                           ;	WRT = OFF, Write protection off
  4645                           ;	PLL Enable
  4646                           ;	PLLEN = OFF, 4x PLL disabled
  4647                           ;	Stack Overflow/Underflow Reset Enable
  4648                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4649                           ;	Brown-out Reset Voltage Selection
  4650                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4651                           ;	In-Circuit Debugger Mode
  4652                           ;	DEBUG = 0x1, unprogrammed default
  4653                           ;	Low-Voltage Programming Enable
  4654                           ;	LVP = ON, Low-voltage programming enabled
  4655     8008                     	org	32776
  4656     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         22
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      48
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TRUSART(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TRUSART(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_CallBack->_TRUSART
    _TRUSART->___wmul
    ___wmul->_ADC_GetConversion

Critical Paths under _main in BANK0

    _main->_desloca
    _desloca->_selecaoRX
    _selecaoRX->___lwdiv
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     328
                                             11 BANK0      2     2      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                            _desloca
 ---------------------------------------------------------------------------------
 (1) _desloca                                              2     2      0     211
                                              9 BANK0      2     2      0
                          _selecaoRX
 ---------------------------------------------------------------------------------
 (2) _selecaoRX                                            2     2      0     211
                                              7 BANK0      2     2      0
                _EPWM2_LoadDutyValue
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     166
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2      45
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      93
                     _ADC_Initialize
                   _EPWM2_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      24
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2      24
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      69
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     294
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     294
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2      90
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0     204
                                NULL *
       _TMR1_DefaultInterruptHandler *
                            _TRUSART *
 ---------------------------------------------------------------------------------
 (7) _TRUSART                                              4     4      0     204
                                             10 COMMON     4     4      0
                  _ADC_GetConversion
                       _EUSART_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     100
                                              4 COMMON     6     2      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      29
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM2_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _desloca
     _selecaoRX
       _EPWM2_LoadDutyValue
       ___lwdiv

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TRUSART *
         _ADC_GetConversion
         _EUSART_Write
         ___wmul
           _ADC_GetConversion (ARG)
     _TMR1_WriteTimer

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            48      0       0      0.0%
BIGRAM             368      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     13      48     60.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      62      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan 19 21:30:20 2025

                                           l25 02E3                                             l61 036A  
                                           l55 02B1                                             l58 033E  
                          ___wmul@multiplicand 0076                                            l112 0366  
                                          l104 0224                                            l121 02F5  
                                          l204 0310                                            l125 0303  
                                          l143 0356                                            l207 027D  
                                          l305 032F                                            l146 0350  
                                          l149 035C                                            l253 02CA  
                                          l166 0337                                            l392 01FF  
                                          l289 034A                                            l388 015A  
                                          l398 0168                                            l399 019C  
                                          l835 01D9                                            _PR2 001B  
                                          u530 01A8                                            u531 01A7  
                                          u700 0128                                            u620 00D2  
                                          u701 0127                                            u621 00D1  
                                          u710 02FA                                            u550 01B6  
                                          u630 00D7                                            u711 02F9  
                                          u551 01B5                                            u631 00D6  
                                          u720 0300                                            u640 00DE  
                                          u800 017B                                            u721 02FF  
                                          u545 01AC                                            u641 00DD  
                                          u801 017A                                            u570 01C5  
                                          u650 00E9                                            u810 0189  
                                          u571 01C4                                            u651 00E8  
                                          u811 0188                                            u660 00EF  
                                          u740 01E5                                            u565 01B7  
                                          u661 00EE                                            u741 01E4  
                                          u590 01D5                                            u670 0101  
                                          u750 01EC                                            u495 0273  
                                          u591 01D4                                            u575 01C1  
                                          u671 0100                                            u751 01EB  
                                          u680 0107                                            u585 01CB  
                                          u681 0106                                            u690 0122  
                                          u691 0121                                            u827 0193  
                                          u837 0144                                            u790 0170  
                                          u791 016F                                _timer1ReloadVal 002F  
               ?_EUSART_SetFramingErrorHandler 0036                                   _TRUSART$1488 007C  
                              _TMR2_Initialize 0328                                            wreg 0009  
                     __end_of_EPWM2_Initialize 0311                                   ?_EUSART_Read 0070  
                                         l1501 0304                                           l1421 0351  
                                         l1511 0330                                           l1503 0307  
                                         l1423 034B                                           l1513 0333  
                                         l1505 0308                                           l1425 0357  
                                         l1521 032C                                           l1601 010B  
                                         l1515 0335                                           l1507 030A  
                                         l1531 02B8                                           l1523 032D  
                                         l1427 0262                                           l1451 019F  
                                         l1611 012C                                           l1509 030E  
                                         l1541 0200                                           l1429 0345  
                                         l1533 02B9                                           l1525 02B2  
                                         l1517 0328                                           l1461 01B2  
                                         l1453 01A2                                           l1605 011C  
                                         l1621 014B                                           l1701 0189  
                                         l1551 0222                                           l1543 0209  
                                         l1535 02BD                                           l1527 02B4  
                                         l1519 032B                                           l1631 02AB  
                                         l1623 0299                                           l1471 01CF  
                                         l1463 01B6                                           l1455 01A8  
                                         l1615 013D                                           l1607 0122  
                                         l1703 018D                                           l1641 02FA  
                                         l1545 020A                                           l1481 02D1  
                                         l1537 02BF                                           l1529 02B6  
                                         l1633 02AE                                           l1625 02A2  
                                         l1465 01C5                                           l1457 01AB  
                                         l1473 01D5                                           l1617 013E  
                                         l1609 0128                                           l1705 0199  
                                         l1643 02FB                                           l1635 0362  
                                         l1547 0212                                           l1491 02DE  
                                         l1483 02D3                                           l1539 02C7  
                                         l1627 02A5                                           l1467 01C9  
                                         l1459 01B0                                           l1571 00CC  
                                         l1645 0300                                           l1549 021A  
                                         l1493 02E1                                           l1485 02D6  
                                         l1477 02CB                                           l1629 02A8  
                                         l1469 01CA                                           l1581 00DE  
                                         l1573 00CD                                           l1661 01DA  
                                         l1647 0302                                           l1639 02F5  
                                         l1495 0338                                           l1487 02D8  
                                         l1479 02CE                                           l1591 00F3  
                                         l1575 00D2                                           l1583 00E0  
                                         l1671 01F9                                           l1497 033B  
                                         l1489 02DC                                           l1585 00E3  
                                         l1577 00D7                                           l1673 01FC  
                                         l1665 01E6                                           l1499 0367  
                                         l1595 00FB                                           l1587 00E9  
                                         l1579 00D9                                           l1691 0170  
                                         l1597 0101                                           l1589 00EF  
                                         l1669 01ED                                           l1693 0175  
                                         l1685 015B                                           l1599 0107  
                                         l1695 017B                                           l1687 015E  
                                         l1697 0181                                           l1689 015F  
                                         l1699 0183                                           _LATA 010C  
                                         _LATB 010D                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _vAUX 0023                                           _vPWM 0025  
                                         _main 015B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         _swit 004F                                __end_of_TRUSART 00CC  
                                         start 0019                     ??_TMR1_SetInterruptHandler 0038  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 033F  
                                        ?_main 0070                                          _T1CON 0018  
                                        _T2CON 001C                                __end_of___lwdiv 01DA  
                                        i1l131 0327                                          i1l128 031F  
                                        i1l224 0017                                          i1l181 0290  
                                        i1l184 0298                                          i1l282 0261  
                                        i1l267 02F4                                          i1l292 036B  
                                        i1l286 031D                                          i1l368 00CB  
                                        i1l555 022F                                          i1l557 0243  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        u50_20 003B                                          u50_21 003A  
                                        u43_20 0324                                          u43_21 0323  
                                        u51_25 004F                                          u44_20 0294  
                                        u60_20 02E9                                          u44_21 0293  
                                        u60_21 02E8                                          u52_25 008B  
                                        u45_20 022B                                          u61_20 0318  
                                        u45_21 022A                                          u61_21 0317  
                                        u46_25 0230                                          u47_25 0235  
                                        u48_20 023F                                          u48_21 023E  
                                        u73_20 025B                                          u73_21 025A  
                                        _TRISA 008C                                          _TRISB 008D  
                                        u76_20 000A                                          u76_21 0009  
                                        u84_27 028B                                          u77_20 000F  
                                        u77_21 000E                                          u78_20 0014  
                                        u78_21 0013                                          _TXREG 019A  
                                        _TXSTA 019E                                __end_of_desloca 0200  
                             __end_of_TMR1_ISR 0262                                 _WDT_Initialize 0367  
                      __end_of_TMR1_Initialize 02CB                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              _TMR1_WriteTimer 02E4                                __initialization 001B  
                                 __end_of_main 019F                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0330                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 0041                         __end_of_WDT_Initialize 036B  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0047  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR2H 0299                                         _CCPR2L 0298  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                    ??_TRUSART 007A                     __end_of_EUSART_is_rx_ready 0367  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1401 028E  
                                       i1l1403 0294                                         i1l1411 022B  
                                       i1l1413 0234                                         i1l1415 0239  
                                       i1l1407 0225                                         i1l1431 0035  
                                       i1l1417 023F                                         i1l1409 0227  
                                       i1l1441 0077                                         i1l1433 003B  
                                       i1l1443 0093                                         i1l1435 0068  
                                       i1l1445 00A4                                         i1l1437 006A  
                                       i1l1391 031F                                         i1l1447 00A6  
                                       i1l1439 0074                                         i1l1393 0324  
                                       i1l1449 00B0                                         i1l1561 02EE  
                                       i1l1553 02E4                                         i1l1395 027F  
                                       i1l1555 02E9                                         i1l1563 02F0  
                                       i1l1651 0244                                         i1l1397 0289  
                                       i1l1565 02F2                                         i1l1557 02EA  
                                       i1l1653 0246                                         i1l1399 028A  
                                       i1l1567 0311                                         i1l1559 02EC  
                                       i1l1655 024D                                         i1l1569 0318  
                                       i1l1657 025B                                         i1l1681 0014  
                                       i1l1659 025E                                         i1l1675 0006  
                                       i1l1677 000A                                         i1l1679 000F  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _ByteRx 0020           __end_of_TMR1_DefaultInterruptHandler 036C  
                 _TMR1_DefaultInterruptHandler 036B                                   _CCPTMRS0bits 029E  
                                       _vGAINl 004D                                         _vGAINt 004B  
                                       ___wmul 0225                                      ??___lwdiv 003A  
                                       _readrx 0034                                      ??_desloca 003F  
                              ?_WDT_Initialize 0070                       ADC_GetConversion@channel 0073  
                          _EPWM2_LoadDutyValue 0262       TMR1_SetInterruptHandler@InterruptHandler 0036  
                      __end_of_TMR1_WriteTimer 02F5                          __end_of_TMR1_CallBack 031E  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0299  
                      __end_of__initialization 0031                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                           ?_EPWM2_LoadDutyValue 0036  
                                 __pidataBANK0 035D                            ??_SYSTEM_Initialize 0038  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                             ?_TMR2_Initialize 0070                                 _OPTION_REGbits 0095  
                            ?_EPWM2_Initialize 0070                ??_EUSART_SetOverrunErrorHandler 0038  
                    __end_of_SYSTEM_Initialize 02B2                             ??_EPWM2_Initialize 0036  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 0328  
                                   __pmaintext 015B                          ??_EPWM2_LoadDutyValue 0038  
                                      ?___wmul 0074                                     ??_TMR1_ISR 007E  
                                   __pintentry 0004                                        _CCP2CON 029A  
                                      _ECCP2AS 029C                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      _OSCTUNE 0098                                        _PWM2CON 029B  
                     ??_EUSART_SetErrorHandler 0038                               ?_TMR1_WriteTimer 0070  
                                      _TRUSART 0035                                        _RXdados 002B  
                         _ADC_InterruptHandler 0031                                        ___lwdiv 019F  
                                      _desloca 01DA                                        __ptext1 01DA  
                                      __ptext2 00CC                                        __ptext3 019F  
                                      __ptext4 0262                                        __ptext5 0299  
                                      __ptext6 0367                                        __ptext7 0328  
                                      __ptext8 02B2                                        __ptext9 0345  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                                      _countRx 0033                          _OSCILLATOR_Initialize 0338  
                                    _T2CONbits 001C                       ??_PIN_MANAGER_Initialize 0036  
                    ?_TMR1_SetInterruptHandler 0036                                        clrloop0 0340  
                         end_of_initialization 0031                              __end_of_selecaoRX 015B  
        __end_of_EUSART_SetOverrunErrorHandler 0351                  _EUSART_SetOverrunErrorHandler 034B  
                            _EUSART_Initialize 0200                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0362  
                          ??_EUSART_Initialize 0038                               ??_WDT_Initialize 0036  
                          ?_EUSART_is_rx_ready 0070                      __end_of_EUSART_Initialize 0225  
                         ??_EUSART_is_rx_ready 0036                                      _TXSTAbits 019E  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0244  
                                 _EUSART_Write 031E                                 _ADC_Initialize 0330  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 001B  
                                ??_EUSART_Read 0036                 ?_EUSART_SetOverrunErrorHandler 0036  
                   _EUSART_FramingErrorHandler 0049                                       ??___wmul 0078  
                       _EUSART_SetErrorHandler 0357                         __end_of_ADC_Initialize 0338  
                                  __pdataBANK0 004B                          TMR1_ISR@CountCallBack 002D  
                                    ___latbits 0001                                  __pcstackBANK0 0036  
                                     ?_TRUSART 0070                    __end_of_EPWM2_LoadDutyValue 027E  
                          __end_of_EUSART_Read 0304                                      __pnvBANK0 0043  
                             ___lwdiv@dividend 0038                         _PIN_MANAGER_Initialize 02CB  
             __end_of_TMR1_SetInterruptHandler 034B                                       ?___lwdiv 0036  
                              ?_ADC_Initialize 0070                   ??_INTERRUPT_InterruptManager 007E  
                                     ?_desloca 0070                               ___lwdiv@quotient 003A  
                                _TMR1_CallBack 0311                                 ___wmul@product 0078  
       EUSART_SetErrorHandler@interruptHandler 0036                                      clear_ram0 033F  
                                    _selecaoRX 00CC                                       _PIE1bits 0091  
                            _eusartRxLastError 0035                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0038              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 0244                                       _PSTR2CON 029D  
                            ??_TMR1_Initialize 0038                                       _TX1dados 0029  
                                     _TX2dados 0027                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0074                                    _EUSART_Read 02F5  
                               ?_TMR1_CallBack 0070                              ??_TMR2_Initialize 0036  
                                   ?_selecaoRX 0070                               _EPWM2_Initialize 0304  
                            _ADC_GetConversion 027E                        ??_OSCILLATOR_Initialize 0036  
                          _EUSART_ErrorHandler 0045                             ?_ADC_GetConversion 0070  
                     _TMR1_SetInterruptHandler 0345                          _TMR1_InterruptHandler 0043  
                          ??_ADC_GetConversion 0072                                ___lwdiv@divisor 0036  
                              ___lwdiv@counter 003C                                       __ptext10 02CB  
                                     __ptext11 0338                                       __ptext12 0200  
                                     __ptext21 0244                                       __ptext13 034B  
                                   _T1GCONbits 0019                                       __ptext22 02E4  
                                     __ptext14 0351                                       __ptext23 0311  
                                     __ptext15 0357                                       __ptext24 036B  
                                     __ptext16 0304                                       __ptext25 0035  
                                     __ptext17 0330                                       __ptext26 0225  
                                     __ptext18 0362                                       __ptext27 031E  
                                     __ptext19 02F5                                       __ptext28 027E  
                    __end_of_ADC_GetConversion 0299                        ?_EUSART_SetErrorHandler 0036  
EUSART_SetOverrunErrorHandler@interruptHandler 0036                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0357                  _EUSART_SetFramingErrorHandler 0351  
                            ??_TMR1_WriteTimer 0072                                     _INTCONbits 000B  
                              ??_TMR1_CallBack 007E                                       intlevel1 0000  
                 EPWM2_LoadDutyValue@dutyValue 0036                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 035D                                    ??_selecaoRX 003D  
                             ??_ADC_Initialize 0036  EUSART_SetFramingErrorHandler@interruptHandler 0036  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 02E4  
                              _TMR1_Initialize 02B2  
