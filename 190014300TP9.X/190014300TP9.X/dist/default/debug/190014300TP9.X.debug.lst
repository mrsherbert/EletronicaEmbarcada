

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jan 25 13:49:56 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Generated 07/09/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1827 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001E                     	;# 
   104     001F                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0095                     	;# 
   112     0096                     	;# 
   113     0097                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     0111                     	;# 
   125     0112                     	;# 
   126     0113                     	;# 
   127     0114                     	;# 
   128     0115                     	;# 
   129     0116                     	;# 
   130     0117                     	;# 
   131     0118                     	;# 
   132     0119                     	;# 
   133     011A                     	;# 
   134     011B                     	;# 
   135     011D                     	;# 
   136     011E                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     0191                     	;# 
   140     0191                     	;# 
   141     0192                     	;# 
   142     0193                     	;# 
   143     0193                     	;# 
   144     0193                     	;# 
   145     0194                     	;# 
   146     0195                     	;# 
   147     0196                     	;# 
   148     0199                     	;# 
   149     019A                     	;# 
   150     019B                     	;# 
   151     019B                     	;# 
   152     019B                     	;# 
   153     019B                     	;# 
   154     019C                     	;# 
   155     019C                     	;# 
   156     019D                     	;# 
   157     019E                     	;# 
   158     019F                     	;# 
   159     020C                     	;# 
   160     020D                     	;# 
   161     0211                     	;# 
   162     0211                     	;# 
   163     0212                     	;# 
   164     0212                     	;# 
   165     0213                     	;# 
   166     0213                     	;# 
   167     0214                     	;# 
   168     0214                     	;# 
   169     0215                     	;# 
   170     0215                     	;# 
   171     0215                     	;# 
   172     0216                     	;# 
   173     0216                     	;# 
   174     0217                     	;# 
   175     0217                     	;# 
   176     0219                     	;# 
   177     021A                     	;# 
   178     021B                     	;# 
   179     021C                     	;# 
   180     021D                     	;# 
   181     021E                     	;# 
   182     021F                     	;# 
   183     0291                     	;# 
   184     0291                     	;# 
   185     0292                     	;# 
   186     0293                     	;# 
   187     0294                     	;# 
   188     0295                     	;# 
   189     0295                     	;# 
   190     0296                     	;# 
   191     0298                     	;# 
   192     0298                     	;# 
   193     0299                     	;# 
   194     029A                     	;# 
   195     029B                     	;# 
   196     029C                     	;# 
   197     029C                     	;# 
   198     029D                     	;# 
   199     029E                     	;# 
   200     029E                     	;# 
   201     0311                     	;# 
   202     0311                     	;# 
   203     0312                     	;# 
   204     0313                     	;# 
   205     0318                     	;# 
   206     0318                     	;# 
   207     0319                     	;# 
   208     031A                     	;# 
   209     0394                     	;# 
   210     0395                     	;# 
   211     0396                     	;# 
   212     039A                     	;# 
   213     039C                     	;# 
   214     039D                     	;# 
   215     039E                     	;# 
   216     039F                     	;# 
   217     0415                     	;# 
   218     0416                     	;# 
   219     0417                     	;# 
   220     041C                     	;# 
   221     041D                     	;# 
   222     041E                     	;# 
   223     0FE4                     	;# 
   224     0FE5                     	;# 
   225     0FE6                     	;# 
   226     0FE7                     	;# 
   227     0FE8                     	;# 
   228     0FE9                     	;# 
   229     0FEA                     	;# 
   230     0FEB                     	;# 
   231     0FED                     	;# 
   232     0FEE                     	;# 
   233     0FEF                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     0011                     	;# 
   249     0012                     	;# 
   250     0013                     	;# 
   251     0014                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0016                     	;# 
   255     0017                     	;# 
   256     0018                     	;# 
   257     0019                     	;# 
   258     001A                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     0091                     	;# 
   266     0092                     	;# 
   267     0093                     	;# 
   268     0094                     	;# 
   269     0095                     	;# 
   270     0096                     	;# 
   271     0097                     	;# 
   272     0098                     	;# 
   273     0099                     	;# 
   274     009A                     	;# 
   275     009B                     	;# 
   276     009B                     	;# 
   277     009C                     	;# 
   278     009D                     	;# 
   279     009E                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     0111                     	;# 
   283     0112                     	;# 
   284     0113                     	;# 
   285     0114                     	;# 
   286     0115                     	;# 
   287     0116                     	;# 
   288     0117                     	;# 
   289     0118                     	;# 
   290     0119                     	;# 
   291     011A                     	;# 
   292     011B                     	;# 
   293     011D                     	;# 
   294     011E                     	;# 
   295     018C                     	;# 
   296     018D                     	;# 
   297     0191                     	;# 
   298     0191                     	;# 
   299     0192                     	;# 
   300     0193                     	;# 
   301     0193                     	;# 
   302     0193                     	;# 
   303     0194                     	;# 
   304     0195                     	;# 
   305     0196                     	;# 
   306     0199                     	;# 
   307     019A                     	;# 
   308     019B                     	;# 
   309     019B                     	;# 
   310     019B                     	;# 
   311     019B                     	;# 
   312     019C                     	;# 
   313     019C                     	;# 
   314     019D                     	;# 
   315     019E                     	;# 
   316     019F                     	;# 
   317     020C                     	;# 
   318     020D                     	;# 
   319     0211                     	;# 
   320     0211                     	;# 
   321     0212                     	;# 
   322     0212                     	;# 
   323     0213                     	;# 
   324     0213                     	;# 
   325     0214                     	;# 
   326     0214                     	;# 
   327     0215                     	;# 
   328     0215                     	;# 
   329     0215                     	;# 
   330     0216                     	;# 
   331     0216                     	;# 
   332     0217                     	;# 
   333     0217                     	;# 
   334     0219                     	;# 
   335     021A                     	;# 
   336     021B                     	;# 
   337     021C                     	;# 
   338     021D                     	;# 
   339     021E                     	;# 
   340     021F                     	;# 
   341     0291                     	;# 
   342     0291                     	;# 
   343     0292                     	;# 
   344     0293                     	;# 
   345     0294                     	;# 
   346     0295                     	;# 
   347     0295                     	;# 
   348     0296                     	;# 
   349     0298                     	;# 
   350     0298                     	;# 
   351     0299                     	;# 
   352     029A                     	;# 
   353     029B                     	;# 
   354     029C                     	;# 
   355     029C                     	;# 
   356     029D                     	;# 
   357     029E                     	;# 
   358     029E                     	;# 
   359     0311                     	;# 
   360     0311                     	;# 
   361     0312                     	;# 
   362     0313                     	;# 
   363     0318                     	;# 
   364     0318                     	;# 
   365     0319                     	;# 
   366     031A                     	;# 
   367     0394                     	;# 
   368     0395                     	;# 
   369     0396                     	;# 
   370     039A                     	;# 
   371     039C                     	;# 
   372     039D                     	;# 
   373     039E                     	;# 
   374     039F                     	;# 
   375     0415                     	;# 
   376     0416                     	;# 
   377     0417                     	;# 
   378     041C                     	;# 
   379     041D                     	;# 
   380     041E                     	;# 
   381     0FE4                     	;# 
   382     0FE5                     	;# 
   383     0FE6                     	;# 
   384     0FE7                     	;# 
   385     0FE8                     	;# 
   386     0FE9                     	;# 
   387     0FEA                     	;# 
   388     0FEB                     	;# 
   389     0FED                     	;# 
   390     0FEE                     	;# 
   391     0FEF                     	;# 
   392     0000                     	;# 
   393     0001                     	;# 
   394     0002                     	;# 
   395     0003                     	;# 
   396     0004                     	;# 
   397     0005                     	;# 
   398     0006                     	;# 
   399     0007                     	;# 
   400     0008                     	;# 
   401     0009                     	;# 
   402     000A                     	;# 
   403     000B                     	;# 
   404     000C                     	;# 
   405     000D                     	;# 
   406     0011                     	;# 
   407     0012                     	;# 
   408     0013                     	;# 
   409     0014                     	;# 
   410     0015                     	;# 
   411     0016                     	;# 
   412     0016                     	;# 
   413     0017                     	;# 
   414     0018                     	;# 
   415     0019                     	;# 
   416     001A                     	;# 
   417     001B                     	;# 
   418     001C                     	;# 
   419     001E                     	;# 
   420     001F                     	;# 
   421     008C                     	;# 
   422     008D                     	;# 
   423     0091                     	;# 
   424     0092                     	;# 
   425     0093                     	;# 
   426     0094                     	;# 
   427     0095                     	;# 
   428     0096                     	;# 
   429     0097                     	;# 
   430     0098                     	;# 
   431     0099                     	;# 
   432     009A                     	;# 
   433     009B                     	;# 
   434     009B                     	;# 
   435     009C                     	;# 
   436     009D                     	;# 
   437     009E                     	;# 
   438     010C                     	;# 
   439     010D                     	;# 
   440     0111                     	;# 
   441     0112                     	;# 
   442     0113                     	;# 
   443     0114                     	;# 
   444     0115                     	;# 
   445     0116                     	;# 
   446     0117                     	;# 
   447     0118                     	;# 
   448     0119                     	;# 
   449     011A                     	;# 
   450     011B                     	;# 
   451     011D                     	;# 
   452     011E                     	;# 
   453     018C                     	;# 
   454     018D                     	;# 
   455     0191                     	;# 
   456     0191                     	;# 
   457     0192                     	;# 
   458     0193                     	;# 
   459     0193                     	;# 
   460     0193                     	;# 
   461     0194                     	;# 
   462     0195                     	;# 
   463     0196                     	;# 
   464     0199                     	;# 
   465     019A                     	;# 
   466     019B                     	;# 
   467     019B                     	;# 
   468     019B                     	;# 
   469     019B                     	;# 
   470     019C                     	;# 
   471     019C                     	;# 
   472     019D                     	;# 
   473     019E                     	;# 
   474     019F                     	;# 
   475     020C                     	;# 
   476     020D                     	;# 
   477     0211                     	;# 
   478     0211                     	;# 
   479     0212                     	;# 
   480     0212                     	;# 
   481     0213                     	;# 
   482     0213                     	;# 
   483     0214                     	;# 
   484     0214                     	;# 
   485     0215                     	;# 
   486     0215                     	;# 
   487     0215                     	;# 
   488     0216                     	;# 
   489     0216                     	;# 
   490     0217                     	;# 
   491     0217                     	;# 
   492     0219                     	;# 
   493     021A                     	;# 
   494     021B                     	;# 
   495     021C                     	;# 
   496     021D                     	;# 
   497     021E                     	;# 
   498     021F                     	;# 
   499     0291                     	;# 
   500     0291                     	;# 
   501     0292                     	;# 
   502     0293                     	;# 
   503     0294                     	;# 
   504     0295                     	;# 
   505     0295                     	;# 
   506     0296                     	;# 
   507     0298                     	;# 
   508     0298                     	;# 
   509     0299                     	;# 
   510     029A                     	;# 
   511     029B                     	;# 
   512     029C                     	;# 
   513     029C                     	;# 
   514     029D                     	;# 
   515     029E                     	;# 
   516     029E                     	;# 
   517     0311                     	;# 
   518     0311                     	;# 
   519     0312                     	;# 
   520     0313                     	;# 
   521     0318                     	;# 
   522     0318                     	;# 
   523     0319                     	;# 
   524     031A                     	;# 
   525     0394                     	;# 
   526     0395                     	;# 
   527     0396                     	;# 
   528     039A                     	;# 
   529     039C                     	;# 
   530     039D                     	;# 
   531     039E                     	;# 
   532     039F                     	;# 
   533     0415                     	;# 
   534     0416                     	;# 
   535     0417                     	;# 
   536     041C                     	;# 
   537     041D                     	;# 
   538     041E                     	;# 
   539     0FE4                     	;# 
   540     0FE5                     	;# 
   541     0FE6                     	;# 
   542     0FE7                     	;# 
   543     0FE8                     	;# 
   544     0FE9                     	;# 
   545     0FEA                     	;# 
   546     0FEB                     	;# 
   547     0FED                     	;# 
   548     0FEE                     	;# 
   549     0FEF                     	;# 
   550     0000                     	;# 
   551     0001                     	;# 
   552     0002                     	;# 
   553     0003                     	;# 
   554     0004                     	;# 
   555     0005                     	;# 
   556     0006                     	;# 
   557     0007                     	;# 
   558     0008                     	;# 
   559     0009                     	;# 
   560     000A                     	;# 
   561     000B                     	;# 
   562     000C                     	;# 
   563     000D                     	;# 
   564     0011                     	;# 
   565     0012                     	;# 
   566     0013                     	;# 
   567     0014                     	;# 
   568     0015                     	;# 
   569     0016                     	;# 
   570     0016                     	;# 
   571     0017                     	;# 
   572     0018                     	;# 
   573     0019                     	;# 
   574     001A                     	;# 
   575     001B                     	;# 
   576     001C                     	;# 
   577     001E                     	;# 
   578     001F                     	;# 
   579     008C                     	;# 
   580     008D                     	;# 
   581     0091                     	;# 
   582     0092                     	;# 
   583     0093                     	;# 
   584     0094                     	;# 
   585     0095                     	;# 
   586     0096                     	;# 
   587     0097                     	;# 
   588     0098                     	;# 
   589     0099                     	;# 
   590     009A                     	;# 
   591     009B                     	;# 
   592     009B                     	;# 
   593     009C                     	;# 
   594     009D                     	;# 
   595     009E                     	;# 
   596     010C                     	;# 
   597     010D                     	;# 
   598     0111                     	;# 
   599     0112                     	;# 
   600     0113                     	;# 
   601     0114                     	;# 
   602     0115                     	;# 
   603     0116                     	;# 
   604     0117                     	;# 
   605     0118                     	;# 
   606     0119                     	;# 
   607     011A                     	;# 
   608     011B                     	;# 
   609     011D                     	;# 
   610     011E                     	;# 
   611     018C                     	;# 
   612     018D                     	;# 
   613     0191                     	;# 
   614     0191                     	;# 
   615     0192                     	;# 
   616     0193                     	;# 
   617     0193                     	;# 
   618     0193                     	;# 
   619     0194                     	;# 
   620     0195                     	;# 
   621     0196                     	;# 
   622     0199                     	;# 
   623     019A                     	;# 
   624     019B                     	;# 
   625     019B                     	;# 
   626     019B                     	;# 
   627     019B                     	;# 
   628     019C                     	;# 
   629     019C                     	;# 
   630     019D                     	;# 
   631     019E                     	;# 
   632     019F                     	;# 
   633     020C                     	;# 
   634     020D                     	;# 
   635     0211                     	;# 
   636     0211                     	;# 
   637     0212                     	;# 
   638     0212                     	;# 
   639     0213                     	;# 
   640     0213                     	;# 
   641     0214                     	;# 
   642     0214                     	;# 
   643     0215                     	;# 
   644     0215                     	;# 
   645     0215                     	;# 
   646     0216                     	;# 
   647     0216                     	;# 
   648     0217                     	;# 
   649     0217                     	;# 
   650     0219                     	;# 
   651     021A                     	;# 
   652     021B                     	;# 
   653     021C                     	;# 
   654     021D                     	;# 
   655     021E                     	;# 
   656     021F                     	;# 
   657     0291                     	;# 
   658     0291                     	;# 
   659     0292                     	;# 
   660     0293                     	;# 
   661     0294                     	;# 
   662     0295                     	;# 
   663     0295                     	;# 
   664     0296                     	;# 
   665     0298                     	;# 
   666     0298                     	;# 
   667     0299                     	;# 
   668     029A                     	;# 
   669     029B                     	;# 
   670     029C                     	;# 
   671     029C                     	;# 
   672     029D                     	;# 
   673     029E                     	;# 
   674     029E                     	;# 
   675     0311                     	;# 
   676     0311                     	;# 
   677     0312                     	;# 
   678     0313                     	;# 
   679     0318                     	;# 
   680     0318                     	;# 
   681     0319                     	;# 
   682     031A                     	;# 
   683     0394                     	;# 
   684     0395                     	;# 
   685     0396                     	;# 
   686     039A                     	;# 
   687     039C                     	;# 
   688     039D                     	;# 
   689     039E                     	;# 
   690     039F                     	;# 
   691     0415                     	;# 
   692     0416                     	;# 
   693     0417                     	;# 
   694     041C                     	;# 
   695     041D                     	;# 
   696     041E                     	;# 
   697     0FE4                     	;# 
   698     0FE5                     	;# 
   699     0FE6                     	;# 
   700     0FE7                     	;# 
   701     0FE8                     	;# 
   702     0FE9                     	;# 
   703     0FEA                     	;# 
   704     0FEB                     	;# 
   705     0FED                     	;# 
   706     0FEE                     	;# 
   707     0FEF                     	;# 
   708     0000                     	;# 
   709     0001                     	;# 
   710     0002                     	;# 
   711     0003                     	;# 
   712     0004                     	;# 
   713     0005                     	;# 
   714     0006                     	;# 
   715     0007                     	;# 
   716     0008                     	;# 
   717     0009                     	;# 
   718     000A                     	;# 
   719     000B                     	;# 
   720     000C                     	;# 
   721     000D                     	;# 
   722     0011                     	;# 
   723     0012                     	;# 
   724     0013                     	;# 
   725     0014                     	;# 
   726     0015                     	;# 
   727     0016                     	;# 
   728     0016                     	;# 
   729     0017                     	;# 
   730     0018                     	;# 
   731     0019                     	;# 
   732     001A                     	;# 
   733     001B                     	;# 
   734     001C                     	;# 
   735     001E                     	;# 
   736     001F                     	;# 
   737     008C                     	;# 
   738     008D                     	;# 
   739     0091                     	;# 
   740     0092                     	;# 
   741     0093                     	;# 
   742     0094                     	;# 
   743     0095                     	;# 
   744     0096                     	;# 
   745     0097                     	;# 
   746     0098                     	;# 
   747     0099                     	;# 
   748     009A                     	;# 
   749     009B                     	;# 
   750     009B                     	;# 
   751     009C                     	;# 
   752     009D                     	;# 
   753     009E                     	;# 
   754     010C                     	;# 
   755     010D                     	;# 
   756     0111                     	;# 
   757     0112                     	;# 
   758     0113                     	;# 
   759     0114                     	;# 
   760     0115                     	;# 
   761     0116                     	;# 
   762     0117                     	;# 
   763     0118                     	;# 
   764     0119                     	;# 
   765     011A                     	;# 
   766     011B                     	;# 
   767     011D                     	;# 
   768     011E                     	;# 
   769     018C                     	;# 
   770     018D                     	;# 
   771     0191                     	;# 
   772     0191                     	;# 
   773     0192                     	;# 
   774     0193                     	;# 
   775     0193                     	;# 
   776     0193                     	;# 
   777     0194                     	;# 
   778     0195                     	;# 
   779     0196                     	;# 
   780     0199                     	;# 
   781     019A                     	;# 
   782     019B                     	;# 
   783     019B                     	;# 
   784     019B                     	;# 
   785     019B                     	;# 
   786     019C                     	;# 
   787     019C                     	;# 
   788     019D                     	;# 
   789     019E                     	;# 
   790     019F                     	;# 
   791     020C                     	;# 
   792     020D                     	;# 
   793     0211                     	;# 
   794     0211                     	;# 
   795     0212                     	;# 
   796     0212                     	;# 
   797     0213                     	;# 
   798     0213                     	;# 
   799     0214                     	;# 
   800     0214                     	;# 
   801     0215                     	;# 
   802     0215                     	;# 
   803     0215                     	;# 
   804     0216                     	;# 
   805     0216                     	;# 
   806     0217                     	;# 
   807     0217                     	;# 
   808     0219                     	;# 
   809     021A                     	;# 
   810     021B                     	;# 
   811     021C                     	;# 
   812     021D                     	;# 
   813     021E                     	;# 
   814     021F                     	;# 
   815     0291                     	;# 
   816     0291                     	;# 
   817     0292                     	;# 
   818     0293                     	;# 
   819     0294                     	;# 
   820     0295                     	;# 
   821     0295                     	;# 
   822     0296                     	;# 
   823     0298                     	;# 
   824     0298                     	;# 
   825     0299                     	;# 
   826     029A                     	;# 
   827     029B                     	;# 
   828     029C                     	;# 
   829     029C                     	;# 
   830     029D                     	;# 
   831     029E                     	;# 
   832     029E                     	;# 
   833     0311                     	;# 
   834     0311                     	;# 
   835     0312                     	;# 
   836     0313                     	;# 
   837     0318                     	;# 
   838     0318                     	;# 
   839     0319                     	;# 
   840     031A                     	;# 
   841     0394                     	;# 
   842     0395                     	;# 
   843     0396                     	;# 
   844     039A                     	;# 
   845     039C                     	;# 
   846     039D                     	;# 
   847     039E                     	;# 
   848     039F                     	;# 
   849     0415                     	;# 
   850     0416                     	;# 
   851     0417                     	;# 
   852     041C                     	;# 
   853     041D                     	;# 
   854     041E                     	;# 
   855     0FE4                     	;# 
   856     0FE5                     	;# 
   857     0FE6                     	;# 
   858     0FE7                     	;# 
   859     0FE8                     	;# 
   860     0FE9                     	;# 
   861     0FEA                     	;# 
   862     0FEB                     	;# 
   863     0FED                     	;# 
   864     0FEE                     	;# 
   865     0FEF                     	;# 
   866     0000                     	;# 
   867     0001                     	;# 
   868     0002                     	;# 
   869     0003                     	;# 
   870     0004                     	;# 
   871     0005                     	;# 
   872     0006                     	;# 
   873     0007                     	;# 
   874     0008                     	;# 
   875     0009                     	;# 
   876     000A                     	;# 
   877     000B                     	;# 
   878     000C                     	;# 
   879     000D                     	;# 
   880     0011                     	;# 
   881     0012                     	;# 
   882     0013                     	;# 
   883     0014                     	;# 
   884     0015                     	;# 
   885     0016                     	;# 
   886     0016                     	;# 
   887     0017                     	;# 
   888     0018                     	;# 
   889     0019                     	;# 
   890     001A                     	;# 
   891     001B                     	;# 
   892     001C                     	;# 
   893     001E                     	;# 
   894     001F                     	;# 
   895     008C                     	;# 
   896     008D                     	;# 
   897     0091                     	;# 
   898     0092                     	;# 
   899     0093                     	;# 
   900     0094                     	;# 
   901     0095                     	;# 
   902     0096                     	;# 
   903     0097                     	;# 
   904     0098                     	;# 
   905     0099                     	;# 
   906     009A                     	;# 
   907     009B                     	;# 
   908     009B                     	;# 
   909     009C                     	;# 
   910     009D                     	;# 
   911     009E                     	;# 
   912     010C                     	;# 
   913     010D                     	;# 
   914     0111                     	;# 
   915     0112                     	;# 
   916     0113                     	;# 
   917     0114                     	;# 
   918     0115                     	;# 
   919     0116                     	;# 
   920     0117                     	;# 
   921     0118                     	;# 
   922     0119                     	;# 
   923     011A                     	;# 
   924     011B                     	;# 
   925     011D                     	;# 
   926     011E                     	;# 
   927     018C                     	;# 
   928     018D                     	;# 
   929     0191                     	;# 
   930     0191                     	;# 
   931     0192                     	;# 
   932     0193                     	;# 
   933     0193                     	;# 
   934     0193                     	;# 
   935     0194                     	;# 
   936     0195                     	;# 
   937     0196                     	;# 
   938     0199                     	;# 
   939     019A                     	;# 
   940     019B                     	;# 
   941     019B                     	;# 
   942     019B                     	;# 
   943     019B                     	;# 
   944     019C                     	;# 
   945     019C                     	;# 
   946     019D                     	;# 
   947     019E                     	;# 
   948     019F                     	;# 
   949     020C                     	;# 
   950     020D                     	;# 
   951     0211                     	;# 
   952     0211                     	;# 
   953     0212                     	;# 
   954     0212                     	;# 
   955     0213                     	;# 
   956     0213                     	;# 
   957     0214                     	;# 
   958     0214                     	;# 
   959     0215                     	;# 
   960     0215                     	;# 
   961     0215                     	;# 
   962     0216                     	;# 
   963     0216                     	;# 
   964     0217                     	;# 
   965     0217                     	;# 
   966     0219                     	;# 
   967     021A                     	;# 
   968     021B                     	;# 
   969     021C                     	;# 
   970     021D                     	;# 
   971     021E                     	;# 
   972     021F                     	;# 
   973     0291                     	;# 
   974     0291                     	;# 
   975     0292                     	;# 
   976     0293                     	;# 
   977     0294                     	;# 
   978     0295                     	;# 
   979     0295                     	;# 
   980     0296                     	;# 
   981     0298                     	;# 
   982     0298                     	;# 
   983     0299                     	;# 
   984     029A                     	;# 
   985     029B                     	;# 
   986     029C                     	;# 
   987     029C                     	;# 
   988     029D                     	;# 
   989     029E                     	;# 
   990     029E                     	;# 
   991     0311                     	;# 
   992     0311                     	;# 
   993     0312                     	;# 
   994     0313                     	;# 
   995     0318                     	;# 
   996     0318                     	;# 
   997     0319                     	;# 
   998     031A                     	;# 
   999     0394                     	;# 
  1000     0395                     	;# 
  1001     0396                     	;# 
  1002     039A                     	;# 
  1003     039C                     	;# 
  1004     039D                     	;# 
  1005     039E                     	;# 
  1006     039F                     	;# 
  1007     0415                     	;# 
  1008     0416                     	;# 
  1009     0417                     	;# 
  1010     041C                     	;# 
  1011     041D                     	;# 
  1012     041E                     	;# 
  1013     0FE4                     	;# 
  1014     0FE5                     	;# 
  1015     0FE6                     	;# 
  1016     0FE7                     	;# 
  1017     0FE8                     	;# 
  1018     0FE9                     	;# 
  1019     0FEA                     	;# 
  1020     0FEB                     	;# 
  1021     0FED                     	;# 
  1022     0FEE                     	;# 
  1023     0FEF                     	;# 
  1024                           
  1025 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1026     0000                     
  1027 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1028     0000                     
  1029 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1030     0000                     
  1031                           	psect	stringtext1
  1032     0800                     __pstringtext1:
  1033     0800                     _MSG0:
  1034     0800  344C               	retlw	76
  1035     0801  342D               	retlw	45
  1036     0802  3445               	retlw	69
  1037     0803  3478               	retlw	120
  1038     0804  3469               	retlw	105
  1039     0805  3462               	retlw	98
  1040     0806  3465               	retlw	101
  1041     0807  3420               	retlw	32
  1042     0808  346C               	retlw	108
  1043     0809  3469               	retlw	105
  1044     080A  3473               	retlw	115
  1045     080B  3474               	retlw	116
  1046     080C  3461               	retlw	97
  1047     080D  342C               	retlw	44
  1048     080E  3420               	retlw	32
  1049     080F  3441               	retlw	65
  1050     0810  342D               	retlw	45
  1051     0811  3441               	retlw	65
  1052     0812  3467               	retlw	103
  1053     0813  3465               	retlw	101
  1054     0814  346E               	retlw	110
  1055     0815  3464               	retlw	100
  1056     0816  3461               	retlw	97
  1057     0817  342C               	retlw	44
  1058     0818  3420               	retlw	32
  1059     0819  3450               	retlw	80
  1060     081A  342D               	retlw	45
  1061     081B  3450               	retlw	80
  1062     081C  3472               	retlw	114
  1063     081D  346F               	retlw	111
  1064     081E  3478               	retlw	120
  1065     081F  3469               	retlw	105
  1066     0820  346D               	retlw	109
  1067     0821  346F               	retlw	111
  1068     0822  342C               	retlw	44
  1069     0823  3420               	retlw	32
  1070     0824  3452               	retlw	82
  1071     0825  342D               	retlw	45
  1072     0826  3441               	retlw	65
  1073     0827  3470               	retlw	112
  1074     0828  3461               	retlw	97
  1075     0829  3467               	retlw	103
  1076     082A  3461               	retlw	97
  1077     082B  3420               	retlw	32
  1078     082C  346C               	retlw	108
  1079     082D  3469               	retlw	105
  1080     082E  3473               	retlw	115
  1081     082F  3474               	retlw	116
  1082     0830  3461               	retlw	97
  1083     0831  3400               	retlw	0
  1084     0832                     __end_of_MSG0:
  1085                           
  1086                           	psect	stringtext2
  1087     0832                     __pstringtext2:
  1088     0832                     _MSG6:
  1089     0832  3454               	retlw	84
  1090     0833  346F               	retlw	111
  1091     0834  3464               	retlw	100
  1092     0835  346F               	retlw	111
  1093     0836  3473               	retlw	115
  1094     0837  3420               	retlw	32
  1095     0838  346F               	retlw	111
  1096     0839  3473               	retlw	115
  1097     083A  3420               	retlw	32
  1098     083B  3461               	retlw	97
  1099     083C  3467               	retlw	103
  1100     083D  3465               	retlw	101
  1101     083E  346E               	retlw	110
  1102     083F  3464               	retlw	100
  1103     0840  3461               	retlw	97
  1104     0841  346D               	retlw	109
  1105     0842  3465               	retlw	101
  1106     0843  346E               	retlw	110
  1107     0844  3474               	retlw	116
  1108     0845  346F               	retlw	111
  1109     0846  3473               	retlw	115
  1110     0847  3420               	retlw	32
  1111     0848  3466               	retlw	102
  1112     0849  346F               	retlw	111
  1113     084A  3472               	retlw	114
  1114     084B  3461               	retlw	97
  1115     084C  346D               	retlw	109
  1116     084D  3420               	retlw	32
  1117     084E  3461               	retlw	97
  1118     084F  3474               	retlw	116
  1119     0850  3465               	retlw	101
  1120     0851  346E               	retlw	110
  1121     0852  3464               	retlw	100
  1122     0853  3469               	retlw	105
  1123     0854  3464               	retlw	100
  1124     0855  346F               	retlw	111
  1125     0856  3473               	retlw	115
  1126     0857  3400               	retlw	0
  1127     0858                     __end_of_MSG6:
  1128                           
  1129                           	psect	stringtext3
  1130     0858                     __pstringtext3:
  1131     0858                     _MSG5:
  1132     0858  344E               	retlw	78
  1133     0859  3461               	retlw	97
  1134     085A  346F               	retlw	111
  1135     085B  3420               	retlw	32
  1136     085C  3466               	retlw	102
  1137     085D  346F               	retlw	111
  1138     085E  3469               	retlw	105
  1139     085F  3420               	retlw	32
  1140     0860  3470               	retlw	112
  1141     0861  346F               	retlw	111
  1142     0862  3473               	retlw	115
  1143     0863  3473               	retlw	115
  1144     0864  3469               	retlw	105
  1145     0865  3476               	retlw	118
  1146     0866  3465               	retlw	101
  1147     0867  346C               	retlw	108
  1148     0868  3420               	retlw	32
  1149     0869  3461               	retlw	97
  1150     086A  3467               	retlw	103
  1151     086B  3465               	retlw	101
  1152     086C  346E               	retlw	110
  1153     086D  3464               	retlw	100
  1154     086E  3461               	retlw	97
  1155     086F  3472               	retlw	114
  1156     0870  3420               	retlw	32
  1157     0871  3428               	retlw	40
  1158     0872  346E               	retlw	110
  1159     0873  346F               	retlw	111
  1160     0874  346D               	retlw	109
  1161     0875  3465               	retlw	101
  1162     0876  3420               	retlw	32
  1163     0877  3476               	retlw	118
  1164     0878  3461               	retlw	97
  1165     0879  347A               	retlw	122
  1166     087A  3469               	retlw	105
  1167     087B  346F               	retlw	111
  1168     087C  3429               	retlw	41
  1169     087D  3400               	retlw	0
  1170     087E                     __end_of_MSG5:
  1171                           
  1172                           	psect	stringtext4
  1173     087E                     __pstringtext4:
  1174     087E                     _MSG7:
  1175     087E  344E               	retlw	78
  1176     087F  3461               	retlw	97
  1177     0880  346F               	retlw	111
  1178     0881  3420               	retlw	32
  1179     0882  3464               	retlw	100
  1180     0883  3469               	retlw	105
  1181     0884  3473               	retlw	115
  1182     0885  3470               	retlw	112
  1183     0886  346F               	retlw	111
  1184     0887  346E               	retlw	110
  1185     0888  3465               	retlw	101
  1186     0889  346D               	retlw	109
  1187     088A  346F               	retlw	111
  1188     088B  3473               	retlw	115
  1189     088C  3420               	retlw	32
  1190     088D  3464               	retlw	100
  1191     088E  3465               	retlw	101
  1192     088F  3420               	retlw	32
  1193     0890  346D               	retlw	109
  1194     0891  3461               	retlw	97
  1195     0892  3469               	retlw	105
  1196     0893  3473               	retlw	115
  1197     0894  3420               	retlw	32
  1198     0895  3461               	retlw	97
  1199     0896  3467               	retlw	103
  1200     0897  3465               	retlw	101
  1201     0898  346E               	retlw	110
  1202     0899  3464               	retlw	100
  1203     089A  3461               	retlw	97
  1204     089B  346D               	retlw	109
  1205     089C  3465               	retlw	101
  1206     089D  346E               	retlw	110
  1207     089E  3474               	retlw	116
  1208     089F  346F               	retlw	111
  1209     08A0  3473               	retlw	115
  1210     08A1  3400               	retlw	0
  1211     08A2                     __end_of_MSG7:
  1212                           
  1213                           	psect	stringtext5
  1214     08A2                     __pstringtext5:
  1215     08A2                     _MSGS:
  1216     08A2  344F               	retlw	79
  1217     08A3  3420               	retlw	32
  1218     08A4  3461               	retlw	97
  1219     08A5  3467               	retlw	103
  1220     08A6  3465               	retlw	101
  1221     08A7  346E               	retlw	110
  1222     08A8  3464               	retlw	100
  1223     08A9  3461               	retlw	97
  1224     08AA  346D               	retlw	109
  1225     08AB  3465               	retlw	101
  1226     08AC  346E               	retlw	110
  1227     08AD  3474               	retlw	116
  1228     08AE  346F               	retlw	111
  1229     08AF  3420               	retlw	32
  1230     08B0  3464               	retlw	100
  1231     08B1  3465               	retlw	101
  1232     08B2  3420               	retlw	32
  1233     08B3  3466               	retlw	102
  1234     08B4  346F               	retlw	111
  1235     08B5  3469               	retlw	105
  1236     08B6  3420               	retlw	32
  1237     08B7  3472               	retlw	114
  1238     08B8  3465               	retlw	101
  1239     08B9  3461               	retlw	97
  1240     08BA  346C               	retlw	108
  1241     08BB  3469               	retlw	105
  1242     08BC  347A               	retlw	122
  1243     08BD  3461               	retlw	97
  1244     08BE  3464               	retlw	100
  1245     08BF  346F               	retlw	111
  1246     08C0  3400               	retlw	0
  1247     08C1                     __end_of_MSGS:
  1248                           
  1249                           	psect	stringtext6
  1250     08C1                     __pstringtext6:
  1251     08C1                     _MSG2:
  1252     08C1  344C               	retlw	76
  1253     08C2  3469               	retlw	105
  1254     08C3  3473               	retlw	115
  1255     08C4  3474               	retlw	116
  1256     08C5  3461               	retlw	97
  1257     08C6  3420               	retlw	32
  1258     08C7  3464               	retlw	100
  1259     08C8  3465               	retlw	101
  1260     08C9  3420               	retlw	32
  1261     08CA  3461               	retlw	97
  1262     08CB  3467               	retlw	103
  1263     08CC  3465               	retlw	101
  1264     08CD  346E               	retlw	110
  1265     08CE  3464               	retlw	100
  1266     08CF  3461               	retlw	97
  1267     08D0  346D               	retlw	109
  1268     08D1  3465               	retlw	101
  1269     08D2  346E               	retlw	110
  1270     08D3  3474               	retlw	116
  1271     08D4  346F               	retlw	111
  1272     08D5  3473               	retlw	115
  1273     08D6  3420               	retlw	32
  1274     08D7  3476               	retlw	118
  1275     08D8  3461               	retlw	97
  1276     08D9  347A               	retlw	122
  1277     08DA  3469               	retlw	105
  1278     08DB  3461               	retlw	97
  1279     08DC  3400               	retlw	0
  1280     08DD                     __end_of_MSG2:
  1281                           
  1282                           	psect	stringtext7
  1283     08DD                     __pstringtext7:
  1284     08DD                     _MSG1:
  1285     08DD  344C               	retlw	76
  1286     08DE  3469               	retlw	105
  1287     08DF  3473               	retlw	115
  1288     08E0  3474               	retlw	116
  1289     08E1  3461               	retlw	97
  1290     08E2  3420               	retlw	32
  1291     08E3  3464               	retlw	100
  1292     08E4  3465               	retlw	101
  1293     08E5  3420               	retlw	32
  1294     08E6  3461               	retlw	97
  1295     08E7  3467               	retlw	103
  1296     08E8  3465               	retlw	101
  1297     08E9  346E               	retlw	110
  1298     08EA  3464               	retlw	100
  1299     08EB  3461               	retlw	97
  1300     08EC  346D               	retlw	109
  1301     08ED  3465               	retlw	101
  1302     08EE  346E               	retlw	110
  1303     08EF  3474               	retlw	116
  1304     08F0  346F               	retlw	111
  1305     08F1  3473               	retlw	115
  1306     08F2  3400               	retlw	0
  1307     08F3                     __end_of_MSG1:
  1308                           
  1309                           	psect	stringtext8
  1310     08F3                     __pstringtext8:
  1311     08F3                     _MSG4:
  1312     08F3  3444               	retlw	68
  1313     08F4  3469               	retlw	105
  1314     08F5  3467               	retlw	103
  1315     08F6  3469               	retlw	105
  1316     08F7  3474               	retlw	116
  1317     08F8  3465               	retlw	101
  1318     08F9  3420               	retlw	32
  1319     08FA  346F               	retlw	111
  1320     08FB  3420               	retlw	32
  1321     08FC  346E               	retlw	110
  1322     08FD  346F               	retlw	111
  1323     08FE  346D               	retlw	109
  1324     08FF  3465               	retlw	101
  1325     0900  343A               	retlw	58
  1326     0901  3400               	retlw	0
  1327     0902                     __end_of_MSG4:
  1328                           
  1329                           	psect	stringtext9
  1330     0902                     __pstringtext9:
  1331     0902                     _MSG3:
  1332     0902  3450               	retlw	80
  1333     0903  3472               	retlw	114
  1334     0904  346F               	retlw	111
  1335     0905  3478               	retlw	120
  1336     0906  3469               	retlw	105
  1337     0907  346D               	retlw	109
  1338     0908  346F               	retlw	111
  1339     0909  343A               	retlw	58
  1340     090A  3420               	retlw	32
  1341     090B  3400               	retlw	0
  1342     090C                     __end_of_MSG3:
  1343                           
  1344                           	psect	nvCOMMON
  1345     0078                     __pnvCOMMON:
  1346     0078                     _EUSART_OverrunErrorHandler:
  1347     0078                     	ds	2
  1348     007A                     _EUSART_FramingErrorHandler:
  1349     007A                     	ds	2
  1350                           
  1351                           	psect	nvBANK0
  1352     004F                     __pnvBANK0:
  1353     004F                     _EUSART_ErrorHandler:
  1354     004F                     	ds	2
  1355     0011                     _PIR1bits	set	17
  1356     000B                     _INTCONbits	set	11
  1357     0097                     _WDTCON	set	151
  1358     0098                     _OSCTUNE	set	152
  1359     0099                     _OSCCON	set	153
  1360     0095                     _OPTION_REGbits	set	149
  1361     008D                     _TRISB	set	141
  1362     008C                     _TRISA	set	140
  1363     0116                     _BORCON	set	278
  1364     011E                     _APFCON1	set	286
  1365     011D                     _APFCON0	set	285
  1366     010D                     _LATB	set	269
  1367     010C                     _LATA	set	268
  1368     019A                     _TXREG	set	410
  1369     0199                     _RCREG	set	409
  1370     019D                     _RCSTAbits	set	413
  1371     019E                     _TXSTAbits	set	414
  1372     019C                     _SPBRGH	set	412
  1373     019B                     _SPBRGL	set	411
  1374     019E                     _TXSTA	set	414
  1375     019D                     _RCSTA	set	413
  1376     019F                     _BAUDCON	set	415
  1377     0196                     _EECON2	set	406
  1378     0193                     _EEDATL	set	403
  1379     0194                     _EEDATH	set	404
  1380     0195                     _EECON1bits	set	405
  1381     0192                     _EEADRH	set	402
  1382     0191                     _EEADRL	set	401
  1383     018C                     _ANSELA	set	396
  1384     018D                     _ANSELB	set	397
  1385     020C                     _WPUA	set	524
  1386     020D                     _WPUB	set	525
  1387                           
  1388                           	psect	cinit
  1389     07F3                     start_initialization:	
  1390                           ; #config settings
  1391                           
  1392     07F3                     __initialization:
  1393                           
  1394                           ; Clear objects allocated to COMMON
  1395     07F3  01FC               	clrf	__pbssCOMMON& (0+127)
  1396     07F4  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1397                           
  1398                           ; Clear objects allocated to BANK0
  1399     07F5  3020               	movlw	low __pbssBANK0
  1400     07F6  0084               	movwf	4
  1401     07F7  3000               	movlw	high __pbssBANK0
  1402     07F8  0085               	movwf	5
  1403     07F9  301A               	movlw	26
  1404     07FA  3184  24A7  3187   	fcall	clear_ram0
  1405     07FD                     end_of_initialization:	
  1406                           ;End of C runtime variable initialization code
  1407                           
  1408     07FD                     __end_of__initialization:
  1409     07FD  0020               	movlb	0
  1410     07FE  3185  2D8A         	ljmp	_main	;jump to C main() function
  1411                           
  1412                           	psect	bssCOMMON
  1413     007C                     __pbssCOMMON:
  1414     007C                     _eusartRxLastError:
  1415     007C                     	ds	1
  1416     007D                     _CMDRECEIV:
  1417     007D                     	ds	1
  1418                           
  1419                           	psect	bssBANK0
  1420     0020                     __pbssBANK0:
  1421     0020                     _MSGRX:
  1422     0020                     	ds	20
  1423     0034                     _CMDRECORD:
  1424     0034                     	ds	1
  1425     0035                     _ISRCVD:
  1426     0035                     	ds	1
  1427     0036                     _NPROX:
  1428     0036                     	ds	2
  1429     0038                     _NAGEN:
  1430     0038                     	ds	2
  1431                           
  1432                           	psect	clrtext
  1433     04A7                     clear_ram0:	
  1434                           ;	Called with FSR0 containing the base address, and
  1435                           ;	WREG with the size to clear
  1436                           
  1437     04A7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1438     04A8                     clrloop0:
  1439     04A8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1440     04A9  3101               	addfsr 0,1
  1441     04AA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1442     04AB  2CA8               	goto	clrloop0	;have we reached the end yet?
  1443     04AC  3400               	retlw	0	;all done for this memory range, return
  1444                           
  1445                           	psect	cstackCOMMON
  1446     0070                     __pcstackCOMMON:
  1447     0070                     ?_EUSART_Write:
  1448     0070                     ??_EUSART_Write:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451     0070                     ?_DATAEE_ReadByte:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454     0070                     ??_DATAEE_ReadByte:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457     0070                     ?_EUSART_is_rx_ready:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460     0070                     ??_EUSART_is_rx_ready:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463     0070                     ?_EUSART_Read:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466     0070                     ??_EUSART_Read:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469     0070                     ?_SYSTEM_Initialize:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472     0070                     ?_OSCILLATOR_Initialize:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475     0070                     ??_OSCILLATOR_Initialize:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478     0070                     ?_WDT_Initialize:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481     0070                     ??_WDT_Initialize:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484     0070                     ?_EUSART_Initialize:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487     0070                     ?_EUSART_SetFramingErrorHandler:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493     0070                     ?_EUSART_SetErrorHandler:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496     0070                     ?_MSGFUNC:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499     0070                     ?_main:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502     0070                     ?_PIN_MANAGER_Initialize:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505     0070                     ??_PIN_MANAGER_Initialize:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508     0070                     ?___bmul:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511     0070                     ?___wmul:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514     0070                     DATAEE_ReadByte@bAdd:	
  1515                           ; 2 bytes @ 0x0
  1516                           
  1517     0070                     EUSART_Write@txData:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520     0070                     ___bmul@multiplicand:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1527                           ; 2 bytes @ 0x0
  1528                           
  1529     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1530                           ; 2 bytes @ 0x0
  1531                           
  1532     0070                     ___wmul@multiplier:	
  1533                           ; 2 bytes @ 0x0
  1534                           
  1535                           
  1536                           ; 2 bytes @ 0x0
  1537     0070                     	ds	1
  1538     0071                     ?_MSGTXT:
  1539     0071                     ??___bmul:	
  1540                           ; 1 bytes @ 0x1
  1541                           
  1542     0071                     MSGTXT@MSG:	
  1543                           ; 1 bytes @ 0x1
  1544                           
  1545                           
  1546                           ; 2 bytes @ 0x1
  1547     0071                     	ds	1
  1548     0072                     ??_SYSTEM_Initialize:
  1549     0072                     ??_EUSART_Initialize:	
  1550                           ; 1 bytes @ 0x2
  1551                           
  1552     0072                     ??_EUSART_SetFramingErrorHandler:	
  1553                           ; 1 bytes @ 0x2
  1554                           
  1555     0072                     ??_EUSART_SetOverrunErrorHandler:	
  1556                           ; 1 bytes @ 0x2
  1557                           
  1558     0072                     ??_EUSART_SetErrorHandler:	
  1559                           ; 1 bytes @ 0x2
  1560                           
  1561     0072                     ___bmul@product:	
  1562                           ; 1 bytes @ 0x2
  1563                           
  1564     0072                     ___wmul@multiplicand:	
  1565                           ; 1 bytes @ 0x2
  1566                           
  1567                           
  1568                           ; 2 bytes @ 0x2
  1569     0072                     	ds	1
  1570     0073                     ??_MSGTXT:
  1571     0073                     ___bmul@multiplier:	
  1572                           ; 1 bytes @ 0x3
  1573                           
  1574                           
  1575                           ; 1 bytes @ 0x3
  1576     0073                     	ds	1
  1577     0074                     ?_DATAEE_WriteByte:
  1578     0074                     ??___wmul:	
  1579                           ; 1 bytes @ 0x4
  1580                           
  1581     0074                     DATAEE_WriteByte@bData:	
  1582                           ; 1 bytes @ 0x4
  1583                           
  1584     0074                     ___wmul@product:	
  1585                           ; 1 bytes @ 0x4
  1586                           
  1587                           
  1588                           ; 2 bytes @ 0x4
  1589     0074                     	ds	1
  1590     0075                     ??_DATAEE_WriteByte:
  1591     0075                     DATAEE_WriteByte@bAdd:	
  1592                           ; 1 bytes @ 0x5
  1593                           
  1594                           
  1595                           ; 1 bytes @ 0x5
  1596     0075                     	ds	1
  1597     0076                     DATAEE_WriteByte@GIEBitValue:
  1598                           
  1599                           ; 1 bytes @ 0x6
  1600     0076                     	ds	1
  1601     0077                     ??_MSGFUNC:
  1602                           
  1603                           ; 1 bytes @ 0x7
  1604     0077                     	ds	1
  1605     0078                     ??_main:
  1606                           
  1607                           	psect	cstackBANK0
  1608     003A                     __pcstackBANK0:	
  1609                           ; 1 bytes @ 0x8
  1610                           
  1611     003A                     MSGFUNC@Bposi:
  1612                           
  1613                           ; 2 bytes @ 0x0
  1614     003A                     	ds	2
  1615     003C                     MSGFUNC@AUX1:
  1616                           
  1617                           ; 2 bytes @ 0x2
  1618     003C                     	ds	2
  1619     003E                     MSGFUNC@letra:
  1620                           
  1621                           ; 1 bytes @ 0x4
  1622     003E                     	ds	1
  1623     003F                     MSGFUNC@MSGATIV:
  1624                           
  1625                           ; 1 bytes @ 0x5
  1626     003F                     	ds	1
  1627     0040                     MSGFUNC@CONT:
  1628                           
  1629                           ; 1 bytes @ 0x6
  1630     0040                     	ds	1
  1631     0041                     MSGFUNC@j:
  1632                           
  1633                           ; 2 bytes @ 0x7
  1634     0041                     	ds	2
  1635     0043                     MSGFUNC@i:
  1636                           
  1637                           ; 2 bytes @ 0x9
  1638     0043                     	ds	2
  1639     0045                     MSGFUNC@AUX1_80:
  1640                           
  1641                           ; 2 bytes @ 0xB
  1642     0045                     	ds	2
  1643     0047                     MSGFUNC@AUX1_87:
  1644                           
  1645                           ; 2 bytes @ 0xD
  1646     0047                     	ds	2
  1647     0049                     MSGFUNC@j_88:
  1648                           
  1649                           ; 2 bytes @ 0xF
  1650     0049                     	ds	2
  1651     004B                     MSGFUNC@j_85:
  1652                           
  1653                           ; 2 bytes @ 0x11
  1654     004B                     	ds	2
  1655     004D                     MSGFUNC@posi:
  1656                           
  1657                           ; 2 bytes @ 0x13
  1658     004D                     	ds	2
  1659                           
  1660                           	psect	maintext
  1661     058A                     __pmaintext:	
  1662 ;;
  1663 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1664 ;;
  1665 ;; *************** function _main *****************
  1666 ;; Defined at:
  1667 ;;		line 195 in file "main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : B1F/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1681 ;;      Params:         0       0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0
  1684 ;;      Totals:         0       0       0       0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels required when called: 3
  1687 ;; This function calls:
  1688 ;;		_EUSART_Read
  1689 ;;		_EUSART_Write
  1690 ;;		_EUSART_is_rx_ready
  1691 ;;		_MSGFUNC
  1692 ;;		_MSGTXT
  1693 ;;		_SYSTEM_Initialize
  1694 ;; This function is called by:
  1695 ;;		Startup code after reset
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699     058A                     _main:	
  1700                           ;psect for function _main
  1701                           
  1702     058A                     l1700:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1705                           
  1706                           
  1707                           ;main.c: 198:     SYSTEM_Initialize();
  1708     058A  3184  24CA  3185   	fcall	_SYSTEM_Initialize
  1709     058D                     l1702:
  1710                           
  1711                           ;main.c: 215:     MSGTXT(MSG0);
  1712     058D  3000               	movlw	low (_MSG0| (0+32768))
  1713     058E  00F1               	movwf	MSGTXT@MSG
  1714     058F  3088               	movlw	high (_MSG0| (0+32768))
  1715     0590  00F2               	movwf	MSGTXT@MSG+1
  1716     0591  3185  2511  3185   	fcall	_MSGTXT
  1717     0594                     l1704:
  1718                           
  1719                           ;main.c: 218:     {;main.c: 219:         if(EUSART_is_rx_ready()){
  1720     0594  3184  2492  3185   	fcall	_EUSART_is_rx_ready
  1721     0597  3A00               	xorlw	0
  1722     0598  1903               	skipnz
  1723     0599  2D9B               	goto	u771
  1724     059A  2D9C               	goto	u770
  1725     059B                     u771:
  1726     059B  2DB7               	goto	l1720
  1727     059C                     u770:
  1728     059C                     l1706:
  1729                           
  1730                           ;main.c: 220:             ISRCVD = EUSART_Read();
  1731     059C  3184  24D7  3185   	fcall	_EUSART_Read
  1732     059F  0020               	movlb	0	; select bank0
  1733     05A0  00B5               	movwf	_ISRCVD
  1734     05A1                     l1708:
  1735                           
  1736                           ;main.c: 221:             if(CMDRECEIV){
  1737     05A1  087D               	movf	_CMDRECEIV,w
  1738     05A2  1903               	btfsc	3,2
  1739     05A3  2DA5               	goto	u781
  1740     05A4  2DA6               	goto	u780
  1741     05A5                     u781:
  1742     05A5  2D94               	goto	l1704
  1743     05A6                     u780:
  1744     05A6                     l1710:
  1745                           
  1746                           ;main.c: 222:                 if(ISRCVD == 0x0D){
  1747     05A6  300D               	movlw	13
  1748     05A7  0635               	xorwf	_ISRCVD,w
  1749     05A8  1D03               	btfss	3,2
  1750     05A9  2DAB               	goto	u791
  1751     05AA  2DAC               	goto	u790
  1752     05AB                     u791:
  1753     05AB  2DB1               	goto	l1716
  1754     05AC                     u790:
  1755     05AC                     l1712:
  1756                           
  1757                           ;main.c: 224:                     CMDRECEIV = 0;
  1758     05AC  01FD               	clrf	_CMDRECEIV
  1759     05AD                     l1714:
  1760                           
  1761                           ;main.c: 225:                     MSGFUNC();
  1762     05AD  3185  25D7  3185   	fcall	_MSGFUNC
  1763                           
  1764                           ;main.c: 226:                 }else{
  1765     05B0  2D94               	goto	l1704
  1766     05B1                     l1716:
  1767                           
  1768                           ;main.c: 228:                     CMDRECEIV = 0;
  1769     05B1  01FD               	clrf	_CMDRECEIV
  1770     05B2                     l1718:
  1771                           
  1772                           ;main.c: 229:                     EUSART_Write(0x0D);
  1773     05B2  300D               	movlw	13
  1774     05B3  3184  24B4  3185   	fcall	_EUSART_Write
  1775     05B6  2D94               	goto	l1704
  1776     05B7                     l1720:
  1777                           
  1778                           ;main.c: 233:                 if(ISRCVD == 'A' || ISRCVD == 'L' || ISRCVD == 'P' || ISRC
      +                          VD == 'R'){
  1779     05B7  3041               	movlw	65
  1780     05B8  0020               	movlb	0	; select bank0
  1781     05B9  0635               	xorwf	_ISRCVD,w
  1782     05BA  1903               	btfsc	3,2
  1783     05BB  2DBD               	goto	u801
  1784     05BC  2DBE               	goto	u800
  1785     05BD                     u801:
  1786     05BD  2DD0               	goto	l114
  1787     05BE                     u800:
  1788     05BE                     l1722:
  1789     05BE  304C               	movlw	76
  1790     05BF  0635               	xorwf	_ISRCVD,w
  1791     05C0  1903               	btfsc	3,2
  1792     05C1  2DC3               	goto	u811
  1793     05C2  2DC4               	goto	u810
  1794     05C3                     u811:
  1795     05C3  2DD0               	goto	l114
  1796     05C4                     u810:
  1797     05C4                     l1724:
  1798     05C4  3050               	movlw	80
  1799     05C5  0635               	xorwf	_ISRCVD,w
  1800     05C6  1903               	btfsc	3,2
  1801     05C7  2DC9               	goto	u821
  1802     05C8  2DCA               	goto	u820
  1803     05C9                     u821:
  1804     05C9  2DD0               	goto	l114
  1805     05CA                     u820:
  1806     05CA                     l1726:
  1807     05CA  3052               	movlw	82
  1808     05CB  0635               	xorwf	_ISRCVD,w
  1809     05CC  1D03               	btfss	3,2
  1810     05CD  2DCF               	goto	u831
  1811     05CE  2DD0               	goto	u830
  1812     05CF                     u831:
  1813     05CF  2D94               	goto	l1704
  1814     05D0                     u830:
  1815     05D0                     l114:
  1816                           
  1817                           ;main.c: 235:                     CMDRECEIV = 1;
  1818     05D0  01FD               	clrf	_CMDRECEIV
  1819     05D1  0AFD               	incf	_CMDRECEIV,f
  1820     05D2                     l1728:
  1821                           
  1822                           ;main.c: 236:                     CMDRECORD = ISRCVD;
  1823     05D2  0835               	movf	_ISRCVD,w
  1824     05D3  00B4               	movwf	_CMDRECORD
  1825     05D4  2D94               	goto	l1704
  1826     05D5  3180  2802         	ljmp	start
  1827     05D7                     __end_of_main:
  1828                           
  1829                           	psect	text1
  1830     04CA                     __ptext1:	
  1831 ;; *************** function _SYSTEM_Initialize *****************
  1832 ;; Defined at:
  1833 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1847 ;;      Params:         0       0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0
  1850 ;;      Totals:         0       0       0       0       0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 2
  1854 ;; This function calls:
  1855 ;;		_EUSART_Initialize
  1856 ;;		_OSCILLATOR_Initialize
  1857 ;;		_PIN_MANAGER_Initialize
  1858 ;;		_WDT_Initialize
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864     04CA                     _SYSTEM_Initialize:	
  1865                           ;psect for function _SYSTEM_Initialize
  1866                           
  1867     04CA                     l1698:	
  1868                           ;incstack = 0
  1869                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1870                           
  1871                           
  1872                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1873     04CA  3184  24FB  3184   	fcall	_PIN_MANAGER_Initialize
  1874                           
  1875                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1876     04CD  3184  24AD  3184   	fcall	_OSCILLATOR_Initialize
  1877                           
  1878                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1879     04D0  3184  248E  3184   	fcall	_WDT_Initialize
  1880                           
  1881                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  1882     04D3  3185  2569  3184   	fcall	_EUSART_Initialize
  1883     04D6                     l164:
  1884     04D6  0008               	return
  1885     04D7                     __end_of_SYSTEM_Initialize:
  1886                           
  1887                           	psect	text2
  1888     048E                     __ptext2:	
  1889 ;; *************** function _WDT_Initialize *****************
  1890 ;; Defined at:
  1891 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1905 ;;      Params:         0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_SYSTEM_Initialize
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918     048E                     _WDT_Initialize:	
  1919                           ;psect for function _WDT_Initialize
  1920                           
  1921     048E                     l1480:	
  1922                           ;incstack = 0
  1923                           ; Regs used in _WDT_Initialize: [wreg]
  1924                           
  1925                           
  1926                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1927     048E  3016               	movlw	22
  1928     048F  0021               	movlb	1	; select bank1
  1929     0490  0097               	movwf	23	;volatile
  1930     0491                     l170:
  1931     0491  0008               	return
  1932     0492                     __end_of_WDT_Initialize:
  1933                           
  1934                           	psect	text3
  1935     04FB                     __ptext3:	
  1936 ;; *************** function _PIN_MANAGER_Initialize *****************
  1937 ;; Defined at:
  1938 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1952 ;;      Params:         0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_SYSTEM_Initialize
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965     04FB                     _PIN_MANAGER_Initialize:	
  1966                           ;psect for function _PIN_MANAGER_Initialize
  1967                           
  1968     04FB                     l1462:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1971                           
  1972                           
  1973                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1974     04FB  0022               	movlb	2	; select bank2
  1975     04FC  018C               	clrf	12	;volatile
  1976                           
  1977                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1978     04FD  018D               	clrf	13	;volatile
  1979     04FE                     l1464:
  1980                           
  1981                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  1982     04FE  30FF               	movlw	255
  1983     04FF  0021               	movlb	1	; select bank1
  1984     0500  008C               	movwf	12	;volatile
  1985     0501                     l1466:
  1986                           
  1987                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  1988     0501  30FF               	movlw	255
  1989     0502  008D               	movwf	13	;volatile
  1990     0503                     l1468:
  1991                           
  1992                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF8;
  1993     0503  30F8               	movlw	248
  1994     0504  0023               	movlb	3	; select bank3
  1995     0505  008D               	movwf	13	;volatile
  1996     0506                     l1470:
  1997                           
  1998                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  1999     0506  301F               	movlw	31
  2000     0507  008C               	movwf	12	;volatile
  2001                           
  2002                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2003     0508  0024               	movlb	4	; select bank4
  2004     0509  018D               	clrf	13	;volatile
  2005                           
  2006                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2007     050A  018C               	clrf	12	;volatile
  2008     050B                     l1472:
  2009                           
  2010                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2011     050B  0021               	movlb	1	; select bank1
  2012     050C  1795               	bsf	21,7	;volatile
  2013                           
  2014                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2015     050D  0022               	movlb	2	; select bank2
  2016     050E  019D               	clrf	29	;volatile
  2017                           
  2018                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2019     050F  019E               	clrf	30	;volatile
  2020     0510                     l142:
  2021     0510  0008               	return
  2022     0511                     __end_of_PIN_MANAGER_Initialize:
  2023                           
  2024                           	psect	text4
  2025     04AD                     __ptext4:	
  2026 ;; *************** function _OSCILLATOR_Initialize *****************
  2027 ;; Defined at:
  2028 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2042 ;;      Params:         0       0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_SYSTEM_Initialize
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055     04AD                     _OSCILLATOR_Initialize:	
  2056                           ;psect for function _OSCILLATOR_Initialize
  2057                           
  2058     04AD                     l1474:	
  2059                           ;incstack = 0
  2060                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2061                           
  2062                           
  2063                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x38;
  2064     04AD  3038               	movlw	56
  2065     04AE  0021               	movlb	1	; select bank1
  2066     04AF  0099               	movwf	25	;volatile
  2067     04B0                     l1476:
  2068                           
  2069                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  2070     04B0  0198               	clrf	24	;volatile
  2071     04B1                     l1478:
  2072                           
  2073                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2074     04B1  0022               	movlb	2	; select bank2
  2075     04B2  0196               	clrf	22	;volatile
  2076     04B3                     l167:
  2077     04B3  0008               	return
  2078     04B4                     __end_of_OSCILLATOR_Initialize:
  2079                           
  2080                           	psect	text5
  2081     0569                     __ptext5:	
  2082 ;; *************** function _EUSART_Initialize *****************
  2083 ;; Defined at:
  2084 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0, pclath, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2098 ;;      Params:         0       0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 1
  2105 ;; This function calls:
  2106 ;;		_EUSART_SetErrorHandler
  2107 ;;		_EUSART_SetFramingErrorHandler
  2108 ;;		_EUSART_SetOverrunErrorHandler
  2109 ;; This function is called by:
  2110 ;;		_SYSTEM_Initialize
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114     0569                     _EUSART_Initialize:	
  2115                           ;psect for function _EUSART_Initialize
  2116                           
  2117     0569                     l1482:	
  2118                           ;incstack = 0
  2119                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2120                           
  2121                           
  2122                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  2123     0569  3008               	movlw	8
  2124     056A  0023               	movlb	3	; select bank3
  2125     056B  009F               	movwf	31	;volatile
  2126                           
  2127                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  2128     056C  3090               	movlw	144
  2129     056D  009D               	movwf	29	;volatile
  2130                           
  2131                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  2132     056E  3024               	movlw	36
  2133     056F  009E               	movwf	30	;volatile
  2134                           
  2135                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x01;
  2136     0570  3001               	movlw	1
  2137     0571  009B               	movwf	27	;volatile
  2138     0572                     l1484:
  2139                           
  2140                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  2141     0572  019C               	clrf	28	;volatile
  2142     0573                     l1486:
  2143                           
  2144                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2145     0573  3000               	movlw	0
  2146     0574  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2147     0575  3000               	movlw	0
  2148     0576  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2149     0577  3184  2497  3185   	fcall	_EUSART_SetFramingErrorHandler
  2150     057A                     l1488:
  2151                           
  2152                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2153     057A  3000               	movlw	0
  2154     057B  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2155     057C  3000               	movlw	0
  2156     057D  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2157     057E  3184  249C  3185   	fcall	_EUSART_SetOverrunErrorHandler
  2158     0581                     l1490:
  2159                           
  2160                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2161     0581  3000               	movlw	0
  2162     0582  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  2163     0583  3000               	movlw	0
  2164     0584  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2165     0585  3184  24A1  3185   	fcall	_EUSART_SetErrorHandler
  2166     0588                     l1492:
  2167                           
  2168                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  2169     0588  01FC               	clrf	_eusartRxLastError	;volatile
  2170     0589                     l263:
  2171     0589  0008               	return
  2172     058A                     __end_of_EUSART_Initialize:
  2173                           
  2174                           	psect	text6
  2175     049C                     __ptext6:	
  2176 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2177 ;; Defined at:
  2178 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2181 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2193 ;;      Params:         2       0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0
  2196 ;;      Totals:         2       0       0       0       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_EUSART_Initialize
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206     049C                     _EUSART_SetOverrunErrorHandler:	
  2207                           ;psect for function _EUSART_SetOverrunErrorHandler
  2208                           
  2209     049C                     l1398:	
  2210                           ;incstack = 0
  2211                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2212                           
  2213                           
  2214                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  2215     049C  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2216     049D  00F9               	movwf	_EUSART_OverrunErrorHandler+1
  2217     049E  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2218     049F  00F8               	movwf	_EUSART_OverrunErrorHandler
  2219     04A0                     l305:
  2220     04A0  0008               	return
  2221     04A1                     __end_of_EUSART_SetOverrunErrorHandler:
  2222                           
  2223                           	psect	text7
  2224     0497                     __ptext7:	
  2225 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2226 ;; Defined at:
  2227 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2230 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2242 ;;      Params:         2       0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0
  2245 ;;      Totals:         2       0       0       0       0       0
  2246 ;;Total ram usage:        2 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_EUSART_Initialize
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255     0497                     _EUSART_SetFramingErrorHandler:	
  2256                           ;psect for function _EUSART_SetFramingErrorHandler
  2257                           
  2258     0497                     l1396:	
  2259                           ;incstack = 0
  2260                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2261                           
  2262                           
  2263                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  2264     0497  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2265     0498  00FB               	movwf	_EUSART_FramingErrorHandler+1
  2266     0499  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2267     049A  00FA               	movwf	_EUSART_FramingErrorHandler
  2268     049B                     l302:
  2269     049B  0008               	return
  2270     049C                     __end_of_EUSART_SetFramingErrorHandler:
  2271                           
  2272                           	psect	text8
  2273     04A1                     __ptext8:	
  2274 ;; *************** function _EUSART_SetErrorHandler *****************
  2275 ;; Defined at:
  2276 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2279 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2291 ;;      Params:         2       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0
  2294 ;;      Totals:         2       0       0       0       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_EUSART_Initialize
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304     04A1                     _EUSART_SetErrorHandler:	
  2305                           ;psect for function _EUSART_SetErrorHandler
  2306                           
  2307     04A1                     l1400:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2310                           
  2311                           
  2312                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  2313     04A1  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2314     04A2  0020               	movlb	0	; select bank0
  2315     04A3  00D0               	movwf	_EUSART_ErrorHandler+1
  2316     04A4  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2317     04A5  00CF               	movwf	_EUSART_ErrorHandler
  2318     04A6                     l308:
  2319     04A6  0008               	return
  2320     04A7                     __end_of_EUSART_SetErrorHandler:
  2321                           
  2322                           	psect	text9
  2323     05D7                     __ptext9:	
  2324 ;; *************** function _MSGFUNC *****************
  2325 ;; Defined at:
  2326 ;;		line 24 in file "main.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  Bposi           2    0[BANK0 ] int 
  2331 ;;  letra           1    4[BANK0 ] unsigned char 
  2332 ;;  AUX1            2    2[BANK0 ] int 
  2333 ;;  MSGATIV         1    5[BANK0 ] _Bool 
  2334 ;;  j               2   15[BANK0 ] int 
  2335 ;;  j               2   17[BANK0 ] int 
  2336 ;;  j               2    7[BANK0 ] int 
  2337 ;;  i               2    9[BANK0 ] int 
  2338 ;;  AUX1            2   13[BANK0 ] int 
  2339 ;;  posi            2   19[BANK0 ] int 
  2340 ;;  AUX1            2   11[BANK0 ] int 
  2341 ;;  CONT            1    6[BANK0 ] _Bool 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2351 ;;      Params:         0       0       0       0       0       0
  2352 ;;      Locals:         0      21       0       0       0       0
  2353 ;;      Temps:          1       0       0       0       0       0
  2354 ;;      Totals:         1      21       0       0       0       0
  2355 ;;Total ram usage:       22 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 2
  2358 ;; This function calls:
  2359 ;;		_DATAEE_ReadByte
  2360 ;;		_DATAEE_WriteByte
  2361 ;;		_EUSART_Read
  2362 ;;		_EUSART_Write
  2363 ;;		_EUSART_is_rx_ready
  2364 ;;		_MSGTXT
  2365 ;;		___bmul
  2366 ;;		___wmul
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372     05D7                     _MSGFUNC:	
  2373                           ;psect for function _MSGFUNC
  2374                           
  2375     05D7                     l1522:	
  2376                           ;incstack = 0
  2377                           ; Regs used in _MSGFUNC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2378                           
  2379                           
  2380                           ;main.c: 25:     switch(CMDRECORD){
  2381     05D7  2FE3               	goto	l1696
  2382     05D8                     l1524:
  2383                           
  2384                           ;main.c: 28:             if(NAGEN == 0 || DATAEE_ReadByte(0) == '$'){
  2385     05D8  0838               	movf	_NAGEN,w
  2386     05D9  0439               	iorwf	_NAGEN+1,w
  2387     05DA  1903               	btfsc	3,2
  2388     05DB  2DDD               	goto	u571
  2389     05DC  2DDE               	goto	u570
  2390     05DD                     u571:
  2391     05DD  2DE7               	goto	l1528
  2392     05DE                     u570:
  2393     05DE                     l1526:
  2394     05DE  3000               	movlw	0
  2395     05DF  3184  24BE  3185   	fcall	_DATAEE_ReadByte
  2396     05E2  3A24               	xorlw	36
  2397     05E3  1D03               	skipz
  2398     05E4  2DE6               	goto	u581
  2399     05E5  2DE7               	goto	u580
  2400     05E6                     u581:
  2401     05E6  2DF2               	goto	l1532
  2402     05E7                     u580:
  2403     05E7                     l1528:
  2404                           
  2405                           ;main.c: 31:                 MSGTXT(MSG2);
  2406     05E7  30C1               	movlw	low (_MSG2| (0+32768))
  2407     05E8  00F1               	movwf	MSGTXT@MSG
  2408     05E9  3088               	movlw	high (_MSG2| (0+32768))
  2409     05EA  00F2               	movwf	MSGTXT@MSG+1
  2410     05EB  3185  2511  3185   	fcall	_MSGTXT
  2411     05EE                     l1530:
  2412                           
  2413                           ;main.c: 32:                 NAGEN = 0;
  2414     05EE  0020               	movlb	0	; select bank0
  2415     05EF  01B8               	clrf	_NAGEN
  2416     05F0  01B9               	clrf	_NAGEN+1
  2417                           
  2418                           ;main.c: 33:             }else{
  2419     05F1  2E4C               	goto	l1562
  2420     05F2                     l1532:
  2421                           
  2422                           ;main.c: 34:                 MSGTXT(MSG1);
  2423     05F2  30DD               	movlw	low (_MSG1| (0+32768))
  2424     05F3  00F1               	movwf	MSGTXT@MSG
  2425     05F4  3088               	movlw	high (_MSG1| (0+32768))
  2426     05F5  00F2               	movwf	MSGTXT@MSG+1
  2427     05F6  3185  2511  3185   	fcall	_MSGTXT
  2428     05F9                     l1534:
  2429                           
  2430                           ;main.c: 37:                 for(int j=0;j>NAGEN;j++){
  2431     05F9  0020               	movlb	0	; select bank0
  2432     05FA  01C1               	clrf	MSGFUNC@j
  2433     05FB  01C2               	clrf	MSGFUNC@j+1
  2434     05FC  2E3E               	goto	l57
  2435     05FD                     l1536:
  2436                           
  2437                           ;main.c: 38:                     int AUX1 = 21 * j;
  2438     05FD  0020               	movlb	0	; select bank0
  2439     05FE  0842               	movf	MSGFUNC@j+1,w
  2440     05FF  00F1               	movwf	___wmul@multiplier+1
  2441     0600  0841               	movf	MSGFUNC@j,w
  2442     0601  00F0               	movwf	___wmul@multiplier
  2443     0602  3015               	movlw	21
  2444     0603  00F2               	movwf	___wmul@multiplicand
  2445     0604  3000               	movlw	0
  2446     0605  00F3               	movwf	___wmul@multiplicand+1
  2447     0606  3185  254A  3185   	fcall	___wmul
  2448     0609  0871               	movf	?___wmul+1,w
  2449     060A  0020               	movlb	0	; select bank0
  2450     060B  00BD               	movwf	MSGFUNC@AUX1+1
  2451     060C  0870               	movf	?___wmul,w
  2452     060D  00BC               	movwf	MSGFUNC@AUX1
  2453     060E                     l1538:
  2454                           
  2455                           ;main.c: 39:                     _Bool MSGATIV = 1;
  2456     060E  01BF               	clrf	MSGFUNC@MSGATIV
  2457     060F  0ABF               	incf	MSGFUNC@MSGATIV,f
  2458                           
  2459                           ;main.c: 41:                     while(MSGATIV){
  2460     0610  2E35               	goto	l1558
  2461     0611                     l1540:
  2462                           
  2463                           ;main.c: 42:                         ISRCVD = (uint8_t) DATAEE_ReadByte((uint8_t)AUX1);
  2464     0611  083C               	movf	MSGFUNC@AUX1,w
  2465     0612  3184  24BE  3185   	fcall	_DATAEE_ReadByte
  2466     0615  0020               	movlb	0	; select bank0
  2467     0616  00B5               	movwf	_ISRCVD
  2468     0617                     l1542:
  2469                           
  2470                           ;main.c: 43:                         if(ISRCVD == 0x0D){
  2471     0617  300D               	movlw	13
  2472     0618  0635               	xorwf	_ISRCVD,w
  2473     0619  1D03               	btfss	3,2
  2474     061A  2E1C               	goto	u591
  2475     061B  2E1D               	goto	u590
  2476     061C                     u591:
  2477     061C  2E24               	goto	l1548
  2478     061D                     u590:
  2479     061D                     l1544:
  2480                           
  2481                           ;main.c: 44:                             EUSART_Write(0x0D);
  2482     061D  300D               	movlw	13
  2483     061E  3184  24B4  3185   	fcall	_EUSART_Write
  2484     0621                     l1546:
  2485                           
  2486                           ;main.c: 46:                             MSGATIV = 0;
  2487     0621  0020               	movlb	0	; select bank0
  2488     0622  01BF               	clrf	MSGFUNC@MSGATIV
  2489                           
  2490                           ;main.c: 47:                         }else if(ISRCVD == '$'){
  2491     0623  2E35               	goto	l1558
  2492     0624                     l1548:
  2493     0624  3024               	movlw	36
  2494     0625  0635               	xorwf	_ISRCVD,w
  2495     0626  1D03               	btfss	3,2
  2496     0627  2E29               	goto	u601
  2497     0628  2E2A               	goto	u600
  2498     0629                     u601:
  2499     0629  2E2C               	goto	l1554
  2500     062A                     u600:
  2501     062A                     l1550:
  2502                           
  2503                           ;main.c: 50:                             CMDRECEIV = 0;
  2504     062A  01FD               	clrf	_CMDRECEIV
  2505                           
  2506                           ;main.c: 51:                             break;
  2507     062B  2E3A               	goto	l1560
  2508     062C                     l1554:
  2509                           
  2510                           ;main.c: 55:                             EUSART_Write(ISRCVD);
  2511     062C  0835               	movf	_ISRCVD,w
  2512     062D  3184  24B4  3185   	fcall	_EUSART_Write
  2513     0630                     l1556:
  2514                           
  2515                           ;main.c: 56:                             AUX1++;
  2516     0630  3001               	movlw	1
  2517     0631  0020               	movlb	0	; select bank0
  2518     0632  07BC               	addwf	MSGFUNC@AUX1,f
  2519     0633  3000               	movlw	0
  2520     0634  3DBD               	addwfc	MSGFUNC@AUX1+1,f
  2521     0635                     l1558:
  2522                           
  2523                           ;main.c: 41:                     while(MSGATIV){
  2524     0635  083F               	movf	MSGFUNC@MSGATIV,w
  2525     0636  1D03               	btfss	3,2
  2526     0637  2E39               	goto	u611
  2527     0638  2E3A               	goto	u610
  2528     0639                     u611:
  2529     0639  2E11               	goto	l1540
  2530     063A                     u610:
  2531     063A                     l1560:
  2532                           
  2533                           ;main.c: 59:                 }
  2534     063A  3001               	movlw	1
  2535     063B  07C1               	addwf	MSGFUNC@j,f
  2536     063C  3000               	movlw	0
  2537     063D  3DC2               	addwfc	MSGFUNC@j+1,f
  2538     063E                     l57:
  2539     063E  0839               	movf	_NAGEN+1,w
  2540     063F  3A80               	xorlw	128
  2541     0640  00F7               	movwf	??_MSGFUNC
  2542     0641  0842               	movf	MSGFUNC@j+1,w
  2543     0642  3A80               	xorlw	128
  2544     0643  0277               	subwf	??_MSGFUNC,w
  2545     0644  1D03               	skipz
  2546     0645  2E48               	goto	u625
  2547     0646  0841               	movf	MSGFUNC@j,w
  2548     0647  0238               	subwf	_NAGEN,w
  2549     0648                     u625:
  2550     0648  1C03               	skipc
  2551     0649  2E4B               	goto	u621
  2552     064A  2E4C               	goto	u620
  2553     064B                     u621:
  2554     064B  2DFD               	goto	l1536
  2555     064C                     u620:
  2556     064C                     l1562:
  2557                           
  2558                           ;main.c: 63:             CMDRECEIV = 0;
  2559     064C  01FD               	clrf	_CMDRECEIV
  2560                           
  2561                           ;main.c: 64:             break;
  2562     064D  2FF2               	goto	l101
  2563     064E                     l1564:
  2564                           
  2565                           ;main.c: 67:             if(NAGEN<10){
  2566     064E  0839               	movf	_NAGEN+1,w
  2567     064F  3A80               	xorlw	128
  2568     0650  00F7               	movwf	??_MSGFUNC
  2569     0651  3080               	movlw	128
  2570     0652  0277               	subwf	??_MSGFUNC,w
  2571     0653  1D03               	skipz
  2572     0654  2E57               	goto	u635
  2573     0655  300A               	movlw	10
  2574     0656  0238               	subwf	_NAGEN,w
  2575     0657                     u635:
  2576     0657  1803               	skipnc
  2577     0658  2E5A               	goto	u631
  2578     0659  2E5B               	goto	u630
  2579     065A                     u631:
  2580     065A  2F1B               	goto	l1634
  2581     065B                     u630:
  2582     065B                     l1566:
  2583                           
  2584                           ;main.c: 68:                 int AUX1 = 21 * NAGEN;
  2585     065B  0020               	movlb	0	; select bank0
  2586     065C  0839               	movf	_NAGEN+1,w
  2587     065D  00F1               	movwf	___wmul@multiplier+1
  2588     065E  0838               	movf	_NAGEN,w
  2589     065F  00F0               	movwf	___wmul@multiplier
  2590     0660  3015               	movlw	21
  2591     0661  00F2               	movwf	___wmul@multiplicand
  2592     0662  3000               	movlw	0
  2593     0663  00F3               	movwf	___wmul@multiplicand+1
  2594     0664  3185  254A  3185   	fcall	___wmul
  2595     0667  0871               	movf	?___wmul+1,w
  2596     0668  0020               	movlb	0	; select bank0
  2597     0669  00C6               	movwf	MSGFUNC@AUX1_80+1
  2598     066A  0870               	movf	?___wmul,w
  2599     066B  00C5               	movwf	MSGFUNC@AUX1_80
  2600     066C                     l1568:
  2601                           
  2602                           ;main.c: 69:                 int posi = 0;
  2603     066C  01CD               	clrf	MSGFUNC@posi
  2604     066D  01CE               	clrf	MSGFUNC@posi+1
  2605     066E                     l1570:
  2606                           
  2607                           ;main.c: 70:                 _Bool CONT = 1;
  2608     066E  01C0               	clrf	MSGFUNC@CONT
  2609     066F  0AC0               	incf	MSGFUNC@CONT,f
  2610     0670                     l1572:
  2611                           
  2612                           ;main.c: 71:                 DATAEE_WriteByte((uint8_t)AUX1,'\0');
  2613     0670  01F4               	clrf	DATAEE_WriteByte@bData
  2614     0671  0845               	movf	MSGFUNC@AUX1_80,w
  2615     0672  3185  252C  3185   	fcall	_DATAEE_WriteByte
  2616     0675                     l1574:
  2617                           
  2618                           ;main.c: 72:                 AUX1++;
  2619     0675  3001               	movlw	1
  2620     0676  0020               	movlb	0	; select bank0
  2621     0677  07C5               	addwf	MSGFUNC@AUX1_80,f
  2622     0678  3000               	movlw	0
  2623     0679  3DC6               	addwfc	MSGFUNC@AUX1_80+1,f
  2624     067A                     l1576:
  2625                           
  2626                           ;main.c: 75:                 MSGTXT(MSG4);
  2627     067A  30F3               	movlw	low (_MSG4| (0+32768))
  2628     067B  00F1               	movwf	MSGTXT@MSG
  2629     067C  3088               	movlw	high (_MSG4| (0+32768))
  2630     067D  00F2               	movwf	MSGTXT@MSG+1
  2631     067E  3185  2511  3185   	fcall	_MSGTXT
  2632                           
  2633                           ;main.c: 77:                 while(CONT){
  2634     0681  2EEF               	goto	l1616
  2635     0682                     l1578:
  2636                           
  2637                           ;main.c: 79:                     if(EUSART_is_rx_ready()){
  2638     0682  3184  2492  3185   	fcall	_EUSART_is_rx_ready
  2639     0685  3A00               	xorlw	0
  2640     0686  1903               	skipnz
  2641     0687  2E89               	goto	u641
  2642     0688  2E8A               	goto	u640
  2643     0689                     u641:
  2644     0689  2EEF               	goto	l1616
  2645     068A                     u640:
  2646     068A                     l1580:
  2647                           
  2648                           ;main.c: 81:                         ISRCVD = EUSART_Read();
  2649     068A  3184  24D7  3185   	fcall	_EUSART_Read
  2650     068D  0020               	movlb	0	; select bank0
  2651     068E  00B5               	movwf	_ISRCVD
  2652     068F                     l1582:
  2653                           
  2654                           ;main.c: 82:                         if(ISRCVD == 0x0D || posi == 19){
  2655     068F  300D               	movlw	13
  2656     0690  0635               	xorwf	_ISRCVD,w
  2657     0691  1903               	btfsc	3,2
  2658     0692  2E94               	goto	u651
  2659     0693  2E95               	goto	u650
  2660     0694                     u651:
  2661     0694  2E9C               	goto	l1586
  2662     0695                     u650:
  2663     0695                     l1584:
  2664     0695  3013               	movlw	19
  2665     0696  064D               	xorwf	MSGFUNC@posi,w
  2666     0697  044E               	iorwf	MSGFUNC@posi+1,w
  2667     0698  1D03               	btfss	3,2
  2668     0699  2E9B               	goto	u661
  2669     069A  2E9C               	goto	u660
  2670     069B                     u661:
  2671     069B  2EE5               	goto	l1612
  2672     069C                     u660:
  2673     069C                     l1586:
  2674                           
  2675                           ;main.c: 85:                             int Bposi = posi;
  2676     069C  084E               	movf	MSGFUNC@posi+1,w
  2677     069D  00BB               	movwf	MSGFUNC@Bposi+1
  2678     069E  084D               	movf	MSGFUNC@posi,w
  2679     069F  00BA               	movwf	MSGFUNC@Bposi
  2680                           
  2681                           ;main.c: 88:                             while(posi <= 19){
  2682     06A0  2EAB               	goto	l1592
  2683     06A1                     l1588:
  2684                           
  2685                           ;main.c: 89:                                 MSGRX.NAME[posi] = 0x00;
  2686     06A1  0020               	movlb	0	; select bank0
  2687     06A2  084D               	movf	MSGFUNC@posi,w
  2688     06A3  3E20               	addlw	(low (_MSGRX| 0))& (0+255)
  2689     06A4  0086               	movwf	6
  2690     06A5  0187               	clrf	7
  2691     06A6  0181               	clrf	1
  2692     06A7                     l1590:
  2693                           
  2694                           ;main.c: 90:                                 posi++;
  2695     06A7  3001               	movlw	1
  2696     06A8  07CD               	addwf	MSGFUNC@posi,f
  2697     06A9  3000               	movlw	0
  2698     06AA  3DCE               	addwfc	MSGFUNC@posi+1,f
  2699     06AB                     l1592:
  2700                           
  2701                           ;main.c: 88:                             while(posi <= 19){
  2702     06AB  084E               	movf	MSGFUNC@posi+1,w
  2703     06AC  3A80               	xorlw	128
  2704     06AD  00F7               	movwf	??_MSGFUNC
  2705     06AE  3080               	movlw	128
  2706     06AF  0277               	subwf	??_MSGFUNC,w
  2707     06B0  1D03               	skipz
  2708     06B1  2EB4               	goto	u675
  2709     06B2  3014               	movlw	20
  2710     06B3  024D               	subwf	MSGFUNC@posi,w
  2711     06B4                     u675:
  2712     06B4  1C03               	skipc
  2713     06B5  2EB7               	goto	u671
  2714     06B6  2EB8               	goto	u670
  2715     06B7                     u671:
  2716     06B7  2EA1               	goto	l1588
  2717     06B8                     u670:
  2718     06B8                     l1594:
  2719                           
  2720                           ;main.c: 94:                             posi = Bposi;
  2721     06B8  0020               	movlb	0	; select bank0
  2722     06B9  083B               	movf	MSGFUNC@Bposi+1,w
  2723     06BA  00CE               	movwf	MSGFUNC@posi+1
  2724     06BB  083A               	movf	MSGFUNC@Bposi,w
  2725     06BC  00CD               	movwf	MSGFUNC@posi
  2726     06BD                     l1596:
  2727                           
  2728                           ;main.c: 97:                             if(posi == 0){
  2729     06BD  084D               	movf	MSGFUNC@posi,w
  2730     06BE  044E               	iorwf	MSGFUNC@posi+1,w
  2731     06BF  1D03               	btfss	3,2
  2732     06C0  2EC2               	goto	u681
  2733     06C1  2EC3               	goto	u680
  2734     06C2                     u681:
  2735     06C2  2ED3               	goto	l1604
  2736     06C3                     u680:
  2737     06C3                     l1598:
  2738                           
  2739                           ;main.c: 100:                                 MSGRX.NAME[posi] = '$';
  2740     06C3  084D               	movf	MSGFUNC@posi,w
  2741     06C4  3E20               	addlw	(low (_MSGRX| 0))& (0+255)
  2742     06C5  0086               	movwf	6
  2743     06C6  0187               	clrf	7
  2744     06C7  3024               	movlw	36
  2745     06C8  0081               	movwf	1
  2746     06C9                     l1600:
  2747                           
  2748                           ;main.c: 103:                                 MSGTXT(MSG5);
  2749     06C9  3058               	movlw	low (_MSG5| (0+32768))
  2750     06CA  00F1               	movwf	MSGTXT@MSG
  2751     06CB  3088               	movlw	high (_MSG5| (0+32768))
  2752     06CC  00F2               	movwf	MSGTXT@MSG+1
  2753     06CD  3185  2511  3185   	fcall	_MSGTXT
  2754     06D0                     l1602:
  2755                           
  2756                           ;main.c: 106:                                 CONT = 0;
  2757     06D0  0020               	movlb	0	; select bank0
  2758     06D1  01C0               	clrf	MSGFUNC@CONT
  2759                           
  2760                           ;main.c: 109:                             }else{
  2761     06D2  2EEF               	goto	l1616
  2762     06D3                     l1604:
  2763                           
  2764                           ;main.c: 112:                                 MSGRX.NAME[posi] = 0x0D;
  2765     06D3  084D               	movf	MSGFUNC@posi,w
  2766     06D4  3E20               	addlw	(low (_MSGRX| 0))& (0+255)
  2767     06D5  0086               	movwf	6
  2768     06D6  0187               	clrf	7
  2769     06D7  300D               	movlw	13
  2770     06D8  0081               	movwf	1
  2771     06D9                     l1606:
  2772                           
  2773                           ;main.c: 115:                                 NAGEN++;
  2774     06D9  3001               	movlw	1
  2775     06DA  07B8               	addwf	_NAGEN,f
  2776     06DB  3000               	movlw	0
  2777     06DC  3DB9               	addwfc	_NAGEN+1,f
  2778     06DD                     l1608:
  2779                           
  2780                           ;main.c: 116:                                 MSGTXT(MSGS);
  2781     06DD  30A2               	movlw	low (_MSGS| (0+32768))
  2782     06DE  00F1               	movwf	MSGTXT@MSG
  2783     06DF  3088               	movlw	high (_MSGS| (0+32768))
  2784     06E0  00F2               	movwf	MSGTXT@MSG+1
  2785     06E1  3185  2511  3185   	fcall	_MSGTXT
  2786     06E4  2ED0               	goto	l1602
  2787     06E5                     l1612:
  2788                           
  2789                           ;main.c: 123:                             MSGRX.NAME[posi] = ISRCVD;
  2790     06E5  084D               	movf	MSGFUNC@posi,w
  2791     06E6  3E20               	addlw	(low (_MSGRX| 0))& (0+255)
  2792     06E7  0086               	movwf	6
  2793     06E8  0187               	clrf	7
  2794     06E9  0835               	movf	_ISRCVD,w
  2795     06EA  0081               	movwf	1
  2796     06EB                     l1614:
  2797                           
  2798                           ;main.c: 124:                             posi++;
  2799     06EB  3001               	movlw	1
  2800     06EC  07CD               	addwf	MSGFUNC@posi,f
  2801     06ED  3000               	movlw	0
  2802     06EE  3DCE               	addwfc	MSGFUNC@posi+1,f
  2803     06EF                     l1616:
  2804                           
  2805                           ;main.c: 77:                 while(CONT){
  2806     06EF  0020               	movlb	0	; select bank0
  2807     06F0  0840               	movf	MSGFUNC@CONT,w
  2808     06F1  1D03               	btfss	3,2
  2809     06F2  2EF4               	goto	u691
  2810     06F3  2EF5               	goto	u690
  2811     06F4                     u691:
  2812     06F4  2E82               	goto	l1578
  2813     06F5                     u690:
  2814     06F5                     l1618:
  2815                           
  2816                           ;main.c: 129:                 for(int j=0;j<20;j++){
  2817     06F5  01CB               	clrf	MSGFUNC@j_85
  2818     06F6  01CC               	clrf	MSGFUNC@j_85+1
  2819     06F7                     l1624:
  2820                           
  2821                           ;main.c: 130:                     uint8_t letra = MSGRX.NAME[j];
  2822     06F7  0020               	movlb	0	; select bank0
  2823     06F8  084B               	movf	MSGFUNC@j_85,w
  2824     06F9  3E20               	addlw	(low (_MSGRX| 0))& (0+255)
  2825     06FA  0086               	movwf	6
  2826     06FB  0187               	clrf	7
  2827     06FC  0801               	movf	1,w
  2828     06FD  00BE               	movwf	MSGFUNC@letra
  2829     06FE                     l1626:
  2830                           
  2831                           ;main.c: 131:                     DATAEE_WriteByte((uint8_t)AUX1,letra);
  2832     06FE  083E               	movf	MSGFUNC@letra,w
  2833     06FF  00F4               	movwf	DATAEE_WriteByte@bData
  2834     0700  0845               	movf	MSGFUNC@AUX1_80,w
  2835     0701  3185  252C  3185   	fcall	_DATAEE_WriteByte
  2836     0704                     l1628:
  2837                           
  2838                           ;main.c: 132:                     AUX1++;
  2839     0704  3001               	movlw	1
  2840     0705  0020               	movlb	0	; select bank0
  2841     0706  07C5               	addwf	MSGFUNC@AUX1_80,f
  2842     0707  3000               	movlw	0
  2843     0708  3DC6               	addwfc	MSGFUNC@AUX1_80+1,f
  2844     0709                     l1630:
  2845                           
  2846                           ;main.c: 133:                 }
  2847     0709  3001               	movlw	1
  2848     070A  07CB               	addwf	MSGFUNC@j_85,f
  2849     070B  3000               	movlw	0
  2850     070C  3DCC               	addwfc	MSGFUNC@j_85+1,f
  2851     070D                     l1632:
  2852     070D  084C               	movf	MSGFUNC@j_85+1,w
  2853     070E  3A80               	xorlw	128
  2854     070F  00F7               	movwf	??_MSGFUNC
  2855     0710  3080               	movlw	128
  2856     0711  0277               	subwf	??_MSGFUNC,w
  2857     0712  1D03               	skipz
  2858     0713  2F16               	goto	u705
  2859     0714  3014               	movlw	20
  2860     0715  024B               	subwf	MSGFUNC@j_85,w
  2861     0716                     u705:
  2862     0716  1C03               	skipc
  2863     0717  2F19               	goto	u701
  2864     0718  2F1A               	goto	u700
  2865     0719                     u701:
  2866     0719  2EF7               	goto	l1624
  2867     071A                     u700:
  2868     071A  2E4C               	goto	l1562
  2869     071B                     l1634:
  2870                           
  2871                           ;main.c: 137:                 MSGTXT(MSG7);
  2872     071B  307E               	movlw	low (_MSG7| (0+32768))
  2873     071C  00F1               	movwf	MSGTXT@MSG
  2874     071D  3088               	movlw	high (_MSG7| (0+32768))
  2875     071E  00F2               	movwf	MSGTXT@MSG+1
  2876     071F  3185  2511  3185   	fcall	_MSGTXT
  2877     0722  2E4C               	goto	l1562
  2878     0723                     l1638:
  2879                           
  2880                           ;main.c: 145:             if(NPROX<NAGEN){
  2881     0723  0837               	movf	_NPROX+1,w
  2882     0724  3A80               	xorlw	128
  2883     0725  00F7               	movwf	??_MSGFUNC
  2884     0726  0839               	movf	_NAGEN+1,w
  2885     0727  3A80               	xorlw	128
  2886     0728  0277               	subwf	??_MSGFUNC,w
  2887     0729  1D03               	skipz
  2888     072A  2F2D               	goto	u715
  2889     072B  0838               	movf	_NAGEN,w
  2890     072C  0236               	subwf	_NPROX,w
  2891     072D                     u715:
  2892     072D  1803               	skipnc
  2893     072E  2F30               	goto	u711
  2894     072F  2F31               	goto	u710
  2895     0730                     u711:
  2896     0730  2FA3               	goto	l1676
  2897     0731                     u710:
  2898     0731                     l1640:
  2899                           
  2900                           ;main.c: 146:                 MSGTXT(MSG3);
  2901     0731  3002               	movlw	low (_MSG3| (0+32768))
  2902     0732  00F1               	movwf	MSGTXT@MSG
  2903     0733  3089               	movlw	high (_MSG3| (0+32768))
  2904     0734  00F2               	movwf	MSGTXT@MSG+1
  2905     0735  3185  2511  3185   	fcall	_MSGTXT
  2906     0738                     l1642:
  2907                           
  2908                           ;main.c: 147:                 int AUX1 = 21 * NPROX;
  2909     0738  0020               	movlb	0	; select bank0
  2910     0739  0837               	movf	_NPROX+1,w
  2911     073A  00F1               	movwf	___wmul@multiplier+1
  2912     073B  0836               	movf	_NPROX,w
  2913     073C  00F0               	movwf	___wmul@multiplier
  2914     073D  3015               	movlw	21
  2915     073E  00F2               	movwf	___wmul@multiplicand
  2916     073F  3000               	movlw	0
  2917     0740  00F3               	movwf	___wmul@multiplicand+1
  2918     0741  3185  254A  3185   	fcall	___wmul
  2919     0744  0871               	movf	?___wmul+1,w
  2920     0745  0020               	movlb	0	; select bank0
  2921     0746  00C8               	movwf	MSGFUNC@AUX1_87+1
  2922     0747  0870               	movf	?___wmul,w
  2923     0748  00C7               	movwf	MSGFUNC@AUX1_87
  2924     0749                     l1644:
  2925                           
  2926                           ;main.c: 148:                 for(int j=0; j>19;j++){
  2927     0749  01C9               	clrf	MSGFUNC@j_88
  2928     074A  01CA               	clrf	MSGFUNC@j_88+1
  2929     074B                     l1646:
  2930     074B  084A               	movf	MSGFUNC@j_88+1,w
  2931     074C  3A80               	xorlw	128
  2932     074D  00F7               	movwf	??_MSGFUNC
  2933     074E  3080               	movlw	128
  2934     074F  0277               	subwf	??_MSGFUNC,w
  2935     0750  1D03               	skipz
  2936     0751  2F54               	goto	u725
  2937     0752  3014               	movlw	20
  2938     0753  0249               	subwf	MSGFUNC@j_88,w
  2939     0754                     u725:
  2940     0754  1803               	skipnc
  2941     0755  2F57               	goto	u721
  2942     0756  2F58               	goto	u720
  2943     0757                     u721:
  2944     0757  2F59               	goto	l1650
  2945     0758                     u720:
  2946     0758  2F86               	goto	l1672
  2947     0759                     l1650:
  2948                           
  2949                           ;main.c: 149:                     ISRCVD = (uint8_t) DATAEE_ReadByte((uint8_t)AUX1);
  2950     0759  0020               	movlb	0	; select bank0
  2951     075A  0847               	movf	MSGFUNC@AUX1_87,w
  2952     075B  3184  24BE  3185   	fcall	_DATAEE_ReadByte
  2953     075E  0020               	movlb	0	; select bank0
  2954     075F  00B5               	movwf	_ISRCVD
  2955     0760                     l1652:
  2956                           
  2957                           ;main.c: 150:                     if(ISRCVD == 0x0D){
  2958     0760  300D               	movlw	13
  2959     0761  0635               	xorwf	_ISRCVD,w
  2960     0762  1D03               	btfss	3,2
  2961     0763  2F65               	goto	u731
  2962     0764  2F66               	goto	u730
  2963     0765                     u731:
  2964     0765  2F70               	goto	l1658
  2965     0766                     u730:
  2966     0766                     l1654:
  2967                           
  2968                           ;main.c: 151:                         EUSART_Write(0x0D);
  2969     0766  300D               	movlw	13
  2970     0767  3184  24B4  3185   	fcall	_EUSART_Write
  2971     076A                     l1656:
  2972                           
  2973                           ;main.c: 152:                         j = 20;
  2974     076A  3014               	movlw	20
  2975     076B  0020               	movlb	0	; select bank0
  2976     076C  00C9               	movwf	MSGFUNC@j_88
  2977     076D  3000               	movlw	0
  2978     076E  00CA               	movwf	MSGFUNC@j_88+1
  2979                           
  2980                           ;main.c: 154:                     }else if(ISRCVD == '$'){
  2981     076F  2F81               	goto	l1668
  2982     0770                     l1658:
  2983     0770  3024               	movlw	36
  2984     0771  0635               	xorwf	_ISRCVD,w
  2985     0772  1D03               	btfss	3,2
  2986     0773  2F75               	goto	u741
  2987     0774  2F76               	goto	u740
  2988     0775                     u741:
  2989     0775  2F78               	goto	l1664
  2990     0776                     u740:
  2991     0776                     l1660:
  2992                           
  2993                           ;main.c: 157:                         CMDRECEIV = 0;
  2994     0776  01FD               	clrf	_CMDRECEIV
  2995                           
  2996                           ;main.c: 158:                         break;
  2997     0777  2F86               	goto	l1672
  2998     0778                     l1664:
  2999                           
  3000                           ;main.c: 161:                         EUSART_Write(ISRCVD);
  3001     0778  0835               	movf	_ISRCVD,w
  3002     0779  3184  24B4  3185   	fcall	_EUSART_Write
  3003     077C                     l1666:
  3004                           
  3005                           ;main.c: 162:                         AUX1++;
  3006     077C  3001               	movlw	1
  3007     077D  0020               	movlb	0	; select bank0
  3008     077E  07C7               	addwf	MSGFUNC@AUX1_87,f
  3009     077F  3000               	movlw	0
  3010     0780  3DC8               	addwfc	MSGFUNC@AUX1_87+1,f
  3011     0781                     l1668:
  3012                           
  3013                           ;main.c: 164:                 }
  3014     0781  3001               	movlw	1
  3015     0782  07C9               	addwf	MSGFUNC@j_88,f
  3016     0783  3000               	movlw	0
  3017     0784  3DCA               	addwfc	MSGFUNC@j_88+1,f
  3018     0785  2F4B               	goto	l1646
  3019     0786                     l1672:
  3020                           
  3021                           ;main.c: 167:                 AUX1 = 21 * NPROX;
  3022     0786  0020               	movlb	0	; select bank0
  3023     0787  0837               	movf	_NPROX+1,w
  3024     0788  00F1               	movwf	___wmul@multiplier+1
  3025     0789  0836               	movf	_NPROX,w
  3026     078A  00F0               	movwf	___wmul@multiplier
  3027     078B  3015               	movlw	21
  3028     078C  00F2               	movwf	___wmul@multiplicand
  3029     078D  3000               	movlw	0
  3030     078E  00F3               	movwf	___wmul@multiplicand+1
  3031     078F  3185  254A  3185   	fcall	___wmul
  3032     0792  0871               	movf	?___wmul+1,w
  3033     0793  0020               	movlb	0	; select bank0
  3034     0794  00C8               	movwf	MSGFUNC@AUX1_87+1
  3035     0795  0870               	movf	?___wmul,w
  3036     0796  00C7               	movwf	MSGFUNC@AUX1_87
  3037                           
  3038                           ;main.c: 168:                 DATAEE_WriteByte((uint8_t)AUX1,'X');
  3039     0797  3058               	movlw	88
  3040     0798  00F4               	movwf	DATAEE_WriteByte@bData
  3041     0799  0847               	movf	MSGFUNC@AUX1_87,w
  3042     079A  3185  252C  3185   	fcall	_DATAEE_WriteByte
  3043     079D                     l1674:
  3044                           
  3045                           ;main.c: 169:                 NPROX++;
  3046     079D  3001               	movlw	1
  3047     079E  0020               	movlb	0	; select bank0
  3048     079F  07B6               	addwf	_NPROX,f
  3049     07A0  3000               	movlw	0
  3050     07A1  3DB7               	addwfc	_NPROX+1,f
  3051                           
  3052                           ;main.c: 171:             }else if(NPROX == 0){
  3053     07A2  2E4C               	goto	l1562
  3054     07A3                     l1676:
  3055     07A3  0020               	movlb	0	; select bank0
  3056     07A4  0836               	movf	_NPROX,w
  3057     07A5  0437               	iorwf	_NPROX+1,w
  3058     07A6  1D03               	btfss	3,2
  3059     07A7  2FA9               	goto	u751
  3060     07A8  2FAA               	goto	u750
  3061     07A9                     u751:
  3062     07A9  2FB2               	goto	l1680
  3063     07AA                     u750:
  3064     07AA                     l1678:
  3065                           
  3066                           ;main.c: 172:                 MSGTXT(MSG2);
  3067     07AA  30C1               	movlw	low (_MSG2| (0+32768))
  3068     07AB  00F1               	movwf	MSGTXT@MSG
  3069     07AC  3088               	movlw	high (_MSG2| (0+32768))
  3070     07AD  00F2               	movwf	MSGTXT@MSG+1
  3071     07AE  3185  2511  3185   	fcall	_MSGTXT
  3072                           
  3073                           ;main.c: 173:             }else{
  3074     07B1  2E4C               	goto	l1562
  3075     07B2                     l1680:
  3076                           
  3077                           ;main.c: 174:                 MSGTXT(MSG6);
  3078     07B2  3032               	movlw	low (_MSG6| (0+32768))
  3079     07B3  00F1               	movwf	MSGTXT@MSG
  3080     07B4  3088               	movlw	high (_MSG6| (0+32768))
  3081     07B5  00F2               	movwf	MSGTXT@MSG+1
  3082     07B6  3185  2511  3185   	fcall	_MSGTXT
  3083     07B9  2E4C               	goto	l1562
  3084     07BA                     l1684:
  3085                           
  3086                           ;main.c: 183:             for(int i = 0; i <NAGEN; i++){
  3087     07BA  01C3               	clrf	MSGFUNC@i
  3088     07BB  01C4               	clrf	MSGFUNC@i+1
  3089     07BC  2FCE               	goto	l1690
  3090     07BD                     l1686:
  3091                           
  3092                           ;main.c: 184:                 DATAEE_WriteByte((uint8_t)i*21,'$');
  3093     07BD  3024               	movlw	36
  3094     07BE  00F4               	movwf	DATAEE_WriteByte@bData
  3095     07BF  3015               	movlw	21
  3096     07C0  00F0               	movwf	___bmul@multiplicand
  3097     07C1  0020               	movlb	0	; select bank0
  3098     07C2  0843               	movf	MSGFUNC@i,w
  3099     07C3  3184  24E6  3185   	fcall	___bmul
  3100     07C6  3185  252C  3185   	fcall	_DATAEE_WriteByte
  3101     07C9                     l1688:
  3102                           
  3103                           ;main.c: 185:             }
  3104     07C9  3001               	movlw	1
  3105     07CA  0020               	movlb	0	; select bank0
  3106     07CB  07C3               	addwf	MSGFUNC@i,f
  3107     07CC  3000               	movlw	0
  3108     07CD  3DC4               	addwfc	MSGFUNC@i+1,f
  3109     07CE                     l1690:
  3110     07CE  0844               	movf	MSGFUNC@i+1,w
  3111     07CF  3A80               	xorlw	128
  3112     07D0  00F7               	movwf	??_MSGFUNC
  3113     07D1  0839               	movf	_NAGEN+1,w
  3114     07D2  3A80               	xorlw	128
  3115     07D3  0277               	subwf	??_MSGFUNC,w
  3116     07D4  1D03               	skipz
  3117     07D5  2FD8               	goto	u765
  3118     07D6  0838               	movf	_NAGEN,w
  3119     07D7  0243               	subwf	MSGFUNC@i,w
  3120     07D8                     u765:
  3121     07D8  1C03               	skipc
  3122     07D9  2FDB               	goto	u761
  3123     07DA  2FDC               	goto	u760
  3124     07DB                     u761:
  3125     07DB  2FBD               	goto	l1686
  3126     07DC                     u760:
  3127     07DC                     l1692:
  3128                           
  3129                           ;main.c: 186:             NAGEN = 0;
  3130     07DC  0020               	movlb	0	; select bank0
  3131     07DD  01B8               	clrf	_NAGEN
  3132     07DE  01B9               	clrf	_NAGEN+1
  3133                           
  3134                           ;main.c: 187:             NPROX = 0;
  3135     07DF  01B6               	clrf	_NPROX
  3136     07E0  01B7               	clrf	_NPROX+1
  3137                           
  3138                           ;main.c: 190:             CMDRECEIV = 0;
  3139     07E1  01FD               	clrf	_CMDRECEIV
  3140                           
  3141                           ;main.c: 191:             break;
  3142     07E2  2FF2               	goto	l101
  3143     07E3                     l1696:
  3144     07E3  0020               	movlb	0	; select bank0
  3145     07E4  0834               	movf	_CMDRECORD,w
  3146                           
  3147                           ; Switch size 1, requested type "simple"
  3148                           ; Number of cases is 4, Range of values is 65 to 82
  3149                           ; switch strategies available:
  3150                           ; Name         Instructions Cycles
  3151                           ; simple_byte           13     7 (average)
  3152                           ; direct_byte           45     9 (fixed)
  3153                           ; jumptable            263     9 (fixed)
  3154                           ;	Chosen strategy is simple_byte
  3155     07E5  3A41               	xorlw	65	; case 65
  3156     07E6  1903               	skipnz
  3157     07E7  2E4E               	goto	l1564
  3158     07E8  3A0D               	xorlw	13	; case 76
  3159     07E9  1903               	skipnz
  3160     07EA  2DD8               	goto	l1524
  3161     07EB  3A1C               	xorlw	28	; case 80
  3162     07EC  1903               	skipnz
  3163     07ED  2F23               	goto	l1638
  3164     07EE  3A02               	xorlw	2	; case 82
  3165     07EF  1903               	skipnz
  3166     07F0  2FBA               	goto	l1684
  3167     07F1  2FF2               	goto	l101
  3168     07F2                     l101:
  3169     07F2  0008               	return
  3170     07F3                     __end_of_MSGFUNC:
  3171                           
  3172                           	psect	text10
  3173     054A                     __ptext10:	
  3174 ;; *************** function ___wmul *****************
  3175 ;; Defined at:
  3176 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  multiplier      2    0[COMMON] unsigned int 
  3179 ;;  multiplicand    2    2[COMMON] unsigned int 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  product         2    4[COMMON] unsigned int 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2    0[COMMON] unsigned int 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3191 ;;      Params:         4       0       0       0       0       0
  3192 ;;      Locals:         2       0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0
  3194 ;;      Totals:         6       0       0       0       0       0
  3195 ;;Total ram usage:        6 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_MSGFUNC
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204     054A                     ___wmul:	
  3205                           ;psect for function ___wmul
  3206                           
  3207     054A                     l1494:	
  3208                           ;incstack = 0
  3209                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3210                           
  3211     054A  01F4               	clrf	___wmul@product
  3212     054B  01F5               	clrf	___wmul@product+1
  3213     054C                     l1496:
  3214     054C  1C70               	btfss	___wmul@multiplier,0
  3215     054D  2D4F               	goto	u511
  3216     054E  2D50               	goto	u510
  3217     054F                     u511:
  3218     054F  2D54               	goto	l458
  3219     0550                     u510:
  3220     0550                     l1498:
  3221     0550  0872               	movf	___wmul@multiplicand,w
  3222     0551  07F4               	addwf	___wmul@product,f
  3223     0552  0873               	movf	___wmul@multiplicand+1,w
  3224     0553  3DF5               	addwfc	___wmul@product+1,f
  3225     0554                     l458:
  3226     0554  3001               	movlw	1
  3227     0555                     u525:
  3228     0555  35F2               	lslf	___wmul@multiplicand,f
  3229     0556  0DF3               	rlf	___wmul@multiplicand+1,f
  3230     0557  0B89               	decfsz	9,f
  3231     0558  2D55               	goto	u525
  3232     0559                     l1500:
  3233     0559  3001               	movlw	1
  3234     055A                     u535:
  3235     055A  36F1               	lsrf	___wmul@multiplier+1,f
  3236     055B  0CF0               	rrf	___wmul@multiplier,f
  3237     055C  0B89               	decfsz	9,f
  3238     055D  2D5A               	goto	u535
  3239     055E                     l1502:
  3240     055E  0870               	movf	___wmul@multiplier,w
  3241     055F  0471               	iorwf	___wmul@multiplier+1,w
  3242     0560  1D03               	btfss	3,2
  3243     0561  2D63               	goto	u541
  3244     0562  2D64               	goto	u540
  3245     0563                     u541:
  3246     0563  2D4C               	goto	l1496
  3247     0564                     u540:
  3248     0564                     l1504:
  3249     0564  0875               	movf	___wmul@product+1,w
  3250     0565  00F1               	movwf	?___wmul+1
  3251     0566  0874               	movf	___wmul@product,w
  3252     0567  00F0               	movwf	?___wmul
  3253     0568                     l460:
  3254     0568  0008               	return
  3255     0569                     __end_of___wmul:
  3256                           
  3257                           	psect	text11
  3258     04E6                     __ptext11:	
  3259 ;; *************** function ___bmul *****************
  3260 ;; Defined at:
  3261 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  multiplier      1    wreg     unsigned char 
  3264 ;;  multiplicand    1    0[COMMON] unsigned char 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  multiplier      1    3[COMMON] unsigned char 
  3267 ;;  product         1    2[COMMON] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      unsigned char 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3277 ;;      Params:         1       0       0       0       0       0
  3278 ;;      Locals:         2       0       0       0       0       0
  3279 ;;      Temps:          1       0       0       0       0       0
  3280 ;;      Totals:         4       0       0       0       0       0
  3281 ;;Total ram usage:        4 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_MSGFUNC
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290     04E6                     ___bmul:	
  3291                           ;psect for function ___bmul
  3292                           
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3296                           ;___bmul@multiplier stored from wreg
  3297     04E6  00F3               	movwf	___bmul@multiplier
  3298     04E7                     l1508:
  3299     04E7  01F2               	clrf	___bmul@product
  3300     04E8                     l1510:
  3301     04E8  1C73               	btfss	___bmul@multiplier,0
  3302     04E9  2CEB               	goto	u551
  3303     04EA  2CEC               	goto	u550
  3304     04EB                     u551:
  3305     04EB  2CF0               	goto	l1514
  3306     04EC                     u550:
  3307     04EC                     l1512:
  3308     04EC  0870               	movf	___bmul@multiplicand,w
  3309     04ED  00F1               	movwf	??___bmul
  3310     04EE  0871               	movf	??___bmul,w
  3311     04EF  07F2               	addwf	___bmul@product,f
  3312     04F0                     l1514:
  3313     04F0  1003               	clrc
  3314     04F1  0DF0               	rlf	___bmul@multiplicand,f
  3315     04F2                     l1516:
  3316     04F2  1003               	clrc
  3317     04F3  0CF3               	rrf	___bmul@multiplier,f
  3318     04F4  0873               	movf	___bmul@multiplier,w
  3319     04F5  1D03               	btfss	3,2
  3320     04F6  2CF8               	goto	u561
  3321     04F7  2CF9               	goto	u560
  3322     04F8                     u561:
  3323     04F8  2CE8               	goto	l1510
  3324     04F9                     u560:
  3325     04F9                     l1518:
  3326     04F9  0872               	movf	___bmul@product,w
  3327     04FA                     l484:
  3328     04FA  0008               	return
  3329     04FB                     __end_of___bmul:
  3330                           
  3331                           	psect	text12
  3332     0511                     __ptext12:	
  3333 ;; *************** function _MSGTXT *****************
  3334 ;; Defined at:
  3335 ;;		line 16 in file "main.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  MSG             2    1[COMMON] PTR const unsigned char 
  3338 ;;		 -> MSG0(50), MSG6(38), MSG3(10), MSG7(36), 
  3339 ;;		 -> MSGS(31), MSG5(38), MSG4(15), MSG1(22), 
  3340 ;;		 -> MSG2(28), 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3352 ;;      Params:         2       0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0
  3354 ;;      Temps:          1       0       0       0       0       0
  3355 ;;      Totals:         3       0       0       0       0       0
  3356 ;;Total ram usage:        3 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 1
  3359 ;; This function calls:
  3360 ;;		_EUSART_Write
  3361 ;; This function is called by:
  3362 ;;		_MSGFUNC
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367     0511                     _MSGTXT:	
  3368                           ;psect for function _MSGTXT
  3369                           
  3370     0511                     l1402:	
  3371                           ;incstack = 0
  3372                           ; Regs used in _MSGTXT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3373                           
  3374                           
  3375                           ;main.c: 17:     while (*MSG != '\0') {
  3376     0511  2D1E               	goto	l1408
  3377     0512                     l1404:
  3378                           
  3379                           ;main.c: 18:         EUSART_Write(*MSG);
  3380     0512  0871               	movf	MSGTXT@MSG,w
  3381     0513  0084               	movwf	4
  3382     0514  0872               	movf	MSGTXT@MSG+1,w
  3383     0515  0085               	movwf	5
  3384     0516  0800               	movf	0,w	;code access
  3385     0517  3184  24B4  3185   	fcall	_EUSART_Write
  3386     051A                     l1406:
  3387                           
  3388                           ;main.c: 19:         MSG++;
  3389     051A  3001               	movlw	1
  3390     051B  07F1               	addwf	MSGTXT@MSG,f
  3391     051C  3000               	movlw	0
  3392     051D  3DF2               	addwfc	MSGTXT@MSG+1,f
  3393     051E                     l1408:
  3394                           
  3395                           ;main.c: 17:     while (*MSG != '\0') {
  3396     051E  0871               	movf	MSGTXT@MSG,w
  3397     051F  0084               	movwf	4
  3398     0520  0872               	movf	MSGTXT@MSG+1,w
  3399     0521  0085               	movwf	5
  3400     0522  0012               	moviw fsr0++
  3401     0523  1D03               	btfss	3,2
  3402     0524  2D26               	goto	u471
  3403     0525  2D27               	goto	u470
  3404     0526                     u471:
  3405     0526  2D12               	goto	l1404
  3406     0527                     u470:
  3407     0527                     l1410:
  3408                           
  3409                           ;main.c: 21:     EUSART_Write(0x0D);
  3410     0527  300D               	movlw	13
  3411     0528  3184  24B4  3185   	fcall	_EUSART_Write
  3412     052B                     l48:
  3413     052B  0008               	return
  3414     052C                     __end_of_MSGTXT:
  3415                           
  3416                           	psect	text13
  3417     04B4                     __ptext13:	
  3418 ;; *************** function _EUSART_Write *****************
  3419 ;; Defined at:
  3420 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  txData          1    wreg     unsigned char 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  txData          1    0[COMMON] unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3434 ;;      Params:         0       0       0       0       0       0
  3435 ;;      Locals:         1       0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0
  3437 ;;      Totals:         1       0       0       0       0       0
  3438 ;;Total ram usage:        1 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_MSGTXT
  3444 ;;		_MSGFUNC
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449     04B4                     _EUSART_Write:	
  3450                           ;psect for function _EUSART_Write
  3451                           
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in _EUSART_Write: [wreg]
  3455                           ;EUSART_Write@txData stored from wreg
  3456     04B4  00F0               	movwf	EUSART_Write@txData
  3457     04B5                     l1392:
  3458     04B5                     l287:	
  3459                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3460                           
  3461                           
  3462                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3463     04B5  0020               	movlb	0	; select bank0
  3464     04B6  1E11               	btfss	17,4	;volatile
  3465     04B7  2CB9               	goto	u461
  3466     04B8  2CBA               	goto	u460
  3467     04B9                     u461:
  3468     04B9  2CB5               	goto	l287
  3469     04BA                     u460:
  3470     04BA                     l1394:
  3471                           
  3472                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3473     04BA  0870               	movf	EUSART_Write@txData,w
  3474     04BB  0023               	movlb	3	; select bank3
  3475     04BC  009A               	movwf	26	;volatile
  3476     04BD                     l290:
  3477     04BD  0008               	return
  3478     04BE                     __end_of_EUSART_Write:
  3479                           
  3480                           	psect	text14
  3481     0492                     __ptext14:	
  3482 ;; *************** function _EUSART_is_rx_ready *****************
  3483 ;; Defined at:
  3484 ;;		line 99 in file "mcc_generated_files/eusart.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      _Bool 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3498 ;;      Params:         0       0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0
  3501 ;;      Totals:         0       0       0       0       0       0
  3502 ;;Total ram usage:        0 bytes
  3503 ;; Hardware stack levels used: 1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_MSGFUNC
  3508 ;;		_main
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512     0492                     _EUSART_is_rx_ready:	
  3513                           ;psect for function _EUSART_is_rx_ready
  3514                           
  3515     0492                     l1446:	
  3516                           ;incstack = 0
  3517                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3518                           
  3519                           
  3520                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  3521     0492  0020               	movlb	0	; select bank0
  3522     0493  0E11               	swapf	17,w	;volatile
  3523     0494  0C89               	rrf	9,f
  3524     0495  3901               	andlw	1
  3525     0496                     l271:
  3526     0496  0008               	return
  3527     0497                     __end_of_EUSART_is_rx_ready:
  3528                           
  3529                           	psect	text15
  3530     04D7                     __ptext15:	
  3531 ;; *************** function _EUSART_Read *****************
  3532 ;; Defined at:
  3533 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      unsigned char 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3547 ;;      Params:         0       0       0       0       0       0
  3548 ;;      Locals:         0       0       0       0       0       0
  3549 ;;      Temps:          0       0       0       0       0       0
  3550 ;;      Totals:         0       0       0       0       0       0
  3551 ;;Total ram usage:        0 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_MSGFUNC
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561     04D7                     _EUSART_Read:	
  3562                           ;psect for function _EUSART_Read
  3563                           
  3564     04D7                     l1450:	
  3565                           ;incstack = 0
  3566                           ; Regs used in _EUSART_Read: [wreg+status,2]
  3567                           
  3568     04D7                     l280:	
  3569                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  3570                           
  3571                           
  3572                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  3573     04D7  0020               	movlb	0	; select bank0
  3574     04D8  1E91               	btfss	17,5	;volatile
  3575     04D9  2CDB               	goto	u491
  3576     04DA  2CDC               	goto	u490
  3577     04DB                     u491:
  3578     04DB  2CD7               	goto	l280
  3579     04DC                     u490:
  3580     04DC                     l1452:
  3581                           
  3582                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  3583     04DC  01FC               	clrf	_eusartRxLastError	;volatile
  3584     04DD                     l1454:
  3585                           
  3586                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  3587     04DD  0023               	movlb	3	; select bank3
  3588     04DE  1C9D               	btfss	29,1	;volatile
  3589     04DF  2CE1               	goto	u501
  3590     04E0  2CE2               	goto	u500
  3591     04E1                     u501:
  3592     04E1  2CE4               	goto	l1458
  3593     04E2                     u500:
  3594     04E2                     l1456:
  3595                           
  3596                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  3597     04E2  121D               	bcf	29,4	;volatile
  3598                           
  3599                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  3600     04E3  161D               	bsf	29,4	;volatile
  3601     04E4                     l1458:
  3602                           
  3603                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  3604     04E4  0819               	movf	25,w	;volatile
  3605     04E5                     l284:
  3606     04E5  0008               	return
  3607     04E6                     __end_of_EUSART_Read:
  3608                           
  3609                           	psect	text16
  3610     052C                     __ptext16:	
  3611 ;; *************** function _DATAEE_WriteByte *****************
  3612 ;; Defined at:
  3613 ;;		line 187 in file "mcc_generated_files/memory.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  bAdd            1    wreg     unsigned char 
  3616 ;;  bData           1    4[COMMON] unsigned char 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  bAdd            1    5[COMMON] unsigned char 
  3619 ;;  GIEBitValue     1    6[COMMON] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3629 ;;      Params:         1       0       0       0       0       0
  3630 ;;      Locals:         2       0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0
  3632 ;;      Totals:         3       0       0       0       0       0
  3633 ;;Total ram usage:        3 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_MSGFUNC
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642     052C                     _DATAEE_WriteByte:	
  3643                           ;psect for function _DATAEE_WriteByte
  3644                           
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  3648                           ;DATAEE_WriteByte@bAdd stored from wreg
  3649     052C  00F5               	movwf	DATAEE_WriteByte@bAdd
  3650     052D                     l1426:
  3651     052D                     l1428:
  3652                           
  3653                           ;mcc_generated_files/memory.c: 191:     EEADRL = (uint8_t)(bAdd & 0x0ff);
  3654     052D  0875               	movf	DATAEE_WriteByte@bAdd,w
  3655     052E  0023               	movlb	3	; select bank3
  3656     052F  0091               	movwf	17	;volatile
  3657     0530                     l1430:
  3658                           
  3659                           ;mcc_generated_files/memory.c: 192:     EEDATL = bData;
  3660     0530  0874               	movf	DATAEE_WriteByte@bData,w
  3661     0531  0093               	movwf	19	;volatile
  3662     0532                     l1432:
  3663                           
  3664                           ;mcc_generated_files/memory.c: 193:     EECON1bits.EEPGD = 0;
  3665     0532  1395               	bcf	21,7	;volsfr
  3666     0533                     l1434:
  3667                           
  3668                           ;mcc_generated_files/memory.c: 194:     EECON1bits.CFGS = 0;
  3669     0533  1315               	bcf	21,6	;volsfr
  3670     0534                     l1436:
  3671                           
  3672                           ;mcc_generated_files/memory.c: 195:     EECON1bits.WREN = 1;
  3673     0534  1515               	bsf	21,2	;volsfr
  3674     0535                     l1438:
  3675                           
  3676                           ;mcc_generated_files/memory.c: 197:     GIEBitValue = INTCONbits.GIE;
  3677     0535  3000               	movlw	0
  3678     0536  1B8B               	btfsc	11,7	;volatile
  3679     0537  3001               	movlw	1
  3680     0538  00F6               	movwf	DATAEE_WriteByte@GIEBitValue
  3681     0539                     l1440:
  3682                           
  3683                           ;mcc_generated_files/memory.c: 198:     INTCONbits.GIE = 0;
  3684     0539  138B               	bcf	11,7	;volatile
  3685                           
  3686                           ;mcc_generated_files/memory.c: 199:     EECON2 = 0x55;
  3687     053A  3055               	movlw	85
  3688     053B  0096               	movwf	22	;volsfr
  3689                           
  3690                           ;mcc_generated_files/memory.c: 200:     EECON2 = 0xAA;
  3691     053C  30AA               	movlw	170
  3692     053D  0096               	movwf	22	;volsfr
  3693     053E                     l1442:
  3694                           
  3695                           ;mcc_generated_files/memory.c: 201:     EECON1bits.WR = 1;
  3696     053E  1495               	bsf	21,1	;volsfr
  3697     053F                     l214:	
  3698                           ;mcc_generated_files/memory.c: 204:     {;mcc_generated_files/memory.c: 205:     }
  3699                           
  3700                           
  3701                           ;mcc_generated_files/memory.c: 203:     while (EECON1bits.WR)
  3702     053F  1895               	btfsc	21,1	;volsfr
  3703     0540  2D42               	goto	u481
  3704     0541  2D43               	goto	u480
  3705     0542                     u481:
  3706     0542  2D3F               	goto	l214
  3707     0543                     u480:
  3708     0543                     l216:
  3709                           
  3710                           ;mcc_generated_files/memory.c: 207:     EECON1bits.WREN = 0;
  3711     0543  1115               	bcf	21,2	;volsfr
  3712     0544                     l1444:
  3713                           
  3714                           ;mcc_generated_files/memory.c: 208:     INTCONbits.GIE = GIEBitValue;
  3715     0544  0C76               	rrf	DATAEE_WriteByte@GIEBitValue,w
  3716     0545  1C03               	skipc
  3717     0546  138B               	bcf	11,7	;volatile
  3718     0547  1803               	skipnc
  3719     0548  178B               	bsf	11,7	;volatile
  3720     0549                     l217:
  3721     0549  0008               	return
  3722     054A                     __end_of_DATAEE_WriteByte:
  3723                           
  3724                           	psect	text17
  3725     04BE                     __ptext17:	
  3726 ;; *************** function _DATAEE_ReadByte *****************
  3727 ;; Defined at:
  3728 ;;		line 211 in file "mcc_generated_files/memory.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  bAdd            1    wreg     unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  bAdd            1    0[COMMON] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      unsigned char 
  3735 ;; Registers used:
  3736 ;;		wreg
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3742 ;;      Params:         0       0       0       0       0       0
  3743 ;;      Locals:         1       0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0
  3745 ;;      Totals:         1       0       0       0       0       0
  3746 ;;Total ram usage:        1 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_MSGFUNC
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755     04BE                     _DATAEE_ReadByte:	
  3756                           ;psect for function _DATAEE_ReadByte
  3757                           
  3758                           
  3759                           ;incstack = 0
  3760                           ; Regs used in _DATAEE_ReadByte: [wreg]
  3761                           ;DATAEE_ReadByte@bAdd stored from wreg
  3762     04BE  00F0               	movwf	DATAEE_ReadByte@bAdd
  3763     04BF                     l1412:
  3764                           
  3765                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
  3766     04BF  0870               	movf	DATAEE_ReadByte@bAdd,w
  3767     04C0  0023               	movlb	3	; select bank3
  3768     04C1  0091               	movwf	17	;volatile
  3769     04C2                     l1414:
  3770                           
  3771                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
  3772     04C2  1315               	bcf	21,6	;volsfr
  3773     04C3                     l1416:
  3774                           
  3775                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
  3776     04C3  1395               	bcf	21,7	;volsfr
  3777     04C4                     l1418:
  3778                           
  3779                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
  3780     04C4  1415               	bsf	21,0	;volsfr
  3781     04C5                     l1420:
  3782                           
  3783                           ;mcc_generated_files/memory.c: 217:     __nop();
  3784     04C5  0000               	nop
  3785     04C6                     l1422:
  3786                           
  3787                           ;mcc_generated_files/memory.c: 218:     __nop();
  3788     04C6  0000               	nop
  3789                           
  3790                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
  3791     04C7  0023               	movlb	3	; select bank3
  3792     04C8  0813               	movf	19,w	;volatile
  3793     04C9                     l220:
  3794     04C9  0008               	return
  3795     04CA                     __end_of_DATAEE_ReadByte:
  3796     007E                     btemp	set	126	;btemp
  3797     007E                     wtemp0	set	126
  3798                           
  3799                           	psect	config
  3800                           
  3801                           ;Config register CONFIG1 @ 0x8007
  3802                           ;	Oscillator Selection
  3803                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3804                           ;	Watchdog Timer Enable
  3805                           ;	WDTE = OFF, WDT disabled
  3806                           ;	Power-up Timer Enable
  3807                           ;	PWRTE = OFF, PWRT disabled
  3808                           ;	MCLR Pin Function Select
  3809                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3810                           ;	Flash Program Memory Code Protection
  3811                           ;	CP = OFF, Program memory code protection is disabled
  3812                           ;	Data Memory Code Protection
  3813                           ;	CPD = OFF, Data memory code protection is disabled
  3814                           ;	Brown-out Reset Enable
  3815                           ;	BOREN = ON, Brown-out Reset enabled
  3816                           ;	Clock Out Enable
  3817                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3818                           ;	Internal/External Switchover
  3819                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3820                           ;	Fail-Safe Clock Monitor Enable
  3821                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3822     8007                     	org	32775
  3823     8007  3FE4               	dw	16356
  3824                           
  3825                           ;Config register CONFIG2 @ 0x8008
  3826                           ;	Flash Memory Self-Write Protection
  3827                           ;	WRT = OFF, Write protection off
  3828                           ;	PLL Enable
  3829                           ;	PLLEN = OFF, 4x PLL disabled
  3830                           ;	Stack Overflow/Underflow Reset Enable
  3831                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3832                           ;	Brown-out Reset Voltage Selection
  3833                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3834                           ;	In-Circuit Debugger Mode
  3835                           ;	DEBUG = 0x1, unprogrammed default
  3836                           ;	Low-Voltage Programming Enable
  3837                           ;	LVP = ON, Low-voltage programming enabled
  3838     8008                     	org	32776
  3839     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    268
    Data        0
    BSS         28
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     21      49
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    MSGTXT@MSG	PTR const unsigned char  size(2) Largest target is 50
		 -> MSG0(CODE[50]), MSG1(CODE[22]), MSG2(CODE[28]), MSG3(CODE[10]), 
		 -> MSG4(CODE[15]), MSG5(CODE[38]), MSG6(CODE[38]), MSG7(CODE[36]), 
		 -> MSGS(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_MSGFUNC
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MSGFUNC->_DATAEE_WriteByte
    _MSGTXT->_EUSART_Write
    _DATAEE_WriteByte->___bmul

Critical Paths under _main in BANK0

    _main->_MSGFUNC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3854
                        _EUSART_Read
                       _EUSART_Write
                 _EUSART_is_rx_ready
                            _MSGFUNC
                             _MSGTXT
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MSGFUNC                                             22    22      0    2711
                                              7 COMMON     1     1      0
                                              0 BANK0     21    21      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                        _EUSART_Read
                       _EUSART_Write
                 _EUSART_is_rx_ready
                             _MSGTXT
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _MSGTXT                                               3     1      2     827
                                              1 COMMON     3     1      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     3     2      1     372
                                              4 COMMON     3     2      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _EUSART_is_rx_ready
   _MSGFUNC
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       ___bmul (ARG)
     _EUSART_Read
     _EUSART_Write
     _EUSART_is_rx_ready
     _MSGTXT
       _EUSART_Write
     ___bmul
     ___wmul
   _MSGTXT
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      31       6       61.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jan 25 13:49:56 2025

                               ___bmul@product 0072                                             l48 052B  
                                           l57 063E                            ___wmul@multiplicand 0072  
                                          l101 07F2                                            l114 05D0  
                                          l220 04C9                                            l214 053F  
                                          l302 049B                                            l142 0510  
                                          l216 0543                                            l217 0549  
                                          l305 04A0                                            l170 0491  
                                          l308 04A6                                            l164 04D6  
                                          l271 0496                                            l263 0589  
                                          l167 04B3                                            l280 04D7  
                                          l290 04BD                                            l284 04E5  
                                          l460 0568                                            l287 04B5  
                                          l458 0554                                            l484 04FA  
                                          u500 04E2                                            u501 04E1  
                                          u510 0550                                            u511 054F  
                                          u600 062A                                            u601 0629  
                                          u610 063A                                            u611 0639  
                                          u460 04BA                                            u540 0564  
                                          u700 071A                                            u620 064C  
                                          u461 04B9                                            u541 0563  
                                          u525 0555                                            u701 0719  
                                          u621 064B                                            u470 0527  
                                          u550 04EC                                            u710 0731  
                                          u630 065B                                            u471 0526  
                                          u551 04EB                                            u535 055A  
                                          u711 0730                                            u631 065A  
                                          u480 0543                                            u560 04F9  
                                          u720 0758                                            u640 068A  
                                          u800 05BE                                            u481 0542  
                                          u561 04F8                                            u721 0757  
                                          u705 0716                                            u641 0689  
                                          u625 0648                                            u801 05BD  
                                          u490 04DC                                            u730 0766  
                                          u650 0695                                            u570 05DE  
                                          u810 05C4                                            u491 04DB  
                                          u731 0765                                            u715 072D  
                                          u651 0694                                            u635 0657  
                                          u571 05DD                                            u811 05C3  
                                          u740 0776                                            u660 069C  
                                          u580 05E7                                            u820 05CA  
                                          u741 0775                                            u725 0754  
                                          u661 069B                                            u581 05E6  
                                          u821 05C9                                            u750 07AA  
                                          u670 06B8                                            u590 061D  
                                          u830 05D0                                            u751 07A9  
                                          u671 06B7                                            u591 061C  
                                          u831 05CF                                            u760 07DC  
                                          u680 06C3                                            u761 07DB  
                                          u681 06C2                                            u690 06F5  
                                          u770 059C                                            u691 06F4  
                                          u675 06B4                                            u771 059B  
                                          u780 05A6                                            u765 07D8  
                                          u781 05A5                                            u790 05AC  
                                          u791 05AB                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                                         l1400 04A1                                           l1410 0527  
                                         l1402 0511                                           l1420 04C5  
                                         l1412 04BF                                           l1404 0512  
                                         l1500 0559                                           l1422 04C6  
                                         l1414 04C2                                           l1430 0530  
                                         l1406 051A                                           l1510 04E8  
                                         l1502 055E                                           l1416 04C3  
                                         l1440 0539                                           l1432 0532  
                                         l1408 051E                                           l1512 04EC  
                                         l1504 0564                                           l1600 06C9  
                                         l1418 04C4                                           l1442 053E  
                                         l1434 0533                                           l1426 052D  
                                         l1450 04D7                                           l1514 04F0  
                                         l1602 06D0                                           l1530 05EE  
                                         l1522 05D7                                           l1444 0544  
                                         l1436 0534                                           l1428 052D  
                                         l1452 04DC                                           l1516 04F2  
                                         l1508 04E7                                           l1604 06D3  
                                         l1612 06E5                                           l1540 0611  
                                         l1532 05F2                                           l1524 05D8  
                                         l1700 058A                                           l1438 0535  
                                         l1454 04DD                                           l1446 0492  
                                         l1518 04F9                                           l1630 0709  
                                         l1614 06EB                                           l1606 06D9  
                                         l1550 062A                                           l1542 0617  
                                         l1534 05F9                                           l1526 05DE  
                                         l1470 0506                                           l1462 04FB  
                                         l1710 05A6                                           l1702 058D  
                                         l1456 04E2                                           l1392 04B5  
                                         l1640 0731                                           l1632 070D  
                                         l1624 06F7                                           l1608 06DD  
                                         l1616 06EF                                           l1560 063A  
                                         l1544 061D                                           l1536 05FD  
                                         l1528 05E7                                           l1472 050B  
                                         l1464 04FE                                           l1480 048E  
                                         l1712 05AC                                           l1720 05B7  
                                         l1704 0594                                           l1458 04E4  
                                         l1394 04BA                                           l1650 0759  
                                         l1642 0738                                           l1626 06FE  
                                         l1618 06F5                                           l1570 066E  
                                         l1634 071B                                           l1554 062C  
                                         l1546 0621                                           l1538 060E  
                                         l1562 064C                                           l1490 0581  
                                         l1482 0569                                           l1474 04AD  
                                         l1466 0501                                           l1722 05BE  
                                         l1714 05AD                                           l1706 059C  
                                         l1660 0776                                           l1652 0760  
                                         l1644 0749                                           l1628 0704  
                                         l1580 068A                                           l1572 0670  
                                         l1564 064E                                           l1556 0630  
                                         l1548 0624                                           l1396 0497  
                                         l1492 0588                                           l1484 0572  
                                         l1476 04B0                                           l1468 0503  
                                         l1724 05C4                                           l1716 05B1  
                                         l1708 05A1                                           l1494 054A  
                                         l1654 0766                                           l1646 074B  
                                         l1638 0723                                           l1590 06A7  
                                         l1582 068F                                           l1574 0675  
                                         l1566 065B                                           l1558 0635  
                                         l1398 049C                                           l1486 0573  
                                         l1478 04B1                                           l1726 05CA  
                                         l1718 05B2                                           l1496 054C  
                                         l1680 07B2                                           l1664 0778  
                                         l1656 076A                                           l1672 0786  
                                         l1592 06AB                                           l1584 0695  
                                         l1576 067A                                           l1568 066C  
                                         l1488 057A                                           l1728 05D2  
                                         l1498 0550                                           l1690 07CE  
                                         l1674 079D                                           l1666 077C  
                                         l1658 0770                                           l1594 06B8  
                                         l1586 069C                                           l1578 0682  
                                         l1692 07DC                                           l1684 07BA  
                                         l1668 0781                                           l1676 07A3  
                                         l1596 06BD                                           l1588 06A1  
                                         l1686 07BD                                           l1678 07AA  
                                         l1598 06C3                                           l1688 07C9  
                                         l1696 07E3                                           l1698 04CA  
                                         _LATA 010C                                           _LATB 010D  
                              __end_of_MSGFUNC 07F3                                           _MSG0 0800  
                                         _MSG1 08DD                                           _MSG2 08C1  
                                         _MSG3 0902                                           _MSG4 08F3  
                                         _MSG5 0858                                           _MSG6 0832  
                                         _MSG7 087E                                           _MSGS 08A2  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 058A                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0002                              ___bmul@multiplier 0073  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 04B4  
                                        ?_main 0070                                          _NAGEN 0038  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _MSGRX 0020                                          _NPROX 0036  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _DATAEE_ReadByte 04BE                                 _WDT_Initialize 048E  
                                        status 0003                                          wtemp0 007E  
                                 __end_of_MSG0 0832                                   __end_of_MSG1 08F3  
                                 __end_of_MSG2 08DD                                   __end_of_MSG3 090C  
                                 __end_of_MSG4 0902                                   __end_of_MSG5 087E  
                                 __end_of_MSG6 0858                                   __end_of_MSG7 08A2  
                                 __end_of_MSGS 08C1                                __initialization 07F3  
                                 __end_of_main 05D7                                 ??_EUSART_Write 0070  
                                       ??_main 0078                         __end_of_WDT_Initialize 0492  
                                    ??_MSGFUNC 0077              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0078                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON2 0196  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0497                                         _BORCON 0116  
                                       _ISRCVD 0035                                         _OSCCON 0099  
                                       _MSGTXT 0511                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       ___bmul 04E6                                         ___wmul 054A  
                      __end_of_DATAEE_ReadByte 04CA                                ?_WDT_Initialize 0070  
                                  MSGFUNC@AUX1 003C                                    MSGFUNC@CONT 0040  
                                  MSGFUNC@j_85 004B                                    MSGFUNC@j_88 0049  
                            _SYSTEM_Initialize 04CA                        __end_of__initialization 07FD  
                                  MSGFUNC@posi 004D                             ?_SYSTEM_Initialize 0070  
                          ___bmul@multiplicand 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                               _DATAEE_WriteByte 052C  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                    __end_of_SYSTEM_Initialize 04D7                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 04BE                                        ?_MSGTXT 0071  
                                   __pnvCOMMON 0078                                      MSGTXT@MSG 0071  
                                   __pmaintext 058A                                        ?___bmul 0070  
                                      ?___wmul 0070                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                             ?_DATAEE_ReadByte 0070                                        _MSGFUNC 05D7  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                         DATAEE_WriteByte@bAdd 0075                                      _CMDRECEIV 007D  
                                    _CMDRECORD 0034                                        __ptext1 04CA  
                                      __ptext2 048E                                        __ptext3 04FB  
                                      __ptext4 04AD                                        __ptext5 0569  
                                      __ptext6 049C                                        __ptext7 0497  
                                      __ptext8 04A1                                        __ptext9 05D7  
                        _OSCILLATOR_Initialize 04AD                       ??_PIN_MANAGER_Initialize 0070  
                                      clrloop0 04A8                           end_of_initialization 07FD  
        __end_of_EUSART_SetOverrunErrorHandler 04A1                  _EUSART_SetOverrunErrorHandler 049C  
                            _EUSART_Initialize 0569                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0492  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                          ?_EUSART_is_rx_ready 0070                                   MSGFUNC@Bposi 003A  
                                 MSGFUNC@letra 003E                       __end_of_DATAEE_WriteByte 054A  
                    __end_of_EUSART_Initialize 058A                           ??_EUSART_is_rx_ready 0070  
                                    _TXSTAbits 019E                                 __end_of_MSGTXT 052C  
                               __end_of___bmul 04FB                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 0569                                   _EUSART_Write 04B4  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 07F3  
                                ??_EUSART_Read 0070                                       ??_MSGTXT 0073  
                          DATAEE_ReadByte@bAdd 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                   _EUSART_FramingErrorHandler 007A                                       ??___bmul 0071  
                                     ??___wmul 0074                         _EUSART_SetErrorHandler 04A1  
                                  __pbssCOMMON 007C                                      ___latbits 0001  
                                     ?_MSGFUNC 0070                                  __pcstackBANK0 003A  
                          __end_of_EUSART_Read 04E6                                       MSGFUNC@i 0043  
                                     MSGFUNC@j 0041                                      __pnvBANK0 004F  
                       _PIN_MANAGER_Initialize 04FB                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 0070                                      clear_ram0 04A7  
                            _eusartRxLastError 007C                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072              _EUSART_DefaultOverrunErrorHandler 0000  
                            ___wmul@multiplier 0070                          DATAEE_WriteByte@bData 0074  
                                  _EUSART_Read 04D7                              ?_DATAEE_WriteByte 0074  
                           ??_DATAEE_WriteByte 0075                                     _EECON1bits 0195  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 004F  
                                     __ptext10 054A                                       __ptext11 04E6  
                                     __ptext12 0511                                       __ptext13 04B4  
                                     __ptext14 0492                                       __ptext15 04D7  
                                     __ptext16 052C                                       __ptext17 04BE  
                  DATAEE_WriteByte@GIEBitValue 0076                              ??_DATAEE_ReadByte 0070  
                      ?_EUSART_SetErrorHandler 0070  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
        __end_of_EUSART_SetFramingErrorHandler 049C                  _EUSART_SetFramingErrorHandler 0497  
                                   _INTCONbits 000B                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 04A7  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                               MSGFUNC@AUX1_80 0045                                 MSGFUNC@AUX1_87 0047  
                                __pstringtext1 0800                                  __pstringtext2 0832  
                                __pstringtext3 0858                                  __pstringtext4 087E  
                                __pstringtext5 08A2                                  __pstringtext6 08C1  
                                __pstringtext7 08DD                                  __pstringtext8 08F3  
                                __pstringtext9 0902                                 MSGFUNC@MSGATIV 003F  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 0511  
