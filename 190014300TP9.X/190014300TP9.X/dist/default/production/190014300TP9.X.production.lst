

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Jan 27 12:26:46 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	clrtext,global,class=CODE,space=0,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Generated 07/09/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1827 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0008                     bsr             equ	8
    77     0005                     fsr0h           equ	5
    78     0004                     fsr0l           equ	4
    79     0007                     fsr1h           equ	7
    80     0006                     fsr1l           equ	6
    81     0000                     indf            equ	0
    82     0000                     indf0           equ	0
    83     0001                     indf1           equ	1
    84     000B                     intcon          equ	11
    85     0002                     pc              equ	2
    86     0002                     pcl             equ	2
    87     000A                     pclath          equ	10
    88     0003                     status          equ	3
    89     0009                     wreg            equ	9
    90     0000                     INDF0           equ	0	;# 
    91     0001                     INDF1           equ	1	;# 
    92     0002                     PCL             equ	2	;# 
    93     0003                     STATUS          equ	3	;# 
    94     0004                     FSR0L           equ	4	;# 
    95     0005                     FSR0H           equ	5	;# 
    96     0006                     FSR1L           equ	6	;# 
    97     0007                     FSR1H           equ	7	;# 
    98     0008                     BSR             equ	8	;# 
    99     0009                     WREG            equ	9	;# 
   100     000A                     PCLATH          equ	10	;# 
   101     000B                     INTCON          equ	11	;# 
   102     000C                     PORTA           equ	12	;# 
   103     000D                     PORTB           equ	13	;# 
   104     0011                     PIR1            equ	17	;# 
   105     0012                     PIR2            equ	18	;# 
   106     0013                     PIR3            equ	19	;# 
   107     0014                     PIR4            equ	20	;# 
   108     0015                     TMR0            equ	21	;# 
   109     0016                     TMR1            equ	22	;# 
   110     0016                     TMR1L           equ	22	;# 
   111     0017                     TMR1H           equ	23	;# 
   112     0018                     T1CON           equ	24	;# 
   113     0019                     T1GCON          equ	25	;# 
   114     001A                     TMR2            equ	26	;# 
   115     001B                     PR2             equ	27	;# 
   116     001C                     T2CON           equ	28	;# 
   117     001E                     CPSCON0         equ	30	;# 
   118     001F                     CPSCON1         equ	31	;# 
   119     008C                     TRISA           equ	140	;# 
   120     008D                     TRISB           equ	141	;# 
   121     0091                     PIE1            equ	145	;# 
   122     0092                     PIE2            equ	146	;# 
   123     0093                     PIE3            equ	147	;# 
   124     0094                     PIE4            equ	148	;# 
   125     0095                     OPTION_REG      equ	149	;# 
   126     0096                     PCON            equ	150	;# 
   127     0097                     WDTCON          equ	151	;# 
   128     0098                     OSCTUNE         equ	152	;# 
   129     0099                     OSCCON          equ	153	;# 
   130     009A                     OSCSTAT         equ	154	;# 
   131     009B                     ADRES           equ	155	;# 
   132     009B                     ADRESL          equ	155	;# 
   133     009C                     ADRESH          equ	156	;# 
   134     009D                     ADCON0          equ	157	;# 
   135     009E                     ADCON1          equ	158	;# 
   136     010C                     LATA            equ	268	;# 
   137     010D                     LATB            equ	269	;# 
   138     0111                     CM1CON0         equ	273	;# 
   139     0112                     CM1CON1         equ	274	;# 
   140     0113                     CM2CON0         equ	275	;# 
   141     0114                     CM2CON1         equ	276	;# 
   142     0115                     CMOUT           equ	277	;# 
   143     0116                     BORCON          equ	278	;# 
   144     0117                     FVRCON          equ	279	;# 
   145     0118                     DACCON0         equ	280	;# 
   146     0119                     DACCON1         equ	281	;# 
   147     011A                     SRCON0          equ	282	;# 
   148     011B                     SRCON1          equ	283	;# 
   149     011D                     APFCON0         equ	285	;# 
   150     011E                     APFCON1         equ	286	;# 
   151     018C                     ANSELA          equ	396	;# 
   152     018D                     ANSELB          equ	397	;# 
   153     0191                     EEADR           equ	401	;# 
   154     0191                     EEADRL          equ	401	;# 
   155     0192                     EEADRH          equ	402	;# 
   156     0193                     EEDAT           equ	403	;# 
   157     0193                     EEDATL          equ	403	;# 
   158     0193                     EEDATA          equ	403	;# 
   159     0194                     EEDATH          equ	404	;# 
   160     0195                     EECON1          equ	405	;# 
   161     0196                     EECON2          equ	406	;# 
   162     0199                     RCREG           equ	409	;# 
   163     019A                     TXREG           equ	410	;# 
   164     019B                     SP1BRG          equ	411	;# 
   165     019B                     SP1BRGL         equ	411	;# 
   166     019B                     SPBRG           equ	411	;# 
   167     019B                     SPBRGL          equ	411	;# 
   168     019C                     SP1BRGH         equ	412	;# 
   169     019C                     SPBRGH          equ	412	;# 
   170     019D                     RCSTA           equ	413	;# 
   171     019E                     TXSTA           equ	414	;# 
   172     019F                     BAUDCON         equ	415	;# 
   173     020C                     WPUA            equ	524	;# 
   174     020D                     WPUB            equ	525	;# 
   175     0211                     SSP1BUF         equ	529	;# 
   176     0211                     SSPBUF          equ	529	;# 
   177     0212                     SSP1ADD         equ	530	;# 
   178     0212                     SSPADD          equ	530	;# 
   179     0213                     SSP1MSK         equ	531	;# 
   180     0213                     SSPMSK          equ	531	;# 
   181     0214                     SSP1STAT        equ	532	;# 
   182     0214                     SSPSTAT         equ	532	;# 
   183     0215                     SSP1CON1        equ	533	;# 
   184     0215                     SSPCON1         equ	533	;# 
   185     0215                     SSPCON          equ	533	;# 
   186     0216                     SSP1CON2        equ	534	;# 
   187     0216                     SSPCON2         equ	534	;# 
   188     0217                     SSP1CON3        equ	535	;# 
   189     0217                     SSPCON3         equ	535	;# 
   190     0219                     SSP2BUF         equ	537	;# 
   191     021A                     SSP2ADD         equ	538	;# 
   192     021B                     SSP2MSK         equ	539	;# 
   193     021C                     SSP2STAT        equ	540	;# 
   194     021D                     SSP2CON1        equ	541	;# 
   195     021E                     SSP2CON2        equ	542	;# 
   196     021F                     SSP2CON3        equ	543	;# 
   197     0291                     CCPR1           equ	657	;# 
   198     0291                     CCPR1L          equ	657	;# 
   199     0292                     CCPR1H          equ	658	;# 
   200     0293                     CCP1CON         equ	659	;# 
   201     0294                     PWM1CON         equ	660	;# 
   202     0295                     CCP1AS          equ	661	;# 
   203     0295                     ECCP1AS         equ	661	;# 
   204     0296                     PSTR1CON        equ	662	;# 
   205     0298                     CCPR2           equ	664	;# 
   206     0298                     CCPR2L          equ	664	;# 
   207     0299                     CCPR2H          equ	665	;# 
   208     029A                     CCP2CON         equ	666	;# 
   209     029B                     PWM2CON         equ	667	;# 
   210     029C                     CCP2AS          equ	668	;# 
   211     029C                     ECCP2AS         equ	668	;# 
   212     029D                     PSTR2CON        equ	669	;# 
   213     029E                     CCPTMRS         equ	670	;# 
   214     029E                     CCPTMRS0        equ	670	;# 
   215     0311                     CCPR3           equ	785	;# 
   216     0311                     CCPR3L          equ	785	;# 
   217     0312                     CCPR3H          equ	786	;# 
   218     0313                     CCP3CON         equ	787	;# 
   219     0318                     CCPR4           equ	792	;# 
   220     0318                     CCPR4L          equ	792	;# 
   221     0319                     CCPR4H          equ	793	;# 
   222     031A                     CCP4CON         equ	794	;# 
   223     0394                     IOCBP           equ	916	;# 
   224     0395                     IOCBN           equ	917	;# 
   225     0396                     IOCBF           equ	918	;# 
   226     039A                     CLKRCON         equ	922	;# 
   227     039C                     MDCON           equ	924	;# 
   228     039D                     MDSRC           equ	925	;# 
   229     039E                     MDCARL          equ	926	;# 
   230     039F                     MDCARH          equ	927	;# 
   231     0415                     TMR4            equ	1045	;# 
   232     0416                     PR4             equ	1046	;# 
   233     0417                     T4CON           equ	1047	;# 
   234     041C                     TMR6            equ	1052	;# 
   235     041D                     PR6             equ	1053	;# 
   236     041E                     T6CON           equ	1054	;# 
   237     0FE4                     STATUS_SHAD     equ	4068	;# 
   238     0FE5                     WREG_SHAD       equ	4069	;# 
   239     0FE6                     BSR_SHAD        equ	4070	;# 
   240     0FE7                     PCLATH_SHAD     equ	4071	;# 
   241     0FE8                     FSR0L_SHAD      equ	4072	;# 
   242     0FE9                     FSR0H_SHAD      equ	4073	;# 
   243     0FEA                     FSR1L_SHAD      equ	4074	;# 
   244     0FEB                     FSR1H_SHAD      equ	4075	;# 
   245     0FED                     STKPTR          equ	4077	;# 
   246     0FEE                     TOSL            equ	4078	;# 
   247     0FEF                     TOSH            equ	4079	;# 
   248     0000                     INDF0           equ	0	;# 
   249     0001                     INDF1           equ	1	;# 
   250     0002                     PCL             equ	2	;# 
   251     0003                     STATUS          equ	3	;# 
   252     0004                     FSR0L           equ	4	;# 
   253     0005                     FSR0H           equ	5	;# 
   254     0006                     FSR1L           equ	6	;# 
   255     0007                     FSR1H           equ	7	;# 
   256     0008                     BSR             equ	8	;# 
   257     0009                     WREG            equ	9	;# 
   258     000A                     PCLATH          equ	10	;# 
   259     000B                     INTCON          equ	11	;# 
   260     000C                     PORTA           equ	12	;# 
   261     000D                     PORTB           equ	13	;# 
   262     0011                     PIR1            equ	17	;# 
   263     0012                     PIR2            equ	18	;# 
   264     0013                     PIR3            equ	19	;# 
   265     0014                     PIR4            equ	20	;# 
   266     0015                     TMR0            equ	21	;# 
   267     0016                     TMR1            equ	22	;# 
   268     0016                     TMR1L           equ	22	;# 
   269     0017                     TMR1H           equ	23	;# 
   270     0018                     T1CON           equ	24	;# 
   271     0019                     T1GCON          equ	25	;# 
   272     001A                     TMR2            equ	26	;# 
   273     001B                     PR2             equ	27	;# 
   274     001C                     T2CON           equ	28	;# 
   275     001E                     CPSCON0         equ	30	;# 
   276     001F                     CPSCON1         equ	31	;# 
   277     008C                     TRISA           equ	140	;# 
   278     008D                     TRISB           equ	141	;# 
   279     0091                     PIE1            equ	145	;# 
   280     0092                     PIE2            equ	146	;# 
   281     0093                     PIE3            equ	147	;# 
   282     0094                     PIE4            equ	148	;# 
   283     0095                     OPTION_REG      equ	149	;# 
   284     0096                     PCON            equ	150	;# 
   285     0097                     WDTCON          equ	151	;# 
   286     0098                     OSCTUNE         equ	152	;# 
   287     0099                     OSCCON          equ	153	;# 
   288     009A                     OSCSTAT         equ	154	;# 
   289     009B                     ADRES           equ	155	;# 
   290     009B                     ADRESL          equ	155	;# 
   291     009C                     ADRESH          equ	156	;# 
   292     009D                     ADCON0          equ	157	;# 
   293     009E                     ADCON1          equ	158	;# 
   294     010C                     LATA            equ	268	;# 
   295     010D                     LATB            equ	269	;# 
   296     0111                     CM1CON0         equ	273	;# 
   297     0112                     CM1CON1         equ	274	;# 
   298     0113                     CM2CON0         equ	275	;# 
   299     0114                     CM2CON1         equ	276	;# 
   300     0115                     CMOUT           equ	277	;# 
   301     0116                     BORCON          equ	278	;# 
   302     0117                     FVRCON          equ	279	;# 
   303     0118                     DACCON0         equ	280	;# 
   304     0119                     DACCON1         equ	281	;# 
   305     011A                     SRCON0          equ	282	;# 
   306     011B                     SRCON1          equ	283	;# 
   307     011D                     APFCON0         equ	285	;# 
   308     011E                     APFCON1         equ	286	;# 
   309     018C                     ANSELA          equ	396	;# 
   310     018D                     ANSELB          equ	397	;# 
   311     0191                     EEADR           equ	401	;# 
   312     0191                     EEADRL          equ	401	;# 
   313     0192                     EEADRH          equ	402	;# 
   314     0193                     EEDAT           equ	403	;# 
   315     0193                     EEDATL          equ	403	;# 
   316     0193                     EEDATA          equ	403	;# 
   317     0194                     EEDATH          equ	404	;# 
   318     0195                     EECON1          equ	405	;# 
   319     0196                     EECON2          equ	406	;# 
   320     0199                     RCREG           equ	409	;# 
   321     019A                     TXREG           equ	410	;# 
   322     019B                     SP1BRG          equ	411	;# 
   323     019B                     SP1BRGL         equ	411	;# 
   324     019B                     SPBRG           equ	411	;# 
   325     019B                     SPBRGL          equ	411	;# 
   326     019C                     SP1BRGH         equ	412	;# 
   327     019C                     SPBRGH          equ	412	;# 
   328     019D                     RCSTA           equ	413	;# 
   329     019E                     TXSTA           equ	414	;# 
   330     019F                     BAUDCON         equ	415	;# 
   331     020C                     WPUA            equ	524	;# 
   332     020D                     WPUB            equ	525	;# 
   333     0211                     SSP1BUF         equ	529	;# 
   334     0211                     SSPBUF          equ	529	;# 
   335     0212                     SSP1ADD         equ	530	;# 
   336     0212                     SSPADD          equ	530	;# 
   337     0213                     SSP1MSK         equ	531	;# 
   338     0213                     SSPMSK          equ	531	;# 
   339     0214                     SSP1STAT        equ	532	;# 
   340     0214                     SSPSTAT         equ	532	;# 
   341     0215                     SSP1CON1        equ	533	;# 
   342     0215                     SSPCON1         equ	533	;# 
   343     0215                     SSPCON          equ	533	;# 
   344     0216                     SSP1CON2        equ	534	;# 
   345     0216                     SSPCON2         equ	534	;# 
   346     0217                     SSP1CON3        equ	535	;# 
   347     0217                     SSPCON3         equ	535	;# 
   348     0219                     SSP2BUF         equ	537	;# 
   349     021A                     SSP2ADD         equ	538	;# 
   350     021B                     SSP2MSK         equ	539	;# 
   351     021C                     SSP2STAT        equ	540	;# 
   352     021D                     SSP2CON1        equ	541	;# 
   353     021E                     SSP2CON2        equ	542	;# 
   354     021F                     SSP2CON3        equ	543	;# 
   355     0291                     CCPR1           equ	657	;# 
   356     0291                     CCPR1L          equ	657	;# 
   357     0292                     CCPR1H          equ	658	;# 
   358     0293                     CCP1CON         equ	659	;# 
   359     0294                     PWM1CON         equ	660	;# 
   360     0295                     CCP1AS          equ	661	;# 
   361     0295                     ECCP1AS         equ	661	;# 
   362     0296                     PSTR1CON        equ	662	;# 
   363     0298                     CCPR2           equ	664	;# 
   364     0298                     CCPR2L          equ	664	;# 
   365     0299                     CCPR2H          equ	665	;# 
   366     029A                     CCP2CON         equ	666	;# 
   367     029B                     PWM2CON         equ	667	;# 
   368     029C                     CCP2AS          equ	668	;# 
   369     029C                     ECCP2AS         equ	668	;# 
   370     029D                     PSTR2CON        equ	669	;# 
   371     029E                     CCPTMRS         equ	670	;# 
   372     029E                     CCPTMRS0        equ	670	;# 
   373     0311                     CCPR3           equ	785	;# 
   374     0311                     CCPR3L          equ	785	;# 
   375     0312                     CCPR3H          equ	786	;# 
   376     0313                     CCP3CON         equ	787	;# 
   377     0318                     CCPR4           equ	792	;# 
   378     0318                     CCPR4L          equ	792	;# 
   379     0319                     CCPR4H          equ	793	;# 
   380     031A                     CCP4CON         equ	794	;# 
   381     0394                     IOCBP           equ	916	;# 
   382     0395                     IOCBN           equ	917	;# 
   383     0396                     IOCBF           equ	918	;# 
   384     039A                     CLKRCON         equ	922	;# 
   385     039C                     MDCON           equ	924	;# 
   386     039D                     MDSRC           equ	925	;# 
   387     039E                     MDCARL          equ	926	;# 
   388     039F                     MDCARH          equ	927	;# 
   389     0415                     TMR4            equ	1045	;# 
   390     0416                     PR4             equ	1046	;# 
   391     0417                     T4CON           equ	1047	;# 
   392     041C                     TMR6            equ	1052	;# 
   393     041D                     PR6             equ	1053	;# 
   394     041E                     T6CON           equ	1054	;# 
   395     0FE4                     STATUS_SHAD     equ	4068	;# 
   396     0FE5                     WREG_SHAD       equ	4069	;# 
   397     0FE6                     BSR_SHAD        equ	4070	;# 
   398     0FE7                     PCLATH_SHAD     equ	4071	;# 
   399     0FE8                     FSR0L_SHAD      equ	4072	;# 
   400     0FE9                     FSR0H_SHAD      equ	4073	;# 
   401     0FEA                     FSR1L_SHAD      equ	4074	;# 
   402     0FEB                     FSR1H_SHAD      equ	4075	;# 
   403     0FED                     STKPTR          equ	4077	;# 
   404     0FEE                     TOSL            equ	4078	;# 
   405     0FEF                     TOSH            equ	4079	;# 
   406     0000                     INDF0           equ	0	;# 
   407     0001                     INDF1           equ	1	;# 
   408     0002                     PCL             equ	2	;# 
   409     0003                     STATUS          equ	3	;# 
   410     0004                     FSR0L           equ	4	;# 
   411     0005                     FSR0H           equ	5	;# 
   412     0006                     FSR1L           equ	6	;# 
   413     0007                     FSR1H           equ	7	;# 
   414     0008                     BSR             equ	8	;# 
   415     0009                     WREG            equ	9	;# 
   416     000A                     PCLATH          equ	10	;# 
   417     000B                     INTCON          equ	11	;# 
   418     000C                     PORTA           equ	12	;# 
   419     000D                     PORTB           equ	13	;# 
   420     0011                     PIR1            equ	17	;# 
   421     0012                     PIR2            equ	18	;# 
   422     0013                     PIR3            equ	19	;# 
   423     0014                     PIR4            equ	20	;# 
   424     0015                     TMR0            equ	21	;# 
   425     0016                     TMR1            equ	22	;# 
   426     0016                     TMR1L           equ	22	;# 
   427     0017                     TMR1H           equ	23	;# 
   428     0018                     T1CON           equ	24	;# 
   429     0019                     T1GCON          equ	25	;# 
   430     001A                     TMR2            equ	26	;# 
   431     001B                     PR2             equ	27	;# 
   432     001C                     T2CON           equ	28	;# 
   433     001E                     CPSCON0         equ	30	;# 
   434     001F                     CPSCON1         equ	31	;# 
   435     008C                     TRISA           equ	140	;# 
   436     008D                     TRISB           equ	141	;# 
   437     0091                     PIE1            equ	145	;# 
   438     0092                     PIE2            equ	146	;# 
   439     0093                     PIE3            equ	147	;# 
   440     0094                     PIE4            equ	148	;# 
   441     0095                     OPTION_REG      equ	149	;# 
   442     0096                     PCON            equ	150	;# 
   443     0097                     WDTCON          equ	151	;# 
   444     0098                     OSCTUNE         equ	152	;# 
   445     0099                     OSCCON          equ	153	;# 
   446     009A                     OSCSTAT         equ	154	;# 
   447     009B                     ADRES           equ	155	;# 
   448     009B                     ADRESL          equ	155	;# 
   449     009C                     ADRESH          equ	156	;# 
   450     009D                     ADCON0          equ	157	;# 
   451     009E                     ADCON1          equ	158	;# 
   452     010C                     LATA            equ	268	;# 
   453     010D                     LATB            equ	269	;# 
   454     0111                     CM1CON0         equ	273	;# 
   455     0112                     CM1CON1         equ	274	;# 
   456     0113                     CM2CON0         equ	275	;# 
   457     0114                     CM2CON1         equ	276	;# 
   458     0115                     CMOUT           equ	277	;# 
   459     0116                     BORCON          equ	278	;# 
   460     0117                     FVRCON          equ	279	;# 
   461     0118                     DACCON0         equ	280	;# 
   462     0119                     DACCON1         equ	281	;# 
   463     011A                     SRCON0          equ	282	;# 
   464     011B                     SRCON1          equ	283	;# 
   465     011D                     APFCON0         equ	285	;# 
   466     011E                     APFCON1         equ	286	;# 
   467     018C                     ANSELA          equ	396	;# 
   468     018D                     ANSELB          equ	397	;# 
   469     0191                     EEADR           equ	401	;# 
   470     0191                     EEADRL          equ	401	;# 
   471     0192                     EEADRH          equ	402	;# 
   472     0193                     EEDAT           equ	403	;# 
   473     0193                     EEDATL          equ	403	;# 
   474     0193                     EEDATA          equ	403	;# 
   475     0194                     EEDATH          equ	404	;# 
   476     0195                     EECON1          equ	405	;# 
   477     0196                     EECON2          equ	406	;# 
   478     0199                     RCREG           equ	409	;# 
   479     019A                     TXREG           equ	410	;# 
   480     019B                     SP1BRG          equ	411	;# 
   481     019B                     SP1BRGL         equ	411	;# 
   482     019B                     SPBRG           equ	411	;# 
   483     019B                     SPBRGL          equ	411	;# 
   484     019C                     SP1BRGH         equ	412	;# 
   485     019C                     SPBRGH          equ	412	;# 
   486     019D                     RCSTA           equ	413	;# 
   487     019E                     TXSTA           equ	414	;# 
   488     019F                     BAUDCON         equ	415	;# 
   489     020C                     WPUA            equ	524	;# 
   490     020D                     WPUB            equ	525	;# 
   491     0211                     SSP1BUF         equ	529	;# 
   492     0211                     SSPBUF          equ	529	;# 
   493     0212                     SSP1ADD         equ	530	;# 
   494     0212                     SSPADD          equ	530	;# 
   495     0213                     SSP1MSK         equ	531	;# 
   496     0213                     SSPMSK          equ	531	;# 
   497     0214                     SSP1STAT        equ	532	;# 
   498     0214                     SSPSTAT         equ	532	;# 
   499     0215                     SSP1CON1        equ	533	;# 
   500     0215                     SSPCON1         equ	533	;# 
   501     0215                     SSPCON          equ	533	;# 
   502     0216                     SSP1CON2        equ	534	;# 
   503     0216                     SSPCON2         equ	534	;# 
   504     0217                     SSP1CON3        equ	535	;# 
   505     0217                     SSPCON3         equ	535	;# 
   506     0219                     SSP2BUF         equ	537	;# 
   507     021A                     SSP2ADD         equ	538	;# 
   508     021B                     SSP2MSK         equ	539	;# 
   509     021C                     SSP2STAT        equ	540	;# 
   510     021D                     SSP2CON1        equ	541	;# 
   511     021E                     SSP2CON2        equ	542	;# 
   512     021F                     SSP2CON3        equ	543	;# 
   513     0291                     CCPR1           equ	657	;# 
   514     0291                     CCPR1L          equ	657	;# 
   515     0292                     CCPR1H          equ	658	;# 
   516     0293                     CCP1CON         equ	659	;# 
   517     0294                     PWM1CON         equ	660	;# 
   518     0295                     CCP1AS          equ	661	;# 
   519     0295                     ECCP1AS         equ	661	;# 
   520     0296                     PSTR1CON        equ	662	;# 
   521     0298                     CCPR2           equ	664	;# 
   522     0298                     CCPR2L          equ	664	;# 
   523     0299                     CCPR2H          equ	665	;# 
   524     029A                     CCP2CON         equ	666	;# 
   525     029B                     PWM2CON         equ	667	;# 
   526     029C                     CCP2AS          equ	668	;# 
   527     029C                     ECCP2AS         equ	668	;# 
   528     029D                     PSTR2CON        equ	669	;# 
   529     029E                     CCPTMRS         equ	670	;# 
   530     029E                     CCPTMRS0        equ	670	;# 
   531     0311                     CCPR3           equ	785	;# 
   532     0311                     CCPR3L          equ	785	;# 
   533     0312                     CCPR3H          equ	786	;# 
   534     0313                     CCP3CON         equ	787	;# 
   535     0318                     CCPR4           equ	792	;# 
   536     0318                     CCPR4L          equ	792	;# 
   537     0319                     CCPR4H          equ	793	;# 
   538     031A                     CCP4CON         equ	794	;# 
   539     0394                     IOCBP           equ	916	;# 
   540     0395                     IOCBN           equ	917	;# 
   541     0396                     IOCBF           equ	918	;# 
   542     039A                     CLKRCON         equ	922	;# 
   543     039C                     MDCON           equ	924	;# 
   544     039D                     MDSRC           equ	925	;# 
   545     039E                     MDCARL          equ	926	;# 
   546     039F                     MDCARH          equ	927	;# 
   547     0415                     TMR4            equ	1045	;# 
   548     0416                     PR4             equ	1046	;# 
   549     0417                     T4CON           equ	1047	;# 
   550     041C                     TMR6            equ	1052	;# 
   551     041D                     PR6             equ	1053	;# 
   552     041E                     T6CON           equ	1054	;# 
   553     0FE4                     STATUS_SHAD     equ	4068	;# 
   554     0FE5                     WREG_SHAD       equ	4069	;# 
   555     0FE6                     BSR_SHAD        equ	4070	;# 
   556     0FE7                     PCLATH_SHAD     equ	4071	;# 
   557     0FE8                     FSR0L_SHAD      equ	4072	;# 
   558     0FE9                     FSR0H_SHAD      equ	4073	;# 
   559     0FEA                     FSR1L_SHAD      equ	4074	;# 
   560     0FEB                     FSR1H_SHAD      equ	4075	;# 
   561     0FED                     STKPTR          equ	4077	;# 
   562     0FEE                     TOSL            equ	4078	;# 
   563     0FEF                     TOSH            equ	4079	;# 
   564     0000                     INDF0           equ	0	;# 
   565     0001                     INDF1           equ	1	;# 
   566     0002                     PCL             equ	2	;# 
   567     0003                     STATUS          equ	3	;# 
   568     0004                     FSR0L           equ	4	;# 
   569     0005                     FSR0H           equ	5	;# 
   570     0006                     FSR1L           equ	6	;# 
   571     0007                     FSR1H           equ	7	;# 
   572     0008                     BSR             equ	8	;# 
   573     0009                     WREG            equ	9	;# 
   574     000A                     PCLATH          equ	10	;# 
   575     000B                     INTCON          equ	11	;# 
   576     000C                     PORTA           equ	12	;# 
   577     000D                     PORTB           equ	13	;# 
   578     0011                     PIR1            equ	17	;# 
   579     0012                     PIR2            equ	18	;# 
   580     0013                     PIR3            equ	19	;# 
   581     0014                     PIR4            equ	20	;# 
   582     0015                     TMR0            equ	21	;# 
   583     0016                     TMR1            equ	22	;# 
   584     0016                     TMR1L           equ	22	;# 
   585     0017                     TMR1H           equ	23	;# 
   586     0018                     T1CON           equ	24	;# 
   587     0019                     T1GCON          equ	25	;# 
   588     001A                     TMR2            equ	26	;# 
   589     001B                     PR2             equ	27	;# 
   590     001C                     T2CON           equ	28	;# 
   591     001E                     CPSCON0         equ	30	;# 
   592     001F                     CPSCON1         equ	31	;# 
   593     008C                     TRISA           equ	140	;# 
   594     008D                     TRISB           equ	141	;# 
   595     0091                     PIE1            equ	145	;# 
   596     0092                     PIE2            equ	146	;# 
   597     0093                     PIE3            equ	147	;# 
   598     0094                     PIE4            equ	148	;# 
   599     0095                     OPTION_REG      equ	149	;# 
   600     0096                     PCON            equ	150	;# 
   601     0097                     WDTCON          equ	151	;# 
   602     0098                     OSCTUNE         equ	152	;# 
   603     0099                     OSCCON          equ	153	;# 
   604     009A                     OSCSTAT         equ	154	;# 
   605     009B                     ADRES           equ	155	;# 
   606     009B                     ADRESL          equ	155	;# 
   607     009C                     ADRESH          equ	156	;# 
   608     009D                     ADCON0          equ	157	;# 
   609     009E                     ADCON1          equ	158	;# 
   610     010C                     LATA            equ	268	;# 
   611     010D                     LATB            equ	269	;# 
   612     0111                     CM1CON0         equ	273	;# 
   613     0112                     CM1CON1         equ	274	;# 
   614     0113                     CM2CON0         equ	275	;# 
   615     0114                     CM2CON1         equ	276	;# 
   616     0115                     CMOUT           equ	277	;# 
   617     0116                     BORCON          equ	278	;# 
   618     0117                     FVRCON          equ	279	;# 
   619     0118                     DACCON0         equ	280	;# 
   620     0119                     DACCON1         equ	281	;# 
   621     011A                     SRCON0          equ	282	;# 
   622     011B                     SRCON1          equ	283	;# 
   623     011D                     APFCON0         equ	285	;# 
   624     011E                     APFCON1         equ	286	;# 
   625     018C                     ANSELA          equ	396	;# 
   626     018D                     ANSELB          equ	397	;# 
   627     0191                     EEADR           equ	401	;# 
   628     0191                     EEADRL          equ	401	;# 
   629     0192                     EEADRH          equ	402	;# 
   630     0193                     EEDAT           equ	403	;# 
   631     0193                     EEDATL          equ	403	;# 
   632     0193                     EEDATA          equ	403	;# 
   633     0194                     EEDATH          equ	404	;# 
   634     0195                     EECON1          equ	405	;# 
   635     0196                     EECON2          equ	406	;# 
   636     0199                     RCREG           equ	409	;# 
   637     019A                     TXREG           equ	410	;# 
   638     019B                     SP1BRG          equ	411	;# 
   639     019B                     SP1BRGL         equ	411	;# 
   640     019B                     SPBRG           equ	411	;# 
   641     019B                     SPBRGL          equ	411	;# 
   642     019C                     SP1BRGH         equ	412	;# 
   643     019C                     SPBRGH          equ	412	;# 
   644     019D                     RCSTA           equ	413	;# 
   645     019E                     TXSTA           equ	414	;# 
   646     019F                     BAUDCON         equ	415	;# 
   647     020C                     WPUA            equ	524	;# 
   648     020D                     WPUB            equ	525	;# 
   649     0211                     SSP1BUF         equ	529	;# 
   650     0211                     SSPBUF          equ	529	;# 
   651     0212                     SSP1ADD         equ	530	;# 
   652     0212                     SSPADD          equ	530	;# 
   653     0213                     SSP1MSK         equ	531	;# 
   654     0213                     SSPMSK          equ	531	;# 
   655     0214                     SSP1STAT        equ	532	;# 
   656     0214                     SSPSTAT         equ	532	;# 
   657     0215                     SSP1CON1        equ	533	;# 
   658     0215                     SSPCON1         equ	533	;# 
   659     0215                     SSPCON          equ	533	;# 
   660     0216                     SSP1CON2        equ	534	;# 
   661     0216                     SSPCON2         equ	534	;# 
   662     0217                     SSP1CON3        equ	535	;# 
   663     0217                     SSPCON3         equ	535	;# 
   664     0219                     SSP2BUF         equ	537	;# 
   665     021A                     SSP2ADD         equ	538	;# 
   666     021B                     SSP2MSK         equ	539	;# 
   667     021C                     SSP2STAT        equ	540	;# 
   668     021D                     SSP2CON1        equ	541	;# 
   669     021E                     SSP2CON2        equ	542	;# 
   670     021F                     SSP2CON3        equ	543	;# 
   671     0291                     CCPR1           equ	657	;# 
   672     0291                     CCPR1L          equ	657	;# 
   673     0292                     CCPR1H          equ	658	;# 
   674     0293                     CCP1CON         equ	659	;# 
   675     0294                     PWM1CON         equ	660	;# 
   676     0295                     CCP1AS          equ	661	;# 
   677     0295                     ECCP1AS         equ	661	;# 
   678     0296                     PSTR1CON        equ	662	;# 
   679     0298                     CCPR2           equ	664	;# 
   680     0298                     CCPR2L          equ	664	;# 
   681     0299                     CCPR2H          equ	665	;# 
   682     029A                     CCP2CON         equ	666	;# 
   683     029B                     PWM2CON         equ	667	;# 
   684     029C                     CCP2AS          equ	668	;# 
   685     029C                     ECCP2AS         equ	668	;# 
   686     029D                     PSTR2CON        equ	669	;# 
   687     029E                     CCPTMRS         equ	670	;# 
   688     029E                     CCPTMRS0        equ	670	;# 
   689     0311                     CCPR3           equ	785	;# 
   690     0311                     CCPR3L          equ	785	;# 
   691     0312                     CCPR3H          equ	786	;# 
   692     0313                     CCP3CON         equ	787	;# 
   693     0318                     CCPR4           equ	792	;# 
   694     0318                     CCPR4L          equ	792	;# 
   695     0319                     CCPR4H          equ	793	;# 
   696     031A                     CCP4CON         equ	794	;# 
   697     0394                     IOCBP           equ	916	;# 
   698     0395                     IOCBN           equ	917	;# 
   699     0396                     IOCBF           equ	918	;# 
   700     039A                     CLKRCON         equ	922	;# 
   701     039C                     MDCON           equ	924	;# 
   702     039D                     MDSRC           equ	925	;# 
   703     039E                     MDCARL          equ	926	;# 
   704     039F                     MDCARH          equ	927	;# 
   705     0415                     TMR4            equ	1045	;# 
   706     0416                     PR4             equ	1046	;# 
   707     0417                     T4CON           equ	1047	;# 
   708     041C                     TMR6            equ	1052	;# 
   709     041D                     PR6             equ	1053	;# 
   710     041E                     T6CON           equ	1054	;# 
   711     0FE4                     STATUS_SHAD     equ	4068	;# 
   712     0FE5                     WREG_SHAD       equ	4069	;# 
   713     0FE6                     BSR_SHAD        equ	4070	;# 
   714     0FE7                     PCLATH_SHAD     equ	4071	;# 
   715     0FE8                     FSR0L_SHAD      equ	4072	;# 
   716     0FE9                     FSR0H_SHAD      equ	4073	;# 
   717     0FEA                     FSR1L_SHAD      equ	4074	;# 
   718     0FEB                     FSR1H_SHAD      equ	4075	;# 
   719     0FED                     STKPTR          equ	4077	;# 
   720     0FEE                     TOSL            equ	4078	;# 
   721     0FEF                     TOSH            equ	4079	;# 
   722     0000                     INDF0           equ	0	;# 
   723     0001                     INDF1           equ	1	;# 
   724     0002                     PCL             equ	2	;# 
   725     0003                     STATUS          equ	3	;# 
   726     0004                     FSR0L           equ	4	;# 
   727     0005                     FSR0H           equ	5	;# 
   728     0006                     FSR1L           equ	6	;# 
   729     0007                     FSR1H           equ	7	;# 
   730     0008                     BSR             equ	8	;# 
   731     0009                     WREG            equ	9	;# 
   732     000A                     PCLATH          equ	10	;# 
   733     000B                     INTCON          equ	11	;# 
   734     000C                     PORTA           equ	12	;# 
   735     000D                     PORTB           equ	13	;# 
   736     0011                     PIR1            equ	17	;# 
   737     0012                     PIR2            equ	18	;# 
   738     0013                     PIR3            equ	19	;# 
   739     0014                     PIR4            equ	20	;# 
   740     0015                     TMR0            equ	21	;# 
   741     0016                     TMR1            equ	22	;# 
   742     0016                     TMR1L           equ	22	;# 
   743     0017                     TMR1H           equ	23	;# 
   744     0018                     T1CON           equ	24	;# 
   745     0019                     T1GCON          equ	25	;# 
   746     001A                     TMR2            equ	26	;# 
   747     001B                     PR2             equ	27	;# 
   748     001C                     T2CON           equ	28	;# 
   749     001E                     CPSCON0         equ	30	;# 
   750     001F                     CPSCON1         equ	31	;# 
   751     008C                     TRISA           equ	140	;# 
   752     008D                     TRISB           equ	141	;# 
   753     0091                     PIE1            equ	145	;# 
   754     0092                     PIE2            equ	146	;# 
   755     0093                     PIE3            equ	147	;# 
   756     0094                     PIE4            equ	148	;# 
   757     0095                     OPTION_REG      equ	149	;# 
   758     0096                     PCON            equ	150	;# 
   759     0097                     WDTCON          equ	151	;# 
   760     0098                     OSCTUNE         equ	152	;# 
   761     0099                     OSCCON          equ	153	;# 
   762     009A                     OSCSTAT         equ	154	;# 
   763     009B                     ADRES           equ	155	;# 
   764     009B                     ADRESL          equ	155	;# 
   765     009C                     ADRESH          equ	156	;# 
   766     009D                     ADCON0          equ	157	;# 
   767     009E                     ADCON1          equ	158	;# 
   768     010C                     LATA            equ	268	;# 
   769     010D                     LATB            equ	269	;# 
   770     0111                     CM1CON0         equ	273	;# 
   771     0112                     CM1CON1         equ	274	;# 
   772     0113                     CM2CON0         equ	275	;# 
   773     0114                     CM2CON1         equ	276	;# 
   774     0115                     CMOUT           equ	277	;# 
   775     0116                     BORCON          equ	278	;# 
   776     0117                     FVRCON          equ	279	;# 
   777     0118                     DACCON0         equ	280	;# 
   778     0119                     DACCON1         equ	281	;# 
   779     011A                     SRCON0          equ	282	;# 
   780     011B                     SRCON1          equ	283	;# 
   781     011D                     APFCON0         equ	285	;# 
   782     011E                     APFCON1         equ	286	;# 
   783     018C                     ANSELA          equ	396	;# 
   784     018D                     ANSELB          equ	397	;# 
   785     0191                     EEADR           equ	401	;# 
   786     0191                     EEADRL          equ	401	;# 
   787     0192                     EEADRH          equ	402	;# 
   788     0193                     EEDAT           equ	403	;# 
   789     0193                     EEDATL          equ	403	;# 
   790     0193                     EEDATA          equ	403	;# 
   791     0194                     EEDATH          equ	404	;# 
   792     0195                     EECON1          equ	405	;# 
   793     0196                     EECON2          equ	406	;# 
   794     0199                     RCREG           equ	409	;# 
   795     019A                     TXREG           equ	410	;# 
   796     019B                     SP1BRG          equ	411	;# 
   797     019B                     SP1BRGL         equ	411	;# 
   798     019B                     SPBRG           equ	411	;# 
   799     019B                     SPBRGL          equ	411	;# 
   800     019C                     SP1BRGH         equ	412	;# 
   801     019C                     SPBRGH          equ	412	;# 
   802     019D                     RCSTA           equ	413	;# 
   803     019E                     TXSTA           equ	414	;# 
   804     019F                     BAUDCON         equ	415	;# 
   805     020C                     WPUA            equ	524	;# 
   806     020D                     WPUB            equ	525	;# 
   807     0211                     SSP1BUF         equ	529	;# 
   808     0211                     SSPBUF          equ	529	;# 
   809     0212                     SSP1ADD         equ	530	;# 
   810     0212                     SSPADD          equ	530	;# 
   811     0213                     SSP1MSK         equ	531	;# 
   812     0213                     SSPMSK          equ	531	;# 
   813     0214                     SSP1STAT        equ	532	;# 
   814     0214                     SSPSTAT         equ	532	;# 
   815     0215                     SSP1CON1        equ	533	;# 
   816     0215                     SSPCON1         equ	533	;# 
   817     0215                     SSPCON          equ	533	;# 
   818     0216                     SSP1CON2        equ	534	;# 
   819     0216                     SSPCON2         equ	534	;# 
   820     0217                     SSP1CON3        equ	535	;# 
   821     0217                     SSPCON3         equ	535	;# 
   822     0219                     SSP2BUF         equ	537	;# 
   823     021A                     SSP2ADD         equ	538	;# 
   824     021B                     SSP2MSK         equ	539	;# 
   825     021C                     SSP2STAT        equ	540	;# 
   826     021D                     SSP2CON1        equ	541	;# 
   827     021E                     SSP2CON2        equ	542	;# 
   828     021F                     SSP2CON3        equ	543	;# 
   829     0291                     CCPR1           equ	657	;# 
   830     0291                     CCPR1L          equ	657	;# 
   831     0292                     CCPR1H          equ	658	;# 
   832     0293                     CCP1CON         equ	659	;# 
   833     0294                     PWM1CON         equ	660	;# 
   834     0295                     CCP1AS          equ	661	;# 
   835     0295                     ECCP1AS         equ	661	;# 
   836     0296                     PSTR1CON        equ	662	;# 
   837     0298                     CCPR2           equ	664	;# 
   838     0298                     CCPR2L          equ	664	;# 
   839     0299                     CCPR2H          equ	665	;# 
   840     029A                     CCP2CON         equ	666	;# 
   841     029B                     PWM2CON         equ	667	;# 
   842     029C                     CCP2AS          equ	668	;# 
   843     029C                     ECCP2AS         equ	668	;# 
   844     029D                     PSTR2CON        equ	669	;# 
   845     029E                     CCPTMRS         equ	670	;# 
   846     029E                     CCPTMRS0        equ	670	;# 
   847     0311                     CCPR3           equ	785	;# 
   848     0311                     CCPR3L          equ	785	;# 
   849     0312                     CCPR3H          equ	786	;# 
   850     0313                     CCP3CON         equ	787	;# 
   851     0318                     CCPR4           equ	792	;# 
   852     0318                     CCPR4L          equ	792	;# 
   853     0319                     CCPR4H          equ	793	;# 
   854     031A                     CCP4CON         equ	794	;# 
   855     0394                     IOCBP           equ	916	;# 
   856     0395                     IOCBN           equ	917	;# 
   857     0396                     IOCBF           equ	918	;# 
   858     039A                     CLKRCON         equ	922	;# 
   859     039C                     MDCON           equ	924	;# 
   860     039D                     MDSRC           equ	925	;# 
   861     039E                     MDCARL          equ	926	;# 
   862     039F                     MDCARH          equ	927	;# 
   863     0415                     TMR4            equ	1045	;# 
   864     0416                     PR4             equ	1046	;# 
   865     0417                     T4CON           equ	1047	;# 
   866     041C                     TMR6            equ	1052	;# 
   867     041D                     PR6             equ	1053	;# 
   868     041E                     T6CON           equ	1054	;# 
   869     0FE4                     STATUS_SHAD     equ	4068	;# 
   870     0FE5                     WREG_SHAD       equ	4069	;# 
   871     0FE6                     BSR_SHAD        equ	4070	;# 
   872     0FE7                     PCLATH_SHAD     equ	4071	;# 
   873     0FE8                     FSR0L_SHAD      equ	4072	;# 
   874     0FE9                     FSR0H_SHAD      equ	4073	;# 
   875     0FEA                     FSR1L_SHAD      equ	4074	;# 
   876     0FEB                     FSR1H_SHAD      equ	4075	;# 
   877     0FED                     STKPTR          equ	4077	;# 
   878     0FEE                     TOSL            equ	4078	;# 
   879     0FEF                     TOSH            equ	4079	;# 
   880     0000                     INDF0           equ	0	;# 
   881     0001                     INDF1           equ	1	;# 
   882     0002                     PCL             equ	2	;# 
   883     0003                     STATUS          equ	3	;# 
   884     0004                     FSR0L           equ	4	;# 
   885     0005                     FSR0H           equ	5	;# 
   886     0006                     FSR1L           equ	6	;# 
   887     0007                     FSR1H           equ	7	;# 
   888     0008                     BSR             equ	8	;# 
   889     0009                     WREG            equ	9	;# 
   890     000A                     PCLATH          equ	10	;# 
   891     000B                     INTCON          equ	11	;# 
   892     000C                     PORTA           equ	12	;# 
   893     000D                     PORTB           equ	13	;# 
   894     0011                     PIR1            equ	17	;# 
   895     0012                     PIR2            equ	18	;# 
   896     0013                     PIR3            equ	19	;# 
   897     0014                     PIR4            equ	20	;# 
   898     0015                     TMR0            equ	21	;# 
   899     0016                     TMR1            equ	22	;# 
   900     0016                     TMR1L           equ	22	;# 
   901     0017                     TMR1H           equ	23	;# 
   902     0018                     T1CON           equ	24	;# 
   903     0019                     T1GCON          equ	25	;# 
   904     001A                     TMR2            equ	26	;# 
   905     001B                     PR2             equ	27	;# 
   906     001C                     T2CON           equ	28	;# 
   907     001E                     CPSCON0         equ	30	;# 
   908     001F                     CPSCON1         equ	31	;# 
   909     008C                     TRISA           equ	140	;# 
   910     008D                     TRISB           equ	141	;# 
   911     0091                     PIE1            equ	145	;# 
   912     0092                     PIE2            equ	146	;# 
   913     0093                     PIE3            equ	147	;# 
   914     0094                     PIE4            equ	148	;# 
   915     0095                     OPTION_REG      equ	149	;# 
   916     0096                     PCON            equ	150	;# 
   917     0097                     WDTCON          equ	151	;# 
   918     0098                     OSCTUNE         equ	152	;# 
   919     0099                     OSCCON          equ	153	;# 
   920     009A                     OSCSTAT         equ	154	;# 
   921     009B                     ADRES           equ	155	;# 
   922     009B                     ADRESL          equ	155	;# 
   923     009C                     ADRESH          equ	156	;# 
   924     009D                     ADCON0          equ	157	;# 
   925     009E                     ADCON1          equ	158	;# 
   926     010C                     LATA            equ	268	;# 
   927     010D                     LATB            equ	269	;# 
   928     0111                     CM1CON0         equ	273	;# 
   929     0112                     CM1CON1         equ	274	;# 
   930     0113                     CM2CON0         equ	275	;# 
   931     0114                     CM2CON1         equ	276	;# 
   932     0115                     CMOUT           equ	277	;# 
   933     0116                     BORCON          equ	278	;# 
   934     0117                     FVRCON          equ	279	;# 
   935     0118                     DACCON0         equ	280	;# 
   936     0119                     DACCON1         equ	281	;# 
   937     011A                     SRCON0          equ	282	;# 
   938     011B                     SRCON1          equ	283	;# 
   939     011D                     APFCON0         equ	285	;# 
   940     011E                     APFCON1         equ	286	;# 
   941     018C                     ANSELA          equ	396	;# 
   942     018D                     ANSELB          equ	397	;# 
   943     0191                     EEADR           equ	401	;# 
   944     0191                     EEADRL          equ	401	;# 
   945     0192                     EEADRH          equ	402	;# 
   946     0193                     EEDAT           equ	403	;# 
   947     0193                     EEDATL          equ	403	;# 
   948     0193                     EEDATA          equ	403	;# 
   949     0194                     EEDATH          equ	404	;# 
   950     0195                     EECON1          equ	405	;# 
   951     0196                     EECON2          equ	406	;# 
   952     0199                     RCREG           equ	409	;# 
   953     019A                     TXREG           equ	410	;# 
   954     019B                     SP1BRG          equ	411	;# 
   955     019B                     SP1BRGL         equ	411	;# 
   956     019B                     SPBRG           equ	411	;# 
   957     019B                     SPBRGL          equ	411	;# 
   958     019C                     SP1BRGH         equ	412	;# 
   959     019C                     SPBRGH          equ	412	;# 
   960     019D                     RCSTA           equ	413	;# 
   961     019E                     TXSTA           equ	414	;# 
   962     019F                     BAUDCON         equ	415	;# 
   963     020C                     WPUA            equ	524	;# 
   964     020D                     WPUB            equ	525	;# 
   965     0211                     SSP1BUF         equ	529	;# 
   966     0211                     SSPBUF          equ	529	;# 
   967     0212                     SSP1ADD         equ	530	;# 
   968     0212                     SSPADD          equ	530	;# 
   969     0213                     SSP1MSK         equ	531	;# 
   970     0213                     SSPMSK          equ	531	;# 
   971     0214                     SSP1STAT        equ	532	;# 
   972     0214                     SSPSTAT         equ	532	;# 
   973     0215                     SSP1CON1        equ	533	;# 
   974     0215                     SSPCON1         equ	533	;# 
   975     0215                     SSPCON          equ	533	;# 
   976     0216                     SSP1CON2        equ	534	;# 
   977     0216                     SSPCON2         equ	534	;# 
   978     0217                     SSP1CON3        equ	535	;# 
   979     0217                     SSPCON3         equ	535	;# 
   980     0219                     SSP2BUF         equ	537	;# 
   981     021A                     SSP2ADD         equ	538	;# 
   982     021B                     SSP2MSK         equ	539	;# 
   983     021C                     SSP2STAT        equ	540	;# 
   984     021D                     SSP2CON1        equ	541	;# 
   985     021E                     SSP2CON2        equ	542	;# 
   986     021F                     SSP2CON3        equ	543	;# 
   987     0291                     CCPR1           equ	657	;# 
   988     0291                     CCPR1L          equ	657	;# 
   989     0292                     CCPR1H          equ	658	;# 
   990     0293                     CCP1CON         equ	659	;# 
   991     0294                     PWM1CON         equ	660	;# 
   992     0295                     CCP1AS          equ	661	;# 
   993     0295                     ECCP1AS         equ	661	;# 
   994     0296                     PSTR1CON        equ	662	;# 
   995     0298                     CCPR2           equ	664	;# 
   996     0298                     CCPR2L          equ	664	;# 
   997     0299                     CCPR2H          equ	665	;# 
   998     029A                     CCP2CON         equ	666	;# 
   999     029B                     PWM2CON         equ	667	;# 
  1000     029C                     CCP2AS          equ	668	;# 
  1001     029C                     ECCP2AS         equ	668	;# 
  1002     029D                     PSTR2CON        equ	669	;# 
  1003     029E                     CCPTMRS         equ	670	;# 
  1004     029E                     CCPTMRS0        equ	670	;# 
  1005     0311                     CCPR3           equ	785	;# 
  1006     0311                     CCPR3L          equ	785	;# 
  1007     0312                     CCPR3H          equ	786	;# 
  1008     0313                     CCP3CON         equ	787	;# 
  1009     0318                     CCPR4           equ	792	;# 
  1010     0318                     CCPR4L          equ	792	;# 
  1011     0319                     CCPR4H          equ	793	;# 
  1012     031A                     CCP4CON         equ	794	;# 
  1013     0394                     IOCBP           equ	916	;# 
  1014     0395                     IOCBN           equ	917	;# 
  1015     0396                     IOCBF           equ	918	;# 
  1016     039A                     CLKRCON         equ	922	;# 
  1017     039C                     MDCON           equ	924	;# 
  1018     039D                     MDSRC           equ	925	;# 
  1019     039E                     MDCARL          equ	926	;# 
  1020     039F                     MDCARH          equ	927	;# 
  1021     0415                     TMR4            equ	1045	;# 
  1022     0416                     PR4             equ	1046	;# 
  1023     0417                     T4CON           equ	1047	;# 
  1024     041C                     TMR6            equ	1052	;# 
  1025     041D                     PR6             equ	1053	;# 
  1026     041E                     T6CON           equ	1054	;# 
  1027     0FE4                     STATUS_SHAD     equ	4068	;# 
  1028     0FE5                     WREG_SHAD       equ	4069	;# 
  1029     0FE6                     BSR_SHAD        equ	4070	;# 
  1030     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1031     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1032     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1033     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1034     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1035     0FED                     STKPTR          equ	4077	;# 
  1036     0FEE                     TOSL            equ	4078	;# 
  1037     0FEF                     TOSH            equ	4079	;# 
  1038                           
  1039 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1040     0000                     _EUSART_DefaultFramingErrorHandler equ	0
  1041                           
  1042 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1043     0000                     _EUSART_DefaultOverrunErrorHandler equ	0
  1044                           
  1045 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1046     0000                     _EUSART_DefaultErrorHandler equ	0
  1047                           
  1048                           	psect	stringtext1
  1049     0800                     __pstringtext1:
  1050     0800                     _MSG0:
  1051     0800  344C               	retlw	76
  1052     0801  342D               	retlw	45
  1053     0802  3445               	retlw	69
  1054     0803  3478               	retlw	120
  1055     0804  3469               	retlw	105
  1056     0805  3462               	retlw	98
  1057     0806  3465               	retlw	101
  1058     0807  3420               	retlw	32
  1059     0808  346C               	retlw	108
  1060     0809  3469               	retlw	105
  1061     080A  3473               	retlw	115
  1062     080B  3474               	retlw	116
  1063     080C  3461               	retlw	97
  1064     080D  342C               	retlw	44
  1065     080E  3420               	retlw	32
  1066     080F  3441               	retlw	65
  1067     0810  342D               	retlw	45
  1068     0811  3441               	retlw	65
  1069     0812  3467               	retlw	103
  1070     0813  3465               	retlw	101
  1071     0814  346E               	retlw	110
  1072     0815  3464               	retlw	100
  1073     0816  3461               	retlw	97
  1074     0817  342C               	retlw	44
  1075     0818  3420               	retlw	32
  1076     0819  3450               	retlw	80
  1077     081A  342D               	retlw	45
  1078     081B  3450               	retlw	80
  1079     081C  3472               	retlw	114
  1080     081D  346F               	retlw	111
  1081     081E  3478               	retlw	120
  1082     081F  3469               	retlw	105
  1083     0820  346D               	retlw	109
  1084     0821  346F               	retlw	111
  1085     0822  342C               	retlw	44
  1086     0823  3420               	retlw	32
  1087     0824  3452               	retlw	82
  1088     0825  342D               	retlw	45
  1089     0826  3441               	retlw	65
  1090     0827  3470               	retlw	112
  1091     0828  3461               	retlw	97
  1092     0829  3467               	retlw	103
  1093     082A  3461               	retlw	97
  1094     082B  3420               	retlw	32
  1095     082C  346C               	retlw	108
  1096     082D  3469               	retlw	105
  1097     082E  3473               	retlw	115
  1098     082F  3474               	retlw	116
  1099     0830  3461               	retlw	97
  1100     0831  3400               	retlw	0
  1101     0832                     __end_of_MSG0:
  1102                           
  1103                           	psect	stringtext2
  1104     0832                     __pstringtext2:
  1105     0832                     _MSG6:
  1106     0832  3454               	retlw	84
  1107     0833  346F               	retlw	111
  1108     0834  3464               	retlw	100
  1109     0835  346F               	retlw	111
  1110     0836  3473               	retlw	115
  1111     0837  3420               	retlw	32
  1112     0838  346F               	retlw	111
  1113     0839  3473               	retlw	115
  1114     083A  3420               	retlw	32
  1115     083B  3461               	retlw	97
  1116     083C  3467               	retlw	103
  1117     083D  3465               	retlw	101
  1118     083E  346E               	retlw	110
  1119     083F  3464               	retlw	100
  1120     0840  3461               	retlw	97
  1121     0841  346D               	retlw	109
  1122     0842  3465               	retlw	101
  1123     0843  346E               	retlw	110
  1124     0844  3474               	retlw	116
  1125     0845  346F               	retlw	111
  1126     0846  3473               	retlw	115
  1127     0847  3420               	retlw	32
  1128     0848  3466               	retlw	102
  1129     0849  346F               	retlw	111
  1130     084A  3472               	retlw	114
  1131     084B  3461               	retlw	97
  1132     084C  346D               	retlw	109
  1133     084D  3420               	retlw	32
  1134     084E  3461               	retlw	97
  1135     084F  3474               	retlw	116
  1136     0850  3465               	retlw	101
  1137     0851  346E               	retlw	110
  1138     0852  3464               	retlw	100
  1139     0853  3469               	retlw	105
  1140     0854  3464               	retlw	100
  1141     0855  346F               	retlw	111
  1142     0856  3473               	retlw	115
  1143     0857  3400               	retlw	0
  1144     0858                     __end_of_MSG6:
  1145                           
  1146                           	psect	stringtext3
  1147     0858                     __pstringtext3:
  1148     0858                     _MSG5:
  1149     0858  344E               	retlw	78
  1150     0859  3461               	retlw	97
  1151     085A  346F               	retlw	111
  1152     085B  3420               	retlw	32
  1153     085C  3466               	retlw	102
  1154     085D  346F               	retlw	111
  1155     085E  3469               	retlw	105
  1156     085F  3420               	retlw	32
  1157     0860  3470               	retlw	112
  1158     0861  346F               	retlw	111
  1159     0862  3473               	retlw	115
  1160     0863  3473               	retlw	115
  1161     0864  3469               	retlw	105
  1162     0865  3476               	retlw	118
  1163     0866  3465               	retlw	101
  1164     0867  346C               	retlw	108
  1165     0868  3420               	retlw	32
  1166     0869  3461               	retlw	97
  1167     086A  3467               	retlw	103
  1168     086B  3465               	retlw	101
  1169     086C  346E               	retlw	110
  1170     086D  3464               	retlw	100
  1171     086E  3461               	retlw	97
  1172     086F  3472               	retlw	114
  1173     0870  3420               	retlw	32
  1174     0871  3428               	retlw	40
  1175     0872  346E               	retlw	110
  1176     0873  346F               	retlw	111
  1177     0874  346D               	retlw	109
  1178     0875  3465               	retlw	101
  1179     0876  3420               	retlw	32
  1180     0877  3476               	retlw	118
  1181     0878  3461               	retlw	97
  1182     0879  347A               	retlw	122
  1183     087A  3469               	retlw	105
  1184     087B  346F               	retlw	111
  1185     087C  3429               	retlw	41
  1186     087D  3400               	retlw	0
  1187     087E                     __end_of_MSG5:
  1188                           
  1189                           	psect	stringtext4
  1190     087E                     __pstringtext4:
  1191     087E                     _MSG7:
  1192     087E  344E               	retlw	78
  1193     087F  3461               	retlw	97
  1194     0880  346F               	retlw	111
  1195     0881  3420               	retlw	32
  1196     0882  3464               	retlw	100
  1197     0883  3469               	retlw	105
  1198     0884  3473               	retlw	115
  1199     0885  3470               	retlw	112
  1200     0886  346F               	retlw	111
  1201     0887  346E               	retlw	110
  1202     0888  3465               	retlw	101
  1203     0889  346D               	retlw	109
  1204     088A  346F               	retlw	111
  1205     088B  3473               	retlw	115
  1206     088C  3420               	retlw	32
  1207     088D  3464               	retlw	100
  1208     088E  3465               	retlw	101
  1209     088F  3420               	retlw	32
  1210     0890  346D               	retlw	109
  1211     0891  3461               	retlw	97
  1212     0892  3469               	retlw	105
  1213     0893  3473               	retlw	115
  1214     0894  3420               	retlw	32
  1215     0895  3461               	retlw	97
  1216     0896  3467               	retlw	103
  1217     0897  3465               	retlw	101
  1218     0898  346E               	retlw	110
  1219     0899  3464               	retlw	100
  1220     089A  3461               	retlw	97
  1221     089B  346D               	retlw	109
  1222     089C  3465               	retlw	101
  1223     089D  346E               	retlw	110
  1224     089E  3474               	retlw	116
  1225     089F  346F               	retlw	111
  1226     08A0  3473               	retlw	115
  1227     08A1  3400               	retlw	0
  1228     08A2                     __end_of_MSG7:
  1229                           
  1230                           	psect	stringtext5
  1231     08A2                     __pstringtext5:
  1232     08A2                     _MSGS:
  1233     08A2  344F               	retlw	79
  1234     08A3  3420               	retlw	32
  1235     08A4  3461               	retlw	97
  1236     08A5  3467               	retlw	103
  1237     08A6  3465               	retlw	101
  1238     08A7  346E               	retlw	110
  1239     08A8  3464               	retlw	100
  1240     08A9  3461               	retlw	97
  1241     08AA  346D               	retlw	109
  1242     08AB  3465               	retlw	101
  1243     08AC  346E               	retlw	110
  1244     08AD  3474               	retlw	116
  1245     08AE  346F               	retlw	111
  1246     08AF  3420               	retlw	32
  1247     08B0  3464               	retlw	100
  1248     08B1  3465               	retlw	101
  1249     08B2  3420               	retlw	32
  1250     08B3  3466               	retlw	102
  1251     08B4  346F               	retlw	111
  1252     08B5  3469               	retlw	105
  1253     08B6  3420               	retlw	32
  1254     08B7  3472               	retlw	114
  1255     08B8  3465               	retlw	101
  1256     08B9  3461               	retlw	97
  1257     08BA  346C               	retlw	108
  1258     08BB  3469               	retlw	105
  1259     08BC  347A               	retlw	122
  1260     08BD  3461               	retlw	97
  1261     08BE  3464               	retlw	100
  1262     08BF  346F               	retlw	111
  1263     08C0  3400               	retlw	0
  1264     08C1                     __end_of_MSGS:
  1265                           
  1266                           	psect	stringtext6
  1267     08C1                     __pstringtext6:
  1268     08C1                     _MSG2:
  1269     08C1  344C               	retlw	76
  1270     08C2  3469               	retlw	105
  1271     08C3  3473               	retlw	115
  1272     08C4  3474               	retlw	116
  1273     08C5  3461               	retlw	97
  1274     08C6  3420               	retlw	32
  1275     08C7  3464               	retlw	100
  1276     08C8  3465               	retlw	101
  1277     08C9  3420               	retlw	32
  1278     08CA  3461               	retlw	97
  1279     08CB  3467               	retlw	103
  1280     08CC  3465               	retlw	101
  1281     08CD  346E               	retlw	110
  1282     08CE  3464               	retlw	100
  1283     08CF  3461               	retlw	97
  1284     08D0  346D               	retlw	109
  1285     08D1  3465               	retlw	101
  1286     08D2  346E               	retlw	110
  1287     08D3  3474               	retlw	116
  1288     08D4  346F               	retlw	111
  1289     08D5  3473               	retlw	115
  1290     08D6  3420               	retlw	32
  1291     08D7  3476               	retlw	118
  1292     08D8  3461               	retlw	97
  1293     08D9  347A               	retlw	122
  1294     08DA  3469               	retlw	105
  1295     08DB  3461               	retlw	97
  1296     08DC  3400               	retlw	0
  1297     08DD                     __end_of_MSG2:
  1298                           
  1299                           	psect	stringtext7
  1300     08DD                     __pstringtext7:
  1301     08DD                     _MSG1:
  1302     08DD  344C               	retlw	76
  1303     08DE  3469               	retlw	105
  1304     08DF  3473               	retlw	115
  1305     08E0  3474               	retlw	116
  1306     08E1  3461               	retlw	97
  1307     08E2  3420               	retlw	32
  1308     08E3  3464               	retlw	100
  1309     08E4  3465               	retlw	101
  1310     08E5  3420               	retlw	32
  1311     08E6  3461               	retlw	97
  1312     08E7  3467               	retlw	103
  1313     08E8  3465               	retlw	101
  1314     08E9  346E               	retlw	110
  1315     08EA  3464               	retlw	100
  1316     08EB  3461               	retlw	97
  1317     08EC  346D               	retlw	109
  1318     08ED  3465               	retlw	101
  1319     08EE  346E               	retlw	110
  1320     08EF  3474               	retlw	116
  1321     08F0  346F               	retlw	111
  1322     08F1  3473               	retlw	115
  1323     08F2  3400               	retlw	0
  1324     08F3                     __end_of_MSG1:
  1325                           
  1326                           	psect	stringtext8
  1327     08F3                     __pstringtext8:
  1328     08F3                     _MSG4:
  1329     08F3  3444               	retlw	68
  1330     08F4  3469               	retlw	105
  1331     08F5  3467               	retlw	103
  1332     08F6  3469               	retlw	105
  1333     08F7  3474               	retlw	116
  1334     08F8  3465               	retlw	101
  1335     08F9  3420               	retlw	32
  1336     08FA  346F               	retlw	111
  1337     08FB  3420               	retlw	32
  1338     08FC  346E               	retlw	110
  1339     08FD  346F               	retlw	111
  1340     08FE  346D               	retlw	109
  1341     08FF  3465               	retlw	101
  1342     0900  343A               	retlw	58
  1343     0901  3400               	retlw	0
  1344     0902                     __end_of_MSG4:
  1345                           
  1346                           	psect	stringtext9
  1347     0902                     __pstringtext9:
  1348     0902                     _MSG3:
  1349     0902  3450               	retlw	80
  1350     0903  3472               	retlw	114
  1351     0904  346F               	retlw	111
  1352     0905  3478               	retlw	120
  1353     0906  3469               	retlw	105
  1354     0907  346D               	retlw	109
  1355     0908  346F               	retlw	111
  1356     0909  343A               	retlw	58
  1357     090A  3420               	retlw	32
  1358     090B  3400               	retlw	0
  1359     090C                     __end_of_MSG3:
  1360                           
  1361                           	psect	nvCOMMON
  1362     0078                     __pnvCOMMON:
  1363     0078                     _EUSART_OverrunErrorHandler:
  1364     0078                     	ds	2
  1365     007A                     _EUSART_FramingErrorHandler:
  1366     007A                     	ds	2
  1367                           
  1368                           	psect	nvBANK0
  1369     0052                     __pnvBANK0:
  1370     0052                     _EUSART_ErrorHandler:
  1371     0052                     	ds	2
  1372     0011                     _PIR1bits       set	17
  1373     000B                     _INTCONbits     set	11
  1374     0097                     _WDTCON         set	151
  1375     0098                     _OSCTUNE        set	152
  1376     0099                     _OSCCON         set	153
  1377     0095                     _OPTION_REGbits set	149
  1378     008D                     _TRISB          set	141
  1379     008C                     _TRISA          set	140
  1380     0116                     _BORCON         set	278
  1381     011E                     _APFCON1        set	286
  1382     011D                     _APFCON0        set	285
  1383     010D                     _LATB           set	269
  1384     010C                     _LATA           set	268
  1385     019A                     _TXREG          set	410
  1386     0199                     _RCREG          set	409
  1387     019D                     _RCSTAbits      set	413
  1388     019E                     _TXSTAbits      set	414
  1389     019C                     _SPBRGH         set	412
  1390     019B                     _SPBRGL         set	411
  1391     019E                     _TXSTA          set	414
  1392     019D                     _RCSTA          set	413
  1393     019F                     _BAUDCON        set	415
  1394     0196                     _EECON2         set	406
  1395     0193                     _EEDATL         set	403
  1396     0194                     _EEDATH         set	404
  1397     0195                     _EECON1bits     set	405
  1398     0192                     _EEADRH         set	402
  1399     0191                     _EEADRL         set	401
  1400     018C                     _ANSELA         set	396
  1401     018D                     _ANSELB         set	397
  1402     020C                     _WPUA           set	524
  1403     020D                     _WPUB           set	525
  1404                           
  1405                           	psect	cinit
  1406     07F4                     start_initialization:	
  1407                           ; #config settings
  1408                           
  1409     07F4                     __initialization:
  1410                           
  1411                           ; Clear objects allocated to COMMON
  1412     07F4  01FC               	clrf	__pbssCOMMON& (0+127)
  1413                           
  1414                           ; Clear objects allocated to BANK0
  1415     07F5  3020               	movlw	low __pbssBANK0
  1416     07F6  0084               	movwf	4
  1417     07F7  3000               	movlw	high __pbssBANK0
  1418     07F8  0085               	movwf	5
  1419     07F9  301D               	movlw	29
  1420     07FA  3184  247D  3187   	fcall	clear_ram0
  1421     07FD                     end_of_initialization:	
  1422                           ;End of C runtime variable initialization code
  1423                           
  1424     07FD                     __end_of__initialization:
  1425     07FD  0020               	movlb	0
  1426     07FE  3185  2D60         	ljmp	_main	;jump to C main() function
  1427                           
  1428                           	psect	bssCOMMON
  1429     007C                     __pbssCOMMON:
  1430     007C                     _eusartRxLastError:
  1431     007C                     	ds	1
  1432                           
  1433                           	psect	bssBANK0
  1434     0020                     __pbssBANK0:
  1435     0020                     _MSGRX:
  1436     0020                     	ds	22
  1437     0036                     _CMDRECORD:
  1438     0036                     	ds	1
  1439     0037                     _CMDRECEIV:
  1440     0037                     	ds	1
  1441     0038                     _ISRCVD:
  1442     0038                     	ds	1
  1443     0039                     _NPROX:
  1444     0039                     	ds	2
  1445     003B                     _NAGEN:
  1446     003B                     	ds	2
  1447                           
  1448                           	psect	clrtext
  1449     047D                     clear_ram0:	
  1450                           ;	Called with FSR0 containing the base address, and
  1451                           ;	WREG with the size to clear
  1452                           
  1453     047D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1454     047E                     clrloop0:
  1455     047E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1456     047F  3101               	addfsr 0,1
  1457     0480  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1458     0481  2C7E               	goto	clrloop0	;have we reached the end yet?
  1459     0482  3400               	retlw	0	;all done for this memory range, return
  1460                           
  1461                           	psect	cstackCOMMON
  1462     0070                     __pcstackCOMMON:
  1463     0070                     ?_OSCILLATOR_Initialize:
  1464     0070                     ?_WDT_Initialize:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467     0070                     ?_EUSART_Initialize:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470     0070                     ?_EUSART_SetFramingErrorHandler:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476     0070                     ?_EUSART_SetErrorHandler:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479     0070                     ?_PIN_MANAGER_Initialize:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482     0070                     ?_SYSTEM_Initialize:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485     0070                     ?_DATAEE_ReadByte:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488     0070                     ?_EUSART_is_rx_ready:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491     0070                     ?_EUSART_Read:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494     0070                     ?_EUSART_Write:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497     0070                     ?_MSGFUNC:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500     0070                     ?_main:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503     0070                     ?___bmul:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506     0070                     ?___wmul:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509     0070                     DATAEE_ReadByte@bAdd:	
  1510                           ; 2 bytes @ 0x0
  1511                           
  1512     0070                     EUSART_Write@txData:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515     0070                     ___bmul@multiplicand:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1522                           ; 2 bytes @ 0x0
  1523                           
  1524     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1525                           ; 2 bytes @ 0x0
  1526                           
  1527     0070                     ___wmul@multiplier:	
  1528                           ; 2 bytes @ 0x0
  1529                           
  1530     0070                     ??_OSCILLATOR_Initialize:	
  1531                           ; 2 bytes @ 0x0
  1532                           
  1533     0070                     ??_WDT_Initialize:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536     0070                     ??_PIN_MANAGER_Initialize:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539     0070                     ??_DATAEE_ReadByte:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542     0070                     ??_EUSART_is_rx_ready:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545     0070                     ??_EUSART_Read:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548     0070                     ??_EUSART_Write:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551                           
  1552                           ; 1 bytes @ 0x0
  1553     0070                     	ds	1
  1554     0071                     ?_MSGTXT:
  1555     0071                     ___bmul@product:	
  1556                           ; 1 bytes @ 0x1
  1557                           
  1558     0071                     MSGTXT@MSG:	
  1559                           ; 1 bytes @ 0x1
  1560                           
  1561     0071                     ??___bmul:	
  1562                           ; 2 bytes @ 0x1
  1563                           
  1564                           
  1565                           ; 1 bytes @ 0x1
  1566     0071                     	ds	1
  1567     0072                     ___bmul@multiplier:
  1568     0072                     ___wmul@multiplicand:	
  1569                           ; 1 bytes @ 0x2
  1570                           
  1571     0072                     ??_EUSART_Initialize:	
  1572                           ; 2 bytes @ 0x2
  1573                           
  1574     0072                     ??_EUSART_SetFramingErrorHandler:	
  1575                           ; 1 bytes @ 0x2
  1576                           
  1577     0072                     ??_EUSART_SetOverrunErrorHandler:	
  1578                           ; 1 bytes @ 0x2
  1579                           
  1580     0072                     ??_EUSART_SetErrorHandler:	
  1581                           ; 1 bytes @ 0x2
  1582                           
  1583     0072                     ??_SYSTEM_Initialize:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586                           
  1587                           ; 1 bytes @ 0x2
  1588     0072                     	ds	1
  1589     0073                     ?_DATAEE_WriteByte:
  1590     0073                     DATAEE_WriteByte@bData:	
  1591                           ; 1 bytes @ 0x3
  1592                           
  1593     0073                     ??_MSGTXT:	
  1594                           ; 1 bytes @ 0x3
  1595                           
  1596                           
  1597                           ; 1 bytes @ 0x3
  1598     0073                     	ds	1
  1599     0074                     DATAEE_WriteByte@bAdd:
  1600     0074                     ___wmul@product:	
  1601                           ; 1 bytes @ 0x4
  1602                           
  1603     0074                     ??_DATAEE_WriteByte:	
  1604                           ; 2 bytes @ 0x4
  1605                           
  1606     0074                     ??___wmul:	
  1607                           ; 1 bytes @ 0x4
  1608                           
  1609                           
  1610                           ; 1 bytes @ 0x4
  1611     0074                     	ds	1
  1612     0075                     DATAEE_WriteByte@GIEBitValue:
  1613                           
  1614                           ; 1 bytes @ 0x5
  1615     0075                     	ds	1
  1616     0076                     ??_MSGFUNC:
  1617                           
  1618                           ; 1 bytes @ 0x6
  1619     0076                     	ds	2
  1620     0078                     ??_main:
  1621                           
  1622                           	psect	cstackBANK0
  1623     003D                     __pcstackBANK0:	
  1624                           ; 1 bytes @ 0x8
  1625                           
  1626     003D                     MSGFUNC@Bposi:
  1627                           
  1628                           ; 2 bytes @ 0x0
  1629     003D                     	ds	2
  1630     003F                     MSGFUNC@AUX1:
  1631                           
  1632                           ; 2 bytes @ 0x2
  1633     003F                     	ds	2
  1634     0041                     MSGFUNC@letra:
  1635                           
  1636                           ; 1 bytes @ 0x4
  1637     0041                     	ds	1
  1638     0042                     MSGFUNC@MSGATIV:
  1639                           
  1640                           ; 1 bytes @ 0x5
  1641     0042                     	ds	1
  1642     0043                     MSGFUNC@CONT:
  1643                           
  1644                           ; 1 bytes @ 0x6
  1645     0043                     	ds	1
  1646     0044                     MSGFUNC@j:
  1647                           
  1648                           ; 2 bytes @ 0x7
  1649     0044                     	ds	2
  1650     0046                     MSGFUNC@i:
  1651                           
  1652                           ; 2 bytes @ 0x9
  1653     0046                     	ds	2
  1654     0048                     MSGFUNC@AUX1_420:
  1655                           
  1656                           ; 2 bytes @ 0xB
  1657     0048                     	ds	2
  1658     004A                     MSGFUNC@AUX1_430:
  1659                           
  1660                           ; 2 bytes @ 0xD
  1661     004A                     	ds	2
  1662     004C                     MSGFUNC@j_431:
  1663                           
  1664                           ; 2 bytes @ 0xF
  1665     004C                     	ds	2
  1666     004E                     MSGFUNC@j_428:
  1667                           
  1668                           ; 2 bytes @ 0x11
  1669     004E                     	ds	2
  1670     0050                     MSGFUNC@posi:
  1671                           
  1672                           ; 2 bytes @ 0x13
  1673     0050                     	ds	2
  1674                           
  1675                           	psect	maintext
  1676     0560                     __pmaintext:	
  1677 ;;
  1678 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1679 ;;
  1680 ;; *************** function _main *****************
  1681 ;; Defined at:
  1682 ;;		line 198 in file "main.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : B1F/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1696 ;;      Params:         0       0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels required when called: 3
  1702 ;; This function calls:
  1703 ;;		_EUSART_Read
  1704 ;;		_EUSART_Write
  1705 ;;		_EUSART_is_rx_ready
  1706 ;;		_MSGFUNC
  1707 ;;		_MSGTXT
  1708 ;;		_SYSTEM_Initialize
  1709 ;; This function is called by:
  1710 ;;		Startup code after reset
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714     0560                     _main:	
  1715                           ;psect for function _main
  1716                           
  1717     0560                     l1718:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1720                           
  1721                           
  1722                           ;main.c: 201:     SYSTEM_Initialize();
  1723     0560  3184  24A0  3185   	fcall	_SYSTEM_Initialize
  1724     0563                     l1720:
  1725                           
  1726                           ;main.c: 218:     MSGTXT(MSG0);
  1727     0563  3000               	movlw	low (_MSG0| (0+32768))
  1728     0564  00F1               	movwf	MSGTXT@MSG
  1729     0565  3088               	movlw	high (_MSG0| (0+32768))
  1730     0566  00F2               	movwf	MSGTXT@MSG+1
  1731     0567  3184  24E7  3185   	fcall	_MSGTXT
  1732     056A                     l1722:
  1733                           
  1734                           ;main.c: 221:     {;main.c: 222:         if(EUSART_is_rx_ready()){
  1735     056A  3184  2468  3185   	fcall	_EUSART_is_rx_ready
  1736     056D  3A00               	xorlw	0
  1737     056E  1903               	skipnz
  1738     056F  2D71               	goto	u771
  1739     0570  2D72               	goto	u770
  1740     0571                     u771:
  1741     0571  2D8D               	goto	l1738
  1742     0572                     u770:
  1743     0572                     l1724:
  1744                           
  1745                           ;main.c: 223:             ISRCVD = EUSART_Read();
  1746     0572  3184  24AD  3185   	fcall	_EUSART_Read
  1747     0575  0020               	movlb	0	; select bank0
  1748     0576  00B8               	movwf	_ISRCVD
  1749     0577                     l1726:
  1750                           
  1751                           ;main.c: 224:             if(CMDRECEIV){
  1752     0577  0837               	movf	_CMDRECEIV,w
  1753     0578  1903               	btfsc	3,2
  1754     0579  2D7B               	goto	u781
  1755     057A  2D7C               	goto	u780
  1756     057B                     u781:
  1757     057B  2D6A               	goto	l1722
  1758     057C                     u780:
  1759     057C                     l1728:
  1760                           
  1761                           ;main.c: 225:                 if(ISRCVD == 0x0D){
  1762     057C  300D               	movlw	13
  1763     057D  0638               	xorwf	_ISRCVD,w
  1764     057E  1D03               	btfss	3,2
  1765     057F  2D81               	goto	u791
  1766     0580  2D82               	goto	u790
  1767     0581                     u791:
  1768     0581  2D87               	goto	l1734
  1769     0582                     u790:
  1770     0582                     l1730:
  1771                           
  1772                           ;main.c: 227:                     CMDRECEIV = 0;
  1773     0582  01B7               	clrf	_CMDRECEIV
  1774     0583                     l1732:
  1775                           
  1776                           ;main.c: 228:                     MSGFUNC();
  1777     0583  3185  25AD  3185   	fcall	_MSGFUNC
  1778                           
  1779                           ;main.c: 229:                 }else{
  1780     0586  2D6A               	goto	l1722
  1781     0587                     l1734:
  1782                           
  1783                           ;main.c: 231:                     CMDRECEIV = 0;
  1784     0587  01B7               	clrf	_CMDRECEIV
  1785     0588                     l1736:
  1786                           
  1787                           ;main.c: 232:                     EUSART_Write(0x0D);
  1788     0588  300D               	movlw	13
  1789     0589  3184  248A  3185   	fcall	_EUSART_Write
  1790     058C  2D6A               	goto	l1722
  1791     058D                     l1738:
  1792                           
  1793                           ;main.c: 236:                 if(ISRCVD == 'A' || ISRCVD == 'L' || ISRCVD == 'P' || ISRC
      +                          VD == 'R'){
  1794     058D  3041               	movlw	65
  1795     058E  0020               	movlb	0	; select bank0
  1796     058F  0638               	xorwf	_ISRCVD,w
  1797     0590  1903               	btfsc	3,2
  1798     0591  2D93               	goto	u801
  1799     0592  2D94               	goto	u800
  1800     0593                     u801:
  1801     0593  2DA6               	goto	l305
  1802     0594                     u800:
  1803     0594                     l1740:
  1804     0594  304C               	movlw	76
  1805     0595  0638               	xorwf	_ISRCVD,w
  1806     0596  1903               	btfsc	3,2
  1807     0597  2D99               	goto	u811
  1808     0598  2D9A               	goto	u810
  1809     0599                     u811:
  1810     0599  2DA6               	goto	l305
  1811     059A                     u810:
  1812     059A                     l1742:
  1813     059A  3050               	movlw	80
  1814     059B  0638               	xorwf	_ISRCVD,w
  1815     059C  1903               	btfsc	3,2
  1816     059D  2D9F               	goto	u821
  1817     059E  2DA0               	goto	u820
  1818     059F                     u821:
  1819     059F  2DA6               	goto	l305
  1820     05A0                     u820:
  1821     05A0                     l1744:
  1822     05A0  3052               	movlw	82
  1823     05A1  0638               	xorwf	_ISRCVD,w
  1824     05A2  1D03               	btfss	3,2
  1825     05A3  2DA5               	goto	u831
  1826     05A4  2DA6               	goto	u830
  1827     05A5                     u831:
  1828     05A5  2D6A               	goto	l1722
  1829     05A6                     u830:
  1830     05A6                     l305:
  1831                           
  1832                           ;main.c: 238:                     CMDRECEIV = 1;
  1833     05A6  3001               	movlw	1
  1834     05A7  00B7               	movwf	_CMDRECEIV
  1835     05A8                     l1746:
  1836                           
  1837                           ;main.c: 239:                     CMDRECORD = ISRCVD;
  1838     05A8  0838               	movf	_ISRCVD,w
  1839     05A9  00B6               	movwf	_CMDRECORD
  1840     05AA  2D6A               	goto	l1722
  1841     05AB  3180  2802         	ljmp	start
  1842     05AD                     __end_of_main:
  1843                           
  1844                           	psect	text1
  1845     04A0                     __ptext1:	
  1846 ;; *************** function _SYSTEM_Initialize *****************
  1847 ;; Defined at:
  1848 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1862 ;;      Params:         0       0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0
  1865 ;;      Totals:         0       0       0       0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 2
  1869 ;; This function calls:
  1870 ;;		_EUSART_Initialize
  1871 ;;		_OSCILLATOR_Initialize
  1872 ;;		_PIN_MANAGER_Initialize
  1873 ;;		_WDT_Initialize
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879     04A0                     _SYSTEM_Initialize:	
  1880                           ;psect for function _SYSTEM_Initialize
  1881                           
  1882     04A0                     l1536:	
  1883                           ;incstack = 0
  1884                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1885                           
  1886                           
  1887                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1888     04A0  3184  24CF  3184   	fcall	_PIN_MANAGER_Initialize
  1889                           
  1890                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1891     04A3  3184  2483  3184   	fcall	_OSCILLATOR_Initialize
  1892                           
  1893                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1894     04A6  3184  2464  3184   	fcall	_WDT_Initialize
  1895     04A9                     l1538:
  1896                           
  1897                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  1898     04A9  3185  253F  3184   	fcall	_EUSART_Initialize
  1899     04AC                     l47:
  1900     04AC  0008               	return
  1901     04AD                     __end_of_SYSTEM_Initialize:
  1902                           
  1903                           	psect	text2
  1904     0464                     __ptext2:	
  1905 ;; *************** function _WDT_Initialize *****************
  1906 ;; Defined at:
  1907 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		None
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1921 ;;      Params:         0       0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0
  1924 ;;      Totals:         0       0       0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_SYSTEM_Initialize
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934     0464                     _WDT_Initialize:	
  1935                           ;psect for function _WDT_Initialize
  1936                           
  1937     0464                     l1430:	
  1938                           ;incstack = 0
  1939                           ; Regs used in _WDT_Initialize: []
  1940                           
  1941                           
  1942                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1943     0464  3016               	movlw	22
  1944     0465  0021               	movlb	1	; select bank1
  1945     0466  0097               	movwf	23	;volatile
  1946     0467                     l53:
  1947     0467  0008               	return
  1948     0468                     __end_of_WDT_Initialize:
  1949                           
  1950                           	psect	text3
  1951     04CF                     __ptext3:	
  1952 ;; *************** function _PIN_MANAGER_Initialize *****************
  1953 ;; Defined at:
  1954 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		status,2
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1968 ;;      Params:         0       0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_SYSTEM_Initialize
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981     04CF                     _PIN_MANAGER_Initialize:	
  1982                           ;psect for function _PIN_MANAGER_Initialize
  1983                           
  1984     04CF                     l1410:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  1987                           
  1988                           
  1989                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1990     04CF  0022               	movlb	2	; select bank2
  1991     04D0  018C               	clrf	12	;volatile
  1992                           
  1993                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1994     04D1  018D               	clrf	13	;volatile
  1995     04D2                     l1412:
  1996                           
  1997                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  1998     04D2  30FF               	movlw	255
  1999     04D3  0021               	movlb	1	; select bank1
  2000     04D4  008C               	movwf	12	;volatile
  2001     04D5                     l1414:
  2002                           
  2003                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2004     04D5  30FF               	movlw	255
  2005     04D6  008D               	movwf	13	;volatile
  2006     04D7                     l1416:
  2007                           
  2008                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xDA;
  2009     04D7  30DA               	movlw	218
  2010     04D8  0023               	movlb	3	; select bank3
  2011     04D9  008D               	movwf	13	;volatile
  2012     04DA                     l1418:
  2013                           
  2014                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2015     04DA  301F               	movlw	31
  2016     04DB  008C               	movwf	12	;volatile
  2017                           
  2018                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2019     04DC  0024               	movlb	4	; select bank4
  2020     04DD  018D               	clrf	13	;volatile
  2021                           
  2022                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2023     04DE  018C               	clrf	12	;volatile
  2024     04DF                     l1420:
  2025                           
  2026                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2027     04DF  0021               	movlb	1	; select bank1
  2028     04E0  1795               	bsf	21,7	;volatile
  2029     04E1                     l1422:
  2030                           
  2031                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x80;
  2032     04E1  3080               	movlw	128
  2033     04E2  0022               	movlb	2	; select bank2
  2034     04E3  009D               	movwf	29	;volatile
  2035     04E4                     l1424:
  2036                           
  2037                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  2038     04E4  3001               	movlw	1
  2039     04E5  009E               	movwf	30	;volatile
  2040     04E6                     l25:
  2041     04E6  0008               	return
  2042     04E7                     __end_of_PIN_MANAGER_Initialize:
  2043                           
  2044                           	psect	text4
  2045     0483                     __ptext4:	
  2046 ;; *************** function _OSCILLATOR_Initialize *****************
  2047 ;; Defined at:
  2048 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		status,2
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2062 ;;      Params:         0       0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0
  2065 ;;      Totals:         0       0       0       0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_SYSTEM_Initialize
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075     0483                     _OSCILLATOR_Initialize:	
  2076                           ;psect for function _OSCILLATOR_Initialize
  2077                           
  2078     0483                     l1426:	
  2079                           ;incstack = 0
  2080                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2081                           
  2082                           
  2083                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  2084     0483  3070               	movlw	112
  2085     0484  0021               	movlb	1	; select bank1
  2086     0485  0099               	movwf	25	;volatile
  2087     0486                     l1428:
  2088                           
  2089                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  2090     0486  0198               	clrf	24	;volatile
  2091                           
  2092                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2093     0487  0022               	movlb	2	; select bank2
  2094     0488  0196               	clrf	22	;volatile
  2095     0489                     l50:
  2096     0489  0008               	return
  2097     048A                     __end_of_OSCILLATOR_Initialize:
  2098                           
  2099                           	psect	text5
  2100     053F                     __ptext5:	
  2101 ;; *************** function _EUSART_Initialize *****************
  2102 ;; Defined at:
  2103 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, pclath, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2117 ;;      Params:         0       0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 1
  2124 ;; This function calls:
  2125 ;;		_EUSART_SetErrorHandler
  2126 ;;		_EUSART_SetFramingErrorHandler
  2127 ;;		_EUSART_SetOverrunErrorHandler
  2128 ;; This function is called by:
  2129 ;;		_SYSTEM_Initialize
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133     053F                     _EUSART_Initialize:	
  2134                           ;psect for function _EUSART_Initialize
  2135                           
  2136     053F                     l1432:	
  2137                           ;incstack = 0
  2138                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2139                           
  2140                           
  2141                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  2142     053F  3008               	movlw	8
  2143     0540  0023               	movlb	3	; select bank3
  2144     0541  009F               	movwf	31	;volatile
  2145                           
  2146                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  2147     0542  3090               	movlw	144
  2148     0543  009D               	movwf	29	;volatile
  2149                           
  2150                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  2151     0544  3024               	movlw	36
  2152     0545  009E               	movwf	30	;volatile
  2153                           
  2154                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  2155     0546  3022               	movlw	34
  2156     0547  009B               	movwf	27	;volatile
  2157     0548                     l1434:
  2158                           
  2159                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  2160     0548  019C               	clrf	28	;volatile
  2161     0549                     l1436:
  2162                           
  2163                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2164     0549  3000               	movlw	0
  2165     054A  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2166     054B  3000               	movlw	0
  2167     054C  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2168     054D  3184  246D  3185   	fcall	_EUSART_SetFramingErrorHandler
  2169     0550                     l1438:
  2170                           
  2171                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2172     0550  3000               	movlw	0
  2173     0551  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2174     0552  3000               	movlw	0
  2175     0553  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2176     0554  3184  2472  3185   	fcall	_EUSART_SetOverrunErrorHandler
  2177     0557                     l1440:
  2178                           
  2179                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2180     0557  3000               	movlw	0
  2181     0558  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  2182     0559  3000               	movlw	0
  2183     055A  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2184     055B  3184  2477  3185   	fcall	_EUSART_SetErrorHandler
  2185     055E                     l1442:
  2186                           
  2187                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  2188     055E  01FC               	clrf	_eusartRxLastError	;volatile
  2189     055F                     l146:
  2190     055F  0008               	return
  2191     0560                     __end_of_EUSART_Initialize:
  2192                           
  2193                           	psect	text6
  2194     0472                     __ptext6:	
  2195 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2196 ;; Defined at:
  2197 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2200 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2212 ;;      Params:         2       0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0
  2215 ;;      Totals:         2       0       0       0       0       0
  2216 ;;Total ram usage:        2 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_EUSART_Initialize
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225     0472                     _EUSART_SetOverrunErrorHandler:	
  2226                           ;psect for function _EUSART_SetOverrunErrorHandler
  2227                           
  2228     0472                     l1402:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2231                           
  2232                           
  2233                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  2234     0472  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2235     0473  00F9               	movwf	_EUSART_OverrunErrorHandler+1
  2236     0474  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2237     0475  00F8               	movwf	_EUSART_OverrunErrorHandler
  2238     0476                     l188:
  2239     0476  0008               	return
  2240     0477                     __end_of_EUSART_SetOverrunErrorHandler:
  2241                           
  2242                           	psect	text7
  2243     046D                     __ptext7:	
  2244 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2245 ;; Defined at:
  2246 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2249 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2261 ;;      Params:         2       0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0
  2264 ;;      Totals:         2       0       0       0       0       0
  2265 ;;Total ram usage:        2 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_EUSART_Initialize
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274     046D                     _EUSART_SetFramingErrorHandler:	
  2275                           ;psect for function _EUSART_SetFramingErrorHandler
  2276                           
  2277     046D                     l1400:	
  2278                           ;incstack = 0
  2279                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2280                           
  2281                           
  2282                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  2283     046D  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2284     046E  00FB               	movwf	_EUSART_FramingErrorHandler+1
  2285     046F  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2286     0470  00FA               	movwf	_EUSART_FramingErrorHandler
  2287     0471                     l185:
  2288     0471  0008               	return
  2289     0472                     __end_of_EUSART_SetFramingErrorHandler:
  2290                           
  2291                           	psect	text8
  2292     0477                     __ptext8:	
  2293 ;; *************** function _EUSART_SetErrorHandler *****************
  2294 ;; Defined at:
  2295 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2298 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2310 ;;      Params:         2       0       0       0       0       0
  2311 ;;      Locals:         0       0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0
  2313 ;;      Totals:         2       0       0       0       0       0
  2314 ;;Total ram usage:        2 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_EUSART_Initialize
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323     0477                     _EUSART_SetErrorHandler:	
  2324                           ;psect for function _EUSART_SetErrorHandler
  2325                           
  2326     0477                     l1404:	
  2327                           ;incstack = 0
  2328                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2329                           
  2330                           
  2331                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  2332     0477  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2333     0478  0020               	movlb	0	; select bank0
  2334     0479  00D3               	movwf	_EUSART_ErrorHandler+1
  2335     047A  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2336     047B  00D2               	movwf	_EUSART_ErrorHandler
  2337     047C                     l191:
  2338     047C  0008               	return
  2339     047D                     __end_of_EUSART_SetErrorHandler:
  2340                           
  2341                           	psect	text9
  2342     05AD                     __ptext9:	
  2343 ;; *************** function _MSGFUNC *****************
  2344 ;; Defined at:
  2345 ;;		line 24 in file "main.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  Bposi           2    0[BANK0 ] int 
  2350 ;;  letra           1    4[BANK0 ] unsigned char 
  2351 ;;  AUX1            2    2[BANK0 ] int 
  2352 ;;  MSGATIV         1    5[BANK0 ] _Bool 
  2353 ;;  j               2   15[BANK0 ] int 
  2354 ;;  j               2   17[BANK0 ] int 
  2355 ;;  j               2    7[BANK0 ] int 
  2356 ;;  i               2    9[BANK0 ] int 
  2357 ;;  AUX1            2   13[BANK0 ] int 
  2358 ;;  posi            2   19[BANK0 ] int 
  2359 ;;  AUX1            2   11[BANK0 ] int 
  2360 ;;  CONT            1    6[BANK0 ] _Bool 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2370 ;;      Params:         0       0       0       0       0       0
  2371 ;;      Locals:         0      21       0       0       0       0
  2372 ;;      Temps:          2       0       0       0       0       0
  2373 ;;      Totals:         2      21       0       0       0       0
  2374 ;;Total ram usage:       23 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; Hardware stack levels required when called: 2
  2377 ;; This function calls:
  2378 ;;		_DATAEE_ReadByte
  2379 ;;		_DATAEE_WriteByte
  2380 ;;		_EUSART_Read
  2381 ;;		_EUSART_Write
  2382 ;;		_EUSART_is_rx_ready
  2383 ;;		_MSGTXT
  2384 ;;		___bmul
  2385 ;;		___wmul
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391     05AD                     _MSGFUNC:	
  2392                           ;psect for function _MSGFUNC
  2393                           
  2394     05AD                     l1540:	
  2395                           ;incstack = 0
  2396                           ; Regs used in _MSGFUNC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2397                           
  2398                           
  2399                           ;main.c: 25:     switch(CMDRECORD){
  2400     05AD  2FE4               	goto	l1716
  2401     05AE                     l1542:
  2402                           
  2403                           ;main.c: 28:             if(NAGEN == 0 || DATAEE_ReadByte(0) == '$'){
  2404     05AE  083B               	movf	_NAGEN,w
  2405     05AF  043C               	iorwf	_NAGEN+1,w
  2406     05B0  1903               	btfsc	3,2
  2407     05B1  2DB3               	goto	u571
  2408     05B2  2DB4               	goto	u570
  2409     05B3                     u571:
  2410     05B3  2DBD               	goto	l1546
  2411     05B4                     u570:
  2412     05B4                     l1544:
  2413     05B4  3000               	movlw	0
  2414     05B5  3184  2494  3185   	fcall	_DATAEE_ReadByte
  2415     05B8  3A24               	xorlw	36
  2416     05B9  1D03               	skipz
  2417     05BA  2DBC               	goto	u581
  2418     05BB  2DBD               	goto	u580
  2419     05BC                     u581:
  2420     05BC  2DC8               	goto	l1550
  2421     05BD                     u580:
  2422     05BD                     l1546:
  2423                           
  2424                           ;main.c: 31:                 MSGTXT(MSG2);
  2425     05BD  30C1               	movlw	low (_MSG2| (0+32768))
  2426     05BE  00F1               	movwf	MSGTXT@MSG
  2427     05BF  3088               	movlw	high (_MSG2| (0+32768))
  2428     05C0  00F2               	movwf	MSGTXT@MSG+1
  2429     05C1  3184  24E7  3185   	fcall	_MSGTXT
  2430     05C4                     l1548:
  2431                           
  2432                           ;main.c: 32:                 NAGEN = 0;
  2433     05C4  0020               	movlb	0	; select bank0
  2434     05C5  01BB               	clrf	_NAGEN
  2435     05C6  01BC               	clrf	_NAGEN+1
  2436                           
  2437                           ;main.c: 33:             }else{
  2438     05C7  2E22               	goto	l1580
  2439     05C8                     l1550:
  2440                           
  2441                           ;main.c: 34:                 MSGTXT(MSG1);
  2442     05C8  30DD               	movlw	low (_MSG1| (0+32768))
  2443     05C9  00F1               	movwf	MSGTXT@MSG
  2444     05CA  3088               	movlw	high (_MSG1| (0+32768))
  2445     05CB  00F2               	movwf	MSGTXT@MSG+1
  2446     05CC  3184  24E7  3185   	fcall	_MSGTXT
  2447     05CF                     l1552:
  2448                           
  2449                           ;main.c: 37:                 for(int j=0;j<NAGEN;j++){
  2450     05CF  0020               	movlb	0	; select bank0
  2451     05D0  01C4               	clrf	MSGFUNC@j
  2452     05D1  01C5               	clrf	MSGFUNC@j+1
  2453     05D2  2E14               	goto	l248
  2454     05D3                     l1554:
  2455                           
  2456                           ;main.c: 38:                     int AUX1 = 22 * j;
  2457     05D3  0020               	movlb	0	; select bank0
  2458     05D4  0845               	movf	MSGFUNC@j+1,w
  2459     05D5  00F1               	movwf	___wmul@multiplier+1
  2460     05D6  0844               	movf	MSGFUNC@j,w
  2461     05D7  00F0               	movwf	___wmul@multiplier
  2462     05D8  3016               	movlw	22
  2463     05D9  00F2               	movwf	___wmul@multiplicand
  2464     05DA  3000               	movlw	0
  2465     05DB  00F3               	movwf	___wmul@multiplicand+1
  2466     05DC  3185  2520  3185   	fcall	___wmul
  2467     05DF  0871               	movf	?___wmul+1,w
  2468     05E0  0020               	movlb	0	; select bank0
  2469     05E1  00C0               	movwf	MSGFUNC@AUX1+1
  2470     05E2  0870               	movf	?___wmul,w
  2471     05E3  00BF               	movwf	MSGFUNC@AUX1
  2472     05E4                     l1556:
  2473                           
  2474                           ;main.c: 39:                     _Bool MSGATIV = 1;
  2475     05E4  3001               	movlw	1
  2476     05E5  00C2               	movwf	MSGFUNC@MSGATIV
  2477                           
  2478                           ;main.c: 41:                     while(MSGATIV){
  2479     05E6  2E0B               	goto	l1576
  2480     05E7                     l1558:
  2481                           
  2482                           ;main.c: 42:                         ISRCVD = (uint8_t) DATAEE_ReadByte((uint8_t)AUX1);
  2483     05E7  083F               	movf	MSGFUNC@AUX1,w
  2484     05E8  3184  2494  3185   	fcall	_DATAEE_ReadByte
  2485     05EB  0020               	movlb	0	; select bank0
  2486     05EC  00B8               	movwf	_ISRCVD
  2487     05ED                     l1560:
  2488                           
  2489                           ;main.c: 43:                         if(ISRCVD == 0x0D){
  2490     05ED  300D               	movlw	13
  2491     05EE  0638               	xorwf	_ISRCVD,w
  2492     05EF  1D03               	btfss	3,2
  2493     05F0  2DF2               	goto	u591
  2494     05F1  2DF3               	goto	u590
  2495     05F2                     u591:
  2496     05F2  2DFA               	goto	l1566
  2497     05F3                     u590:
  2498     05F3                     l1562:
  2499                           
  2500                           ;main.c: 44:                             EUSART_Write(0x0D);
  2501     05F3  300D               	movlw	13
  2502     05F4  3184  248A  3185   	fcall	_EUSART_Write
  2503     05F7                     l1564:
  2504                           
  2505                           ;main.c: 46:                             MSGATIV = 0;
  2506     05F7  0020               	movlb	0	; select bank0
  2507     05F8  01C2               	clrf	MSGFUNC@MSGATIV
  2508                           
  2509                           ;main.c: 47:                         }else if(ISRCVD == '$'){
  2510     05F9  2E0B               	goto	l1576
  2511     05FA                     l1566:
  2512     05FA  3024               	movlw	36
  2513     05FB  0638               	xorwf	_ISRCVD,w
  2514     05FC  1D03               	btfss	3,2
  2515     05FD  2DFF               	goto	u601
  2516     05FE  2E00               	goto	u600
  2517     05FF                     u601:
  2518     05FF  2E02               	goto	l1572
  2519     0600                     u600:
  2520     0600                     l1568:
  2521                           
  2522                           ;main.c: 50:                             CMDRECEIV = 0;
  2523     0600  01B7               	clrf	_CMDRECEIV
  2524                           
  2525                           ;main.c: 51:                             break;
  2526     0601  2E10               	goto	l1578
  2527     0602                     l1572:
  2528                           
  2529                           ;main.c: 55:                             EUSART_Write(ISRCVD);
  2530     0602  0838               	movf	_ISRCVD,w
  2531     0603  3184  248A  3185   	fcall	_EUSART_Write
  2532     0606                     l1574:
  2533                           
  2534                           ;main.c: 56:                             AUX1++;
  2535     0606  3001               	movlw	1
  2536     0607  0020               	movlb	0	; select bank0
  2537     0608  07BF               	addwf	MSGFUNC@AUX1,f
  2538     0609  3000               	movlw	0
  2539     060A  3DC0               	addwfc	MSGFUNC@AUX1+1,f
  2540     060B                     l1576:
  2541                           
  2542                           ;main.c: 41:                     while(MSGATIV){
  2543     060B  0842               	movf	MSGFUNC@MSGATIV,w
  2544     060C  1D03               	btfss	3,2
  2545     060D  2E0F               	goto	u611
  2546     060E  2E10               	goto	u610
  2547     060F                     u611:
  2548     060F  2DE7               	goto	l1558
  2549     0610                     u610:
  2550     0610                     l1578:
  2551                           
  2552                           ;main.c: 59:                 }
  2553     0610  3001               	movlw	1
  2554     0611  07C4               	addwf	MSGFUNC@j,f
  2555     0612  3000               	movlw	0
  2556     0613  3DC5               	addwfc	MSGFUNC@j+1,f
  2557     0614                     l248:
  2558     0614  0845               	movf	MSGFUNC@j+1,w
  2559     0615  3A80               	xorlw	128
  2560     0616  00F6               	movwf	??_MSGFUNC
  2561     0617  083C               	movf	_NAGEN+1,w
  2562     0618  3A80               	xorlw	128
  2563     0619  0276               	subwf	??_MSGFUNC,w
  2564     061A  1D03               	skipz
  2565     061B  2E1E               	goto	u625
  2566     061C  083B               	movf	_NAGEN,w
  2567     061D  0244               	subwf	MSGFUNC@j,w
  2568     061E                     u625:
  2569     061E  1C03               	skipc
  2570     061F  2E21               	goto	u621
  2571     0620  2E22               	goto	u620
  2572     0621                     u621:
  2573     0621  2DD3               	goto	l1554
  2574     0622                     u620:
  2575     0622                     l1580:
  2576                           
  2577                           ;main.c: 63:             CMDRECEIV = 0;
  2578     0622  0020               	movlb	0	; select bank0
  2579     0623  01B7               	clrf	_CMDRECEIV
  2580                           
  2581                           ;main.c: 64:             break;
  2582     0624  2FF3               	goto	l292
  2583     0625                     l1582:
  2584                           
  2585                           ;main.c: 67:             if(NAGEN<10){
  2586     0625  083C               	movf	_NAGEN+1,w
  2587     0626  3A80               	xorlw	128
  2588     0627  00F6               	movwf	??_MSGFUNC
  2589     0628  3080               	movlw	128
  2590     0629  0276               	subwf	??_MSGFUNC,w
  2591     062A  1D03               	skipz
  2592     062B  2E2E               	goto	u635
  2593     062C  300A               	movlw	10
  2594     062D  023B               	subwf	_NAGEN,w
  2595     062E                     u635:
  2596     062E  1803               	skipnc
  2597     062F  2E31               	goto	u631
  2598     0630  2E32               	goto	u630
  2599     0631                     u631:
  2600     0631  2F1C               	goto	l1654
  2601     0632                     u630:
  2602     0632                     l1584:
  2603                           
  2604                           ;main.c: 68:                 int AUX1 = 22 * NAGEN;
  2605     0632  0020               	movlb	0	; select bank0
  2606     0633  083C               	movf	_NAGEN+1,w
  2607     0634  00F1               	movwf	___wmul@multiplier+1
  2608     0635  083B               	movf	_NAGEN,w
  2609     0636  00F0               	movwf	___wmul@multiplier
  2610     0637  3016               	movlw	22
  2611     0638  00F2               	movwf	___wmul@multiplicand
  2612     0639  3000               	movlw	0
  2613     063A  00F3               	movwf	___wmul@multiplicand+1
  2614     063B  3185  2520  3185   	fcall	___wmul
  2615     063E  0871               	movf	?___wmul+1,w
  2616     063F  0020               	movlb	0	; select bank0
  2617     0640  00C9               	movwf	MSGFUNC@AUX1_420+1
  2618     0641  0870               	movf	?___wmul,w
  2619     0642  00C8               	movwf	MSGFUNC@AUX1_420
  2620     0643                     l1586:
  2621                           
  2622                           ;main.c: 69:                 int posi = 0;
  2623     0643  01D0               	clrf	MSGFUNC@posi
  2624     0644  01D1               	clrf	MSGFUNC@posi+1
  2625     0645                     l1588:
  2626                           
  2627                           ;main.c: 70:                 _Bool CONT = 1;
  2628     0645  3001               	movlw	1
  2629     0646  00C3               	movwf	MSGFUNC@CONT
  2630     0647                     l1590:
  2631                           
  2632                           ;main.c: 71:                 DATAEE_WriteByte((uint8_t)AUX1,'\0');
  2633     0647  01F3               	clrf	DATAEE_WriteByte@bData
  2634     0648  0848               	movf	MSGFUNC@AUX1_420,w
  2635     0649  3185  2502  3185   	fcall	_DATAEE_WriteByte
  2636     064C                     l1592:
  2637                           
  2638                           ;main.c: 72:                 AUX1++;
  2639     064C  3001               	movlw	1
  2640     064D  0020               	movlb	0	; select bank0
  2641     064E  07C8               	addwf	MSGFUNC@AUX1_420,f
  2642     064F  3000               	movlw	0
  2643     0650  3DC9               	addwfc	MSGFUNC@AUX1_420+1,f
  2644     0651                     l1594:
  2645                           
  2646                           ;main.c: 75:                 MSGTXT(MSG4);
  2647     0651  30F3               	movlw	low (_MSG4| (0+32768))
  2648     0652  00F1               	movwf	MSGTXT@MSG
  2649     0653  3088               	movlw	high (_MSG4| (0+32768))
  2650     0654  00F2               	movwf	MSGTXT@MSG+1
  2651     0655  3184  24E7  3185   	fcall	_MSGTXT
  2652                           
  2653                           ;main.c: 77:                 while(CONT){
  2654     0658  2EEA               	goto	l1636
  2655     0659                     l1596:
  2656                           
  2657                           ;main.c: 79:                     if(EUSART_is_rx_ready()){
  2658     0659  3184  2468  3185   	fcall	_EUSART_is_rx_ready
  2659     065C  3A00               	xorlw	0
  2660     065D  1903               	skipnz
  2661     065E  2E60               	goto	u641
  2662     065F  2E61               	goto	u640
  2663     0660                     u641:
  2664     0660  2EEA               	goto	l1636
  2665     0661                     u640:
  2666     0661                     l1598:
  2667                           
  2668                           ;main.c: 81:                         ISRCVD = EUSART_Read();
  2669     0661  3184  24AD  3185   	fcall	_EUSART_Read
  2670     0664  0020               	movlb	0	; select bank0
  2671     0665  00B8               	movwf	_ISRCVD
  2672     0666                     l1600:
  2673                           
  2674                           ;main.c: 82:                         if(ISRCVD == 0x0D || posi == 21){
  2675     0666  300D               	movlw	13
  2676     0667  0638               	xorwf	_ISRCVD,w
  2677     0668  1903               	btfsc	3,2
  2678     0669  2E6B               	goto	u651
  2679     066A  2E6C               	goto	u650
  2680     066B                     u651:
  2681     066B  2E73               	goto	l1604
  2682     066C                     u650:
  2683     066C                     l1602:
  2684     066C  3015               	movlw	21
  2685     066D  0650               	xorwf	MSGFUNC@posi,w
  2686     066E  0451               	iorwf	MSGFUNC@posi+1,w
  2687     066F  1D03               	btfss	3,2
  2688     0670  2E72               	goto	u661
  2689     0671  2E73               	goto	u660
  2690     0672                     u661:
  2691     0672  2EDA               	goto	l1632
  2692     0673                     u660:
  2693     0673                     l1604:
  2694                           
  2695                           ;main.c: 85:                             int Bposi = posi;
  2696     0673  0851               	movf	MSGFUNC@posi+1,w
  2697     0674  00BE               	movwf	MSGFUNC@Bposi+1
  2698     0675  0850               	movf	MSGFUNC@posi,w
  2699     0676  00BD               	movwf	MSGFUNC@Bposi
  2700                           
  2701                           ;main.c: 88:                             while(posi < 21){
  2702     0677  2E88               	goto	l1610
  2703     0678                     l1606:
  2704                           
  2705                           ;main.c: 89:                                 MSGRX.NAME[posi] = 0x00;
  2706     0678  3020               	movlw	low _MSGRX
  2707     0679  00F6               	movwf	??_MSGFUNC
  2708     067A  3000               	movlw	high _MSGRX
  2709     067B  00F7               	movwf	??_MSGFUNC+1
  2710     067C  0020               	movlb	0	; select bank0
  2711     067D  0850               	movf	MSGFUNC@posi,w
  2712     067E  0776               	addwf	??_MSGFUNC,w
  2713     067F  0086               	movwf	6
  2714     0680  0851               	movf	MSGFUNC@posi+1,w
  2715     0681  3D77               	addwfc	??_MSGFUNC+1,w
  2716     0682  0087               	movwf	7
  2717     0683  0181               	clrf	1
  2718     0684                     l1608:
  2719                           
  2720                           ;main.c: 90:                                 posi++;
  2721     0684  3001               	movlw	1
  2722     0685  07D0               	addwf	MSGFUNC@posi,f
  2723     0686  3000               	movlw	0
  2724     0687  3DD1               	addwfc	MSGFUNC@posi+1,f
  2725     0688                     l1610:
  2726                           
  2727                           ;main.c: 88:                             while(posi < 21){
  2728     0688  0851               	movf	MSGFUNC@posi+1,w
  2729     0689  3A80               	xorlw	128
  2730     068A  00F6               	movwf	??_MSGFUNC
  2731     068B  3080               	movlw	128
  2732     068C  0276               	subwf	??_MSGFUNC,w
  2733     068D  1D03               	skipz
  2734     068E  2E91               	goto	u675
  2735     068F  3015               	movlw	21
  2736     0690  0250               	subwf	MSGFUNC@posi,w
  2737     0691                     u675:
  2738     0691  1C03               	skipc
  2739     0692  2E94               	goto	u671
  2740     0693  2E95               	goto	u670
  2741     0694                     u671:
  2742     0694  2E78               	goto	l1606
  2743     0695                     u670:
  2744     0695                     l1612:
  2745                           
  2746                           ;main.c: 93:                             MSGRX.NAME[posi-1] = 0x0D;
  2747     0695  301F               	movlw	low (_MSGRX+65535)
  2748     0696  00F6               	movwf	??_MSGFUNC
  2749     0697  3000               	movlw	high (_MSGRX+65535)
  2750     0698  00F7               	movwf	??_MSGFUNC+1
  2751     0699  0020               	movlb	0	; select bank0
  2752     069A  0850               	movf	MSGFUNC@posi,w
  2753     069B  0776               	addwf	??_MSGFUNC,w
  2754     069C  0086               	movwf	6
  2755     069D  0851               	movf	MSGFUNC@posi+1,w
  2756     069E  3D77               	addwfc	??_MSGFUNC+1,w
  2757     069F  0087               	movwf	7
  2758     06A0  300D               	movlw	13
  2759     06A1  0081               	movwf	1
  2760     06A2                     l1614:
  2761                           
  2762                           ;main.c: 96:                             posi = Bposi;
  2763     06A2  083E               	movf	MSGFUNC@Bposi+1,w
  2764     06A3  00D1               	movwf	MSGFUNC@posi+1
  2765     06A4  083D               	movf	MSGFUNC@Bposi,w
  2766     06A5  00D0               	movwf	MSGFUNC@posi
  2767     06A6                     l1616:
  2768                           
  2769                           ;main.c: 99:                             MSGRX.NAME[posi] = 0x0D;
  2770     06A6  3020               	movlw	low _MSGRX
  2771     06A7  00F6               	movwf	??_MSGFUNC
  2772     06A8  3000               	movlw	high _MSGRX
  2773     06A9  00F7               	movwf	??_MSGFUNC+1
  2774     06AA  0850               	movf	MSGFUNC@posi,w
  2775     06AB  0776               	addwf	??_MSGFUNC,w
  2776     06AC  0086               	movwf	6
  2777     06AD  0851               	movf	MSGFUNC@posi+1,w
  2778     06AE  3D77               	addwfc	??_MSGFUNC+1,w
  2779     06AF  0087               	movwf	7
  2780     06B0  300D               	movlw	13
  2781     06B1  0081               	movwf	1
  2782     06B2                     l1618:
  2783                           
  2784                           ;main.c: 102:                             if(posi == 0){
  2785     06B2  0850               	movf	MSGFUNC@posi,w
  2786     06B3  0451               	iorwf	MSGFUNC@posi+1,w
  2787     06B4  1D03               	btfss	3,2
  2788     06B5  2EB7               	goto	u681
  2789     06B6  2EB8               	goto	u680
  2790     06B7                     u681:
  2791     06B7  2ECE               	goto	l1626
  2792     06B8                     u680:
  2793     06B8                     l1620:
  2794                           
  2795                           ;main.c: 105:                                 MSGRX.NAME[posi] = '$';
  2796     06B8  3020               	movlw	low _MSGRX
  2797     06B9  00F6               	movwf	??_MSGFUNC
  2798     06BA  3000               	movlw	high _MSGRX
  2799     06BB  00F7               	movwf	??_MSGFUNC+1
  2800     06BC  0850               	movf	MSGFUNC@posi,w
  2801     06BD  0776               	addwf	??_MSGFUNC,w
  2802     06BE  0086               	movwf	6
  2803     06BF  0851               	movf	MSGFUNC@posi+1,w
  2804     06C0  3D77               	addwfc	??_MSGFUNC+1,w
  2805     06C1  0087               	movwf	7
  2806     06C2  3024               	movlw	36
  2807     06C3  0081               	movwf	1
  2808     06C4                     l1622:
  2809                           
  2810                           ;main.c: 108:                                 MSGTXT(MSG5);
  2811     06C4  3058               	movlw	low (_MSG5| (0+32768))
  2812     06C5  00F1               	movwf	MSGTXT@MSG
  2813     06C6  3088               	movlw	high (_MSG5| (0+32768))
  2814     06C7  00F2               	movwf	MSGTXT@MSG+1
  2815     06C8  3184  24E7  3185   	fcall	_MSGTXT
  2816     06CB                     l1624:
  2817                           
  2818                           ;main.c: 111:                                 CONT = 0;
  2819     06CB  0020               	movlb	0	; select bank0
  2820     06CC  01C3               	clrf	MSGFUNC@CONT
  2821                           
  2822                           ;main.c: 114:                             }else{
  2823     06CD  2EEA               	goto	l1636
  2824     06CE                     l1626:
  2825                           
  2826                           ;main.c: 117:                                 NAGEN++;
  2827     06CE  3001               	movlw	1
  2828     06CF  07BB               	addwf	_NAGEN,f
  2829     06D0  3000               	movlw	0
  2830     06D1  3DBC               	addwfc	_NAGEN+1,f
  2831     06D2                     l1628:
  2832                           
  2833                           ;main.c: 118:                                 MSGTXT(MSGS);
  2834     06D2  30A2               	movlw	low (_MSGS| (0+32768))
  2835     06D3  00F1               	movwf	MSGTXT@MSG
  2836     06D4  3088               	movlw	high (_MSGS| (0+32768))
  2837     06D5  00F2               	movwf	MSGTXT@MSG+1
  2838     06D6  3184  24E7  3185   	fcall	_MSGTXT
  2839     06D9  2ECB               	goto	l1624
  2840     06DA                     l1632:
  2841                           
  2842                           ;main.c: 125:                             MSGRX.NAME[posi] = ISRCVD;
  2843     06DA  3020               	movlw	low _MSGRX
  2844     06DB  00F6               	movwf	??_MSGFUNC
  2845     06DC  3000               	movlw	high _MSGRX
  2846     06DD  00F7               	movwf	??_MSGFUNC+1
  2847     06DE  0850               	movf	MSGFUNC@posi,w
  2848     06DF  0776               	addwf	??_MSGFUNC,w
  2849     06E0  0086               	movwf	6
  2850     06E1  0851               	movf	MSGFUNC@posi+1,w
  2851     06E2  3D77               	addwfc	??_MSGFUNC+1,w
  2852     06E3  0087               	movwf	7
  2853     06E4  0838               	movf	_ISRCVD,w
  2854     06E5  0081               	movwf	1
  2855     06E6                     l1634:
  2856                           
  2857                           ;main.c: 126:                             posi++;
  2858     06E6  3001               	movlw	1
  2859     06E7  07D0               	addwf	MSGFUNC@posi,f
  2860     06E8  3000               	movlw	0
  2861     06E9  3DD1               	addwfc	MSGFUNC@posi+1,f
  2862     06EA                     l1636:
  2863                           
  2864                           ;main.c: 77:                 while(CONT){
  2865     06EA  0020               	movlb	0	; select bank0
  2866     06EB  0843               	movf	MSGFUNC@CONT,w
  2867     06EC  1D03               	btfss	3,2
  2868     06ED  2EEF               	goto	u691
  2869     06EE  2EF0               	goto	u690
  2870     06EF                     u691:
  2871     06EF  2E59               	goto	l1596
  2872     06F0                     u690:
  2873     06F0                     l1638:
  2874                           
  2875                           ;main.c: 131:                 for(int j=0;j<22;j++){
  2876     06F0  01CE               	clrf	MSGFUNC@j_428
  2877     06F1  01CF               	clrf	MSGFUNC@j_428+1
  2878     06F2                     l1644:
  2879                           
  2880                           ;main.c: 132:                     uint8_t letra = MSGRX.NAME[j];
  2881     06F2  3020               	movlw	low _MSGRX
  2882     06F3  00F6               	movwf	??_MSGFUNC
  2883     06F4  3000               	movlw	high _MSGRX
  2884     06F5  00F7               	movwf	??_MSGFUNC+1
  2885     06F6  0020               	movlb	0	; select bank0
  2886     06F7  084E               	movf	MSGFUNC@j_428,w
  2887     06F8  0776               	addwf	??_MSGFUNC,w
  2888     06F9  0086               	movwf	6
  2889     06FA  084F               	movf	MSGFUNC@j_428+1,w
  2890     06FB  3D77               	addwfc	??_MSGFUNC+1,w
  2891     06FC  0087               	movwf	7
  2892     06FD  0801               	movf	1,w
  2893     06FE  00C1               	movwf	MSGFUNC@letra
  2894     06FF                     l1646:
  2895                           
  2896                           ;main.c: 133:                     DATAEE_WriteByte((uint8_t)AUX1,letra);
  2897     06FF  0841               	movf	MSGFUNC@letra,w
  2898     0700  00F3               	movwf	DATAEE_WriteByte@bData
  2899     0701  0848               	movf	MSGFUNC@AUX1_420,w
  2900     0702  3185  2502  3185   	fcall	_DATAEE_WriteByte
  2901     0705                     l1648:
  2902                           
  2903                           ;main.c: 134:                     AUX1++;
  2904     0705  3001               	movlw	1
  2905     0706  0020               	movlb	0	; select bank0
  2906     0707  07C8               	addwf	MSGFUNC@AUX1_420,f
  2907     0708  3000               	movlw	0
  2908     0709  3DC9               	addwfc	MSGFUNC@AUX1_420+1,f
  2909     070A                     l1650:
  2910                           
  2911                           ;main.c: 135:                 }
  2912     070A  3001               	movlw	1
  2913     070B  07CE               	addwf	MSGFUNC@j_428,f
  2914     070C  3000               	movlw	0
  2915     070D  3DCF               	addwfc	MSGFUNC@j_428+1,f
  2916     070E                     l1652:
  2917     070E  084F               	movf	MSGFUNC@j_428+1,w
  2918     070F  3A80               	xorlw	128
  2919     0710  00F6               	movwf	??_MSGFUNC
  2920     0711  3080               	movlw	128
  2921     0712  0276               	subwf	??_MSGFUNC,w
  2922     0713  1D03               	skipz
  2923     0714  2F17               	goto	u705
  2924     0715  3016               	movlw	22
  2925     0716  024E               	subwf	MSGFUNC@j_428,w
  2926     0717                     u705:
  2927     0717  1C03               	skipc
  2928     0718  2F1A               	goto	u701
  2929     0719  2F1B               	goto	u700
  2930     071A                     u701:
  2931     071A  2EF2               	goto	l1644
  2932     071B                     u700:
  2933     071B  2E22               	goto	l1580
  2934     071C                     l1654:
  2935                           
  2936                           ;main.c: 140:                 MSGTXT(MSG7);
  2937     071C  307E               	movlw	low (_MSG7| (0+32768))
  2938     071D  00F1               	movwf	MSGTXT@MSG
  2939     071E  3088               	movlw	high (_MSG7| (0+32768))
  2940     071F  00F2               	movwf	MSGTXT@MSG+1
  2941     0720  3184  24E7  3185   	fcall	_MSGTXT
  2942     0723  2E22               	goto	l1580
  2943     0724                     l1658:
  2944                           
  2945                           ;main.c: 148:             if(NPROX<NAGEN){
  2946     0724  083A               	movf	_NPROX+1,w
  2947     0725  3A80               	xorlw	128
  2948     0726  00F6               	movwf	??_MSGFUNC
  2949     0727  083C               	movf	_NAGEN+1,w
  2950     0728  3A80               	xorlw	128
  2951     0729  0276               	subwf	??_MSGFUNC,w
  2952     072A  1D03               	skipz
  2953     072B  2F2E               	goto	u715
  2954     072C  083B               	movf	_NAGEN,w
  2955     072D  0239               	subwf	_NPROX,w
  2956     072E                     u715:
  2957     072E  1803               	skipnc
  2958     072F  2F31               	goto	u711
  2959     0730  2F32               	goto	u710
  2960     0731                     u711:
  2961     0731  2FA4               	goto	l1696
  2962     0732                     u710:
  2963     0732                     l1660:
  2964                           
  2965                           ;main.c: 149:                 MSGTXT(MSG3);
  2966     0732  3002               	movlw	low (_MSG3| (0+32768))
  2967     0733  00F1               	movwf	MSGTXT@MSG
  2968     0734  3089               	movlw	high (_MSG3| (0+32768))
  2969     0735  00F2               	movwf	MSGTXT@MSG+1
  2970     0736  3184  24E7  3185   	fcall	_MSGTXT
  2971     0739                     l1662:
  2972                           
  2973                           ;main.c: 150:                 int AUX1 = 22 * NPROX;
  2974     0739  0020               	movlb	0	; select bank0
  2975     073A  083A               	movf	_NPROX+1,w
  2976     073B  00F1               	movwf	___wmul@multiplier+1
  2977     073C  0839               	movf	_NPROX,w
  2978     073D  00F0               	movwf	___wmul@multiplier
  2979     073E  3016               	movlw	22
  2980     073F  00F2               	movwf	___wmul@multiplicand
  2981     0740  3000               	movlw	0
  2982     0741  00F3               	movwf	___wmul@multiplicand+1
  2983     0742  3185  2520  3185   	fcall	___wmul
  2984     0745  0871               	movf	?___wmul+1,w
  2985     0746  0020               	movlb	0	; select bank0
  2986     0747  00CB               	movwf	MSGFUNC@AUX1_430+1
  2987     0748  0870               	movf	?___wmul,w
  2988     0749  00CA               	movwf	MSGFUNC@AUX1_430
  2989     074A                     l1664:
  2990                           
  2991                           ;main.c: 151:                 for(int j=0; j<22;j++){
  2992     074A  01CC               	clrf	MSGFUNC@j_431
  2993     074B  01CD               	clrf	MSGFUNC@j_431+1
  2994     074C                     l1666:
  2995     074C  084D               	movf	MSGFUNC@j_431+1,w
  2996     074D  3A80               	xorlw	128
  2997     074E  00F6               	movwf	??_MSGFUNC
  2998     074F  3080               	movlw	128
  2999     0750  0276               	subwf	??_MSGFUNC,w
  3000     0751  1D03               	skipz
  3001     0752  2F55               	goto	u725
  3002     0753  3016               	movlw	22
  3003     0754  024C               	subwf	MSGFUNC@j_431,w
  3004     0755                     u725:
  3005     0755  1C03               	skipc
  3006     0756  2F58               	goto	u721
  3007     0757  2F59               	goto	u720
  3008     0758                     u721:
  3009     0758  2F5A               	goto	l1670
  3010     0759                     u720:
  3011     0759  2F87               	goto	l1692
  3012     075A                     l1670:
  3013                           
  3014                           ;main.c: 152:                     ISRCVD = (uint8_t) DATAEE_ReadByte((uint8_t)AUX1);
  3015     075A  0020               	movlb	0	; select bank0
  3016     075B  084A               	movf	MSGFUNC@AUX1_430,w
  3017     075C  3184  2494  3185   	fcall	_DATAEE_ReadByte
  3018     075F  0020               	movlb	0	; select bank0
  3019     0760  00B8               	movwf	_ISRCVD
  3020     0761                     l1672:
  3021                           
  3022                           ;main.c: 153:                     if(ISRCVD == 0x0D){
  3023     0761  300D               	movlw	13
  3024     0762  0638               	xorwf	_ISRCVD,w
  3025     0763  1D03               	btfss	3,2
  3026     0764  2F66               	goto	u731
  3027     0765  2F67               	goto	u730
  3028     0766                     u731:
  3029     0766  2F71               	goto	l1678
  3030     0767                     u730:
  3031     0767                     l1674:
  3032                           
  3033                           ;main.c: 154:                         EUSART_Write(0x0D);
  3034     0767  300D               	movlw	13
  3035     0768  3184  248A  3185   	fcall	_EUSART_Write
  3036     076B                     l1676:
  3037                           
  3038                           ;main.c: 155:                         j = 23;
  3039     076B  3017               	movlw	23
  3040     076C  0020               	movlb	0	; select bank0
  3041     076D  00CC               	movwf	MSGFUNC@j_431
  3042     076E  3000               	movlw	0
  3043     076F  00CD               	movwf	MSGFUNC@j_431+1
  3044                           
  3045                           ;main.c: 157:                     }else if(ISRCVD == '$'){
  3046     0770  2F82               	goto	l1688
  3047     0771                     l1678:
  3048     0771  3024               	movlw	36
  3049     0772  0638               	xorwf	_ISRCVD,w
  3050     0773  1D03               	btfss	3,2
  3051     0774  2F76               	goto	u741
  3052     0775  2F77               	goto	u740
  3053     0776                     u741:
  3054     0776  2F79               	goto	l1684
  3055     0777                     u740:
  3056     0777                     l1680:
  3057                           
  3058                           ;main.c: 160:                         CMDRECEIV = 0;
  3059     0777  01B7               	clrf	_CMDRECEIV
  3060                           
  3061                           ;main.c: 161:                         break;
  3062     0778  2F87               	goto	l1692
  3063     0779                     l1684:
  3064                           
  3065                           ;main.c: 164:                         EUSART_Write(ISRCVD);
  3066     0779  0838               	movf	_ISRCVD,w
  3067     077A  3184  248A  3185   	fcall	_EUSART_Write
  3068     077D                     l1686:
  3069                           
  3070                           ;main.c: 165:                         AUX1++;
  3071     077D  3001               	movlw	1
  3072     077E  0020               	movlb	0	; select bank0
  3073     077F  07CA               	addwf	MSGFUNC@AUX1_430,f
  3074     0780  3000               	movlw	0
  3075     0781  3DCB               	addwfc	MSGFUNC@AUX1_430+1,f
  3076     0782                     l1688:
  3077                           
  3078                           ;main.c: 167:                 }
  3079     0782  3001               	movlw	1
  3080     0783  07CC               	addwf	MSGFUNC@j_431,f
  3081     0784  3000               	movlw	0
  3082     0785  3DCD               	addwfc	MSGFUNC@j_431+1,f
  3083     0786  2F4C               	goto	l1666
  3084     0787                     l1692:
  3085                           
  3086                           ;main.c: 170:                 AUX1 = 22 * NPROX;
  3087     0787  0020               	movlb	0	; select bank0
  3088     0788  083A               	movf	_NPROX+1,w
  3089     0789  00F1               	movwf	___wmul@multiplier+1
  3090     078A  0839               	movf	_NPROX,w
  3091     078B  00F0               	movwf	___wmul@multiplier
  3092     078C  3016               	movlw	22
  3093     078D  00F2               	movwf	___wmul@multiplicand
  3094     078E  3000               	movlw	0
  3095     078F  00F3               	movwf	___wmul@multiplicand+1
  3096     0790  3185  2520  3185   	fcall	___wmul
  3097     0793  0871               	movf	?___wmul+1,w
  3098     0794  0020               	movlb	0	; select bank0
  3099     0795  00CB               	movwf	MSGFUNC@AUX1_430+1
  3100     0796  0870               	movf	?___wmul,w
  3101     0797  00CA               	movwf	MSGFUNC@AUX1_430
  3102                           
  3103                           ;main.c: 171:                 DATAEE_WriteByte((uint8_t)AUX1,'X');
  3104     0798  3058               	movlw	88
  3105     0799  00F3               	movwf	DATAEE_WriteByte@bData
  3106     079A  084A               	movf	MSGFUNC@AUX1_430,w
  3107     079B  3185  2502  3185   	fcall	_DATAEE_WriteByte
  3108     079E                     l1694:
  3109                           
  3110                           ;main.c: 172:                 NPROX++;
  3111     079E  3001               	movlw	1
  3112     079F  0020               	movlb	0	; select bank0
  3113     07A0  07B9               	addwf	_NPROX,f
  3114     07A1  3000               	movlw	0
  3115     07A2  3DBA               	addwfc	_NPROX+1,f
  3116                           
  3117                           ;main.c: 174:             }else if(NPROX == 0){
  3118     07A3  2E22               	goto	l1580
  3119     07A4                     l1696:
  3120     07A4  0020               	movlb	0	; select bank0
  3121     07A5  0839               	movf	_NPROX,w
  3122     07A6  043A               	iorwf	_NPROX+1,w
  3123     07A7  1D03               	btfss	3,2
  3124     07A8  2FAA               	goto	u751
  3125     07A9  2FAB               	goto	u750
  3126     07AA                     u751:
  3127     07AA  2FB3               	goto	l1700
  3128     07AB                     u750:
  3129     07AB                     l1698:
  3130                           
  3131                           ;main.c: 175:                 MSGTXT(MSG2);
  3132     07AB  30C1               	movlw	low (_MSG2| (0+32768))
  3133     07AC  00F1               	movwf	MSGTXT@MSG
  3134     07AD  3088               	movlw	high (_MSG2| (0+32768))
  3135     07AE  00F2               	movwf	MSGTXT@MSG+1
  3136     07AF  3184  24E7  3185   	fcall	_MSGTXT
  3137                           
  3138                           ;main.c: 176:             }else{
  3139     07B2  2E22               	goto	l1580
  3140     07B3                     l1700:
  3141                           
  3142                           ;main.c: 177:                 MSGTXT(MSG6);
  3143     07B3  3032               	movlw	low (_MSG6| (0+32768))
  3144     07B4  00F1               	movwf	MSGTXT@MSG
  3145     07B5  3088               	movlw	high (_MSG6| (0+32768))
  3146     07B6  00F2               	movwf	MSGTXT@MSG+1
  3147     07B7  3184  24E7  3185   	fcall	_MSGTXT
  3148     07BA  2E22               	goto	l1580
  3149     07BB                     l1704:
  3150                           
  3151                           ;main.c: 186:             for(int i = 0; i <NAGEN; i++){
  3152     07BB  01C6               	clrf	MSGFUNC@i
  3153     07BC  01C7               	clrf	MSGFUNC@i+1
  3154     07BD  2FCF               	goto	l1710
  3155     07BE                     l1706:
  3156                           
  3157                           ;main.c: 187:                 DATAEE_WriteByte((uint8_t)i*22,'$');
  3158     07BE  3024               	movlw	36
  3159     07BF  00F3               	movwf	DATAEE_WriteByte@bData
  3160     07C0  3016               	movlw	22
  3161     07C1  00F0               	movwf	___bmul@multiplicand
  3162     07C2  0020               	movlb	0	; select bank0
  3163     07C3  0846               	movf	MSGFUNC@i,w
  3164     07C4  3184  24BC  3185   	fcall	___bmul
  3165     07C7  3185  2502  3185   	fcall	_DATAEE_WriteByte
  3166     07CA                     l1708:
  3167                           
  3168                           ;main.c: 188:             }
  3169     07CA  3001               	movlw	1
  3170     07CB  0020               	movlb	0	; select bank0
  3171     07CC  07C6               	addwf	MSGFUNC@i,f
  3172     07CD  3000               	movlw	0
  3173     07CE  3DC7               	addwfc	MSGFUNC@i+1,f
  3174     07CF                     l1710:
  3175     07CF  0847               	movf	MSGFUNC@i+1,w
  3176     07D0  3A80               	xorlw	128
  3177     07D1  00F6               	movwf	??_MSGFUNC
  3178     07D2  083C               	movf	_NAGEN+1,w
  3179     07D3  3A80               	xorlw	128
  3180     07D4  0276               	subwf	??_MSGFUNC,w
  3181     07D5  1D03               	skipz
  3182     07D6  2FD9               	goto	u765
  3183     07D7  083B               	movf	_NAGEN,w
  3184     07D8  0246               	subwf	MSGFUNC@i,w
  3185     07D9                     u765:
  3186     07D9  1C03               	skipc
  3187     07DA  2FDC               	goto	u761
  3188     07DB  2FDD               	goto	u760
  3189     07DC                     u761:
  3190     07DC  2FBE               	goto	l1706
  3191     07DD                     u760:
  3192     07DD                     l1712:
  3193                           
  3194                           ;main.c: 189:             NAGEN = 0;
  3195     07DD  0020               	movlb	0	; select bank0
  3196     07DE  01BB               	clrf	_NAGEN
  3197     07DF  01BC               	clrf	_NAGEN+1
  3198                           
  3199                           ;main.c: 190:             NPROX = 0;
  3200     07E0  01B9               	clrf	_NPROX
  3201     07E1  01BA               	clrf	_NPROX+1
  3202                           
  3203                           ;main.c: 193:             CMDRECEIV = 0;
  3204     07E2  01B7               	clrf	_CMDRECEIV
  3205                           
  3206                           ;main.c: 194:             break;
  3207     07E3  2FF3               	goto	l292
  3208     07E4                     l1716:
  3209     07E4  0020               	movlb	0	; select bank0
  3210     07E5  0836               	movf	_CMDRECORD,w
  3211                           
  3212                           ; Switch size 1, requested type "simple"
  3213                           ; Number of cases is 4, Range of values is 65 to 82
  3214                           ; switch strategies available:
  3215                           ; Name         Instructions Cycles
  3216                           ; simple_byte           13     7 (average)
  3217                           ; direct_byte           45     9 (fixed)
  3218                           ; jumptable            263     9 (fixed)
  3219                           ;	Chosen strategy is simple_byte
  3220     07E6  3A41               	xorlw	65	; case 65
  3221     07E7  1903               	skipnz
  3222     07E8  2E25               	goto	l1582
  3223     07E9  3A0D               	xorlw	13	; case 76
  3224     07EA  1903               	skipnz
  3225     07EB  2DAE               	goto	l1542
  3226     07EC  3A1C               	xorlw	28	; case 80
  3227     07ED  1903               	skipnz
  3228     07EE  2F24               	goto	l1658
  3229     07EF  3A02               	xorlw	2	; case 82
  3230     07F0  1903               	skipnz
  3231     07F1  2FBB               	goto	l1704
  3232     07F2  2FF3               	goto	l292
  3233     07F3                     l292:
  3234     07F3  0008               	return
  3235     07F4                     __end_of_MSGFUNC:
  3236                           
  3237                           	psect	text10
  3238     0520                     __ptext10:	
  3239 ;; *************** function ___wmul *****************
  3240 ;; Defined at:
  3241 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  multiplier      2    0[COMMON] unsigned int 
  3244 ;;  multiplicand    2    2[COMMON] unsigned int 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  product         2    4[COMMON] unsigned int 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  2    0[COMMON] unsigned int 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3256 ;;      Params:         4       0       0       0       0       0
  3257 ;;      Locals:         2       0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0       0
  3259 ;;      Totals:         6       0       0       0       0       0
  3260 ;;Total ram usage:        6 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_MSGFUNC
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269     0520                     ___wmul:	
  3270                           ;psect for function ___wmul
  3271                           
  3272     0520                     l1508:	
  3273                           ;incstack = 0
  3274                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3275                           
  3276     0520  01F4               	clrf	___wmul@product
  3277     0521  01F5               	clrf	___wmul@product+1
  3278     0522                     l1510:
  3279     0522  1C70               	btfss	___wmul@multiplier,0
  3280     0523  2D25               	goto	u511
  3281     0524  2D26               	goto	u510
  3282     0525                     u511:
  3283     0525  2D2A               	goto	l458
  3284     0526                     u510:
  3285     0526                     l1512:
  3286     0526  0872               	movf	___wmul@multiplicand,w
  3287     0527  07F4               	addwf	___wmul@product,f
  3288     0528  0873               	movf	___wmul@multiplicand+1,w
  3289     0529  3DF5               	addwfc	___wmul@product+1,f
  3290     052A                     l458:
  3291     052A  3001               	movlw	1
  3292     052B                     u525:
  3293     052B  35F2               	lslf	___wmul@multiplicand,f
  3294     052C  0DF3               	rlf	___wmul@multiplicand+1,f
  3295     052D  0B89               	decfsz	9,f
  3296     052E  2D2B               	goto	u525
  3297     052F                     l1514:
  3298     052F  3001               	movlw	1
  3299     0530                     u535:
  3300     0530  36F1               	lsrf	___wmul@multiplier+1,f
  3301     0531  0CF0               	rrf	___wmul@multiplier,f
  3302     0532  0B89               	decfsz	9,f
  3303     0533  2D30               	goto	u535
  3304     0534                     l1516:
  3305     0534  0870               	movf	___wmul@multiplier,w
  3306     0535  0471               	iorwf	___wmul@multiplier+1,w
  3307     0536  1D03               	btfss	3,2
  3308     0537  2D39               	goto	u541
  3309     0538  2D3A               	goto	u540
  3310     0539                     u541:
  3311     0539  2D22               	goto	l1510
  3312     053A                     u540:
  3313     053A                     l1518:
  3314     053A  0875               	movf	___wmul@product+1,w
  3315     053B  00F1               	movwf	?___wmul+1
  3316     053C  0874               	movf	___wmul@product,w
  3317     053D  00F0               	movwf	?___wmul
  3318     053E                     l460:
  3319     053E  0008               	return
  3320     053F                     __end_of___wmul:
  3321                           
  3322                           	psect	text11
  3323     04BC                     __ptext11:	
  3324 ;; *************** function ___bmul *****************
  3325 ;; Defined at:
  3326 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  multiplier      1    wreg     unsigned char 
  3329 ;;  multiplicand    1    0[COMMON] unsigned char 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  multiplier      1    2[COMMON] unsigned char 
  3332 ;;  product         1    1[COMMON] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      unsigned char 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3342 ;;      Params:         1       0       0       0       0       0
  3343 ;;      Locals:         2       0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0
  3345 ;;      Totals:         3       0       0       0       0       0
  3346 ;;Total ram usage:        3 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_MSGFUNC
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355     04BC                     ___bmul:	
  3356                           ;psect for function ___bmul
  3357                           
  3358                           
  3359                           ;incstack = 0
  3360                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3361                           ;___bmul@multiplier stored from wreg
  3362     04BC  00F2               	movwf	___bmul@multiplier
  3363     04BD                     l1522:
  3364     04BD  01F1               	clrf	___bmul@product
  3365     04BE                     l1524:
  3366     04BE  1C72               	btfss	___bmul@multiplier,0
  3367     04BF  2CC1               	goto	u551
  3368     04C0  2CC2               	goto	u550
  3369     04C1                     u551:
  3370     04C1  2CC4               	goto	l1528
  3371     04C2                     u550:
  3372     04C2                     l1526:
  3373     04C2  0870               	movf	___bmul@multiplicand,w
  3374     04C3  07F1               	addwf	___bmul@product,f
  3375     04C4                     l1528:
  3376     04C4  1003               	clrc
  3377     04C5  0DF0               	rlf	___bmul@multiplicand,f
  3378     04C6                     l1530:
  3379     04C6  1003               	clrc
  3380     04C7  0CF2               	rrf	___bmul@multiplier,f
  3381     04C8  0872               	movf	___bmul@multiplier,w
  3382     04C9  1D03               	btfss	3,2
  3383     04CA  2CCC               	goto	u561
  3384     04CB  2CCD               	goto	u560
  3385     04CC                     u561:
  3386     04CC  2CBE               	goto	l1524
  3387     04CD                     u560:
  3388     04CD                     l1532:
  3389     04CD  0871               	movf	___bmul@product,w
  3390     04CE                     l484:
  3391     04CE  0008               	return
  3392     04CF                     __end_of___bmul:
  3393                           
  3394                           	psect	text12
  3395     04E7                     __ptext12:	
  3396 ;; *************** function _MSGTXT *****************
  3397 ;; Defined at:
  3398 ;;		line 16 in file "main.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  MSG             2    1[COMMON] PTR const unsigned char 
  3401 ;;		 -> MSG0(50), MSG6(38), MSG3(10), MSG7(36), 
  3402 ;;		 -> MSGS(31), MSG5(38), MSG4(15), MSG1(22), 
  3403 ;;		 -> MSG2(28), 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3415 ;;      Params:         2       0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0       0
  3417 ;;      Temps:          1       0       0       0       0       0
  3418 ;;      Totals:         3       0       0       0       0       0
  3419 ;;Total ram usage:        3 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 1
  3422 ;; This function calls:
  3423 ;;		_EUSART_Write
  3424 ;; This function is called by:
  3425 ;;		_MSGFUNC
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430     04E7                     _MSGTXT:	
  3431                           ;psect for function _MSGTXT
  3432                           
  3433     04E7                     l1498:	
  3434                           ;incstack = 0
  3435                           ; Regs used in _MSGTXT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3436                           
  3437                           
  3438                           ;main.c: 17:     while (*MSG != '\0') {
  3439     04E7  2CF4               	goto	l1504
  3440     04E8                     l1500:
  3441                           
  3442                           ;main.c: 18:         EUSART_Write(*MSG);
  3443     04E8  0871               	movf	MSGTXT@MSG,w
  3444     04E9  0084               	movwf	4
  3445     04EA  0872               	movf	MSGTXT@MSG+1,w
  3446     04EB  0085               	movwf	5
  3447     04EC  0800               	movf	0,w	;code access
  3448     04ED  3184  248A  3184   	fcall	_EUSART_Write
  3449     04F0                     l1502:
  3450                           
  3451                           ;main.c: 19:         MSG++;
  3452     04F0  3001               	movlw	1
  3453     04F1  07F1               	addwf	MSGTXT@MSG,f
  3454     04F2  3000               	movlw	0
  3455     04F3  3DF2               	addwfc	MSGTXT@MSG+1,f
  3456     04F4                     l1504:
  3457                           
  3458                           ;main.c: 17:     while (*MSG != '\0') {
  3459     04F4  0871               	movf	MSGTXT@MSG,w
  3460     04F5  0084               	movwf	4
  3461     04F6  0872               	movf	MSGTXT@MSG+1,w
  3462     04F7  0085               	movwf	5
  3463     04F8  0012               	moviw fsr0++
  3464     04F9  1D03               	btfss	3,2
  3465     04FA  2CFC               	goto	u501
  3466     04FB  2CFD               	goto	u500
  3467     04FC                     u501:
  3468     04FC  2CE8               	goto	l1500
  3469     04FD                     u500:
  3470     04FD                     l1506:
  3471                           
  3472                           ;main.c: 21:     EUSART_Write(0x0D);
  3473     04FD  300D               	movlw	13
  3474     04FE  3184  248A  3184   	fcall	_EUSART_Write
  3475     0501                     l239:
  3476     0501  0008               	return
  3477     0502                     __end_of_MSGTXT:
  3478                           
  3479                           	psect	text13
  3480     048A                     __ptext13:	
  3481 ;; *************** function _EUSART_Write *****************
  3482 ;; Defined at:
  3483 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  txData          1    wreg     unsigned char 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  txData          1    0[COMMON] unsigned char 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3497 ;;      Params:         0       0       0       0       0       0
  3498 ;;      Locals:         1       0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0
  3500 ;;      Totals:         1       0       0       0       0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_MSGTXT
  3507 ;;		_MSGFUNC
  3508 ;;		_main
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512     048A                     _EUSART_Write:	
  3513                           ;psect for function _EUSART_Write
  3514                           
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _EUSART_Write: [wreg]
  3518                           ;EUSART_Write@txData stored from wreg
  3519     048A  00F0               	movwf	EUSART_Write@txData
  3520     048B                     l1406:
  3521     048B                     l170:	
  3522                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3523                           
  3524                           
  3525                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3526     048B  0020               	movlb	0	; select bank0
  3527     048C  1E11               	btfss	17,4	;volatile
  3528     048D  2C8F               	goto	u461
  3529     048E  2C90               	goto	u460
  3530     048F                     u461:
  3531     048F  2C8B               	goto	l170
  3532     0490                     u460:
  3533     0490                     l1408:
  3534                           
  3535                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3536     0490  0870               	movf	EUSART_Write@txData,w
  3537     0491  0023               	movlb	3	; select bank3
  3538     0492  009A               	movwf	26	;volatile
  3539     0493                     l173:
  3540     0493  0008               	return
  3541     0494                     __end_of_EUSART_Write:
  3542                           
  3543                           	psect	text14
  3544     0468                     __ptext14:	
  3545 ;; *************** function _EUSART_is_rx_ready *****************
  3546 ;; Defined at:
  3547 ;;		line 99 in file "mcc_generated_files/eusart.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      _Bool 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3561 ;;      Params:         0       0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0
  3564 ;;      Totals:         0       0       0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_MSGFUNC
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575     0468                     _EUSART_is_rx_ready:	
  3576                           ;psect for function _EUSART_is_rx_ready
  3577                           
  3578     0468                     l1482:	
  3579                           ;incstack = 0
  3580                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3581                           
  3582                           
  3583                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  3584     0468  0020               	movlb	0	; select bank0
  3585     0469  0E11               	swapf	17,w	;volatile
  3586     046A  0C89               	rrf	9,f
  3587     046B  3901               	andlw	1
  3588     046C                     l154:
  3589     046C  0008               	return
  3590     046D                     __end_of_EUSART_is_rx_ready:
  3591                           
  3592                           	psect	text15
  3593     04AD                     __ptext15:	
  3594 ;; *************** function _EUSART_Read *****************
  3595 ;; Defined at:
  3596 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      unsigned char 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3610 ;;      Params:         0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_MSGFUNC
  3620 ;;		_main
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624     04AD                     _EUSART_Read:	
  3625                           ;psect for function _EUSART_Read
  3626                           
  3627     04AD                     l1486:	
  3628                           ;incstack = 0
  3629                           ; Regs used in _EUSART_Read: [wreg+status,2]
  3630                           
  3631     04AD                     l163:	
  3632                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  3633                           
  3634                           
  3635                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  3636     04AD  0020               	movlb	0	; select bank0
  3637     04AE  1E91               	btfss	17,5	;volatile
  3638     04AF  2CB1               	goto	u481
  3639     04B0  2CB2               	goto	u480
  3640     04B1                     u481:
  3641     04B1  2CAD               	goto	l163
  3642     04B2                     u480:
  3643     04B2                     l1488:
  3644                           
  3645                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  3646     04B2  01FC               	clrf	_eusartRxLastError	;volatile
  3647     04B3                     l1490:
  3648                           
  3649                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  3650     04B3  0023               	movlb	3	; select bank3
  3651     04B4  1C9D               	btfss	29,1	;volatile
  3652     04B5  2CB7               	goto	u491
  3653     04B6  2CB8               	goto	u490
  3654     04B7                     u491:
  3655     04B7  2CBA               	goto	l1494
  3656     04B8                     u490:
  3657     04B8                     l1492:
  3658                           
  3659                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  3660     04B8  121D               	bcf	29,4	;volatile
  3661                           
  3662                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  3663     04B9  161D               	bsf	29,4	;volatile
  3664     04BA                     l1494:
  3665                           
  3666                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  3667     04BA  0819               	movf	25,w	;volatile
  3668     04BB                     l167:
  3669     04BB  0008               	return
  3670     04BC                     __end_of_EUSART_Read:
  3671                           
  3672                           	psect	text16
  3673     0502                     __ptext16:	
  3674 ;; *************** function _DATAEE_WriteByte *****************
  3675 ;; Defined at:
  3676 ;;		line 187 in file "mcc_generated_files/memory.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  bAdd            1    wreg     unsigned char 
  3679 ;;  bData           1    3[COMMON] unsigned char 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  bAdd            1    4[COMMON] unsigned char 
  3682 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3692 ;;      Params:         1       0       0       0       0       0
  3693 ;;      Locals:         2       0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0
  3695 ;;      Totals:         3       0       0       0       0       0
  3696 ;;Total ram usage:        3 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_MSGFUNC
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705     0502                     _DATAEE_WriteByte:	
  3706                           ;psect for function _DATAEE_WriteByte
  3707                           
  3708                           
  3709                           ;incstack = 0
  3710                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  3711                           ;DATAEE_WriteByte@bAdd stored from wreg
  3712     0502  00F4               	movwf	DATAEE_WriteByte@bAdd
  3713     0503                     l1444:
  3714     0503                     l1446:
  3715                           
  3716                           ;mcc_generated_files/memory.c: 191:     EEADRL = (uint8_t)(bAdd & 0x0ff);
  3717     0503  0874               	movf	DATAEE_WriteByte@bAdd,w
  3718     0504  0023               	movlb	3	; select bank3
  3719     0505  0091               	movwf	17	;volatile
  3720     0506                     l1448:
  3721                           
  3722                           ;mcc_generated_files/memory.c: 192:     EEDATL = bData;
  3723     0506  0873               	movf	DATAEE_WriteByte@bData,w
  3724     0507  0093               	movwf	19	;volatile
  3725     0508                     l1450:
  3726                           
  3727                           ;mcc_generated_files/memory.c: 193:     EECON1bits.EEPGD = 0;
  3728     0508  1395               	bcf	21,7	;volsfr
  3729     0509                     l1452:
  3730                           
  3731                           ;mcc_generated_files/memory.c: 194:     EECON1bits.CFGS = 0;
  3732     0509  1315               	bcf	21,6	;volsfr
  3733     050A                     l1454:
  3734                           
  3735                           ;mcc_generated_files/memory.c: 195:     EECON1bits.WREN = 1;
  3736     050A  1515               	bsf	21,2	;volsfr
  3737     050B                     l1456:
  3738                           
  3739                           ;mcc_generated_files/memory.c: 197:     GIEBitValue = INTCONbits.GIE;
  3740     050B  0D0B               	rlf	11,w	;volatile
  3741     050C  0D0B               	rlf	11,w	;volatile
  3742     050D  3901               	andlw	1
  3743     050E  00F5               	movwf	DATAEE_WriteByte@GIEBitValue
  3744     050F                     l1458:
  3745                           
  3746                           ;mcc_generated_files/memory.c: 198:     INTCONbits.GIE = 0;
  3747     050F  138B               	bcf	11,7	;volatile
  3748     0510                     l1460:
  3749                           
  3750                           ;mcc_generated_files/memory.c: 199:     EECON2 = 0x55;
  3751     0510  3055               	movlw	85
  3752     0511  0096               	movwf	22	;volsfr
  3753     0512                     l1462:
  3754                           
  3755                           ;mcc_generated_files/memory.c: 200:     EECON2 = 0xAA;
  3756     0512  30AA               	movlw	170
  3757     0513  0096               	movwf	22	;volsfr
  3758     0514                     l1464:
  3759                           
  3760                           ;mcc_generated_files/memory.c: 201:     EECON1bits.WR = 1;
  3761     0514  1495               	bsf	21,1	;volsfr
  3762     0515                     l97:	
  3763                           ;mcc_generated_files/memory.c: 204:     {;mcc_generated_files/memory.c: 205:     }
  3764                           
  3765                           
  3766                           ;mcc_generated_files/memory.c: 203:     while (EECON1bits.WR)
  3767     0515  1895               	btfsc	21,1	;volsfr
  3768     0516  2D18               	goto	u471
  3769     0517  2D19               	goto	u470
  3770     0518                     u471:
  3771     0518  2D15               	goto	l97
  3772     0519                     u470:
  3773     0519                     l99:
  3774                           
  3775                           ;mcc_generated_files/memory.c: 207:     EECON1bits.WREN = 0;
  3776     0519  1115               	bcf	21,2	;volsfr
  3777     051A                     l1466:
  3778                           
  3779                           ;mcc_generated_files/memory.c: 208:     INTCONbits.GIE = GIEBitValue;
  3780     051A  0C75               	rrf	DATAEE_WriteByte@GIEBitValue,w
  3781     051B  1C03               	skipc
  3782     051C  138B               	bcf	11,7	;volatile
  3783     051D  1803               	skipnc
  3784     051E  178B               	bsf	11,7	;volatile
  3785     051F                     l100:
  3786     051F  0008               	return
  3787     0520                     __end_of_DATAEE_WriteByte:
  3788                           
  3789                           	psect	text17
  3790     0494                     __ptext17:	
  3791 ;; *************** function _DATAEE_ReadByte *****************
  3792 ;; Defined at:
  3793 ;;		line 211 in file "mcc_generated_files/memory.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  bAdd            1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  bAdd            1    0[COMMON] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      unsigned char 
  3800 ;; Registers used:
  3801 ;;		wreg
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3807 ;;      Params:         0       0       0       0       0       0
  3808 ;;      Locals:         1       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0
  3810 ;;      Totals:         1       0       0       0       0       0
  3811 ;;Total ram usage:        1 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_MSGFUNC
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820     0494                     _DATAEE_ReadByte:	
  3821                           ;psect for function _DATAEE_ReadByte
  3822                           
  3823                           
  3824                           ;incstack = 0
  3825                           ; Regs used in _DATAEE_ReadByte: [wreg]
  3826                           ;DATAEE_ReadByte@bAdd stored from wreg
  3827     0494  00F0               	movwf	DATAEE_ReadByte@bAdd
  3828     0495                     l1468:
  3829                           
  3830                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
  3831     0495  0870               	movf	DATAEE_ReadByte@bAdd,w
  3832     0496  0023               	movlb	3	; select bank3
  3833     0497  0091               	movwf	17	;volatile
  3834     0498                     l1470:
  3835                           
  3836                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
  3837     0498  1315               	bcf	21,6	;volsfr
  3838     0499                     l1472:
  3839                           
  3840                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
  3841     0499  1395               	bcf	21,7	;volsfr
  3842     049A                     l1474:
  3843                           
  3844                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
  3845     049A  1415               	bsf	21,0	;volsfr
  3846     049B                     l1476:
  3847                           
  3848                           ;mcc_generated_files/memory.c: 217:     __nop();
  3849     049B  0000               	nop
  3850     049C                     l1478:
  3851                           
  3852                           ;mcc_generated_files/memory.c: 218:     __nop();
  3853     049C  0000               	nop
  3854                           
  3855                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
  3856     049D  0023               	movlb	3	; select bank3
  3857     049E  0813               	movf	19,w	;volatile
  3858     049F                     l103:
  3859     049F  0008               	return
  3860     04A0                     __end_of_DATAEE_ReadByte:
  3861     0001                     ___latbits      equ	1
  3862     007E                     btemp           set	126	;btemp
  3863     007E                     wtemp0          set	126
  3864                           
  3865                           	psect	config
  3866                           
  3867                           ;Config register CONFIG1 @ 0x8007
  3868                           ;	Oscillator Selection
  3869                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3870                           ;	Watchdog Timer Enable
  3871                           ;	WDTE = OFF, WDT disabled
  3872                           ;	Power-up Timer Enable
  3873                           ;	PWRTE = OFF, PWRT disabled
  3874                           ;	MCLR Pin Function Select
  3875                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3876                           ;	Flash Program Memory Code Protection
  3877                           ;	CP = OFF, Program memory code protection is disabled
  3878                           ;	Data Memory Code Protection
  3879                           ;	CPD = OFF, Data memory code protection is disabled
  3880                           ;	Brown-out Reset Enable
  3881                           ;	BOREN = ON, Brown-out Reset enabled
  3882                           ;	Clock Out Enable
  3883                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3884                           ;	Internal/External Switchover
  3885                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3886                           ;	Fail-Safe Clock Monitor Enable
  3887                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3888     8007                     	org	32775
  3889     8007  3FE4               	dw	16356
  3890                           
  3891                           ;Config register CONFIG2 @ 0x8008
  3892                           ;	Flash Memory Self-Write Protection
  3893                           ;	WRT = OFF, Write protection off
  3894                           ;	PLL Enable
  3895                           ;	PLLEN = OFF, 4x PLL disabled
  3896                           ;	Stack Overflow/Underflow Reset Enable
  3897                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3898                           ;	Brown-out Reset Voltage Selection
  3899                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3900                           ;	In-Circuit Debugger Mode
  3901                           ;	DEBUG = 0x1, unprogrammed default
  3902                           ;	Low-Voltage Programming Enable
  3903                           ;	LVP = ON, Low-voltage programming enabled
  3904     8008                     	org	32776
  3905     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    268
    Data        0
    BSS         30
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     21      52
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    MSGTXT@MSG	PTR const unsigned char  size(2) Largest target is 50
		 -> MSG0(CODE[50]), MSG1(CODE[22]), MSG2(CODE[28]), MSG3(CODE[10]), 
		 -> MSG4(CODE[15]), MSG5(CODE[38]), MSG6(CODE[38]), MSG7(CODE[36]), 
		 -> MSGS(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_MSGFUNC
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MSGFUNC->_DATAEE_WriteByte
    _MSGFUNC->___wmul
    _MSGTXT->_EUSART_Write
    _DATAEE_WriteByte->___bmul

Critical Paths under _main in BANK0

    _main->_MSGFUNC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1233
                        _EUSART_Read
                       _EUSART_Write
                 _EUSART_is_rx_ready
                            _MSGFUNC
                             _MSGTXT
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      69
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      69
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MSGFUNC                                             23    23      0    1051
                                              6 COMMON     2     2      0
                                              0 BANK0     21    21      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                        _EUSART_Read
                       _EUSART_Write
                 _EUSART_is_rx_ready
                             _MSGTXT
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     100
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     108
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _MSGTXT                                               3     1      2      84
                                              1 COMMON     3     1      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     3     2      1      79
                                              3 COMMON     3     2      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _EUSART_is_rx_ready
   _MSGFUNC
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       ___bmul (ARG)
     _EUSART_Read
     _EUSART_Write
     _EUSART_is_rx_ready
     _MSGTXT
       _EUSART_Write
     ___bmul
     ___wmul
   _MSGTXT
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            48      0       0      0.0%
BIGRAM             368      0       0      0.0%
COMMON              14      8      13     92.9%
BANK0               80     21      52     65.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      65      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Jan 27 12:26:46 2025

                               ___bmul@product 0071                                             l25 04E6  
                                           l50 0489                                             l53 0467  
                                           l47 04AC                                             l97 0515  
                                           l99 0519                            ___wmul@multiplicand 0072  
                                          l100 051F                                            l103 049F  
                                          l305 05A6                                            l154 046C  
                                          l170 048B                                            l146 055F  
                                          l163 04AD                                            l173 0493  
                                          l167 04BB                                            l239 0501  
                                          l191 047C                                            l248 0614  
                                          l185 0471                                            l460 053E  
                                          l292 07F3                                            l188 0476  
                                          l458 052A                                            l484 04CE  
                                          u500 04FD                                            u501 04FC  
                                          u510 0526                                            u511 0525  
                                          u600 0600                                            u601 05FF  
                                          u610 0610                                            u611 060F  
                                          u460 0490                                            u540 053A  
                                          u700 071B                                            u620 0622  
                                          u461 048F                                            u541 0539  
                                          u525 052B                                            u701 071A  
                                          u621 0621                                            u470 0519  
                                          u550 04C2                                            u710 0732  
                                          u630 0632                                            u471 0518  
                                          u551 04C1                                            u535 0530  
                                          u711 0731                                            u631 0631  
                                          u480 04B2                                            u560 04CD  
                                          u720 0759                                            u640 0661  
                                          u800 0594                                            u481 04B1  
                                          u561 04CC                                            u721 0758  
                                          u705 0717                                            u641 0660  
                                          u625 061E                                            u801 0593  
                                          u490 04B8                                            u730 0767  
                                          u650 066C                                            u570 05B4  
                                          u810 059A                                            u491 04B7  
                                          u731 0766                                            u715 072E  
                                          u651 066B                                            u635 062E  
                                          u571 05B3                                            u811 0599  
                                          u740 0777                                            u660 0673  
                                          u580 05BD                                            u820 05A0  
                                          u741 0776                                            u725 0755  
                                          u661 0672                                            u581 05BC  
                                          u821 059F                                            u750 07AB  
                                          u670 0695                                            u590 05F3  
                                          u830 05A6                                            u751 07AA  
                                          u671 0694                                            u591 05F2  
                                          u831 05A5                                            u760 07DD  
                                          u680 06B8                                            u761 07DC  
                                          u681 06B7                                            u690 06F0  
                                          u770 0572                                            u691 06EF  
                                          u675 0691                                            u771 0571  
                                          u780 057C                                            u765 07D9  
                                          u781 057B                                            u790 0582  
                                          u791 0581                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                                         l1400 046D                                           l1402 0472  
                                         l1410 04CF                                           l1500 04E8  
                                         l1404 0477                                           l1420 04DF  
                                         l1412 04D2                                           l1406 048B  
                                         l1502 04F0                                           l1510 0522  
                                         l1422 04E1                                           l1414 04D5  
                                         l1430 0464                                           l1408 0490  
                                         l1504 04F4                                           l1512 0526  
                                         l1600 0666                                           l1440 0557  
                                         l1432 053F                                           l1424 04E4  
                                         l1416 04D7                                           l1450 0508  
                                         l1506 04FD                                           l1530 04C6  
                                         l1522 04BD                                           l1514 052F  
                                         l1610 0688                                           l1602 066C  
                                         l1442 055E                                           l1434 0548  
                                         l1426 0483                                           l1418 04DA  
                                         l1460 0510                                           l1452 0509  
                                         l1444 0503                                           l1532 04CD  
                                         l1524 04BE                                           l1516 0534  
                                         l1508 0520                                           l1700 07B3  
                                         l1620 06B8                                           l1612 0695  
                                         l1604 0673                                           l1540 05AD  
                                         l1436 0549                                           l1428 0486  
                                         l1470 0498                                           l1462 0512  
                                         l1454 050A                                           l1446 0503  
                                         l1526 04C2                                           l1518 053A  
                                         l1710 07CF                                           l1622 06C4  
                                         l1614 06A2                                           l1606 0678  
                                         l1550 05C8                                           l1542 05AE  
                                         l1438 0550                                           l1472 0499  
                                         l1464 0514                                           l1456 050B  
                                         l1448 0506                                           l1528 04C4  
                                         l1712 07DD                                           l1704 07BB  
                                         l1624 06CB                                           l1616 06A6  
                                         l1608 0684                                           l1632 06DA  
                                         l1560 05ED                                           l1552 05CF  
                                         l1544 05B4                                           l1536 04A0  
                                         l1720 0563                                           l1474 049A  
                                         l1466 051A                                           l1458 050F  
                                         l1490 04B3                                           l1482 0468  
                                         l1706 07BE                                           l1650 070A  
                                         l1634 06E6                                           l1626 06CE  
                                         l1618 06B2                                           l1562 05F3  
                                         l1554 05D3                                           l1546 05BD  
                                         l1538 04A9                                           l1730 0582  
                                         l1722 056A                                           l1476 049B  
                                         l1468 0495                                           l1492 04B8  
                                         l1708 07CA                                           l1660 0732  
                                         l1652 070E                                           l1644 06F2  
                                         l1628 06D2                                           l1636 06EA  
                                         l1572 0602                                           l1564 05F7  
                                         l1556 05E4                                           l1580 0622  
                                         l1548 05C4                                           l1716 07E4  
                                         l1740 0594                                           l1732 0583  
                                         l1724 0572                                           l1478 049C  
                                         l1494 04BA                                           l1486 04AD  
                                         l1670 075A                                           l1662 0739  
                                         l1646 06FF                                           l1638 06F0  
                                         l1590 0647                                           l1654 071C  
                                         l1582 0625                                           l1574 0606  
                                         l1566 05FA                                           l1558 05E7  
                                         l1742 059A                                           l1734 0587  
                                         l1726 0577                                           l1718 0560  
                                         l1488 04B2                                           l1680 0777  
                                         l1672 0761                                           l1664 074A  
                                         l1648 0705                                           l1592 064C  
                                         l1584 0632                                           l1568 0600  
                                         l1576 060B                                           l1744 05A0  
                                         l1736 0588                                           l1728 057C  
                                         l1498 04E7                                           l1674 0767  
                                         l1666 074C                                           l1658 0724  
                                         l1594 0651                                           l1586 0643  
                                         l1578 0610                                           l1746 05A8  
                                         l1738 058D                                           l1684 0779  
                                         l1676 076B                                           l1692 0787  
                                         l1596 0659                                           l1588 0645  
                                         l1694 079E                                           l1686 077D  
                                         l1678 0771                                           l1598 0661  
                                         l1688 0782                                           l1696 07A4  
                                         l1698 07AB                                           _LATA 010C  
                                         _LATB 010D                                __end_of_MSGFUNC 07F4  
                                         _MSG0 0800                                           _MSG1 08DD  
                                         _MSG2 08C1                                           _MSG3 0902  
                                         _MSG4 08F3                                           _MSG5 0858  
                                         _MSG6 0832                                           _MSG7 087E  
                                         _MSGS 08A2                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 0560  
                                         fsr0h 0005                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0002                              ___bmul@multiplier 0072  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 048A  
                                        ?_main 0070                                          _NAGEN 003B  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _MSGRX 0020                                          _NPROX 0039  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _DATAEE_ReadByte 0494                                 _WDT_Initialize 0464  
                                        status 0003                                          wtemp0 007E  
                                 __end_of_MSG0 0832                                   __end_of_MSG1 08F3  
                                 __end_of_MSG2 08DD                                   __end_of_MSG3 090C  
                                 __end_of_MSG4 0902                                   __end_of_MSG5 087E  
                                 __end_of_MSG6 0858                                   __end_of_MSG7 08A2  
                                 __end_of_MSGS 08C1                                __initialization 07F4  
                                 __end_of_main 05AD                                 ??_EUSART_Write 0070  
                                       ??_main 0078                         __end_of_WDT_Initialize 0468  
                                    ??_MSGFUNC 0076              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0078                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON2 0196  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 046D                                         _BORCON 0116  
                                       _ISRCVD 0038                                         _OSCCON 0099  
                                       _MSGTXT 04E7                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       ___bmul 04BC                                         ___wmul 0520  
                      __end_of_DATAEE_ReadByte 04A0                                ?_WDT_Initialize 0070  
                                  MSGFUNC@AUX1 003F                                    MSGFUNC@CONT 0043  
                            _SYSTEM_Initialize 04A0                        __end_of__initialization 07FD  
                                  MSGFUNC@posi 0050                             ?_SYSTEM_Initialize 0070  
                          ___bmul@multiplicand 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                               _DATAEE_WriteByte 0502  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                    __end_of_SYSTEM_Initialize 04AD                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 0494                                        ?_MSGTXT 0071  
                                   __pnvCOMMON 0078                                      MSGTXT@MSG 0071  
                                   __pmaintext 0560                                        ?___bmul 0070  
                                      ?___wmul 0070                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                             ?_DATAEE_ReadByte 0070                                        _MSGFUNC 05AD  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                         DATAEE_WriteByte@bAdd 0074                                      _CMDRECEIV 0037  
                                    _CMDRECORD 0036                                        __ptext1 04A0  
                                      __ptext2 0464                                        __ptext3 04CF  
                                      __ptext4 0483                                        __ptext5 053F  
                                      __ptext6 0472                                        __ptext7 046D  
                                      __ptext8 0477                                        __ptext9 05AD  
                        _OSCILLATOR_Initialize 0483                       ??_PIN_MANAGER_Initialize 0070  
                                      clrloop0 047E                           end_of_initialization 07FD  
        __end_of_EUSART_SetOverrunErrorHandler 0477                  _EUSART_SetOverrunErrorHandler 0472  
                            _EUSART_Initialize 053F                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0468  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                          ?_EUSART_is_rx_ready 0070                                   MSGFUNC@Bposi 003D  
                                 MSGFUNC@j_431 004C                                   MSGFUNC@j_428 004E  
                                 MSGFUNC@letra 0041                       __end_of_DATAEE_WriteByte 0520  
                    __end_of_EUSART_Initialize 0560                           ??_EUSART_is_rx_ready 0070  
                                    _TXSTAbits 019E                                 __end_of_MSGTXT 0502  
                               __end_of___bmul 04CF                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 053F                                   _EUSART_Write 048A  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 07F4  
                                ??_EUSART_Read 0070                                       ??_MSGTXT 0073  
                          DATAEE_ReadByte@bAdd 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                   _EUSART_FramingErrorHandler 007A                                       ??___bmul 0071  
                                     ??___wmul 0074                         _EUSART_SetErrorHandler 0477  
                                  __pbssCOMMON 007C                                      ___latbits 0001  
                                     ?_MSGFUNC 0070                                  __pcstackBANK0 003D  
                          __end_of_EUSART_Read 04BC                                       MSGFUNC@i 0046  
                                     MSGFUNC@j 0044                                      __pnvBANK0 0052  
                       _PIN_MANAGER_Initialize 04CF                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 0070                                      clear_ram0 047D  
                            _eusartRxLastError 007C                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072              _EUSART_DefaultOverrunErrorHandler 0000  
                            ___wmul@multiplier 0070                          DATAEE_WriteByte@bData 0073  
                                  _EUSART_Read 04AD                              ?_DATAEE_WriteByte 0073  
                           ??_DATAEE_WriteByte 0074                                     _EECON1bits 0195  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 0052  
                                     __ptext10 0520                                       __ptext11 04BC  
                                     __ptext12 04E7                                       __ptext13 048A  
                                     __ptext14 0468                                       __ptext15 04AD  
                                     __ptext16 0502                                       __ptext17 0494  
                  DATAEE_WriteByte@GIEBitValue 0075                              ??_DATAEE_ReadByte 0070  
                      ?_EUSART_SetErrorHandler 0070  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
        __end_of_EUSART_SetFramingErrorHandler 0472                  _EUSART_SetFramingErrorHandler 046D  
                              MSGFUNC@AUX1_420 0048                                MSGFUNC@AUX1_430 004A  
                                   _INTCONbits 000B                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 047D  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 0832  
                                __pstringtext3 0858                                  __pstringtext4 087E  
                                __pstringtext5 08A2                                  __pstringtext6 08C1  
                                __pstringtext7 08DD                                  __pstringtext8 08F3  
                                __pstringtext9 0902                                 MSGFUNC@MSGATIV 0042  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 04E7  
